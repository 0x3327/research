[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "documents/research/posts/ERFC-57.gfm.html",
    "href": "documents/research/posts/ERFC-57.gfm.html",
    "title": "Solidity++ (S++)",
    "section": "",
    "text": "Executive Summary\nWriting efficient code in modern languages is mostly reflected in writing efficient algorithms and business logic. Writing efficient code in Solidity is mostly reflected in thinking as an assembler, moving focus from logic implementation to memory optimisations and low level hacks. Highly optimised code may become unreadable and unmaintainable with possible bugs hidden between the lines of bit level operations. To solve this problem, this project proposes multiple automatic optimisation techniques that will be all summed up into a transpiler and Solidity language extensions called Solidity++.\n\n\nIntroduction\nJavascript introduced classes in ES6 which are very useful construct for writing clean and readable code. Browser, however, could not understand ES6 code so the code needed to be transpiled into ES5. Programmers could use classes to write logic and transpiler took care of transforming the code into an optimised ES5. The same parallel could be made with Solidity. Programmers should be focused on writing business logic in Solidity-like S++ code and the code should be automatically transpiled into efficient Solidity code. S++ should not drastically modify basic Solidity syntax, but introduce new annotations and helper functions that would enable efficient transpiling to pure Solidity code.\nThere are multiple ways to improve the smart contract code on bytecode level. This project will focus on improvements on Solidity code level but the end product - optimised Solidity code will be compiled into bytecode and further optimisations on bytecode level can be performed.\nOptimisations on code level include variable declaration ordering (state variables, local variables and structs), which correlates with the order of memory block stacking and directly influences the costs of storing the data. Some variables might occupy more space than needed to store values in ranges that require less bits than the closest Solidity data type. The most extreme example is boolean data type which stores true/false values, that could be stored in 1 bit of memory, but really use an entire byte. Accessing storage structs requires more operations than accessing a local variable, which becomes obvious problem when it is done in loops. Any fixed sized data type, like, int64, bytes32 and so on, are always cheaper than dynamic data types, such as string, and those dynamic types should be replaced with fixed ones wherever is possible (wherever the value range of the variable is known). Cost reduction can even be achieved by deleting variables - freeing blockchain space. Execution of a code that performs delete command on some variable/mapping value/… rewards executor with a refund of up to 50% of transaction cost, depending on the amount of freed space. There were some attempts to remove this feature (https://eips.ethereum.org/EIPS/eip-3298) but so far it is still valid and exploitable. Usage of lazy evaluation is, an in other languages, preferred way of saving execution steps, which for Solidity directly equals saved money.\n\nExisting solutions\nThere are optimisations on loop level [1] that do not include variable level optimisations but recognise code patterns that are classified into several categories that can be automatically optimised. Also, there are papers [2] that uncover additional space for optimisation, such as removing conditions that always equal the same value or values in the loops that never change. There are also blog advices for writing optimised smart contracts, such as [3], that can and will be referenced when implementing automatisation methods.\n\n\n\nGoals & Methodology\nSo far, there is no tool or IDE that either automates these optimisations or includes multiple improvements in one software. The goal of this project is to evaluate feasibility of implementing such tool and Solidity language extensions that could allow its easier implementation. End PoC toll planned as a result of this project focuses on space optimisation techniques and includes: * Implementing parser for Solidity language that enables language semantic and syntax analysis * Implementing optimisation methods: * Variable declaration reordering * Struct values declaration reordering * Defining data type extensions for storing custom-sized data (i.e. integers with values between 20 and 40) and implementing language parser extensions * Implementing generator for optimised code\n\n\nResults & Discussion\nProto-parser for Solidity code, which includes basic PoC constructs was implemented, as well as variable declaration reordering to enable more efficient space usage; The plan is to extend the parser and to include other optimisation techniques listed in the previous segment.\n\nVariable declaration reordering\nVariable declaration reordering is a problem synonymous to binning problem, where the goal is to pack objects of a certain size into bins of fixed size in any order using the least number of bins. The problem is a known optimisation problem which comes from NP (non-deterministically polynomial) class and has no known efficient solution. The approach for implementing variable declaration reordering was using branch-and-bound algorithm which resulted in decent reordering time of less than 10 seconds for up to 16 variables in one block. The reordering was performed per block. The same algorithm will be performed on structs.\n\n\nData type extensions\nTo enable extensions of data types there are two steps: * Defining language extensions * Map variables to bits of memory blocks and create getters and setters\nNew data types will be mapped to memory blocks, variables of 256 bits, on bit level using bit masks. Packing of those values will be optimised using the previously defined variable stacking algorithm\nProposed language extension of integer data types consists of using the existing base type (int, uint) followed by value range given in brackets. Example custom type uint<10, 1030> represents unsigned integer values between 12 and 98. The optimiser would determine the closest known data type that covers the range (in this case uint16). The real number of bits required to store value 1030 is 11 and the closest data type is 16 bits long which means that 5 bits are redundant. First level of optimisation may be using 11 bits mapped to a memory block of 256 bits and implementing getters and setters to interact with the value, which is casted to uint16 when used. But there is another hidden optimisation that can further improve space management. Notice that the upper limit of the interval is indeed 1030 which required 11 bits to store but the lower limit is 10 which means that total number of values is 1030 - 10 = 1020 and that many values can be stored in 10 bits of memory, so the optimisation will take into account the overall interval range and generate getters / setters that will include offsets before storing/loading values.\nBoolean type optimisation will be straight forward and, while it will keep the type name, it will be mapped to only one bit of memory.\nString data types would be extended with indicator of the number of characters as string<10> will represent fixed sized string that will be mapped to bytes.\n\n\nCode generation\nThe parser generates three-like structure of the Solidity code. Every statement or declaration is stored as an object with parameters related to the nature of the statement/declaration. For example, declaration uint256 private var1 is stored as VariableDeclaration object with attributes type=uint256, modifier=private identifier=var1. Each object contains information to reconstruct itself back to string from. This type of organisation enables easy traversal through code, easy recognition of higher-level constructs, such are infinite loops, and easy reconstruction to Solidity code (in this case - optimised code).\n\n\n\nConclusion\nThe feasibility of the proposed project is confirmed by implementing PoC prototype, the optimisation evaluation on the existing smart contracts is yet to come but even the simple reordering of variables that reduces the number of used memory blocks clearly shows benefits of money savings (saved memory) and time savings (eliminated thinking about such generic problem that can and should be automatised). The borderline is - it makes no harm to use it, it can only be an improvement.\nThe value of this project is assumed, but still has to be confirmed. That is why the next step of this research should be further assessment by target user group, which should include developers that are actively using Solidity in their everyday work and domain experts. # Appendices\n\n\nBibliography\n[1] B Mariano, Y. Chen, Y. Feng Demystifying Loops in Smart Contracts https://fredfeng.github.io/papers/ase20-consul.pdf\n[2] T.Brandstaetter Optimisation of Solidity Smart Contracts https://repositum.tuwien.at/bitstream/20.500.12708/1428/2/Brandstaetter%20Tamara%20-%202020%20-%20Optimization%20of%20solidity%20smart%20contracts.pdf\n[3] https://mudit.blog/solidity-gas-optimization-tips/"
  },
  {
    "objectID": "documents/research/posts/ERFC-38.gfm.html#executive-summary",
    "href": "documents/research/posts/ERFC-38.gfm.html#executive-summary",
    "title": "Building on Filecoin and Filecoin Proofs",
    "section": "Executive Summary",
    "text": "Executive Summary\nWhen looking to build dApps that utilize decentralized storage Filecoin seems like the best option even with its flaws like : absent proof of deletion for the client, absent encryption, impossible modifying of the stored data and the durability problem of Filecoin’s Proof of Replication. This research gives an overview of competitors in decentralized storage solution field with a focus on Filecoin protocol. It also shows how its competitor Storj differs from Filecoin and the current grant opportunities for potential building on it. Considering the results of the research Filecoin seems to be the best option considering the popularity and the size of its ecosystem. Currently there is no interest for building on and with Filecoin and this is a purely explorative work without experiments, in order to test the researcher’s methodology and the approach to research. However, it proposes a question about a potential way of improving Filecoin, or creating both safer protocol for the user and cheaper for the storage miners."
  },
  {
    "objectID": "documents/research/posts/ERFC-38.gfm.html#goals-methodology",
    "href": "documents/research/posts/ERFC-38.gfm.html#goals-methodology",
    "title": "Building on Filecoin and Filecoin Proofs",
    "section": "Goals & Methodology",
    "text": "Goals & Methodology\nThe aim of this research is to explore Filecoin protocol and show its fallacies as much as writer is possible with a goal of inspiring building applications that utilize Filecoin, new protocols or improving Filecoin via building for it. The paper will compile the list of all fallacies and possibilities for improvement for Filecoin, opportunities for building on it, and the current state of decentralized storage market mainly comparing Storj and Filecoin."
  },
  {
    "objectID": "documents/research/posts/ERFC-38.gfm.html#introduction",
    "href": "documents/research/posts/ERFC-38.gfm.html#introduction",
    "title": "Building on Filecoin and Filecoin Proofs",
    "section": "Introduction",
    "text": "Introduction\nUnlike a centralized server operated by a single company, decentralized storage systems consist of a peer-to-peer network of user-operators who hold a portion of the overall data. The platforms can store any data sent by the user, with some platforms more focusing on encryption. There is no official data disclosing the types of data stored. This research will be covering contract-based persistence platforms with a focus on Filecoin.\nContract-based persistence means that data cannot be replicated by every node and stored forever, and instead must be upkept with contract agreements. These are agreements made with multiple nodes that have promised to hold a piece of data for a period of time. They must be refunded or renewed whenever they run out to keep the data persisted. Platforms with contract-based persistence currently present on the market are:\n\nFilecoin\nSkynet\nStorj\n0Chain\n\nFilecoin is a peer-to-peer network that stores files with built in economic incentives to ensure files are stored reliably over time. Users pay to store their files on storage providers. Storage providers are computers responsible for storing files and proving they have stored the files correctly over time. Available storage and the price of it is not controlled by any company. Anyone who wants to store their files or get paid for storing other users files can join Filecoin is written in its documentation, but is that really the case? It will be further explored in later sections. Filecoin’s native currency is FIL. Storage providers earn units of FIL for storing user’s data. Its blockchain records transactions along with proofs from storage providers that they are storing files correctly.\nCurrently Filecoin stores over 40.0453 PiB of users data over 1,848,292 deals.1\nWhen users want to store their files on Filecoin they use terminal or different guis that have been built by developers to choose between cost, redundancy and speed and they select the storage provider whose storage offer is best suited for their needs. Applications that implement filecoin negotiate storage with storage providers. There is no need for different API for each provider.2\n“While interacting with IPFS does not require using Filecoin, all Filecoin nodes are IPFS nodes under the hood, and (with some manual configuration) can connect to and fetch IPLD-formatted data from other IPFS nodes using libp2p. However, Filecoin nodes don’t join or participate in the public IPFS DHT. IPFS alone does not include a built-in mechanism to incentivize the storage of data for other people. This is the challenge Filecoin aims to solve. Filecoin is built on IPFS to create a distributed storage marketplace for long-term storage.”3"
  },
  {
    "objectID": "documents/research/posts/ERFC-38.gfm.html#filecoins-proof-system",
    "href": "documents/research/posts/ERFC-38.gfm.html#filecoins-proof-system",
    "title": "Building on Filecoin and Filecoin Proofs",
    "section": "Filecoin’s Proof System",
    "text": "Filecoin’s Proof System\nFilecoin uses Proof of Replication (PoRep) and Proof of Spacetime (poSt).\nIn a Proof of Replication, a storage miner proves that they are storing a physically unique copy, or replica, of the data. Proof of Replication happens just once, at the time the data is first stored by the miner. As the storage miner receives each piece of client data they place it into a sector, fundamental unit of storage in Filecoin. Sectors can contain pieces from multiple deals and clients. Steps in PoRep:\n\nProof of Replication\n\nFilling sectors and generating the Commd\n\nOnce a sector is full a Commitment of Data (CommD) is created, representing the root node of all the piece CIDs contained in the sector.\n\nSealing sectors and producing the Commitment of Replication\nSector data is encoded through a sequence of graph and hashing processes to create a unique replica. The root hash of the merkle tree of the resulting replica is called CommRLast. CommRLast is then hashed together with the CommC(another merkle root output from PoRep). This generates the CommR (Commitment of Replication) which is then recorded on Filecoin’s Blockchain. CommR, last is saved privately by the miner for future use in Proof of Spacetime but is not saved to the chain.\nEncoding process is slow and computationally heavy. Filecoin doesn’t provide encryption by default so users must encrypt data before adding it to the Filecoin network. This is the first issue encountered with Filecoin : Filecoin is optimized for public data and doesn’t yet support access controls.\nThe CommR offers clients the proof that the miner is storing a physically unique copy of the client’s data. If a client stores the same data with multiple storage miners, or makes multiple storage deals for the same data with the same miner, each deal will yield a different CommR. The sealing process also compresses the Proof of Replication using zk-SNARKs to keep the chain smaller so that it can be stored by all members of the Filecoin network for verification purposes.\nUnlike PoRep which is run once to prove that a miner stored a physically unique copy of the data at the time the sector was sealed. PoSt is run repeteadly to prove that the miners are continuing to dedicate storage space to that same data over time.4\nProof of Spacetime\nPoSt builds on several elements created during PoRep: the replica, the private CommRLast and public Commr. PoSt then selects some leaf nodes of the encoded replica and runs merkle inclusion proofs on them to prove that the miner has the specific bytes that indicate that he still holds the clients data. The miner then uses the privately stored CommRLast to prove that they know of a root for the replica which both agrees with the inclusion proofs and can be used to derive the CommR. As the final step PoSt compresses these proofs into a zk-Snark.\nIf the miners fail the Proof of Spacetime at any point they will lose their staked collateral. Aside for this fine, there is no other incentive to keep the miners storing the data. That becomes a problem if client’s storing private data or data of great significance.5"
  },
  {
    "objectID": "documents/research/posts/ERFC-38.gfm.html#results-discussion",
    "href": "documents/research/posts/ERFC-38.gfm.html#results-discussion",
    "title": "Building on Filecoin and Filecoin Proofs",
    "section": "Results & Discussion",
    "text": "Results & Discussion\n\nCritique From the users perspective:\nAs of today the price of 1 Filecoin token (FIL) is $22.05. The users can store a gigabyte of data for as little as 0.0000006157315278020465 FIL (0.01% the cost of Amazon S3) which means the user can store 100GB of data for $0.00135.6 From the price perspective the upside of Filecoin is it’s cheap storage but there are various downsides such as:\n\nAccesibility: if the user is not tech-savvy there is a big barrier to entry even with GUIs currently available. They are often not simple to install and it is hard to get them to work. Hovewer there are various Apps that make that somewhat easier like ChainSafe Files and Web3.Storage.When it comes to being a storage miner there minimal needs for hardware are:\n\n\n8+ core CPU\n128 GiB of RAM atleast\nA strong GPU for SNARK computations\n1TiB NVMe-based disk space for cache storage is recommended\nThis data shows that there needs to be a significant investment on storage miners part which is nothing out of the ordinary but significantly reduces the accessibility to the average person, ofcourse assuming the person wants to be a storage miner.\n\n\nAs the price of FIL tokens fluctuate the price of storage fluctuates as well. There is also a risk if any extra FIL is left in the customers wallet after the storage contract then token could potentially drop/rise in value, not to mention the fees of converting fiat into cryptocurrency.\nThere is no built in encryption. Users need to encrypt their data on their own. Encryption/decryption of files cost compute resources (RAM, CPU), and therefore money. Most end users would prefer the implementation of this functionality to be handled, optionally, by the Filecoin web, cli or desktop client software they choose to make use of. This problem is seemingly taken care of with apps like ChainSafe Files.7\nChainSafe Files is an online platform to store, view, and share files. Its main focus is data privacy of the users and self-reliance. When it comes to self-reliance ChainSafe Files makes sure that the users can access the stored files even if the Files platform becomes unavailable. It also offers authentication flow using a decentralized login provider called tKey, by Torus. tKey is a private key generator that can link keys to social accounts among other functions. The Files’ backend is built on top of ChainSafe Storage, and any file that is uploaded to Files is also pinned by a node on its infrastructure (each file has an CID) thus making the data retrieval possible even in the case of ChainSafe files app outage. In the case of retrieval users still have to decrypt the data, since all the data stored by ChainSafe Files is encrypted by default.8\nIf the storage provider doesn’t respect his end of the deal he will be penalized and lose his staked FIL. Unless negotiating a great number of deals for the same data and storing a lot of copies in Filecoin, there is no guarantee that the data will be safely stored. These deals for the same data increase the cost of the service if the user wants to have somewhat durable data. Filecoin tries to mittigate this by having storage miners put 100+ FIL in collateral which also lowers the accessibility to the average person to become a storage miner. Currently most of the storage miners are located in China.\nFilecoin storage is cold storage. There is no way to modify data. If the user needs to change data , new data must be written.9\nIf the user issues a deletion command there is no guarantee that the client performs the operation. There is no way yet to Construct a formal Proof of Deletion.\n\n\n\nThe issue with Replication and Filecoin\nWhen decentralized storage network is utilized any storage node could go offline thus the stored data would be at risk of getting lost. To achieve a somewhat reliable storage many decentralized providers use replication, which means the only way to keep the users data reliably besides penalizing storage miners is to store multiple copies of it. Replication is not good for the network expansion factor. If Filecoin wants more durability for its data it needs more copies. For every increase of durability (storing or repairing the data) another multiple of the data size in bandwith is needed. Eg. If the durability level requires a replication strategy that makes 10 copies of the data this yields and expansion factor of 1000%. This data needs to be stored on the network, using bandwith in the process. The more replication the bigger the bandwith usage. Hovewer, if the node goes offline , only one of the storage nodes is needed to bring a new replacement node in, which again means that the 100% of the replicated data must be transferred. Excessive expansion factors produce an inefficient allocation of resources.10\nAnother issue with replication is churn (nodes joining and leaving the network). Quoting Patrick Gerbes and John Gleeson: “Using replication in a high-churn environment is not only impractical, but inevitably doomed to fail. Distributed storage systems have mechanisms to repair data by replacing the pieces that become unavailable due to node churn. However, in distributed cloud storage systems, file repair incurs a cost for the bandwidth utilized during the repair process. Regardless of whether file pieces are simply replicated, or whether erasure coding is used to recreate missing pieces, the file repair process requires pieces to be downloaded from available nodes and uploaded to other uncorrelated and available nodes.”11\nCurrently the circulating supply of FIL token is 162,302,978.00 FIL. The potential circulating FIL could reach 1.977 Billion tokens if the network hits a Yottabyte of storage capacity in under 20 years which is brave considering the current data stored in data centers today is less then a Zettabyte and a Yottabite is 1000 times larger. The 770 Million of which is for baseline minting.\n330 million FIL tokens are released on a 6 year half-life based on time. A 6 year half-life means that 97% of these tokens will be released in aproximately 30 years. This amount is amount is minted to provide counter pressure to shocks.\nAnother 300 million FIL is held back in reserve to incentivize future types of mining. How they are released is up to the Filecoin community.12\n\nFigure 1: Maximum and Minimum Minting from Storage Mining.\n\nFigure 2: Network Storage Baseline for Max Baseline Minting on Log Scale.\nAs of today 29,180,207.338966275 FIL has been slashed.This means that if a network participant misbehaves, part of their FIL collateral or potential FIL rewards is confiscated and burned. FIL is also slashed for various other reasons.\nConsidering the token release we can expect total supply of FIL token to be almost doubled in the next five years. If we look the rate of slashing so far the dilluting process will exceed the tokens burned. This makes specullating Filecoin token price risky, both for the investors and users.13"
  },
  {
    "objectID": "documents/research/posts/ERFC-38.gfm.html#filecoin-and-storj-comparission",
    "href": "documents/research/posts/ERFC-38.gfm.html#filecoin-and-storj-comparission",
    "title": "Building on Filecoin and Filecoin Proofs",
    "section": "Filecoin and Storj comparission",
    "text": "Filecoin and Storj comparission\nWe will compare Filecoin and Storj by: 1. Consensus Algorithms\nFilecoin’s consesus mechanism has been covered in the paragraphs above.\nStorj does not have its own chain: the platform is built on Ethereum(currently built on PoW). The reason they decided to build on the Ethereum network is because of simplicity of using it as a method exchange. From the start Storj was never intented to be a true decentralized storage network.\n\nBlock time\nFilecoin’s block time is thirty seconds on average.\nStorj is the only “decentralized storage” solution to not employ their own chain. Storj decided to use the Ethereum network due to the easy deployment of a coin on it. Because of this decision, the block time is twelve seconds and needs to deal with the consequences of sharing blockchain with other projects.\nEnforcement of data retention\nDue to the PoSt mentioned in the paragraphs above the entire network is designed around data retention. In the case of miner failing to keep his promise , the only backup of the user’s data was irreversibly lost since Filecoin doesn’t use redundancy which is also mentioned in the paragraphs above.\nIn Storj the actual enforcement of data isn’t clearly documented. Each Satellite (the interface between the storage operators and the clients) does the enforcement of data retention all on their own. Each Satellite has its own subset of storage nodes that it knows have a good reputation and it trusts, it uses these hosts to upload data to. Then it, at regular intervals, checks random data segments with “Berlekamp-Welch” error correction to make sure that the data is still there. If they fail to prove they store the data the reputation of that host is changed and data migrates to a new host. There is no chain-level enforcement for data retention.\nContent distribution\nIn Filecoin data has to be sealed to be counted as a provable storage to the chain and because it is computation heavy it isn’t practical for the miners to serve data. 1 MiB file can take 5 to 10 minutes to unseal and 32 GiB file takes 3 hours on minimum hardware requirements mentioned above. To battle this Filecoin introduced a method to store cached and unsealed versions of data while storing the same data as sealed in order to provide proofs. This leads to the issue of miner storing the double amount of data while also posing the problem that unless the data is frequently accessed the miners will not store it because it isn’t profitable for them. That makes creating Google drive equivalent on Filecoin not practical because the data is not frequent enough to makes sense to cache while also being low latency (because of slow sealing and unsealing).\nIn Storj’s case data is being accessible only through the S3 gateway of centralized data data Satellites. Users can transform any data to public data and can send anyone a link to that data.\nSector size\nSector size is the minimum amount of data that can be sent to host and paid for. Filecoin has a fixed 32 GiB sector size. For each 256b stored 2b are proofs. Which means 1% of storage paid for is for proof. Also everything sent must be in a .car file which can be computationally heavy on the client-side.\nIn Storj’s case the sector size is not really clear. Current object fee is $0.0000022 per file stored. Which means that if there is a large amount of small files stored that would bring extra costs to the user.\nDecentralization\nBecause of the Filecoin’s Hardware requirements for hosts that means not everyone can run a storage node. On the other networks basically anyone can run a storage node( most minimal requirements are 2 cores 8GB of RAM and some storage) but in Filecoin only people with sufficient funds for initial investments can run hosts which reduces the spread of the network. Which makes us question the actuall decentralization of the network.\nStorj isn’t decentralized. The blockchain nature of the Storj coin is only designed for for efficient transacting not decentralized enforcement of data retention which means that Storj is actually a distributed storage provider but not fully decentralized.14"
  },
  {
    "objectID": "documents/research/posts/ERFC-38.gfm.html#filecoin-grants",
    "href": "documents/research/posts/ERFC-38.gfm.html#filecoin-grants",
    "title": "Building on Filecoin and Filecoin Proofs",
    "section": "Filecoin Grants",
    "text": "Filecoin Grants\nFilecoin offers various types of grants for building with Filecoin.\n\nNext Step Microgrants\nFilecoin offers grants of 5000$ in FIL to support taking the next step when the initial prototype is created. Their purpose is financing projects in the early stage. Acceptance criteria is simple. Projects must meet these criteria:\n\nApplicant has already built something with Filecoin (or closely related technologies such as IPLD, libp2p, or frameworks or services such as NFT.storage, Textile Powergate, etc.), independently or as part of a course or hackathon.\nApplicant must provide clear description of the Next Step after grant support\nThe project can be completed within 3 months.\nProject must be open-sourced.\nThe applicant must complete weekly updates and a grant report upon conclusion.\n\nProjects that qualify for Microgrants: 1. Projects that publish data or files to IPFS 2. Projects that don’t use IPFS directly 3. Projects that save data or retrieve data from the Filecoin Network 4. Non-coding projects, videos, tutorials etc\nThese grants are offered on the quarterly basis.\n\n\nOpen Grants\nFilecoin’s focus areas currently are: 1. Core development - core protocol research, specification and implementation work 2. Application Development - applications that utilize Filecoin as a decentralized storage layer 3. Developer tools and libraries - tools and libraries for protocol developers and application developers 4. Integration and adoption - integration into existing app or projects with significant usage 5. Technical design - improvement proposals for the core storage protocol 6. Documentation 7. Community building 8. Metaverse - experiences, applications, communities, tooling, standards, infrastructure, et cetera15 9. Research that explores Filecoin and decentralized storage16"
  },
  {
    "objectID": "documents/research/posts/ERFC-38.gfm.html#conclusion",
    "href": "documents/research/posts/ERFC-38.gfm.html#conclusion",
    "title": "Building on Filecoin and Filecoin Proofs",
    "section": "Conclusion",
    "text": "Conclusion\nWhen it comes to decentralized storage solutions Filecoin draws all the attention compared to its competitors like Storj and Sia. Storj solves Filecoin’s replication problem, on the expense of decentralization but the internet search statistics still shows that Filecoin is the main contender in Decentralized storage.\n\nFigure 3. Filecoin (blue) vs Storj (red) search interest in the past 12 months.\nEven with unclear tokenomics a nd problematic durability to the writer of this research, building with Filecoin seems like the best solution when building dApps that utilize decentralized storage because of its low cost and grant opportunities, even though storage miners are somewhat centralized. If there is a way to improve current storage miner’s/clients experience on Filecoin both in cost and ease of use that would surely be a great grant opportunity. Also there could potentially be a way to draw them to a protocol that is a cheaper alternative. Ofcourse, these are all assumptions, since much of the data on these protocol is unclear and not available."
  },
  {
    "objectID": "documents/research/posts/ERFC-37.gfm.html#ronin-sidechain",
    "href": "documents/research/posts/ERFC-37.gfm.html#ronin-sidechain",
    "title": "Gaming DAPPs - Play to Earn model",
    "section": "Ronin sidechain",
    "text": "Ronin sidechain\nThe game was developed on Ethereum in 2018 by the Sky Mavis company located in Vietnam. Due to high Ethereum fees, the game’s creators moved to their own EVM compatible sidechain called Ronin which uses Proof of Authority with validators being chosen by the company5 .\nTo start playing a player needs to :\n\ncreate their own Ronin wallet\ncreate their user account on the Axie Marketplace and connect their wallet to it\ntransfer some amount of ETH and buy at least 3 Axies with a floor price of ~42 dollars per Axie\ninstall a PC or Mobile app and login with their user account\n\nDisregarding the difficulty of the onboarding process, the whole point of a blockchain game is to have the players take actions on the blockchain. Some arguments could be made that at the time the game was developed this was needed but with the introduction of Ronin it is unclear why the whole game was not ported to it.\nThe only actions that are taken on the Ronin sidechain are dedicated to trading - buying, minting and gifting of Axies. There are no fees on Ronin, but the number of transactions per wallet address per day is limited. Deploying on Ronin, also, requires company’s permission so the development of new games and the whole Ronin ecosystem is slowed down."
  },
  {
    "objectID": "documents/research/posts/ERFC-37.gfm.html#scholarships",
    "href": "documents/research/posts/ERFC-37.gfm.html#scholarships",
    "title": "Gaming DAPPs - Play to Earn model",
    "section": "Scholarships",
    "text": "Scholarships\nMarket decides on the price of Axies and with a high entry cost of starting with the game, a new model of onboarding has emerged. Newcomers (scholars) can “rent out” the Axies for a certain period of time and negotiate with the owners (managers) the terms of the profit distribution. This is not a official in-game feature and is enabled by having the managers controlling the Ronin wallet and scholars controlling the user account associated with it. This leads to a bad position for the scholar as the profits are claimed by the manager and then the scholar’s share is sent to the their wallet’s address. Scholars are essentially at the mercy of the managers as their earnings and the scholarship itself can be revoked at any time.\nMore fairer way of enabling Scholarships, would be to have a smart contract that would have complete control of the Axies and through which the scholars would make in-game actions. The profits would go to the contract’s address that would perform a fair split. The terms of the agreement (the minimum amount of profits to be earned by the scholar) and the scholarship’s time period would be embedded in the contract. If both parties agree, the terms could be changed later on."
  },
  {
    "objectID": "documents/research/posts/ERFC-37.gfm.html#game-breakdown",
    "href": "documents/research/posts/ERFC-37.gfm.html#game-breakdown",
    "title": "Gaming DAPPs - Play to Earn model",
    "section": "Game Breakdown",
    "text": "Game Breakdown\nThe game itself is organized in 1v1 matches where players do not have any influence against who they will get matched. Matching is done by the server based on players’ Match Making Rankings (MMR) which is determined by the win/lose ratio of those players. All of this could be implemented in a smart contract which would keep track of all of the players’ MMRs and update them after each match. Players could start a new match or join an existing one if the absolute difference in their MMRs is under a certain threshold. The benefits of this approach is that they could also choose what match they will join or challenge a specific player.\nWinner of each match gets some amount of game’s “Smooth Love Potion” (SLP) tokens. That amount is dependent on the MMR of that player (the higher the MMR the more SLP tokens they will win). SLP is an inflationary ERC20 token that gets minted after each match. Even though there are SLP burning mechanisms through some in-game actions, most players opt to cash out their winnings so this might not be a viable economic model. One alternative would be to have both players stake some amount of tokens in a match with the winner taking the sum of those stakes. The problem is that it introduces betting connotations and games go to extreme lengths in order to not be considered a betting game as it potentially introduces regulation.\nInside the game, there is also “Axie Infinity Shard” (AXS) token. AXS is an ERC20 token which has a fixed total supply. The company behind the game has roughly 20% of the total AXS supply and small amounts of AXS is distributed to the top players of the month.\nThe game makes heavy use of Axies which have certain characteristics. Players do not completely own Axies as it was discovered that the company can freeze them, making them useless. Once an Axie is frozen, it cannot be used in the game nor it can be traded on the Axie Marketplace. This possess a major concern as the players’ assets are constantly under a threat of those players being banned from the game by the Sky Mavis company. Full list of violations that will result in a ban can be seen here6 .\nEach Axie has one of the 9 classes, 4 statistics and 4 cards associated with it. Classes are grouped into three groups that form a “rock paper scissor” relationship. Meaning that, group G1 does 15% extra damage to group G2 but takes 15% extra damage when attacked by group G3. Statistics determine the Health, Skill, Speed and Morale of an Axie. This statistics affect the matches and their state transitions as the Speed for example determines the order of attacks. Cards can have positive or negative effects on an Axie as well additional effects that affect the players. Four cards associated with an Axie are added to the player’s deck when that Axie is used inside a match. More information about Axies is provided in Appendix A and the way new Axies are created is provided in the Breeding section of the Whitepaper7 ."
  },
  {
    "objectID": "documents/research/posts/ERFC-37.gfm.html#matches",
    "href": "documents/research/posts/ERFC-37.gfm.html#matches",
    "title": "Gaming DAPPs - Play to Earn model",
    "section": "Matches",
    "text": "Matches\nOne match consists out of:\n\nBoth players choosing a team of 3 Axies and deciding on their positions on the field (creating team formations)\nRounds being played out until one of the players doesn’t have a standing Axie\n\n\n\n\n\nAxieMatch\n\n\nPicture 1 : Axie Infinity Match View\n\n\nTeam formations\nThe positioning of an Axie matters because it determines what Axie will take the damage from the enemy. Each player has 5 rows where an Axie can be positioned. The closest row to the enemy lines will be attacked first. The Axies cannot change their position and they stay where they initially were until they get knocked out. Choosing of a team formation would require two transactions per player. Those transactions would be organized in the commit-reveal scheme so that the players wouldn’t have an advantage against the opponent that naively sent the transaction revealing their team and their positions.\n\n\nRounds\nEach Round is carried out in the following order:\n\nPlayers randomly draw 3 cards* from their own decks (consisting of 24 Cards**) and decide on what cards they will play\nCards are revealed and their affects are applied to Axies\nBattle of the Round takes place\nIf one of the players doesn’t have a standing Axie then the match is over\n\n* Exception is that in the first Round, players draw 6 cards.\n** There are 3 Axies per team, each Axie adds two copies for each of the 4 cards. So in total there are 3*2*4 = 24 cards in one player’s deck.\n\n\nDrawing of Cards\nOnce the teams have been revealed both players know each other decks. However, they should not know what cards the opponent has in their hands and so they should not know what cards they have yet to draw.\nOne scheme that could be applied is the following:\n\nHave both players choose their secret “random” number and commit to it with a hash\nHave the game’s contract ask for a random number from Chainlink’s VRF8\nOnce the randomness has been fulfilled, both players know what is the order of cards they will be drawing as the seed for shuffling their decks will be some function of their own number and the received number from Chainlink’s VRF\n\nThe drawing order of cards in the deck is now known only to the players. During the match, each player can play any card inside their deck and until a match ends, players trust each other that the played card was in the opponent’s hand. However, when the match ends both players would need to reveal their secret numbers as the contract needs to verify if they honored the drawing order and if the card they played at a certain moment was one of the cards they were holding. The first discrepancy would end the verification process and the cheater would be penalized.\nOne additional subproblem is that after each round the remaining cards inside the deck should be reshuffled. This could be done with requesting another random number which would help form a seed for random shuffling of the remaining cards. The verification process would need to be modified to support this.\nNote: after all of the cards have been drawn, the deck resets.\n\n\nReveal of the Cards\nThe reveal of the cards would also need two transactions per player so that one player wouldn’t just wait for the opponent to reveal their cards and then change their strategy accordingly.\nOnce cards have been revealed, before the battle takes place, the effects of the played Cards are applied. In total there are 3 constant effects (Attack damage, Defensive points and the cost of playing that Card) and 19 additional effects that a Card may have. For example, one of those additional effects are an increase/decrease in one of the Axie statistics. When multiple Cards that affect the same Axie are played, their effects are accumulated. More information about cards is provided in Appendix A .\n\n\nBattle of the Round\nBattle rules:\n\nthe order of attacks is determined by the highest Speed statistic (if there is a draw then it is decided by the lowest Health and then by lowest ID of an Axie)\nclosest row with a standing Axie to the enemy lines will take the damage\nif two Axies are inside the row taking the damage there’s a 50/50 chance which Axie will absorb the damage\n\nAll of this logic could be kept inside a contract. One of that things that would need to be taken into account is that Axies attack in the pre-defined order. So during a Round, an Axie that has not yet attacked could be knocked out of the game and so the Cards associated with it, that were played in the Round, should lose their effects. Also, when an Axie gets knocked out, all of their cards should be removed from the deck."
  },
  {
    "objectID": "documents/research/posts/ERFC-37.gfm.html#summary-of-proposed-matched-progression",
    "href": "documents/research/posts/ERFC-37.gfm.html#summary-of-proposed-matched-progression",
    "title": "Gaming DAPPs - Play to Earn model",
    "section": "Summary of proposed matched progression",
    "text": "Summary of proposed matched progression\n\nInital proposal\n\n\n\n\n\n\n\n\n\n\n\nStep\nPhase\nDescription\nNumber of transactions\nDone by\n\n\n\n\n1\nMatch Set Up\nStarting of a Match\n1\nPlayer 1\n\n\n2\nMatch Set Up\nJoining a Match\n1\nPlayer 2\n\n\n3\nMatch Set Up\nCommitting to a team formation and setting of a secret number\n2*1\nPlayer 1 and Player 2\n\n\n4\nMatch Set Up\nRevealing team formations\n2*1\nPlayer 1 and Player 2\n\n\n5\nRound\nCommitting to Cards that will be played in this Round\n2*1\nPlayer 1 and Player 2\n\n\n6\nRound\nRevealing Cards of the Round\n2*1\nPlayer 1 and Player 2\n\n\n7\nMatch Wrap Up\nRevealing secret numbers after the match has ended\n2*1\nPlayer 1 and Player 2\n\n\n\n\nTotal = (1+1+2+2) + N*(2+2) + (2) = 8 + 4*N ; where N is the number of rounds in the match\nEven with just 3 rounds the number of transactions per player would be 16, so this is a problem.\n\n\nImproved Match Progression\nSomething that could be done is the introduction of “fair play” where for one round’s commit stage, one player would transmit both of the commit messages to the chain after which the other player would transmit both reveal messages.\nIf the player transmitting commitment messages decides to not transmit them, then the match is stuck. However, the game can be structured in a way such that it is in the interest of both players to resolve the match regardless of the outcome. This could be done by staking some amount of tokens that the players will receive at the end of the match.\nIf the player transmitting the reveal messages realizes he will lose and decides to not transmit them, then the first player could transmit just their own reveal message that would start a countdown for the other player to transmit their reveal message. If the countdown is reached then the player that didn’t act in the spirit of fair play is penalized in some way.\n\n\n\n\n\n\n\n\n\n\n\nStep\nPhase\nDescription\nNumber of transactions\nDone by\n\n\n\n\n1\nMatch Set Up\nStarting of a Match\n1\nPlayer 1\n\n\n2\nMatch Set Up\nJoining a Match\n1\nPlayer 2\n\n\n3\nMatch Set Up\nTransmitting commitments to the team formations and setting of a secret number\n1\nPlayer 1\n\n\n4\nMatch Set Up\nTransmitting the Reveal of team formations\n1\nPlayer 2\n\n\n5\nRound\nTransmitting Commitment Messages\n1\nPlayer 1\n\n\n6\nRound\nTransmitting Reveal Messages\n1\nPlayer 2\n\n\n7\nMatch Wrap Up\nRevealing secret numbers after the match has ended\n1\nPlayer 1\n\n\n\n\nThis scheme would give the total number of transactions of:\nTotal = (1+1+2) + N*(2) + (1) = 5 + 2*N ; where N is still the number of rounds in the match\nWith the number of rounds equal to 3, the number of transactions per player is less or equal to 6.\nThis is an improvement but maybe it could be brought down further. Also, signing 6 transactions per match would still break the flow of the game, so the players would have to have a substantial financial interest in continuing to play the current match and the game itself."
  },
  {
    "objectID": "documents/research/posts/ERFC-37.gfm.html#appendix-a",
    "href": "documents/research/posts/ERFC-37.gfm.html#appendix-a",
    "title": "Gaming DAPPs - Play to Earn model",
    "section": "Appendix A",
    "text": "Appendix A\nEach Axie has a fixed set of attributes - a class, 4 stats and 4 cards.\n\n\n\n\nAxie\n\n\nPicture 2: Axie characteristics\n\n\nAxie Classes\n\n9 of them (Plant, Reptile, Dusk, Beast, Bug, Mech, Aqua, Bird, Dawn)\n6 main classes (Plant, Beast, Bug, Reptile, Aqua, Bird, Dawn)\n3 remaining are “secret” (and generally weaker in the game)\nto make the strengths of classes balanced, they are grouped in 3 groups, forming a “rock paper scissor” relationship\n\n\n\nAxie Stats\n\ncan be divided into “base” and “additional” Stats\ntotal of 140 points is distributed between 4 of the base Stats (with each class having its own base distribution)\n\nHealth — amount of damage Axie can take before getting knocked out\nSpeed — affects the order in which Axies attack in a match (higher Speeds attack first)\nSkill — increases damage dealt when the Axie performs multiple cards/moves (a.k.a. combo)\nMorale — increases chance to land a critical hit, as well as entering “last stand” which allows them to attack a few more times before getting knocked out\n\n\n\nBase Stats Distribution\n\n\n\nClass\nHealth\nSpeed\nSkill\nMorale\n\n\n\n\nAqua\n39\n39\n35\n27\n\n\nBeast\n31\n35\n31\n43\n\n\nBirds\n27\n43\n35\n35\n\n\nBug\n35\n31\n35\n39\n\n\nPlant\n61\n31\n31\n41\n\n\nReptile\n39\n35\n31\n35\n\n\n\n\n\nadditional Stats depend on Axie’s Body Parts\n\n\n\nAxie Body Parts\n\nthere are 6 of them (Eyes, Ears, Horns, Mouth, Back, Tail)\nonly Horns, Mouth, Back, Tail have an associated card with it (one card per body part)\nIn total, there are:\n\n4*6 types of Mouth\n6*6 types of Horns\n6*6 types of Back\n6*6 types of Tail\n\ninside groups of those types each of the 6 main classes is equally represented\nif the class of an Axie matches with the type of a body part, Axie’s stats will increase\n\n\nAdditional Stats Increase\n\n\n\nClass/Type\nHealth\nSpeed\nSkill\nMorale\n\n\n\n\nAqua\n+1\n+3\n0\n+0\n\n\nBeast\n0\n+1\n0\n+3\n\n\nBirds\n0\n+3\n0\n+1\n\n\nBug\n+1\n0\n0\n+3\n\n\nPlant\n+3\n0\n0\n+1\n\n\nReptile\n+3\n+1\n0\n0\n\n\n\n\n\nAn Axie is a ‘pure breed’ when its class and all of its body parts are of the same type.\n\n\n\nAxie Abilities (Cards)\n\nthere are 132 cards in total (first divided by 6 main classes and then by the body parts)\neach Axie has 4 cards associated with it\neach Card has\n\nan amount of Energy it costs to play it\nattack points - damage it does to the enemy Axie\ndefensive points - forms a shield that takes the damage instead of Axie’s Health\npotentially buffs/debuffs\nadditional effects (draw another card, steal some Energy from the opponent,…)\n\ncards realize a “combo” when 2 or more of them are played (for the same Axie)\ncards realize a “chain” when 2 or more Axies use 2 or more cards that are from the same class\n\n\n\nAxie Card Buffs/Debuffs (Card Effects)\n\nthere are 3 buffs (positive effects on the Axie) and 16 debuffs (negative effects on the enemy Axie)\nthey affect the Axie for one or more turns\nthey are “stackable” - their effects are accumulated\n\n\nList of Buffs\n\n\n\nName\nDescription\n\n\n\n\nAttack+\nIncrease next attack by 20%\n\n\nMorale+\nIncrease Moral by 20% for the following round\n\n\nSpeed+\nIncrease Speed by 20% for the following round.\n\n\n\nList of Debuffs\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nAroma\nTarget priority changes to this Axie until the next round.\n\n\nAttack-\nDecrease next attack by 20%.\n\n\nChill\nAffected Axie cannot enter Last Stand\n\n\nFear\nAffected Axie will miss their next attack\n\n\nFragile\nAffected Axie’s shield will take double damage from the next incoming attack\n\n\nJinx\nAffected Axie cannot land critical hits\n\n\nLethal\nNext incoming attack is a guaranteed critical strike\n\n\nMorale-\nDecrease Morale by 20% for the following round\n\n\nPoison\nAffected Axie will lose 2 HP for every card used\n\n\nSleep\nNext incoming attack will ignore shields\n\n\nSpeed-\nDecrease Speed by 20% for the following round\n\n\nStench\nAffected Axie will lose target priority for the following round\n\n\nStun\nAffected Axie’s first attack will miss.Next incoming attack will ignore shields\n\n\nCannot Be Healed\nThis Axie cannot be healed or recover health. This Debuff cannot be removed"
  },
  {
    "objectID": "documents/research/posts/ERFC-39.gfm.html#quick-recap-ecdsa",
    "href": "documents/research/posts/ERFC-39.gfm.html#quick-recap-ecdsa",
    "title": "BLS vs Schnorr vs ECDSA digital signatures",
    "section": "Quick recap: ECDSA",
    "text": "Quick recap: ECDSA\nModern cryptography is founded on the idea that the key that you use to encrypt your data can be made public while the key that is used to to decrypt your data can be kept private. As such, these systems are known as public-key cryptographic systems.\nECDSA stands for Elliptic Curve Digital Signature Algorithm. Elliptic curve cryptography is a form of public key cryptography which is based on the algebraic structure of elliptic curves over finite fields. Used by both Bitcoin and Ethereum.\nElliptic curve: secp256k1\n\nsecp256k1\nThe elliptic curve domain parameters over Fp associated with a Koblitz curve secp256k1 are specified by the sextuple T = (p, a, b, G, n, h) where the finite field Fp is defined by:\n\np = 0xFFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFE FFFFFC2F = 2^256 − 2^32 − 2^9 − 2^8 − 2^7 − 2^6 − 2^4 − 1\n\nThe curve E: y^2 = x^3 + ax + b over Fp is defined by:\n\na = 0x00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\nb = 0x00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000007\n\nThe base point G in compressed form is:\n\n0x02 79BE667E F9DCBBAC 55A06295 CE870B07 029BFCDB 2DCE28D9 59F2815B 16F81798\n\nand in uncompressed form is:\n\n0x04 79BE667E F9DCBBAC 55A06295 CE870B07 029BFCDB 2DCE28D9 59F2815B 16F81798 483ADA77 26A3C465 5DA4FBFC 0E1108A8 FD17B448 A6855419 9C47D08F FB10D4B8\n\n\n\n\nsecp256k1 curve\n\n\n\n\nPrivate and public keys\nPrivate keys are generated as random 256 bits or 64 random hex characters or 32 random bytes. The public key is derived from the private key using ECDSA. Public key is a point on secp256k1 elliptic curve, generated by formula K = k * G where K is public key, k is private key, G is the constant point on secp256k1 elliptic curve and * is the multiplication operator on secp256k1 elliptic curve. There is no inverse, “/” operator, therefore the relationship between k and K is fixed, but can only be calculated in one direction, from k to K. A private key can be converted into a public key, but a public key cannot be converted back into a private key, because the math only works one way. The multiplication of k * G is equivalent to repeated addition, so G + G + G + …​ + G, repeated k times.\n\n\nSigning and verification\nTo sign and verify ECDSA signature using OpenSSL, do next\n# Generate private key\nopenssl genpkey -algorithm rsa -out privatni.pem\n\n# Generate public key out of private key\nopenssl rsa -pubout -in privatni.pem -out javni.pem\n\n# Test message for signing\necho \"Test\" > message.txt\n\n# Sign the message (with Bitcoin's hashing alghorithm)\nopenssl dgst -sha256 -sign privatni.pem -out signature.bin message.txt\n\n# Verification\nopenssl dgst -sha256 -verify javni.pem -signature signature.bin message.txt\n\n\n\necdsa signing\n\n\n\n\nECDSA verification in Solidity\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\ncontract Example {\n  address public admin;\n\n  constructor() {\n    admin = msg.sender;\n  }\n\n  function verify(bytes32 _digest, bytes calldata _signature) public view returns(bool) {\n    return admin == ECDSA.recover(_digest, _signature);\n  }\n}\n\n\nECDSA verification in Javascript/Typescript\nimport { SignerWithAddress } from '@nomiclabs/hardhat-ethers/signers';\nimport { utils } from 'ethers';\nimport { expect } from 'chai';\n\n(async () => {\n    let admin: SignerWithAddress;\n\n    [admin] = await ethers.getSigners();\n\n    const message: string = 'Hello World';\n    const msgHash: string = utils.hashMessage(message);\n    const digest: Uint8Array = utils.arrayify(msgHash);\n\n    const signature: string = await admin.signMessage(message);\n\n    const address: string = utils.recoverAddress(digest, signature);\n    expect(address).to.equal(admin.address);\n})();"
  },
  {
    "objectID": "documents/research/posts/ERFC-39.gfm.html#bls",
    "href": "documents/research/posts/ERFC-39.gfm.html#bls",
    "title": "BLS vs Schnorr vs ECDSA digital signatures",
    "section": "BLS",
    "text": "BLS\nBLS stands for Boneh-Lynn-Shacham, it’s a signature scheme that is based on bi-linear pairings. A pairing, defined as e(,), is a bilinear map of 2 groups G1 and G2 in some other group, GT. e(,) takes as arguments points in G1 and G2.\nPairings that verifies a signature looks like this:\ne(g1, sig) = e(P, H(m))\n\n# or in expanded form like this\ne(g1, pk*H(m)) = e(pk*g1, H(m)) = e(g1, pk*H(m))\nH(m) is hashing a message to a point on an elliptic curve.\nBLS consists of:\n\nKeyGen — choose a random α. Given generator g1, P=α*g1\nSign — σ = α*H(m) ∈ G2 (in the case of ETH 2.0)\nVerify(P,m, σ) — if e(g1, σ) = e(P, H(m)) return true.\n\nElliptic curve: BLS12-381\n\nBLS12-381\nBLS12-381 is a pairing-friendly elliptic curve construction that is optimal for zk-SNARKs at the 128-bit security level.\nBarreto-Naehrig (BN) curves are a class of pairing-friendly elliptic curve constructions built over a base field Fp of order r, where r≈p. It is possible to construct a new BN curve that targets 128-bit security by selecting a curve closer to p≈2^(384). However, the larger group order r impairs the performance of multi-exponentiation, fast fourier transforms and other cryptographic operations.\nBarreto-Lynn-Scott (BLS) curves are a slightly older class of pairing-friendly curves which now appear to be more useful for targeting this security level. Current research suggests that with p≈2^(384), and with an embedding degree of 12, these curves target the 128-bit security level.\n\n\nPrivate and public keys\nThe private/secret key (to be used for signing) is just a randomly chosen number between 1 and r−1 inclusive. We’ll call it pk.\nThe corresponding public key is P=[pk]g1, where g1 is the chosen generator of G1. That is, g1 multiplied by pk, which is g1 added to itself pk times.\nThe discrete logarithm problem means that it is unfeasible to recover pk given the public key P.\n\n\nSigning\nOne can sign the message by calculating the signature σ=[pk]H(m). That is, by multiplying the hash point by our secret key. But what is H?\nTo calculate a digital signature over a message, we first need to transform an arbitrary message (byte string) to a point on the G2 curve. The initial implementation in Eth2 was “hash-and-check”:\n\nHash your message to an integer modulo q\nCheck if there is a point on the curve with this x-coordinate. If not, add one and repeat\nOnce you have a point on the curve multiply it by the G2 cofactor to convert it into a point in G2.\n\n\n\n\nbls signing\n\n\n\n\nVerification\nGiven a message m, a signature σ, and a public key P, we want to verify that it was signed with the pk corresponding to P. The signature is valid if, and only if, e(g1,σ)=e(P,H(m)).\n\n\n\nbls verification\n\n\n\n\nAggregation\nA really neat property of BLS signatures is that they can be aggregated, so that we need only two pairings to verify a single message signed by n parties, or n - 1 pairings to verify n different messages signed by n parties, rather than 2n pairings you might naively expect to need. Pairings are expensive to compute, so this is very attractive.\nTo aggregate signatures we just have to add up the G2 points they correspond to: σagg=σ1+σ2+...+σn. We also aggregate the corresponding G1 public key points Pagg=P1+P2+...+Pn.\nNow the magic of pairings means that we can just verify that e(g1,σagg)=e(Pagg,H(m)) to verify all the signatures together with just two pairings.\n\n\nBLS verification in Solidity\nBelow shows an example Solidity function that verifies a single signature. EIP-197 defined a pairing precompile contract at address 0x8 and requires input to a multiple of 192. This assembly code calls the precompile contract at address 0x8 with inputs.\n  // Negated genarator of G2\n  uint256 constant nG2x1 = 11559732032986387107991004021392285783925812861821192530917403151452391805634;\n  uint256 constant nG2x0 = 10857046999023057135944570762232829481370756359578518086990519993285655852781;\n  uint256 constant nG2y1 = 17805874995975841540914202342111839520379459829704422454583296818431106115052;\n  uint256 constant nG2y0 = 13392588948715843804641432497768002650278120570034223513918757245338268106653;\n\n\nfunction verifySingle(\n    uint256[2] memory signature, \\\\ small signature\n    uint256[4] memory pubkey, \\\\ big public key: 96 bytes\n    uint256[2] memory message\n) public view returns (bool) {\n    uint256[12] memory input = [\n        signature[0],\n        signature[1],\n        nG2x1,\n        nG2x0,\n        nG2y1,\n        nG2y0,\n        message[0],\n        message[1],\n        pubkey[1],\n        pubkey[0],\n        pubkey[3],\n        pubkey[2]\n    ];\n    uint256[1] memory out;\n    bool success;\n\n    assembly {\n        success := staticcall(sub(gas(), 2000), 8, input, 384, out, 0x20)\n        switch success\n            case 0 {\n                invalid()\n            }\n    }\n\n    require(success, \"\");\n    return out[0] != 0;\n}\n\n\nBLS verification in Javascript/Typescript\nconst bls = require('@noble/bls12-381');\n\n(async () => {\n    // keys, messages & other inputs can be Uint8Arrays or hex strings\n    const privateKey =\n        '67d53f170b908cabb9eb326c3c337762d59289a8fec79f7bc9254b584b73265c';\n    const message = '64726e3da8';\n    const publicKey = bls.getPublicKey(privateKey);\n    const signature = await bls.sign(message, privateKey);\n    const isValid = await bls.verify(signature, message, publicKey);\n    console.log({ publicKey, signature, isValid });\n\n    // Sign 1 msg with 3 keys\n    const privateKeys = [\n        '18f020b98eb798752a50ed0563b079c125b0db5dd0b1060d1c1b47d4a193e1e4',\n        'ed69a8c50cf8c9836be3b67c7eeff416612d45ba39a5c099d48fa668bf558c9c',\n        '16ae669f3be7a2121e17d0c68c05a8f3d6bef21ec0f2315f1d7aec12484e4cf5',\n    ];\n    const messages = ['d2', '0d98', '05caf3'];\n    const publicKeys = privateKeys.map(bls.getPublicKey);\n    const signatures2 = await Promise.all(\n        privateKeys.map((p) => bls.sign(message, p))\n    );\n    const aggPubKey2 = bls.aggregatePublicKeys(publicKeys);\n    const aggSignature2 = bls.aggregateSignatures(signatures2);\n    const isValid2 = await bls.verify(aggSignature2, message, aggPubKey2);\n    console.log({ signatures2, aggSignature2, isValid2 });\n})();"
  },
  {
    "objectID": "documents/research/posts/ERFC-39.gfm.html#schnorr",
    "href": "documents/research/posts/ERFC-39.gfm.html#schnorr",
    "title": "BLS vs Schnorr vs ECDSA digital signatures",
    "section": "Schnorr",
    "text": "Schnorr\nSchnorr signatures are generated slightly differently than ECDSA. Instead of two scalars (r,s) we use a point R and a scalar s. Similar to ECDSA, R is a random point on elliptic curve (R = k×G). Second part of the signature is calculated slightly differently: s = k + hash(P,R,m) ⋅ pk. Here pk is your private key, P = pk×G is your public key, m is the message. Then one can verify this signature by checking that s×G = R + hash(P,R,m)×P.\n\n\n\nschnorr signing\n\n\nThis equation is linear, so equations can be added and subtracted with each other and still stay valid. This brings us to several nice features of Schnorr signatures that we can use.\n\nBatch validation\nTo verify a block in Bitcoin blockchain we need to make sure that all signatures in the block are valid. If one of them is not valid we don’t care which one - we just reject the whole block and that’s it.\nWith ECDSA every signature has to be verified separately. Meaning that if we have 1000 signatures in the block we will need to compute 1000 inversions and 2000 point multiplications. In total ~3000 heavy operations.\nWith Schnorr signatures we can add up all the signature verification equations and save some computational power. In total for a block with 1000 transactions we need to verify that\n(s1+s2+…+s1000)×G=(R1+…+R1000)+(hash(P1,R1,m1)×P1+ hash(P2,R2,m2)×P2+…+hash(P1000,R1000,m1000)×P1000)\nHere we have a bunch of point additions (almost free in sense of computational power) and 1001 point multiplication. This is already a factor of 3 improvement - we need to compute roughly one heavy operation per signature.\n\n\n\nbatch validation\n\n\n\n\nKey aggregation\nWe want to keep our bitcoins safe, so we might want to use at least two different private keys to control bitcoins. One we will use on a laptop or a phone and another one - on a hardware wallet / cold wallet. So when one of them is compromised we still have control over our bitcoins.\nCurrently it is implemented via 2-of-2 multisig script. This requires two separate signatures to be included in the transaction.\nWith Schnorr signatures we can use a pair of private keys (pk1,pk2) and generate a shared signature corresponding to a shared public key P=P1+P2=pk1×G+pk2×G. To generate this signature we need to choose a random number on every device (k1,k2), generate a random point Ri=ki×G, add them up to calculate a common hash(P,R1+R2,m) and then get s1 and s2 from every device (si = ki + hash(P,R,m) ⋅ pki). Then we can add up these signatures and use a pair (R, s) = (R1+R2, s1+s2) as our signature for shared public key P. No one else won’t be able to say if it is an aggregated signature or not - it looks exactly the same as a normal Schnorr signature."
  },
  {
    "objectID": "documents/research/posts/ERFC-40.gfm.html#goals",
    "href": "documents/research/posts/ERFC-40.gfm.html#goals",
    "title": "Access NFT Tools - Overview And Space For Improvements",
    "section": "Goals",
    "text": "Goals\n\nIdentifying content gating tools (that works).\nUnderstanding how they work.\nRecognizing use cases that they are used for, the problems they aim to solve.\n\nIt is essential to overview current solutions in the field we aim to dive into. Both, short-term, for this research and experiment, ut also long-term, for being able to actively track all the innovation in this field from now on.\n\nVerify our presumption about how current solutions are used to gate Telegram and Discord communities: Through using centralized services and storing the user’s private information (wallet address and username), existing solutions periodically verify the user’s possession of specific NFT.\n\nThe main goal of this research is to verify our presumption that there is privacy concern and space for tech improvement within the Access NFT tool niche. If it is accurate, and if the current solution keeps track and connection between private users’ data, we can conclude that there are reasons to move forward with this idea and start working on technical specifications and research how it can be developed."
  },
  {
    "objectID": "documents/research/posts/ERFC-40.gfm.html#methodology",
    "href": "documents/research/posts/ERFC-40.gfm.html#methodology",
    "title": "Access NFT Tools - Overview And Space For Improvements",
    "section": "Methodology",
    "text": "Methodology\n\nTrying out and using existing solutions. We aimed to try each solution available on the market as we believe it is the only way to understand how it works and what problems it solves.\nConsult and discuss with team and community members via contact forms or community servers We want to confirm that our understanding of how a specific tool works and what lies under the hood is correct. Hence, the best way is to receive confirmation from the people building and using it, especially when those tools are not open-sourced.\nAnalyze other reviews There are blog posts, websites, and apps that have already analyzed and gathered information about the current state of Access NFT tools. Thus, we do not need to do all of this work again, as we can benefit from their insights and overviews. Still, this does not mean that we will take it for granted. We want to do our research as well.\n\n*We were not looking under the hood (going through the code). Most of the solutions are not open-sourced. Also, we could understand how they work by consulting with the community and team members behind these solutions."
  },
  {
    "objectID": "documents/research/posts/ERFC-40.gfm.html#collab.land",
    "href": "documents/research/posts/ERFC-40.gfm.html#collab.land",
    "title": "Access NFT Tools - Overview And Space For Improvements",
    "section": "Collab.Land",
    "text": "Collab.Land\nCollab.Land is a sovereign ruler and tool that is used by almost all Discord and Telegram Access communities.\nThe Collab.Land documentation is scarce and it is focused on explaining how to connect their bot rather than explaining how it works. Also, we could not find any other useful information and as their solution was not open-sourced, we reached out directly to them looking for answers that will help us test our hypothesis.\nBased on the answers we received, Collab.Land does store connections between users personal information and their wallet address.\nHowever, before we could conclude that our hypothesis was correct, we had to research Swordy-bot."
  },
  {
    "objectID": "documents/research/posts/ERFC-40.gfm.html#swordy-bot",
    "href": "documents/research/posts/ERFC-40.gfm.html#swordy-bot",
    "title": "Access NFT Tools - Overview And Space For Improvements",
    "section": "Swordy Bot",
    "text": "Swordy Bot\nSwordy-bot is a Discord bot used to verify and grant access to a specific Discord channel (server) if a user has required token(s).\nCompared to Collab.Land, Swordy-bot is built on top of decentralized Unlock Protocol. However, as well as Collab.Land it does store and keep a connection between user’s personal information (Discord id) and wallet address in their centralized database. We came to that conclusion (again) based on the information provided by their team members. .\nAnother common thing with Collab.Land is that Sowrdy-bot is not open-sourced as well.\nWorth mentioning is that, even though Collab.Land is sovereign ruler, Swordy-bot is used as a gate keeper by more than 100 Discord communities.\nFinally, we could confirm that our presumption was correct based on the fact that both of these solutions do store and keep track of the user’s wallet address and username centrally.\nThereafter we went a step further and analyzed other solutions used for content gating. All of them can be divided into 3 categories:\n\nProtocols\nPlatforms\nApps/Tools\n\nAlso each of them is either centralized or decentralized.\nWe have already covered Swordy-bot and Collab.land which are centralized tools."
  },
  {
    "objectID": "documents/research/posts/ERFC-40.gfm.html#unlock-protocol-decentralized-protocol",
    "href": "documents/research/posts/ERFC-40.gfm.html#unlock-protocol-decentralized-protocol",
    "title": "Access NFT Tools - Overview And Space For Improvements",
    "section": "Unlock Protocol [Decentralized Protocol]",
    "text": "Unlock Protocol [Decentralized Protocol]\nUnlock Protocol is an open-source protocol, not a centralized platform, used to create an underlying infrastructure for token gating content (communities, application, websites pages, and sections, images, videos, etc.)\nIt enables:\n\nuser (admin) to deploy a set of smart contracts (on Mainnet, xDAI, Polygon, BSC, or Optimism) and define gating details (number of keys, key price and key duration).\nregular users to purchase key (an NFT) and access content.\n\nUP is the underlying layer that allows other tools to build on top of it and utilize its functionalities. Bellow are listed use cases enabled through community-developed integrations (apps and plugins) build on top of Unlock Protocol:\n\nSwordy-bot - gating Discord communities (servers and channels).\n\nDiscourse plugin - gated content on Discourse.\nWP and Webflow plugins - gated website pages or section.\nDurap module - gating content on Durap.\nSlack plugin - gated Slack servers.\nShopify app - allows merchants to offer special memberships to their customers.\n\nPlugins and other integration tools are the ones that connect blockchain with specific apps (Discord, Slack, etc.). Hence, they are centralized solutions that monitor what’s happening on a blockchain (whether the wallet address still holds an NFT) and inform apps about that. Something like reverse oracles.\nAll in all, Unlock Protocol is a customized set of smart contracts with the following functionalities:\n\nMinting and sending NFTs (locks) to users.\nCollecting and withdrawing crypto on behalf of admin.\n\nAlso, if needed, it can support more traditional (web2) authentication methods by storing private keys on behalf of a user. Also, UP support CC payments.\nYou are right if you think that all of the above may be done without UP. However, it is much easier and faster to implement all of these functionalities by using Unlock Protocol than developing all of the smart contracts and features from scratch."
  },
  {
    "objectID": "documents/research/posts/ERFC-40.gfm.html#whale-room-centralized-platform",
    "href": "documents/research/posts/ERFC-40.gfm.html#whale-room-centralized-platform",
    "title": "Access NFT Tools - Overview And Space For Improvements",
    "section": "Whale room [Centralized Platform]",
    "text": "Whale room [Centralized Platform]\nWhale room is a centralized platform that enables users to create their chat rooms within the platform and gate them by setting up the access requirements (required tokens). Also, it supports token mining and distribution (to the community members).\nWhale room is an alternative for using Discord (or Telegram) in combination with Collab.Land (or Swordy-bot) as it offers both, chat rooms (as Telegram and Discord) and token gating functionality (as Collab.Land and Swordy-bot)."
  },
  {
    "objectID": "documents/research/posts/ERFC-40.gfm.html#mintgate-centralized-tool-platform",
    "href": "documents/research/posts/ERFC-40.gfm.html#mintgate-centralized-tool-platform",
    "title": "Access NFT Tools - Overview And Space For Improvements",
    "section": "MintGate [Centralized Tool & Platform]",
    "text": "MintGate [Centralized Tool & Platform]\nMintGate is a tool that allows users to hide content (URL) and present it only to the ones that possess specific NFT. Users can use MintGate to deploy new NFTs required to access content, but it also supports using other NFTs, minted in the other way.\nIn addition, MintGate recently created a centralized platform that offers the creation of your store and gating it with MintGate technology."
  },
  {
    "objectID": "documents/research/posts/ERFC-40.gfm.html#guild-centralized-platform",
    "href": "documents/research/posts/ERFC-40.gfm.html#guild-centralized-platform",
    "title": "Access NFT Tools - Overview And Space For Improvements",
    "section": "Guild [Centralized Platform]",
    "text": "Guild [Centralized Platform]\nIn combination with its Medusa bot, Guild gate the access to Discord private channels rather than the whole discord server. Compared to other solutions, it supports more complex requirements logic by combining the following requirement options: possession of an NFT, amount of an ERC20 token, and opportunity to whitelist wallet addresses.\nBesides this feature and difference, it offers the same options as using some of the previously mentioned bots combined with Discord or Telegram (that you also need if you want to use Guild)."
  },
  {
    "objectID": "documents/research/posts/ERFC-42.gfm.html",
    "href": "documents/research/posts/ERFC-42.gfm.html",
    "title": "Analysis of smart contract fuzzers",
    "section": "",
    "text": "Executive Summary\nWe are witness of the accelerated development of smart contracts, and more and more valuable assets are contained in them. For this reason, it is very important to write secure smart contracts. However, since people write smart contracts, and people make mistakes, it is desirable to have a tool that will be able to point out potential problems in the code. Fuzz testing is a technique that with early entry stresses our program to reveal errors. We will get to know with fuzing tools through this research.\n\n\nIntroduction\nSmart contracts often contain valuable assets, whether in the form of tokens or Ether. Smart contract’s source code is publicly available, every execution happens on a public network. If smart contracts have vulnerabilities that can lead to catastrophic damages, that is potentially measured in millions of dollars. For example, at 2017 attack on Parity Wallet cost ~30 million dollars1 , at the 2016 DAO Hack cost ~150 million dollars2 , at 2020 Harvest Finance was attacked using flash loans and stole ~30 million dollars3 . To prevent disasters like this, it is important to find any vulnerabilities in smart contracts before deployments. Some of the common vulnerabilities are integer overflow/underflow, race conditions, and also we could have logic mistakes that are hard to detect. Security is essential while developing smart contracts. There are some known hacker attacks and good practices to follow.4\nHence, in the development of smart contracts, testing is one of the most important techniques that require special time aside. Mostly we write unit tests, but unit tests are specific to one use case, and often some edge cases are not covered. There is a big research interest in developing testing tools, especially ones that are able to automatically detect as many problems in the code as possible, one such technique is fuzz testing.\n\n\nGoals & Methodology\nThere are many automatic bug-finding tools, and the purpose of this research is to introduce you to smart contracts fuzz testing. Fuzzing is a well-known technique in the security community it generates random, or invalid data as inputs to reveal bugs in the program, in one word it stress the program and causes unexpected behavior or crashes.\nConsidering the research interest in this area, a number of tools have been developed. Some popular open source tools are ContractFuzzer, ContraMaster, ILF, sFuzz, Smartian, and Echidna. Comparison of these tools is not easy task, the main reason is that each tool covers some specific set of bug classes.\nEchidna is a property-based tool, develop with the aim to check if the contract violates some user-defined invariants, while other tool tries to find crashes. Company Trails of Bits extended fuzz technique to the EVM by developing the Echidna tool. Echidna can test both Solidity and Vyper smart contracts, it is written in Haskell, and main design goals are:\n\nEasy to use and configure\nGood contract coverage\nFast and quickly results\n\nContraMaster have been developed to detect irregular transactions due to various types of adversarial exploits, detects 3 classes of bug: Reentrancy, Exception Disorder, Gasless Send and Integer overflow/underflow.\nContractFuzzer detects 7 classes of bug: Reentrancy, Exception Disorder, Gasless Send, Timestamp Dependency, Block Number Dependency, DelegateCall and Freezing Ether Contract.\nsFuzz detects all classes of bug as Contract Fuzzer plus Integer overflow/underflow. It has an extendable architecture which allows to easily support new bug classes as well. Also, sFuzz is effective in achieving high code coverage\nSmartian detects 13 classes of bug: Assertion Failure, Arbitrary Write Block state Dependency, Control Hijack, Ether Leak, Integer Bug, Mishandled Exception, Multiple Send, Reentrancy, Suicidal Contract, Transaction Origin Use, Freezing Ether, Requirement Violation.\nThe way of generating inputs is different, ContractFuzzer and Echidna generate test cases based on a set of predefined parameter values, and fail to cover deeper paths that expose some vulnerabilities. sFuzz has guided input generation based on a genetic algorithm to iteratively improve its branch coverage. ILF generates input based on AI, using neural networks.\nAll in all, only Smartian, ILF, and Echidna at the end show the path how we could reproduce the bug. As Smartian covers more bug classes than ILF, shown in bellow Figure5 , the focus in this research will be on Smartian and Echidna.\n\n\n\nResults & Discussion\nAll examples are run on MacOS Big Sur, version 11.6, processor 2,6 GHz 6-Core Intel Core i7 and 16GB of memory. As there is no upper bound on how long Echidna can run, but the goal is to find a bug in up to 5 minutes.6 Configuration for Smartian test timeout is set up to 5 minutes.\nLet’s first show and discuss few motivating smart contract examples:\ncontract MotivationExample {\n    function f(int256 a, int256 b, int256 c) public pure returns (int256) {\n        int256 d = b + c;\n        if (d < 1) {\n            if (b < 3) {\n                return 1;\n            }\n            if (a == 42) {\n                assert(false);\n                return 2;\n            }\n            return 3;\n        } else {\n            if (c < 42) {\n                return 4;\n            }\n            return 5;\n        }\n    }\n}\nVery fast both Smartian and Echidna find assertion failure in above smart contract, results with counterexample and information how to reproduce transaction are show in next Figures(Figure1 and Figure2):\n\nFigure1 : Smartian replayable test case\n\nFigure2 : Echidna replayable test case\nThe next two examples have some more complex math:\ncontract MotivationExample {\n    bool private value_found;\n\n    function f(uint256 a, uint256 b, uint256 c, uint256 d) public {\n        require(a == 42);\n        require(b == 129);\n        require(c == d+333);\n        value_found = true;\n        assert(value_found == false);\n    }\n}\nAbove one, the inputs must meet three requirements, and to the equality. Smartian and Echidna test it, and at bellow Figures(Figure3 and Figure4) are results:\n\nFigure3 : Smartian replayable test case\n\nFigure4 : Echidna failed to find assertion\nSmartian quickly found assertion failure and counterexample, while Echidna failed to find one. Take a look at hardest motivation example and result from fuzzers:\ncontract MotivationExample {\n    uint256 private stateA;\n    uint256 private stateB;\n    uint256 CONST = 32;\n\n    function f(uint256 x) public {\n      stateA = x;\n    }\n\n    function g(uint256 y) public{\n      if (stateA % CONST == 1) {\n        stateB = y - 10;\n      }\n    }\n\n    function h() public view {\n      if (stateB == 62) { \n        bug(); \n      }\n    }\n\n    function bug() private pure {\n      assert(false);\n    }\n}\n\nFigure5 : Smartian replayable test case\n\nFigure6 : Echidna failed to find assertion\nAgain, Smartian quickly finds assertion failure, while Echidna fails. The reason for failure is due to the way it generates inputs. Echidna is not smart to go in-depth when making input seeds and figure out the values in the deeper branches.\nIndeed, there is a way for Echidna to find assertion failure in the above examples, solution is in the configuration file.\nEchidna has a YAML configuration file, with configurable parameters, that can be turned on or off during the test. If config.yaml is not listed, the default YAML configuration file is called.7 Some of configuration parameters enable to blacklist function, compute maximum gas usage, the maximum number of transactions sequences to generate, number of test sequences to run, prefix for boolean functions that are properties to be checked, contract deployer address. Also it is possible to define set of addresses transactions originate from along with default balance for addresses. In case we have a complex contract, and we need to initialize the blockchain with some data -> tool Etheno helps here8 , after Etheno finishes the initialization JSON file is created, that is set as initialization inside configuration file. Additionally, if our contract uses some framework, for example, Hardhat or Truffle, Echidna then use crytic compile, and build directory of the framework is sent through crytic arguments inside Echidna configuration file.\nBack to the above example, to find assertion failure, it is enough inside configuration file to set corpus directory. After first run, inside the corpus directory we could see the generated input for contract properties, now is enough to modify the input to use suitable parameters that will cause assertion failure.\nAlthough Smartian beat Echidna in the above examples, the logical question, that arises, is what are the advantages of Echidna and why would we use Echidna rather than Smartian?\nEchidna’s advantage are invariants, Invariants are Solidity functions that can represent any incorrect state that contract can have, each invariant must be:\n\nPublic method that has no argument\nReturn true if it is successful\n\nor:\n\nPublic method that can have an argument\nUse assert in function\n\n\nFigure7 : Architecture of Echdina\nArchitecture9 is divided into preprocessing and fuzzing campaigns. In the preprocessing step, the static analyzer tool Slither10 is used with the purpose to find useful constants and functions for effective testing. In the fuzzing campaign step, using contract ABI(Application binary interface) the random transactions are generated, and also any previous transactions from the corpus are included. In case the vulnerability is detected, a counterexample is automatically minimized to the smallest and simplest sequence of transactions that cause failure.\nRunning Echidna:\n$ echidna-test contract.sol --constract TEST --config config.yaml,\nor if Truffle or Hardhat is used:\n$ echidna-test . contract.sol --constract TEST --config config.yaml\nEchidna can be run from the docker, the official image of the current 2.0.0 version is trailofbits/echidna. Inside docker, default version of solidity compiler is 0.5.7, so if we want to test contracts in another version we need to install solc-select. If the preferred method is to not worry about how to install additional tools, there is a docker image trailofbits/eth-security-toolbox, but currently there ecidna version is 1.7.2.\n\n\nConclusion\nAlthough Smartian is better at generating input, what should be noted is that Smartian still doesn’t have support for solc 0.8.x or greater. All examples from the section Results & Discussion have been tested with solc 0.4.25. For an experiment, if you take IB.sol from Smartian benchmark examples,11 and adapt it to work with solidity version 0.8.9, Smartian will fail to find Integer Bug, but Echidna will find it. If you take a look at comparison of fuzz tools in Goals & Methodology that in the previous version Echidna was not able to found these bugs, as the integer overflow/underflow is one of the features in Echidna 2.0.0 for solc 0.8.x or greater. In Appendix at Figure11 and Figure12 is shown Smartian output, and in Figure13 is shown Echidna output.\nIn general, Echidna and Smartian together cover bug classes: Assertion Failure and Integer Bug. Some comparison examples between Echidna 2.0.0, Smartian solc 0.4.25 and Smartian solc 0.8.9 are in research_examples.\nEchidna Assertion allows us to manage what property should test along with the input range value of testing property arguments, in contrary using explicit property we are not sure which function will be checked and which arguments should be used to call test property, explicit property check all method that is not private or internal.\nWhen asked which tool of the two to use, the simple answer is both. Both tools are promising. They cover different classes of problems and the use of both tools for testing smart contracts reduces the chance that our contract has potential flaws. Echidna is under active development, so it is reasonable that it is buggy. But, they work hard to reply & fix each issue.\nThe Echidna coverage report is a little bit confused, one is shown at Figure8. Some suggestion is to add some styled report(example) and the legend table of symbol meaning:\n\n\n\n\n\n\n\nLine marker\nMeaning\n\n\n\n\n’*’\nIf an execution ended with a STOP\n\n\nr\nIf an execution ended with a REVERT\n\n\no\nIf an execution ended with an out-of-gas error\n\n\ne\nIf an execution ended with any other error (zero division, assertion failure, etc)\n\n\n\n\nFigure8 : Echidna coverage\nUI for both tools should be improved, it would be nice to display emitted events. And, Smartian output could color counterexample and found bugs. The current UI is shown in the bellow Figures.\n\nFigure9\n\nSmartian output\n\n\n\nFigure10 : Echidna output\nIt would be nice to have integration with Remix IDE, which will help with debugging.\n\n\nAppendices\n\nFigure11 : Smartian found Integer Bug with 0.4.25\n\nFigure12 : Smartian not found Integer Bug with 0.8.9\n\nFigure13 : Echidna found Integer Bug with 0.8.9\n\n\nBibliography\n\n\n\n\n\nReferences\n\n‘Building-Secure-Contracts/Workflow.md at Master  Crytic/Building-Secure-Contracts’, GitHub <https://github.com/crytic/building-secure-contracts> [accessed 14 February 2022]\n\n\nChoi, Jaeseung, Doyeon Kim, Soomin Kim, Gustavo Grieco, Alex Groce, and Sang Kil Cha, ‘SMARTIAN: Enhancing Smart Contract Fuzzing with Static and Dynamic Data-Flow Analyses’, in 2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE) (Melbourne, Australia: IEEE, 2021), pp. 227–39 <https://doi.org/10.1109/ASE51524.2021.9678888>\n\n\n‘Etheno’ (Crytic, 2022) <https://github.com/crytic/etheno> [accessed 28 February 2022]\n\n\nFoxley, William, ‘Harvest Finance: $24m Attack Triggers $570m ’Bank Run’ in Latest DeFi Exploit’, 2020 <https://www.coindesk.com/tech/2020/10/26/harvest-finance-24m-attack-triggers-570m-bank-run-in-latest-defi-exploit/> [accessed 11 February 2022]\n\n\nGrieco, Gustavo, Will Song, Artur Cygan, Josselin Feist, and Alex Groce, ‘Echidna: Effective, Usable, and Fast Fuzzing for Smart Contracts’, in ISSTA 2020, 2020\n\n\nSiegel, David, ‘Understanding The DAO Attack’, 2016 <https://www.coindesk.com/learn/2016/06/25/understanding-the-dao-attack/> [accessed 11 February 2022]\n\n\n‘Slither, the Solidity Source Analyzer’ (Crytic, 2022) <https://github.com/crytic/slither> [accessed 11 February 2022]\n\n\n‘The Parity Wallet Hack Explained’, OpenZeppelin Blog, 2017 <https://blog.openzeppelin.com/on-the-parity-wallet-multisig-hack-405a8c12e8f7/> [accessed 11 February 2022]\n\nFootnotes\n\n\n‘The Parity Wallet Hack Explained’, OpenZeppelin Blog, 2017 <<https://blog.openzeppelin.com/on-the-parity-wallet-multisig-hack-405a8c12e8f7/>> [accessed 11 February 2022].↩︎\nDavid Siegel, ‘Understanding The DAO Attack’, 2016 <<https://www.coindesk.com/learn/2016/06/25/understanding-the-dao-attack/>> [accessed 11 February 2022].↩︎\nWilliam Foxley, ‘Harvest Finance: $24m Attack Triggers $570m ’Bank Run’ in Latest DeFi Exploit’, 2020 <<https://www.coindesk.com/tech/2020/10/26/harvest-finance-24m-attack-triggers-570m-bank-run-in-latest-defi-exploit/>> [accessed 11 February 2022].↩︎\n‘Building-Secure-Contracts/Workflow.md at Master  Crytic/Building-Secure-Contracts’, GitHub <<https://github.com/crytic/building-secure-contracts>> [accessed 14 February 2022].↩︎\nJaeseung Choi and others, ‘SMARTIAN: Enhancing Smart Contract Fuzzing with Static and Dynamic Data-Flow Analyses’, in 2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE) (Melbourne, Australia: IEEE, 2021), pp. 227–39 <https://doi.org/[10.1109/ASE51524.2021.9678888](https://doi.org/10.1109/ASE51524.2021.9678888)>.↩︎\nGustavo Grieco and others, ‘Echidna: Effective, Usable, and Fast Fuzzing for Smart Contracts’, in ISSTA 2020, 2020.↩︎\nCryticEchidnaEthereum?↩︎\n‘Etheno’ (Crytic, 2022) <<https://github.com/crytic/etheno>> [accessed 28 February 2022].↩︎\nGrieco and others.↩︎\n‘Slither, the Solidity Source Analyzer’ (Crytic, 2022) <<https://github.com/crytic/slither>> [accessed 11 February 2022].↩︎\nSmartian2022?↩︎"
  },
  {
    "objectID": "documents/research/index.html",
    "href": "documents/research/index.html",
    "title": "Research",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nToken Engineering and Design of complex systems\n\n\nThis is the first research paper in the series of research exploring Token Economics and Token Engineering tools and processes. It provides an introduction to the practice and the Process of Token Engineering. It also covers a portion of systems theory and the three most prevalent tools in the field of Token Engineering. These tools are:\n\n\n\n\n\n\n6/28/2022\n\n\nAleksandar Damjanovic\n\n\n14 min\n\n\nERFC-246.gfm.md\n\n\n\n\n\n\n\n\nCrosschain Identity\n\n\nWhen we look at the current Web2 user identity solutions, we can see that they are mostly linked to centralized corporate organizations. Although convenient for the end-user, this type of online identity is not owned by the user, and the issuers (Google, Facebook, Twitter, etc.) have complete control of them. In Web3, the focus is on decentralization; however, the problem of cross-chain interoperability of identities is a big one to overcome.\n\n\n\n\n\n\n6/14/2022\n\n\nAleksandar Damjanovic\n\n\n18 min\n\n\nERFC-248.gfm.md\n\n\n\n\n\n\n\n\nZK NFT Mixer\n\n\nNFTs are growing in popularity, and so are the numbers of transactions for transferring the NFTs on the Blockchain. One of the main features of the Blockchain is privacy, but only in terms of pseudo-anonymity. The pseudo-anonymity implies that the user creating the transaction is hidden, as he is represented using an opaque, pseudo-random address. Still, the transactions between the addresses are transparent. By analyzing the transaction graph and external inputs, such as social network posts putting the address in a specific context, it is possible to deduce the address owner and reveal all his transactions. This research aims to analyze the possibility of creating a solution that can enable NFT transfers in an environment that supports complete anonymity but is still compatible with Ethereum. The proposed infrastructure represents a zero-knowledge mixer supporting shielded transfers of the NFTs on the side chain with the ability to withdraw NFTs back on the main chain.\n\n\n\n\n\n\n6/5/2022\n\n\nAleksandar Veljković\n\n\n10 min\n\n\nERFC-270.gfm.md\n\n\n\n\n\n\n\n\nApproaches to Testing Of Smart Contracts\n\n\nSmart Contracts are applications built on blockchain that, once deployed, cannot be altered or updated. With that in mind, their testing is crucial, even more so than in traditional software development.\n\n\n\n\n\n\n6/4/2022\n\n\nMilos Bojinovic\n\n\n15 min\n\n\nERFC-259.gfm.md\n\n\n\n\n\n\n\n\nSBT - Soulbound Tokens\n\n\nThis paper explores the SBTs (Soulbound Tokens) as a concept, their potential use cases, and the difficulties of implementing this solution. It also covers concepts of social and community recovery and briefly covers designated-verifier proofs and verifiable delay functions as they are potential enablers of this solution.\n\n\n\n\n\n\n5/31/2022\n\n\nAleksandar Damjanovic\n\n\n15 min\n\n\nERFC-261.gfm.md\n\n\n\n\n\n\n\n\nRoyalty Contract Standardization - RCS\n\n\nThis research examines the possibility of hardcoding the royalty logic for the NFT royalty payments. It also explores how are royalties for NFT creators/artists taken care of by two largest NFT marketplaces OpenSea and LooksRare. It examines the EIP-2981 which aims to solve the royalty implementation problem. Small experiment is conducted with a goal to modify the transfer function from the ERC-721 standard.\n\n\n\n\n\n\n5/12/2022\n\n\nAleksandar Damjanovic\n\n\n9 min\n\n\nERFC-171.gfm.md\n\n\n\n\n\n\n\n\nDeveloping with Ape\n\n\nThis research examines Ape The Ethereum Development Framework For Python Developers. It examines its plugin system and ease of use. As a conclusion Web3 Tech Radar location is suggested.\n\n\n\n\n\n\n4/30/2022\n\n\nAleksandar Damjanovic\n\n\n4 min\n\n\nERFC-172.gfm.md\n\n\n\n\n\n\n\n\nOWT - Omni Web Token\n\n\nJSON Web Tokens, or JWT, are standard for authorizing clients on the Web. Some JWT payloads have a specific structure, such as OAuth(2) tokens. Others, however, are designed specifically for particular apps. Authorization on the Blockchain is done mainly through explicitly whitelisting addresses that are allowed to perform specific actions. Whitelisting introduces high costs when the number of whitelisted addresses is large. A good example is ICO whitelisting, where hundreds or even thousands of participants need to get whitelisted. This research aims to find an efficient, more cost-effective solution for authorizing users on the Blockchain using a system of authorization tokens issued and received off-chain, without the Blockchain transaction fees, and valid on-chain and off-chain. In addition, the token structure should be transferrable off-chain as a JWT token, compatible with the OAuth2 standard, and reusable in both Web 2.0 and Web 3.0 worlds.\n\n\n\n\n\n\n4/6/2022\n\n\nAleksandar Veljković\n\n\n24 min\n\n\nERFC-147.gfm.md\n\n\n\n\n\n\n\n\nBlacklisting Platform based on untransferable NFTs\n\n\nThe main topic of this research is exploring the possibility and the need to create the “Authority” protocol that would handle blacklisting based on community voting and assessment. This protocol would mint the untransferable NFT to the blacklisted address. Creating this solutions (both the platform and the NFT) would not be challenging but the need for these solutions is questionable to the author. This paper explored the current blacklist cases and the possibility of creating the said NFTs. The Tether case is in the main focus since the solutions are similar and simple. The main takeaway is that creating this solution is not necessary per se, but the issue is open for discussion.\n\n\n\n\n\n\n3/31/2022\n\n\nAleksandar Damjanovic\n\n\n7 min\n\n\nERFC-154.gfm.md\n\n\n\n\n\n\n\n\nNFT that is bound by time\n\n\nNFTs have a unique ID and belong to a single wallet. Two standards define what an NFT is and should do: ERC721 and ERC1155, aiming to distinguish each token to be unique. The development of NFT is still in the early stage, and this research shows how NFTs can change their properties. We go through some existing solutions where some events fundamentally affect the NFT, changing its state, properties, or value. We give an overview of those solutions with a desire to cover how they work under the hood and notice potential problems. In the end, are presented possible use cases that open a new door into the NFT word.\n\n\n\n\n\n\n3/14/2022\n\n\nMarija Mijailovic\n\n\n12 min\n\n\nERFC-101.gfm.md\n\n\n\n\n\n\n\n\nDetect NFT Wash Trading\n\n\nWith the monthly trading volume of the Non-Fungible Token (NFT) marketplace OpenSea reaching 5 billion dollars in January 2022[^1] it is clear that NFTs are gaining popularity and with that grows the importance of having a transparent trading activity.\n\n\n\n\n\n\n3/12/2022\n\n\nMilos Bojinovic\n\n\n14 min\n\n\nERFC-90.gfm.md\n\n\n\n\n\n\n\n\nCrypto Insurance - Current state, problems and possibilities of creating new products\n\n\nIn this paper we covered 5 of the main players in DeFi insurance market in order to determine the products offered, the problems with these products, the way the claims are handled and the possibilty of creating new insurance protocols. Initially we were not familiar with this field and the effort needed for creating these products, so we conducted this explorative research.\n\n\n\n\n\n\n3/9/2022\n\n\nAleksandar Damjanovic\n\n\n38 min\n\n\nERFC-91.gfm.md\n\n\n\n\n\n\n\n\nTransaction splitting\n\n\nMany companies sell goods with a business model based on donating some percent of their profit to charity. The problem is that some of these companies don’t transparently perform these donations. If, for example, the handmade wristwatch company claims that it donates 90 percent of earnings to the charity, the buyers can’t be sure whether they indeed donated the funds to charity or just bought a very expensive product. They can only believe the company itself. Blockchain technology eliminates the need for trust.\n\n\n\n\n\n\n3/8/2022\n\n\nAndrej Rakic\n\n\n5 min\n\n\nERFC-105.gfm.md\n\n\n\n\n\n\n\n\nBLS vs Schnorr vs ECDSA digital signatures\n\n\nBitcoin and Ethereum both use elliptic-curve cryptography for generating keys and signing transactions. The algorithm they both use is called Elliptic Curve Digital Signature Algorithm (ECDSA), which represents a secure way of signing a message (a transaction for example) using Elliptic Curve Cryptography (ECC). This is a comparative analysis of BLS, Schnorr, and ECDSA signatures. The goal is to understand why are Ethereum and Bitcoin migrating from ECDSA, why BLS and Schnorr are superior to ECDSA and what are the key differences between them, how to use these signatures in the development and which Elliptic curves they are using and why.\n\n\n\n\n\n\n3/4/2022\n\n\nAndrej Rakic\n\n\n12 min\n\n\nERFC-39.gfm.md\n\n\n\n\n\n\n\n\nROTOKEN\n\n\nOrganisations may include non-founder members with specific roles (treasurer, secretary, board members…) with higher permission levels, compared to the regular members. Members that have permission levels which include control over organisation finances represent a high risk for the organisation as there is a high risk of losing money if malicious members perform illegal transfers. That problem is especially present in the world of cryptocurrency where transfers cannot be revoked, once transaction is executed there is no rollback. The use of multisig might be an obvious solution, but the high overhead cost of writting multiple signatures on blockchain, even if the transaction is valid, may not be acceptable in many situations where there is a high frequency of transactions.\n\n\n\n\n\n\n3/3/2022\n\n\nAleksandar Veljković\n\n\n9 min\n\n\nERFC-103.gfm.md\n\n\n\n\n\n\n\n\nBuilding on Filecoin and Filecoin Proofs\n\n\nWhen looking to build dApps that utilize decentralized storage Filecoin seems like the best option even with its flaws like : absent proof of deletion for the client, absent encryption, impossible modifying of the stored data and the durability problem of Filecoin’s Proof of Replication. This research gives an overview of competitors in decentralized storage solution field with a focus on Filecoin protocol. It also shows how its competitor Storj differs from Filecoin and the current grant opportunities for potential building on it. Considering the results of the research Filecoin seems to be the best option considering the popularity and the size of its ecosystem. Currently there is no interest for building on and with Filecoin and this is a purely explorative work without experiments, in order to test the researcher’s methodology and the approach to research. However, it proposes a question about a potential way of improving Filecoin, or creating both safer protocol for the user and cheaper for the storage miners.\n\n\n\n\n\n\n2/25/2022\n\n\nAleksandar Damjanovic\n\n\n19 min\n\n\nERFC-38.gfm.md\n\n\n\n\n\n\n\n\nSolidity++ (S++)\n\n\nWriting efficient code in modern languages is mostly reflected in writing efficient algorithms and business logic. Writing efficient code in Solidity is mostly reflected in thinking as an assembler, moving focus from logic implementation to memory optimisations and low level hacks. Highly optimised code may become unreadable and unmaintainable with possible bugs hidden between the lines of bit level operations. To solve this problem, this project proposes multiple automatic optimisation techniques that will be all summed up into a transpiler and Solidity language extensions called Solidity++.\n\n\n\n\n\n\n2/24/2022\n\n\nAleksandar Veljković\n\n\n6 min\n\n\nERFC-57.gfm.md\n\n\n\n\n\n\n\n\nGaming DAPPs - Play to Earn model\n\n\nBlockchain games, also called Gaming DAPPs, are an emerging area in the Web3 space. With their gameplay, Gaming DAPPs currently cannot compete with the 3D AAA games and they mostly resemble 2D Hyper Casual Mobile games. Developers often need to make compromises in separating on-chain activity from the actions that are taken off-chain and so the line is blurred between what is truly a blockchain game and what is not. However, strong advantage of these games is that they almost always offer some form of an economic incentive to the players with an opportunity to “own” part of the game in order to influence the game’s further development.\n\n\n\n\n\n\n2/24/2022\n\n\nMilos Bojinovic\n\n\n32 min\n\n\nERFC-37.gfm.md\n\n\n\n\n\n\n\n\nAccess NFT Tools - Overview And Space For Improvements\n\n\nNFT Access tokens are primarily used to join private Discord and Telegram communities. Still, a significantly larger opportunity lies in many online and offline communities and events that might utilize this technology.[^1]\n\n\n\n\n\n\n2/21/2022\n\n\nMilos Novitovic\n\n\n10 min\n\n\nERFC-40.gfm.md\n\n\n\n\n\n\n\n\nAnalysis of smart contract fuzzers\n\n\nWe are witness of the accelerated development of smart contracts, and more and more valuable assets are contained in them. For this reason, it is very important to write secure smart contracts. However, since people write smart contracts, and people make mistakes, it is desirable to have a tool that will be able to point out potential problems in the code. Fuzz testing is a technique that with early entry stresses our program to reveal errors. We will get to know with fuzing tools through this research.\n\n\n\n\n\n\n2/17/2022\n\n\nMarija Mijailovic\n\n\n14 min\n\n\nERFC-42.gfm.md\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "documents/research/posts/ERFC-105.gfm.html",
    "href": "documents/research/posts/ERFC-105.gfm.html",
    "title": "Transaction splitting",
    "section": "",
    "text": "Executive Summary\nMany companies sell goods with a business model based on donating some percent of their profit to charity. The problem is that some of these companies don’t transparently perform these donations. If, for example, the handmade wristwatch company claims that it donates 90 percent of earnings to the charity, the buyers can’t be sure whether they indeed donated the funds to charity or just bought a very expensive product. They can only believe the company itself. Blockchain technology eliminates the need for trust.\n\n\nIntroduction\nThis paper tends to explain and show how the need for trust can be eliminated when it comes to donations and setting up business models in general. Idea is to have a platform that will allow you to set up a use case in which you want to allow users to buy a product from you where a specific percentage of the purchase will go to a different wallet(s).\n\nX% of purchase transparently goes to verified charity wallet\na split transaction between different co-creators or marketplace and author\n\nWe can develop a fully transparent set of smart contracts and protocols on some general-purpose blockchain and introduce to sellers and customers a brand new way for selling goods and doing business in general.\nAdditionally, if there are too many different wallet recipients, the splitting can be done through merkle tree claim model.\n\n\nGoals & Methodology\n\nGoals\n\nHow to make charity donations and spending transparent\nEliminate the need for trusting the brand, and provide customers a way to easily verify their spendings\nSplit input transaction to several different wallets by desired percentage\n\n\n\nMethodology\n\nWrite a set of smart contracts in Solidity for this purpose.\n\nPros:\n\nPortable to any EVM general purpose blockchain\nNative support for cryptocurrencies\nPossibility for including ERC-20 tokens, as well\nTooling (Hardhat, OpenZeppelin, etc.)\n\nCons:\n\nLack of native percentage operator in Solidity, one need to decide up to which decimal the result is reliable\nTransaction costs\n\n\nIntegrate it with Bizzswap\n\nPros:\n\nOut of the box solution for paying/swapping coins and tokens\n\nCons:\n\nThird-party dependency\n\n\nTesting\n\nUnit tests\nIntegration tests\nEnd to end tests\nStatic analasys\nCode coverage\nGas usage\nFuzz testing (optional)\nFormal verification (optional)\nAudit\nDeployment to testnet\n\n\nThe beauty of the end result is that anyone can port a frontend app to this decentralized protocol and incorporate it in their business models, already existing platforms, etc.\n\n\n\nResults & Discussion\nTransaction can be split among several parties in Solidity like this:\n\nStep 1)\nSmart contract should have the ability to receive native coin or any other token. There is a need for a receive() or fallback() function, depends on the implementation of the smart contract.\nreceive() is called if msg.data is empty, otherwise fallback() is called.\n    /**\n    Which function is called, fallback() or receive()?\n\n           send Ether\n               |\n         msg.data is empty?\n              / \\\n            yes  no\n            /     \\\nreceive() exists?  fallback()\n         /   \\\n        yes   no\n        /      \\\n    receive()   fallback()\n    */\n\n    // Function to receive Ether. msg.data must be empty\n    receive() external payable {}\n\n    // Fallback function is called when msg.data is not empty\n    fallback() external payable {}\n\n\nStep 2)\nSmart contract then needs to split the received amount among other wallets by defined percentage. Sending funds is trivial and we won’t focus on that. The most challenging part is proper ratio calculations in a language with no native support for decimal arithmetics.\nIn Solidity, one must assume that all numbers have 18 decimal precision. For example:\n\n1 is 1000000000000000000,\n0.5 is 500000000000000000, and\n100 is 100000000000000000000\n\nSince there are no native language support for percentage arithmetics in Solidity, devs are using Basis Points as a unit of measurement equal to 1/100th of 1 percent. This metric is commonly used for loans and bonds to signify percentage changes or yield spreads in financial instruments, especially when the difference in material interest rates is less than one percent.\n\n0.01% = 1 BPS\n0.05% = 5 BPS\n0.1% = 10 BPS\n0.5% = 50 BPS\n1% = 100 BPS\n10% = 1 000 BPS\n100% = 10 000 BPS\n\nPossible implementation:\n    function calculateFee(uint256 _amount) public pure returns(uint256) {\n        // for example 1.85% is fee\n\n        return _amount * 185 / 10000;\n    }\n\n\n\nConclusion\nThere are no blockers for implementing this idea in Solidity. The tooling is stable, the math is not complex and can be handled by the language, and the blockchain technology itself is capable for storing this type of applications."
  },
  {
    "objectID": "documents/research/posts/ERFC-90.gfm.html#collecting-and-parsing-of-data",
    "href": "documents/research/posts/ERFC-90.gfm.html#collecting-and-parsing-of-data",
    "title": "Detect NFT Wash Trading",
    "section": "Collecting and Parsing of Data",
    "text": "Collecting and Parsing of Data\nThis research takes into account only trades of NFTs that follow the ERC721 standard. The same principles can be applied to the trades involving the ERC1155 standard, with the only difference being the collection and parsing of trades.\nWhen an NFT trade is executed, the ERC721 compliant contracts emit a Transfer event that contains three fields: previous owner, new owner, and the token id. Using the combination of Etherscan and Alchemy APIs, it is possible to get all the events that were emitted by the transaction and to extract the needed event based on its topic along with all of its fields.\nNot every Transfer event corresponds to a trade, so there needs to be an extra processing step that will eliminate all transfers that were not made through a marketplace. To do this, one needs to go through all of the marketplace’s contract’s transactions and select only those that have the right methodID.\nAfter the seller’s (previous owner’s) and buyer’s (new owner’s) addresses are known, the last step is collecting and parsing of all of their transactions searching for Ether transfers and all the addresses they have interacted with - in this paper referred to as “associates”."
  },
  {
    "objectID": "documents/research/posts/ERFC-90.gfm.html#wash-trading-detectors",
    "href": "documents/research/posts/ERFC-90.gfm.html#wash-trading-detectors",
    "title": "Detect NFT Wash Trading",
    "section": "Wash Trading Detectors",
    "text": "Wash Trading Detectors\nHaving a set of all of the buyer’s and seller’s associates enables the creation of Wash Trading Detectors (WTD). This paper proposes and implements two basic algorithms:\n\nWTD0 that detects a direct transfer by checking if the seller’s address belongs to the set of buyer’s associates\nWTD1* that detects a set of common associates that are Externally Owned Accounts (EOAs)\n\n*WTD1 is incomplete because the detected common associate can be a Centralized Exchange’s (CEX) address which would give a false positive. The only way to make the WTD1 fully functional is to manually keep a list of all the addresses that should be ignored."
  },
  {
    "objectID": "documents/research/posts/ERFC-90.gfm.html#implementation",
    "href": "documents/research/posts/ERFC-90.gfm.html#implementation",
    "title": "Detect NFT Wash Trading",
    "section": "Implementation",
    "text": "Implementation\nUsing the proposed ways of getting the data and reasoning on it, it is possible to extract suspicious wash trading patterns, flag those trades, and perform an analysis of the results. The code shown bellow is capable of getting the count of detected wash trades performed through a marketplace in a given block range :\nimport utils\n\ndef run(contract, methodIds, start_block, end_block):\n    '''Detects potential Wash trades for a marketplace's contract'''\n\n    transactions = utils.get_all_transactions(\n        contract,\n        start_block,\n        end_block\n    )\n\n    wtd0_count, wtd1_count, total = 0, 0, 0\n\n    for  tx in transactions:\n\n        if tx['input'][:10] in methodIds:\n\n            status, logs = utils.get_logs(tx['hash'])\n\n            if status != 1: # Reverted transaction\n                continue\n\n            nft_contract, token_id, A, B = utils.parse_logs(logs)\n\n            if A == None or B == None: # not a standard ERC721\n                continue\n\n            associates_A = utils.get_associates(A)\n            associates_B = utils.get_associates(B)\n\n            wtd0_count += int(\n                utils.wtd0(A, B, associates_A, associates_B)\n            )\n            wtd1_count += int(\n                len(utils.wtd1(A, B, associates_A, associates_B)) > 0\n            )\n\n            total += 1\n\n    return (wtd0_count, wtd1_count, total)\nThe run function consists of getting all transaction data for a marketplace’s contract starting from the start_block up to the end_block and considering only those that are in the provided list of methodIds. These transactions are then parsed, and values are extracted that will be passed to the utils.wtd0 and utils.wtd1 functions which will perform detection.\nFor the full implementation of all of the used helper methods from utils module see Appendix A.\n\nExample\nFor example, let us take the OpenSea’s Wyvern V1 contract and pass three different block ranges. The ['0xab834bab'] argument corresponds to the methodID of the contract’s method that gets called when there is a trade.\nWYVERN_V1 = '0x7Be8076f4EA4A4AD08075C2508e481d6C946D12b'\n\nranges = [\n    [6652089, 6652239],\n    [7486211, 7486311],\n    [7704798, 7704898],\n]\n\nfor start_block, end_block in ranges:\n\n    print(run(WYVERN_V1, ['0xab834bab'], start_block, end_block))\nFrom the total of 23 trades that were made during the provided ranges :\n\nWTD0 flags 8 trades\nWTD1 flags 11** trades\n\n**WTD1 returns a list of associate addresses; these lists were manually checked through Etherscan to see if they belong to a CEX. The list of ignored addresses is available in Appendix B.\n\n\nImplications\nThe sample size of 23 is too small to discuss how the reported numbers relate to all of the NFT trades since the marketplace’s contract deployment. The code itself can, however, serve as a starting point for the development of a service capable of extracting the data from all of the NFT marketplaces since their creation. In that data lies the key to answering not only what trades are a wash trade but also who performed them, how many times was an address linked to a wash trade, whether one NFT has been wash traded multiple times, etc. Such a service would need to effectively manage its resources such as the collection of data and the computation needed in the detection - in the example above, set of associates is always computed from scratch (there is no storing of the result and checking if those values have already been computed). The full specification for the development of this service is out of the scope of this paper and should be a topic of a separate research.\n\nComplex Patterns\nDue to current non-negligible transaction fees on Ethereum and the fact that not many people are deeply looking into each trade, it is unlikely that there are complex patterns present in NFT wash trading. As the fees get lower and as the adoption grows, it’s almost certain that they will emerge. On the Figure 3 is shown one pattern that could be used in the process of wash trading.\n\n\n\n\ncomplex-pattern\n\n\nFigure 3 - Complex pattern\n\nThere are two NFT wash trades present (marked by the black and blue colored arrows). The sequence of transfers is the following:\n\nA finances B and C through 3 and 2 intermediaries, respectively\nB finances D through 3 intermediaries\nD buys an NFT from some non-associated address\nD sells the NFT to C\nD sends the funds to B through the same 3 intermediaries that were used before\nB finances E through 2 intermediaries\nE buys the NFT from C\n\nAfter the last step, E can sell the NFT to an unsuspecting victim. It is important to note that addresses used do not have to be discarded after each wash trade - i.e. B can be used just for routing of the funds. Furthermore, a malevolent entity can inflate the prices of not just a single NFT but for a complete collection, making it look like the collection is very popular, which attracts victims."
  },
  {
    "objectID": "documents/research/posts/ERFC-90.gfm.html#appendix-a",
    "href": "documents/research/posts/ERFC-90.gfm.html#appendix-a",
    "title": "Detect NFT Wash Trading",
    "section": "Appendix A",
    "text": "Appendix A\nImplementation of the utils module.\nimport time, json, requests\nfrom web3 import Web3\n\nconfig = {\n    \"alchemy-url\" : \"\",\n    \"etherscan-api-key\": \"\",\n}\n\nweb3 = Web3(Web3.HTTPProvider(config['alchemy-url']))\n\ndef get_all_transactions(address, start_block = 0, end_block = 19999999):\n    '''Gets all transactions using Etherscan API for the provided address'''\n    transactions = []\n\n    while True:\n        time.sleep(5)\n        result = requests.get(\n            'https://api.etherscan.io/api?module=account&action=txlist' +\n            f'&address={address}' +\n            f'&startblock={start_block}' +\n            f'&endblock={end_block}' +\n            f'&offset={1_000}' +\n            f'&sort={\"asc\"}' +\n            f'apikey={config[\"etherscan-api-key\"]}'\n        ).json()['result']\n\n        transactions += result\n\n        if len(result) < 1_000:\n            break\n\n        start_block = int(result[-1][\"blockNumber\"]) + 1\n\n\n    return transactions\n\ndef is_EOA(address):\n    '''Returns true if the address belongs to an Externally Owned Account'''\n\n    try:\n        _address = Web3.toChecksumAddress(address)\n        return web3.eth.getCode(_address) == b\"\"\n    except:\n        return False\n\ndef get_associates(address):\n    '''Returns a set of all account with which the provided addresses interacted with'''\n\n    transactions = get_all_transactions(address)\n\n    associates = set()\n    for tx in transactions:\n        if tx['from'] != address:\n            associates.update([tx['from']])\n        if tx['to'] != address:\n            associates.update([tx['to']])\n\n    return associates\n\ndef get_logs(tx_hash):\n    '''Gets the logs from the transaction receipt of the tx_hash'''\n\n    tx_receipt = web3.eth.get_transaction_receipt(tx_hash)\n\n    return tx_receipt['status'], tx_receipt['logs']\n\ndef parse_logs(logs):\n    '''Returns the NFT contract's address, token id and addresses involved in the trade'''\n\n    TRANSFER_TOPIC = \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n    WRAPPED_ETH = \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n\n    nft_contracts, token_ids, _from, _to = [], [], None, None\n\n    for ev in logs:\n\n        if TRANSFER_TOPIC == ev[\"topics\"][0].hex() and ev[\"address\"] != WRAPPED_ETH:\n\n            nft_contracts.append(ev[\"address\"])\n\n            bytecode = \"\".join([x.hex() for x in ev[\"topics\"]]) + \"\".join(ev[\"data\"])\n            _from = \"0x\" + bytecode[66 : 66 * 2][-40:]\n            _to = \"0x\" + bytecode[66 * 2 : 66 * 3][-40:]\n            token_ids.append(int(bytecode[66 * 3 : 66 * 4][2:66], base=16))\n\n    return nft_contracts, token_ids, _from, _to\n\n\ndef wtd0(A, B, associates_A, associates_B):\n    '''WTD0 implementation'''\n\n    return (A in associates_B) or (B in associates_A)\n\ndef wtd1(A, B, associates_A, associates_B):\n    '''WTD1 implementation'''\n\n    EOA_associates = []\n\n    common_associates = associates_A.intersection(associates_B)\n    for ca in common_associates:\n        if is_EOA(ca):\n            EOA_associates.append(ca)\n\n    return EOA_associates"
  },
  {
    "objectID": "documents/research/posts/ERFC-90.gfm.html#appendix-b",
    "href": "documents/research/posts/ERFC-90.gfm.html#appendix-b",
    "title": "Detect NFT Wash Trading",
    "section": "Appendix B",
    "text": "Appendix B\nFollowing is the list of all the addresses that were ignored by WTD1 due to the fact that they belong to CEXs\n\n\n\n\nAddress\nCEX\n\n\n\n\n0x564286362092d8e7936f0549571a803b203aaced\nBinance3\n\n\n0x59a5208b32e627891c389ebafc644145224006e8\nHitBTC2\n\n\n0x56eddb7aa87536c09ccc2793473599fd21a8b17f\nBinance17\n\n\n0xeb2629a2734e272bcc07bda959863f316f4bd4cf\nCoinbase6\n\n\n0xd551234ae421e3bcba99a0da6d736074f22192ff\nBinance2\n\n\n0xb5d85cbf7cb3ee0d56b3bb207d5fc4b82f43f511\nCoinbase5\n\n\n0x0681d8db095565fe8a346fa0277bffde9c0edbbf\nBinance4\n\n\n0x3f5ce5fbfe3e9af3971dd833d26ba9b5c936f0be\nBinance"
  },
  {
    "objectID": "documents/research/posts/ERFC-103.gfm.html#potential-markets",
    "href": "documents/research/posts/ERFC-103.gfm.html#potential-markets",
    "title": "ROTOKEN",
    "section": "Potential markets",
    "text": "Potential markets\nPotential markets that might be interested to use ROTOKEN include: - DAOs - Companies with frequent audits by the investors, board members or shareholders, mostly startups - Banks - Government organisations related with public government funds"
  },
  {
    "objectID": "documents/research/posts/ERFC-101.gfm.html",
    "href": "documents/research/posts/ERFC-101.gfm.html",
    "title": "NFT that is bound by time",
    "section": "",
    "text": "Executive Summary\nNFTs have a unique ID and belong to a single wallet. Two standards define what an NFT is and should do: ERC721 and ERC1155, aiming to distinguish each token to be unique. The development of NFT is still in the early stage, and this research shows how NFTs can change their properties. We go through some existing solutions where some events fundamentally affect the NFT, changing its state, properties, or value. We give an overview of those solutions with a desire to cover how they work under the hood and notice potential problems. In the end, are presented possible use cases that open a new door into the NFT word.\n\n\nIntroduction\nNFTs (Non-Fungible Tokens) reached incredible popularity in 2021 Ryan Browne1. Most of created NFTs are static. We collect it, and we hope its market value will increase. In the case of static NFT, it’s characteristic that its properties and data are immutable and recorded on the blockchain, so such NFTs can’t be changed. Otherwise, there are dynamic NFT for which it’s characteristic that properties and data are mutable, often through oracles that trigger events off-chain system or by interaction with on-chain components, for example, smart contracts other NFTs.\n\n“Dynamic NFTs are the logical next step for the NFT space, allowing unique items to evolve, and sometimes decay. This replicates the ephemeral nature of the real world and potentially gives exceptional value to a collected item because of its current state. NFTs transitioning from being ‘only’ static to being dynamic can be thought of as progressing from 2D to 3D, it enables an immense possibility of use cases.” — Adrien Berthou, Head of Crypto-Native Comms at DoinGud\n\n\n\nGoals & Methodology\nThe goals of this research:\n\nIntroduce with dynamic NFT\nSearch for project that make evolvable NFTs\nResearch how they work, find some leak\nSuggest improvements\n\nMethodology for accomplishing those goals:\n\nGetting under the hood of open source solutions\nTesting existing approach\nSolidity\n\n\n\nResults & Discussion\nFirst of all, let’s briefly review some existing projects:\n\nEtherCards\n\nEtherCards is a dynamic NFT platform that allows anyone to give a base set of traits and requirements and launch their NFT collection so that the EtherCards team can create unique NFTs. Traits can be discounts, special access rights, connections to real-world events, airdrops, upgrades, and other benefits. The ability to have traits allows the creator to maximize the value of their art. Ether Cards is an integrated ecosystem composed of two major parts. Those are the platform and the Ether Cards (an advanced membership NFT card). Anybody can use the EtherCards platform, but the owner of the EtherCards card has certain privileges. Under the hood, EtherCards integrate Chainlink VRF to provide verifiable randomness on-chain. Chainlink allows developers to read data from any external API and blockchain network and perform off-chain computation. That will enable NFTs to be connected to the external world to trigger real-world events, in a word, to be dynamic.\nEtherCards have supported and worked with LaMelo Ball, Mike Tyson, Steve Aoki and DirtyRobot. In the above collections, all NFTs metadata are stored https://client-metadata.ether.cards on the central server. Within that metadata is a link that points to NFTs image on IPFS. So, inside the smart contract, we store points to metadata JSON URIs to all variants of one NFT. Later, inside tokenURI function with the support of Chainlink return dynamically created URI of NFT, only one variant.\n\nLoopheads\n\nLoopheads is a Loopring ‘Loopring - zkRollup Layer2 for Trading and Payment’2 Moody Brains NFT collection, minted on Looprings Layer 2. There are 25 variants for one Loophead avatar(5 different backgrounds and 5 different brain sizes), which one will be displayed depending on the LRC token price using Uniswap Oracles.\nAll NFT metadata are stored on decentralized storage - IPFS, within that metadata, is a link that sends to NFT’s image on IPFS. So, inside the smart contract, we store points to metadata JSON URIs to all of the Loophead’s variations. When a Loophead NFT is accessed because Loopheads use ERC1155 standard, the Loophead NFT runs the uri function, the start point of dynamic calculation, to show the loophead avatar. The calculation is done with the support of Uniswwap V3 Oracles. That changes parts of the metadata link based on LRC price and returns only one variant.\n\nUniswap LP NFT\n\nOn Uniswap V3 liquidity provider(LP) position is represented as NFT. This NFT shows information about liquidity position. Based on the pool and your parameters selected on the liquidity providing interface. The unique NFT will be minted, representing your position in that specific pool. As the owner of this NFT, you can modify or save the position. The best part of this project is that NFT is SVG generated entirely on-chain. Because of that, it is secure as an image not rely on any other service that is not on the blockchain, and it affects the price of that NFT.\nAll liquidity parameters for NFT are stored on-chain. Interesting is that SVG generation is done inside a pure function, and it returns base64 encoded metadata from the view function.\nWhen a Uniswap V3 LP NFT is accessed because it uses the ERC721 standard, it runs the tokenURI function, which is the start point that generates SVG from liquidity parameters and returns base64 encoded metadata.\n\nAavegotchi\n\nAavegotchi is a crypto collectible game. It was developed to provide users with a new blockchain-based game powered by dynamic NFTs. Aavegotchi information such as Aavegotchi name, traits, and SVG files themselves are saved as contract calldata because it is less gas cost than store in contract storage. The fundamental element of Aavegotchi’s game is randomness. Because of that, they use Chainlink VRF. The main idea behind the game is that the more you love your Aavegotchi character, the more rewards it will give you.\nTo store SVG, we pass one or more SVG images as a string, along with the information of SVG category type(aavegotchi, collaterals, eyeShapes, wearables) and size of passed SVG images. So inside tokenURI we have all NFTs prepared to return only one determined based on real-life events.\n\n\nYou can quickly determine where your NFT is by calling the tokenURI or uri function on the contract, which returns a URI that points to metadata that shows where NFT lives. Above project for NFT storage use:\n\nCentralized server\nDecentralized storage (IPFS, Filecoin, Arweave)\nOn-chain storage\n\nThe problem with the central server is that the possibility for manipulation is vast. The server owner can change the JSON scheme of your NFT whenever he wants.\nThe problem with IPFS is that there is no defined way of data replication. It just happens depending on the relevance of the content. In addition, the IPFS node can become offline. The problem is that if the relevance of our data is minor, the bigger is chance to lose data. To resolve the issue, Filecoin and Arweave come into play. Filecoin is a solution where we pay some price to store data for a set time. The problem is that we are limited by time, so our data are not stored permanently. Arweave is a solution that incentivizes the nodes to hold data permanently by paying only one fee in the Arweave token and keeping data forever. The most significant leak here is that it all comes down to having one storage layer that is separate from the blockchain and from the NFT itself on which it is located.\nWhen it comes to on-chain storage, the SVG is scalable because it does not rely on pixels to display the image. SVG is used for vector graphics where we can describe shapes and lines mathematically. But, if we want to present a more complex image in this format, we get a massive SVG file, which will lead to a considerable gas cost. Additionally, the worth of mention is EIP-2569.\n\nEIP-2569 is an Ethereum improvement proposal to allow a smart contract to save and retrieve an SVG image. Based on that, the two methods contract must have: getTokenImageSvg(uint256) view returns (string memory) and setTokenImageSvg(uint256 tokenId, string memory imagesvg) internal. As we can see, the potential flaw of function setTokenImageSvg as input parameter accepts SVG image string, which can lead to a considerable gas cost in case of complex SVG.\n\nThere is no obstacle to the realization of any project that would require the evolution of NFT. Everything needed is that our contract overrides the tokenURI or uri function from ERC721 or ERC1155. Therefore, the precondition is that we have prepared all parameters variants for the dynamic generation of potential variants. The project specification itself decides which variants to return within it.\n  function tokenURI(uint256 tokenId) public view override(ERC721) returns (string memory) {\n    require(_exists(tokenId));\n    return generateDynamicNFT(tokenId);\n  }\n  function uri(uint256 tokenId) public view override(ERC1155) returns (string memory) {\n    require(_exists(tokenId));\n    return generateDynamicNFT(tokenId);\n  }\nInside generateDynamicNFT, the user defines how and under what conditions NFT to generate, usually using oracles.\n\n\nConclusion\nThis research has shown that it is possible to change the data and properties of NFTs, and the next evaluation in NFT is moving from static NFTs to dynamic NFTs. With dynamic NTFs, some use cases could be:\n\nAn NFT ticket that could retain a value after the event is finished can turn as a discount for a related event or, as some bonus, gifts.\nSports NFT cards can evolve, such as updating their player’s stats or having a limited edition of sports event cards if the player got a super score in a match.\nSport NFT cards that receive bonuses or losses based on wins/losses.\nArtist NFT cards that change on a daily/monthly based.\nNFTs affected by social media/real-life events.\nNFTs that affect the real world, where a user can receive a physical item in exchange for NFT.\nKata NFTs were on the users’ progress the Kata NFT will change.\nGeometric shape that change as price change\n\nThe only related problem is about on-chain storage assets. Most NFTs do not store their assets directly on the blockchain because the cost of keeping them on-chain is expensive, as every action and every byte of information we hold on the blockchain has a fee. In addition, the Ethereum blockchain is designed to keep a record of transactions and not to serve as a data warehouse. Second, on-chain geometrical arts can quickly present, but for the more complex SVG files, it is possible to use the bottom-top approach. The idea is to have one zero-based image as a base and then add traits dynamically to the base image. Where will store only characteristics on-chain, and the NFT image is created dynamically. On-chain storage reduces external dependence, increasing reliability, durability, ownership, and decentralization. Keeping assets on-chain has excellent value. Users can rely on the same guarantees of immutability they use to secure property ownership, and the value of such art is more significant. When the asset is being followed on the Ethereum, we also want that asset to be placed on the Ethereum somehow.\n\n\nBibliography\n\n\n\n\n\nReferences\n\nBrowne, Ryan, ‘Trading in NFTs Spiked 21,000% to More Than $17 Billion in 2021, Report Says’, CNBC, 2022 <https://www.cnbc.com/2022/03/10/trading-in-nfts-spiked-21000percent-to-top-17-billion-in-2021-report.html> [accessed 24 March 2022]\n\n\n‘Loopring - zkRollup Layer2 for Trading and Payment’, Loopring <https://loopring.org/#/> [accessed 24 March 2022]\n\nFootnotes\n\n\n‘Trading in NFTs Spiked 21,000% to More Than $17 Billion in 2021, Report Says’, CNBC, 2022 <<https://www.cnbc.com/2022/03/10/trading-in-nfts-spiked-21000percent-to-top-17-billion-in-2021-report.html>> [accessed 24 March 2022].↩︎\nLoopring <<https://loopring.org/#/>> [accessed 24 March 2022].↩︎"
  },
  {
    "objectID": "documents/research/posts/ERFC-91.gfm.html#what-is-insurance",
    "href": "documents/research/posts/ERFC-91.gfm.html#what-is-insurance",
    "title": "Crypto Insurance - Current state, problems and possibilities of creating new products",
    "section": "What is Insurance?",
    "text": "What is Insurance?\nInsurance has a long history, there are claims that it was created around 2000 BC in Babylon, merchant receiving a loan paid the lender extra money in exchange for exemption of loan payment if the merchant’s shipment were stolen. Hovewer, the importance of insurance field cannot be presented without a mention of London’s Lloyd’s. In the 17th century, a London coffeehouse was a meeting place for people seeking marine cargo protection and people willing to take those risks in exchange for premium. The coffeeshop now is the world famous Lloyds. A sheet of cargo and ship information would be filled and the individuals who accepted that risk would sign with their names under it’s description.1 That brings us to a first term in insurance underwriting.\n\nUnderwriting is risk accessment process to determine whether to accept or reject the risk we will come into contact with this term a lot in the later paragraphs.\nAs we previously mentioned the point of insurance is to transfer and share risks.\nThe individuals or companies that would like to transfer risk to other parties by paying a certain fee (premium) are called insured. The reason why the insured avoid the risk is because the loss is too volatile to bear.\nThe party that accepts such risks and and associated fee (premium) is the insurer. Insurers are not averse to exposing themselves to the same risks as insured because of something called pooling and the law of large numbers. The essence of pooling risk is to spread losses of the few over the entire group. The law of large numbers states that the greater the number of exposures the more closely will the actual results approach to the expected average value"
  },
  {
    "objectID": "documents/research/posts/ERFC-91.gfm.html#benefits-of-insurance-and-the-nature-of-insurance",
    "href": "documents/research/posts/ERFC-91.gfm.html#benefits-of-insurance-and-the-nature-of-insurance",
    "title": "Crypto Insurance - Current state, problems and possibilities of creating new products",
    "section": "Benefits of Insurance and the nature of Insurance",
    "text": "Benefits of Insurance and the nature of Insurance\nInsurance allows the insureds to “trade” the risk of loss for the certainty of smaller payments. As a result this ensured the stable cash flow since there are no extreme losses, and if they happen, they are covered by the insurance. As a result of this “stability” provided by insurance there is less need for governments assistance which saves public resources.2\n\n\n\n\n\n\n\n\n\nApplication\nUnderwriting\nPolicy Issuance\nClaim if a loss occurs\n\n\n\n\n\nFigure 1: The process of issuing insurance\n\nThe application for insurance often starts with quoting process where the amount to be paid in premiums are estimated according to the risk the client would like to manage. After the application the underwriting process occurs.\nUnderwriter evaluates the information of the application and then accepts and then “fine-tunes” the policy using the rating tables from the actuaries. Actuaries calculate premiums, in DeFi, this is done in a different way, more words on that in the later paragraphs.\nAfter the underwriter accepts the application the policy is issued.\nIf a loss occures the claims department examines the claim and asks the insured for the proof of loss before they pay the insured amount. The payment depends on the amount of damage suffered and the decision of the claim department.\n\nThe big part of insurance also is its regulation. Insurance is one of the most actively regulated fields, especially after the financial crisis in 2008. The regulation aims to ensure solvency of the insurers. One of the ways the state regulates Insurance companies is limiting their investment tacticts and portfolio allocation , in other words they don’t let them invest in risky assets which is de-facto the norm in cryptocurrency investments. This is one of the first issues encountered if we were to cooporate with existing insurance companies or create our own protocol that is regulated.3"
  },
  {
    "objectID": "documents/research/posts/ERFC-91.gfm.html#the-current-state-of-defi-insurance-and-insurance-with-cryptocurrency-and-insurance-processes",
    "href": "documents/research/posts/ERFC-91.gfm.html#the-current-state-of-defi-insurance-and-insurance-with-cryptocurrency-and-insurance-processes",
    "title": "Crypto Insurance - Current state, problems and possibilities of creating new products",
    "section": "The current state of DeFi Insurance and Insurance with cryptocurrency and insurance processes",
    "text": "The current state of DeFi Insurance and Insurance with cryptocurrency and insurance processes\nWhen it comes to crypto-insurance with traditional insurers the market is non-existent, because of the regulation, lack of awareness and the lack of crypto adoption among general public. That’s why we will be covering DeFi insurance field.\nDeFi Insurance refers to buying coverage against losses cause by events in Decentralized Finance. With various hacks and exploits over the years the need for insuring users from the results of these events emerged. Contrary to the layman’s belief DeFi Insurance field is big and growing with different protocols emerging in it. However only 2% of all DeFi value is insured at the moment.4\nMain protections offered is capital protection against protocol hack/exploit risk, smart contract failures or stablecoin crashes. The premium user pays for a cover depends on the type of the cover, insurance provider and the duration of the cover.\nThe Decentralized part in this type of Insurance is that anybody can act as a coverage provider, which supports the initial writers assumption. They become providers by locking up capital in a capital pool of the insurance protocol thus providing needed liquidity. As coverage providers they choose for which protocols or events they want to provide coverage, for example: If they are certain that a protocol is safe from exploits they will prefer providing liquidity to the pool that covers that event.\nAnother big part of DeFi Insurance is verifying claims. This is often done by the Insurance protocol’s community. Considering the nature of insurance and pooling of risk and collecting coverage from providers they are often assembled as DAOs (Decentralized Autonomous Organizations). This means that governance token holders participate in verifying claims. There are several ways of doing that and we will be covering it in the next paragraph.\n\nMain players in this market\nThe 5 main competitors in DeFi insurance are:\n\nNexus Mutual\nBridge Mutual\nInsurAce\nNsure\nEtherisc\n\nNote: There are more insurance protocols but in order to keep this research a short overview we will showcase five\nWe will be covering them in detail to explore how they work and the type of products offered.\n\n\nNexus mutual\nNexus mutual is an Ethereum-based platform that offers insurance products led by community management and financials. Nexus mutual is set up as a DAO. Nexus offers three kinds of products:\n\nProtection against failures in any protocol used by users yield bearing token (Ethereum only)\nProtection against failures in the individual protocol user has funds in, on any chain, but not in other protocols it uses.\nProtection against hacks and halted withdrawals on exchanges or custodial wallets5\n\nSimply put, Nexus cover protects against loss of funds, not loss of value, except in the Yield Token Cover. In the Yield Token Cover Nexus may pay a claim if:\n\nDuring the cover period the face value of the covered token and the market value of the covered token differ in price by more than 10% for a continuous period of four hours or more; and\nThe Covered Member contributes to the mutual, one unit of face value of the covered token in exchange for 0.90 units of cover amount they wish to claim; and\nThe Covered Member redeems their claim payment during the cover period or within 14 days of the cover period ending.\n\nNexus does not provide Cover where the covered tokens and the cover amount are not denominated in the same refference currency. Nexus also doesn’t provide cover for any material goods loss.\nClaim assessing process:\n\nAll Covered members for a particular covered token will be assessed together for each claim event; and\nThe face value of the covered token immediately prior to the claim event shall be set as part of the claims assessment process; and\nFollowing a successful claim vote all Covered Members will be able to contribute their covered tokens and redeem their claim payment on a proportional basis up to the cover amount.6\n\nWe will not cover the other 2 products into great detail, as they are pretty straight forward. More info on them can be found here: https://nexusmutual.gitbook.io/docs/welcome/faq/cover-products\nAll protocols and custodial accounts can be covered by the platform provided that risk assesesors staked enough value against them. Risk Assessors (experienced auditors, capital providers) can stake value in the form of NXM token, thereby vouching for the security of the protocol/custodian and dropping the price of the cover. NXM can be unstaked at any time subject to a 30-day withdrawal period. When cover is subsequently sold on a protocol or custodian, Risk Assessors earn proportional rewards in NXM equivalent to 50% of the cover premium. If a claim is accepted and a payout occurs, Risk Assessors staked against the protocol/custodian will have their staked NXM burnt on a proportional basis to facilitate the payout of the cover amount. This may result in a Risk Assessor having some or all of their NXM staked against the protocol/custodian burnt to provide capital for the payout of the claim.\nCover becomes available through one of two ways:\n\nWhen Risk Assessors stake NXM against a protocol, custodian or cover product more cover is made available. The mutual places limits on the amount of cover to protect the mutual from being too exposed to any single risk. There are two limits a Specific Risk Limit and a Global Capacity Limit.\n\nSpecific Risk limit means capacity on any particular risk is limited by the amount of staking on that risk. If there is no staking the mutual cannot offer any cover. Specific Risk limit is equal to : capacity factor x net_staked_NXM .\nGlobal Capacity Limit is based on the financial resources of the Mutual and is there to ensure the mutual is not overly exposed to any particular risk, regardless of how much is staked. Global Capacity Limit = Minimum Capital Requirement In ETH (MCReth) x 20%\n\nAs cover policies expire cover becomes available. User can check Nexus Tracker for info on cover expiry.7\n\nMembership issue regarding privacy\nMembership in Nexus requires a one-off membership fee of 0.0020 ETH (~$5.50). However, to become a member users need to verify their identity following their Know Your Customer process. They also cannot accept members from 17 countries, Serbia included, thus limiting the usage of the mutual.\nTransparency\nAll deployed contracts of Nexus Mutual can be found here: https://api.nexusmutual.io/version-data/\nAll info regarding cover, staking and claims approvals/denies can be found here: https://nexustracker.io/\nHow are Cover purchases taken care of by Nexus?\nUsers specify which smart contract address they want cover for. They specify the cover amount , currency (ETH or DAI) and Cover Period. Quote will be generated and they need to make the transaction with Metamask. Users can currently pay with ETH, DAI or NXM (nexus mutual tokens). Cover Holders can submit a claim for material loss that occured within the cover period. They can also submit a claim up to 35 days after expiry. A loss that ocurs after cover policy is ended won’t be covered\nHow are claims taken care of?\nClaims are filed by submission. Members must provide cryptographic evidence of the loss (proof of loss) and their claim is later assessed by Claim Assessors by voting. Assessors are financially incentivised to take a longer-term view as they are required to lockup a stake. This stake is then burned if there is evidence of fradulent voting, which is addressed by Advisory Board. Advisory board consists of five members of founding team of the Nexus Mutual and insurance industry experts. They are said to have :\n\nTechnical Expertise on Smart Contract Security and blockchain\nTechnical Expertise on Insurance and Mutuals\nGeneral Expertise\n\nAdvisory board is there to provide techniqual guidance to the members of the mutual as well as to exercize the emergency functions if they are required.\nThis proposes a question: How do they keep the Advisory Board “in check” with Nexus’s decentralization principles?\nNexus does that by enabling members to kick-vote the Advisory Board members that they think are working maliciously. Board member can be replaced by another member if the membership base agrees. These proposals cannot be interfered with by the existing Advisory Board.\n\n\nBridge Mutual\nBridge Mutual has a similar business model as Nexus Mutual (DAO model). They provide coverage for smart contracts, stablecoins and other services. Bridge allows users to purchase coverage, provide coverage in exchange for yield, vote on policy claims and their payouts. We will not go into great detail as there are various similarities with Nexus Mutual to avoid repeating ourselves.\nThe main difference between Bridge and Nexus Mutual is that that Bridge doesn’t check customer’s ID and is available for residents all countries\nAny user on the platform can create any pool for any project as because the system is permissionless by design.\n\nInitial capital (USDT) must be put into the Project Coverage Pool by the user that is creating the pool.\nThat project can create incentives for coverage providers to provide coverage to their pool by depositing any number of Token into its designated Shield Mining pool which gets distributed to Coverage Providers alongside the typical yield.\n\nCoverage Provider examines the risk of providing Coverage Capital to the Project’s Coverage Pool. When they provide capital they are de-facto telling users that they are sure in the security and stability of the project. They recieve yield from the users purchasing policies and the BMI(Bridge Mutual) token staking. When coverage providers supply capital to the coverage pool they receive a token (bmi(project name)Cover) representing their share in the capital within this capital pool. Coverage providers can then stake those tokens in the bmiCover Staking Contract pool to get additional BMI rewards. They also recieve a BMINFT Bond that represent the amount of for example DAI staked in Cover Staking Contract pool. These NFT Bonds are tradable on any NFT marketplace. The purpose of these NFT bonds is to give the user a way out of their position without removing DAI from the ecosystem. When the Coverage Provider sells his NFT he also transfers the ownership of the staked bmiDAIx.\nPolicy Holder pays a premium for Coverage to protect against the Coverage Event that could affect the insured Project and cause them to lose funds. The total cost of the Premium is split : 80% to coverage 20% to the Reinsurance Pool. They can buy cover for minimum of 1 week and maximum of 52 weeks. Three factors determine the price of cover (premium):\n\nThe utilization ratio of the pool (ratio between cover bought and cover provided, pools that have higher utilization ratio are riskier and more expensive)\nDuration of the cover\nAmount of cover which user wants to buy\n\nThe Reinsurance pool consists of protocol owned funds that are used to provide liquidity to Coverage Pools. The reinsurance pool is funded through 20% of all premiums paid as mentioned above.\nThe Capital Pool aggregates USDT from the Coverage Pools and provides additional revenue to the protocol. Capital Pool sends USDT to yield generating platforms they deem to have low risk. We coulnd’t find exactly what those platforms are. This is a similarity with classic insurance companies which are limited in what way they invest their funds.\nProving a loss\nPolicy holders should submit any or all of the following:\n\nTransaction IDs proving that Policy Holder’s wallet deposited assets into the protocol and transaction IDs of the Coverable Event\nPosts from Protocol team, or an auditing team confirming that there was an exploit and providing additional information\nA description of the Coverable Event\nIf the address affected was not the same address that purchased coverage, any evidence that proves the Policy Holder is the bonafide owner of the address that suffered a Permanent Loss.\n\nThey also need to deposit 1% of the claim’s value in BMI to prevent spam claims. If the claim is valid, USDT is issued to the Claimant. If a claim is denied they can try again by depositing 1% again.\nA successful claim can only recieve up to the policy’s maximum coverable amount. If the DAO determines that the loss suffered was less then the maximum coverable amount, policy owners may recieve less funds. The DAO is incentivized to pay the claimant the exact amount that was lost.\nVoting process\nVotes for claim approval are anonymous and any user holding vBMI can vote. Voters can wote on multiple Claims before submitting them in a batch send. This is done to save time and gas. Only users that vote in the majority are rewarded with BMI for voting. Users that vote in the minority can lose “reputation” which decreases voting power. If there is a large diference in voting yes or no (80% to 20%) users that voted no will lose a portion of their stake.\n\nFigure 2. High Level Overview of Bridge Mutual’s Mechanism\n\n\nInsureAce.io\nInsurAce.io is a multi-chain mutual insurance protocol created in April 2021. It offers products that cover 100+ protocols, 3 CEX and 1 IDO platform. Currently they are depoloyed on Ethereum, Binance Smart Chain, Polygon and Avalanche. InsurAce hasn’t yet adopted the DAO governance mechanism, although they are working on it.\nCurrent state of Insurace.io (Capital pool size, Active cover amount, Capital Ratios etc ) can be found here: https://app.insurace.io/Data/Insurance\nThis protocols has 4 unique selling propositions :\n\n“0” Premium - Which means that the premiums are lower for their products. Their team designed portfolio-centric products to embrace risk diversification, developed models to optimize the cover cost. They did so by using advisors that are experts in the Insurance domain.\nEnriched Product Line - InsurAce.io also offers products that covers non-Ethereum DeFi protocols.\n\nTypes of protocols and smart contract systems covered:\n\nLending Protocols\nDecentralized Exchanges\nDerivative (e.g. Synthetix, Nexus Mutual)\nAsset (e.g. Badger, RenVM)\n\n\nSCR Mining - The participants earn $INSUR tokens by staking into the mining pool. The mutual capitals injected through staking will be managed with rigorous risk control models to adjust the Solvency Capital Requirement (SCR) dynamically and use the secured free capital for investment to control the mining speed accordingly.\nInsurAce tries to combat the low investment returns. Nexus mutual offers capital return to their providers from the premiums paid by users which is low compared to the yield on Compound and Aave. This problem makes users prefer putting their funds elsewhere, instead of the Insurance Protocol. Insurace combats this with offering users:\n\nOption to invest directly in the investment product depending on their risk aversion\nOption to stake in the mutual pool and get the investment carries and $INSUR tokens as rewards\nShares of the premium income\n\n\nInsurAce is operates similarly like the traditional insurance company using the insurance arm and the investment arm.\n“The insurance arm maintains reserve pools which maintain the solvency for claim coverage based on risk exposure. The investment arm maintains investment pools that generate carry to subsidize claims and attracts investors with risk appetite. The free capital in the insurance capital pool can be placed into the investment pool to gain a higher yield, while the insurance arm will protect the investment activities. Meanwhile, the investment arm’s yield will complement the premium on the insurance side and reduce the cover cost for customers.”8\nPricing model\nWhen it comes to before mentioned protocols they rely heavily on the value staked on individual protocols: the higher value staked the lower the premium will be priced. InsurAce tries to combat this with adopting the new actuary-based pricing model to mitigate this in order to assess the expected loss of insurance products fairly, reduce costs and enhance capability.\n“The model’s main inputs are the number/amount of claims and number/amount of exposures in a given time period, which will be used for selecting and training two separate models - the frequency model and the severity model. Frequency modeling produces a model that calibrates the probability of a given number of losses occurring during a specific period, while severity modeling produces the distribution of loss amounts and sets the level of deductible and limit of the coverage amount.” These models are then combined to solve aggregate loss. After that the decided aggregate loss is incorporated into the risk factors of protocols and the premiums are then calculated. The model’s parameters rely on historical data to devise and validate. They plan on taking this further with new Machine Learning methodologies.\nCapital model\nInsurAce’s capital model refers to EIOPA’s Solvency II, this regime is used for insurance and reinsurance in the European Union. It sets requirements needed for insurance products in order to protect policyholdes and beneficiaries.\n“Solvency II is an economic risk-based approach that should assess the”overall solvency” of insurance and reinsurance undertakings through quantitative and qualitative measures. Under Solvency II, the undertaking’s solvency requirements are determined based on their risk profiles and how such risks are managed, providing the right incentives for sound risk management practices and securing enhanced transparency.”\nSolvency II has different tiers of which the SCR (Solvency Capital Requirement) and MCR (Minimum Capital Requirement) are the two most important ones.\n“The SCR is the capital required to ensure that the insurance company will be able to meet its obligations over the next 12 months with a probability of at least 99.5%, while MCR represents the threshold to correspond to an 85% probability of adequacy over 12 months and is bound between 25% and 45% of the SCR. For supervisory purposes, the SCR and MCR can be regarded as”soft” and “hard” floors.”\nInsurAce uses SCR to calculate the minimum requirement funds set aside to pay all the potential claims considering all quantifiable risks. SCR is calculated with the following inputs:\n\nAll the active covers\nAll the outstanding claims\nThe potential incurred but not reported claims\nThe market currency shock risk\nThe non-life premium & reserve, lapse and catastrophe risks\nThe potential operational risk\n\nSCR% = Capital Pool Size / SCR\nA high ratio means the insurance company is financially strong with sufficient available funds to cover potential claims and other risks so the company is less likely to be insolvent . The lowest acceptable ratio is 100%.\nInsurAce also offers information of their Capital Efficiency ratio which shows the company’s current success in deploying capital.\nCER% = Active Cover Amount / Capital Pool Size\nA high ratio means the insurance company is increasing the productivity of its assets to generate income. Desired ratio is between 100% and 300%.\nRisk Assesment by InsurAce.io\nInsuraAce’s Advisory Board performs a preliminary risk assesment on the new protocols at first. InsurAce will also work with auditing firms if there is extra complexity or challenges. After that Advisory Board provides a report and rates the protocol 1 to 5. After they rate it protocol will go through the community risk assesment. Members who participate in the assesment get INSUR tokens as incentive.\nClaims Assesment by InsurAce.io\n\nFigure 3: InsureAce’s Claim Assesment process\nThis diagram shows us the whole system of claims Assesment in a clear way. The main difference is the inclusion of the Advisory board members which consists of various industry experts including the CTO of InsurAce.\n“$INSUR token holders can stake the $INSUR tokens to become the community Claim Assessor. Claim Assessor will be entitled to the right to vote in each claim assessment and earn $INSUR tokens as reward if their votes match with the voting result. During each voting session, the more tokens the user stake, the more voting tickets they will get (* capped at 5% of the total votes), and the more rewards they will receive.”\n\n\nNsure\nNsure was targeted to be a platform for users to trade risks borrowing the operation model of previously mentioned Lloyds London. With Nsure information is transparent and users are allowed not only to be outsorcing risk but also to become risk takers, capital providers, governance actors and auditors of the system.\nMore data on Nsure performance can be found here: https://app.nsure.network/#/cover/my\nProduct\nNsure offers Smart contract cover like previously mentioned protocols. The coverage and exclusions are identical so we will not go into great detail. More info can be found at: https://docs.nsure.network/nsure-network/docs/nsure-smart-contract-protect-policy-wording\nCapital model\nCapital is sourced from capital mining, with return of Nsure tokens for the miners to ensure a continuous capital support to the underwriting. Minimum Capital Requirement (MCR) is calculated based on the volume of each project and the correlation between them. A low MCR% below a pre-determined threshold will result into a lock of assets in capital pool, so as to protect the solvency the business.\nPricing model\nNsure uses a Dynamic Pricing Model to set the price. In this model capital supply and demand from the entire platform determines the price jointly similar to the pricing mechanism in the free market, by having Nsure tokens backing the policies bought. The price is self-adjustable to the movement of supply and demand, subject to the model, moderately stabilising the price change.\nRating System\nNsure uses its N-SCOSS rating system to quantify the code security of projects by assessing:\n\nHistory and Team\nExposure\nAudit\nCode quality\nDeveloper community\n\nClaim process\n\nFigure 4: Nsure claim process\nFor each policy sold there is one chance of claim filling for free. If the first claim was rejected a claim assesment fee of 10% is requested before new assesment.\nPolicy holder must provide evidence of loss on the designated project within the insurance period. Proof of loss must include:\n\nProof of ownership of affected account - After identifying his affected account, policyholder may prove his ownership over the account by signature or making a 0 amount payment to a specified address.\nEvidence of loss - Policy holder should provide:\n\nthe snapshot of the affected address’s balance at blocks before and after attack (to assist claim assessors quickly quantify the amount of lost\ntransaction of selling the damaged assets (loss is only recognised when it is realised)\ndescription of the attack from project team or security specialist\n\n\nClaim assesment\nNsure introduced a similar voting mechanism as previously mentioned protocols. Its features are:\n\nTo be registered as a claim assessor candidate, user must deposit a considerable amount of Nsure token. At launch, the deposit is set at () Nsure token.\nClaim assessors are randomly picked from registered candidate. For each claim, there will be 5 claim assessors.\nAs claim assessors’ reward is proportion to premium, users tend to register for larger size policy. To get each policy equal and fair tender, users do not know the premium of the policy at registration.\nThe token will be slashed if the claim assessor’s judgment is different from the majority.\n\nAfter claims assessors make a decision, policyholder and other Nsure token holders can challenge this decision. This will lead to a public vote for the final conclusion on the issue.\n\n\nEtherisc\nSo far we have been covering only protocols that offer smart contracts protection. Etherisc tries to include material goods into the story. Etherisc is a protocol to collectively build insurance products. Common infrastructure, product templates and insurance license-as-a-service make a platform that allows anyone to create their own insurance products. The first product Etherisc offered was FlightDelay Insurance. Products currently licensed are: Crop Insurance and FlightDelay Insurance. Products currently in design: Hurricane Protection, Crypto Wallet Insurance, Collateral Protection for Crypto backed Loans, Social Insurance (death, heavy illness). They are also open for product requests. Users have the option to build their own insurance product, but more information about the user needs to be provided.9\nThey also launched a Joint Grant Program with Chainlink to accelerate the adoption of data-driven decentralized insurance products, so we think that special attention should be paid towards potential building with Etherisc.10\nEtherisc Token\nDIP Tokens act as the native internal currency that is inseparable from the protocol and network of its users. DIP tokens are needed to earn transaction fees (% of insurance premiums or fixed cost), incentivize and reward platform users to bring risk to the network, build and maintain risk transfer products. The total supply of Etherisc Tokens is 1 Billion.\nDIP tokens give users access to the Decentralized Insurance Platform. By staking DIP token, participants provide collateral (bond) to guarantee future performance, availability, and service levels. Staking also signals quality and reputation. As a result, participants can earn money monetizing their skills, software (for example risk models or UI/UX), risk capital, insurance licenses, claim processing, or regulatory compliance/reporting services.\nFlightDelay Insurance example from the Whitepaper - Launched on January 20 2022\nIn their whitepaper’s FlightDelay Insurance product they use oraclize to obtain data from their data provider. Oraclize charges Etherisc for calling their contract. Etherisc incentivize Oraclize to provide their service correctly by :\n\nIn the buyers market (market with many oracles) - Demanding of Oraclize to put some tokens in a staking contract which will then returns tokens if they deliver in time and forward the tokens to Etherisc in case they miss their obligations.\nIn the sellers market (market with only one or few oracles) - Oraclize will earn an additional profit, again by staking tokens in a “staking contract”, but with reversed roles: Etherisc will stake tokens, and Oraclize will earn these tokens if they deliver, and in case they don’t deliver, the tokens are returned to Etherisc.\nBoth options can be combined with both parties staking tokens from historical flight delay\n\nTheir experience with the Flight Delay DApp confirmed that insurance applications need plenty of capital to be able to scale. But that entry barrier can be overcome with cryptographic tokens that enable highly customized economics. Their goal is to allow the tokenization of risks on the platform and to make them available on a global open-access marketplace.\nIn this kind of insurance the probability is calculated from historical flight data. They used flight delay initially as a POC because of low premiums assosciated with them and under normal circumstances flight dellays are well-aproximated by independent probability events. Etherisk leverages ChainLink data.\nOn January 20th 2022 Etherisc launched FlightDelay on Gnosis Chain Mainnet. It uses Chainlink Data Feeds to autonomously issue policies and execute payouts for travelers who experience flight delays or cancellations. The result of this is insurance policies that are quicker to settle, cheaper to provision thanks to decreases in human and technical overhead and more transparent given the blockchain backend.\nFlightDelay is now available for passenger flights globally. The insurance policies are purchasable with USDC using the Gnosis Chain on Etherisc’s FlightDelay portal. More payment options are in the works.\nParticipants in the Etherisc Protocol\nParticipants in the protocol are:\n\nCustomers - Customers can buy insurance using the token. For convenience, third parties can offer payment gateways and integrations which remove the necessity to own cryptocurrency from the end customer. Furthermore, participants can choose to offer insurance products in any native currency - be it a cryptocurrency, a token or a fiat currency. Use of token: Universal currency to buy insurance products.\nRisk model Providers and Actuaries - “Risk models are fundamental for any insurance product. The correctness of the model is precondition for the economic success of the product.Generally, because of the magnitude of value affected by errors and deviations in the model, a Risk Model Provider won’t take responsibility for the economic outcome of his model, but rather for his adherence to principles and established guidelines in his trade.” Use of token: Staking/Reward for providing or updating risk models\nData providers and oracles - Currently, data is collected together with the application for an insurance, and the insurance company “owns” the data - even after the insurance contract is no longer valid. In a blockchain decentralized environment, the collection of data could be separated. Customers could get paid for voluntarily offering their data to a data pool, which in turn can sell this to interested parties, leaving the ownership of the data completely with the customer. This is an interesting take on handling events in the real world and the real world application of crypto insurance. Use of token: Reward for giving data. Reward for giving access to data pools. Staking / Reward for providing reliable oracles.\nSales Agents - Sales agents are responsible for offering insurance products like in the traditional insurance. Use of token: Reward for distribution of products.\nClaim Agents - There are still many cases where automatic detection and processing the claims is not possible. Specialized and sometimes independent claims agents already exist that can be somewhat utilized e.g. in the area of car insurance, where they help insurers to process claims in shorter time. These claims agents can immediately use a decentralized platform, as soon as adequate products are available. Use of token: Reward for the provided service.\nLicense providers - Insurance in most countries depends on a proper license which can be difficult and costly to obtain. There is also a model where a license provider can act as an intermediary to regulators which is interesting if we are to build a new kind of insurance product. Use of tokens: Staking tokens to provide capital for a license provider, paying fees for licenses.\nProduct managers - Use of token: Reward for service.\n\nEtheriscs’ approach to crypto insurance is interesting but majority of their products are still in the works.Their first product FlightDelay Insurance was launched on January 10th 2022.11"
  },
  {
    "objectID": "documents/research/posts/ERFC-172.gfm.html",
    "href": "documents/research/posts/ERFC-172.gfm.html",
    "title": "Developing with Ape",
    "section": "",
    "text": "Executive Summary\nThis research examines Ape The Ethereum Development Framework For Python Developers. It examines its plugin system and ease of use. As a conclusion Web3 Tech Radar location is suggested.\n\n\nIntroduction\nApe is a new tool for creating and exploring on Ethereum and other blockchains. This framework is written in python with a goal of onboarding more python developers to Web3 thus providing much needed inclusivity in the space.\nTheir goal is to make development smoother with their modular approach. Ape is centered around their open-source plugins written in python; some of them are:\n\nApe-hardhat - Hardhat network provider for Ape\nApe-infura - Infura provider plugins for Ethereum-based networks\nApe-solidity - Support for Solidity smart contracts\nApe-ledger - Ledger Nano S and X plugin for Ape\nApe-alchemy - Alchemy Provider plugins for Ethereum-based networks\n\nThere are over 20 plugins Ape offers. Considering the open-source nature of the project a lot of new plugins are on the way.\nCurrent version of Ape is v0.2.1 and some of the new interesting features offered are:\n\nPolygon, Binance Smart Chain, and Fantom support. Developers can build multi-chain applications with ape’s network switching feature.\nImpersonated account. This let’s the developers test their project and interact with the contract on a fork network pretending to be any account. If you want to impersonate Vitalik, Ape makes that possible.\n\nThey are also working on Ape Project Templates which should increase productivity and enhance developers’ experience when using this framework. Some of the templates Ape is currently developing are:\n\nNFT template\nToken template\nVarious other templates for airdrops,minting\nTemplates for different ERC standards\n\nApe is also set out to be the “first professional-grade smart contract development framework to support multi-chain application development, including non-EVM chains like StarkWare” .[^1]\nAnother sign that Ape is growing is that a Yearn.Finance repo has officially migrated over from Brownie to Ape.\nAs previosly mentioned, this is a new framework and we are expecting more adoption and improvements in the coming months, especially as more developers “take it for a spin”.\nAnother interesting thing is that there is a possibility of developers switching to Ape from Brownie framework, as Brownie updates have slowed down.\n\n\nGoals & Methodology\nThe goal of this research paper is to explore this new player in the smart contract frameworks market, this is an opportunity to explore a new framework that is python oriented.\nThis will be done by writing a simple smart contract, deployment script for rinkeby and a couple tests for said contract and examining the documentation and tutorials present. That way we can research the ease of use for both beginners and experienced developers, and see what is the approach to development process this open-source framework is taking.\nAs a result Web3 Tech Radar location for this framework will be suggested.\n\n\nResults & Discussion\nBeginner friendly?\nAfter initial testing of this framework and considering the state of the documentation at this stage I would recommend this framework to experienced python developers venturing into Web3. Documentation is well written, still in the works and continuously updated with contributions from the community around this framework. Apeworx Team and Apeworx community is currently working on workshops to get developers up to speed and tutorials are in the works.\nCurrently, there is little materials for newcomers. Considering this is a new open-source project this is understandable. However, for absolute beginners, going through the Brownie framework first is recommended at this stage of Ape’s development. The reason for that is abundance of tutorials, workshops and well written documentation. After Brownie, switch to Ape and its plugin system is smooth.\nPerformance:\nApe framework performs well. Smart contract was developed and deployed to Rinkeby test network using a python script without any problems. Verification of the contract on Etherscan via a python script is not yet possible but is in the works in the Etherscan plugin.\nTesting works well both locally and when using network forks, which makes exhaustive testing possible. Currently Ape doesn’t include built-in smart contract fuzz-testing tool.\nCurrently the speed of the framework is satisfactory and more improvements are on the way.\nPlugins:\nOpen-source modular plugins are definitely the highlight of this framework. It allows developers to easily install and remove the functionality they need in their development process and I could see this being a way to onboard new developers from the python world and a way to incentivize developers to develop their own plugins. Some of the interesting Ape plugins are:\nape-tokens is an interesting plugin which allows developers to get token contracts without putting in the addresses themselves.\nExample:\nfrom ape_tokens import tokens\n\nlink = tokens[\"LINK\"]\n\nprint(link.address)\nThis will print out the eth adress of the LINK token. “link” can now be used in various python scripts, be it testing or development.\nape-ledger is a plugin for Ape Framework which integrates with Ledger devices to load and create accounts, sign messages, and sign transactions.\nRequirements\n\nhave the Ledger USB device connected\nhave the Ledger USB device unlocked (by entering the passcode)\nhave the Ethereum app open.\n\nLedger accounts have the following capabilities in ape:\n\nCan sign transactions\nCan sign messages using the default EIP-191 specification\nCan sign messages using the EIP-712 specification\n\nape-trezor is a plugin for Ape Framework which integrates Trezorlib ethereum.py to load and create accounts, sign messages, and sign transactions.\nYou can load the account like any other account in Ape console and then use it to sign transactions like this:\nape trezor sign-message [YOUR TREZOR ALIAS] \"hello world\"\nape trezor verify \"hello world\nThe output of verify should be the same address as the account $account_name.\nApe Polygon Ecosystem Plugin - Ecosystem Plugin for Polygon support in Ape\nApe Fantom Ecosystem Plugin - Ecosystem Plugin for Fantom support in Ape\nape-addressbook is plugin that allows tracking addresses and contracts in projects and globally. This is an interesting way to improve developers user experience and is currently in development.\n…And many more.\n\n\nConclusion\nTech Radar Proposal:\nRecommended location is the Assess ring at this stage. The reason for that is the sheer novelty of this framework. However, the development team is great, community is growing, and we are seeing new projects emerging using Ape. This framework is with its simplicity aiming to become the industry standard in Ethereum development for python developers and is on a great way to do so."
  },
  {
    "objectID": "documents/research/posts/ERFC-154.gfm.html#blacklisting",
    "href": "documents/research/posts/ERFC-154.gfm.html#blacklisting",
    "title": "Blacklisting Platform based on untransferable NFTs",
    "section": "Blacklisting",
    "text": "Blacklisting\nAs we pointed above we did a deep-dive into contracts that utilize blacklisting. In the beginning of the research we have searched for contracts that previously used blacklisting and we have come across the Tether case as it is the biggest one. There are various contracts that use the blacklist contracts but it is the exact same approach. When it comes to individual sites and addresses MetaMask already blocks sites that are known to steal funds.2\nStablecoin issuer Tether froze the ethereum address holding over $715,000 worth of USDT. This address is the address of hackers who stole $3 million on the Multichain bridge. This means that they cannot move the funds.\n\nThe question here is how did Tether manage to do that?\n\nThey managed that by importing the Blacklist contract in their main contract. We will try to explain the contract in the code-box comments below:\n    contract BlackList is Ownable, BasicToken {\n\n        // Getters to allow the same blacklist to be used also by other contracts.(including upgraded Tether) \n        function getBlackListStatus(address _maker) external constant returns (bool) {\n            return isBlackListed[_maker];\n        }\n\n        // Returns the owner of the contract address.\n        function getOwner() external constant returns (address) {\n            return owner;\n        }\n\n        // Puts the blacklisted addresses in the mapping for checking and later use.\n        mapping (address => bool) public isBlackListed;\n\n        // Self explanatory, adds the address to the isBlacklisted mapping. Only owner of the contract can call the function\n        function addBlackList (address _evilUser) public onlyOwner {\n            isBlackListed[_evilUser] = true;\n            AddedBlackList(_evilUser);\n        }\n\n        // Removes the address from the blacklist and \"unfreezes the assets\". Only owner of the contract can call the function.\n        function removeBlackList (address _clearedUser) public onlyOwner {\n            isBlackListed[_clearedUser] = false;\n            RemovedBlackList(_clearedUser);\n        }\n\n        // Destroys the funds of the blacklisted address and reduces the total suply by the same amount. Only owner of the contract can call this function.\n        function destroyBlackFunds (address _blackListedUser) public onlyOwner {\n            require(isBlackListed[_blackListedUser]);\n            uint dirtyFunds = balanceOf(_blackListedUser);\n            balances[_blackListedUser] = 0;\n            _totalSupply -= dirtyFunds;\n            DestroyedBlackFunds(_blackListedUser, dirtyFunds);\n        }\n        // Simple events for transaction logs.\n        event DestroyedBlackFunds(address _blackListedUser, uint _balance);\n\n        event AddedBlackList(address _user);\n\n        event RemovedBlackList(address _user);\n\n    }\nThen they simply put the require statement in all their main contract functions(except for the ones with the “Only Owner modifier”) for example:\n    // Require statement above makes sure the blacklisted address can't access the function.\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\n            require(!isBlackListed[_from]);\n            if (deprecated) {\n                return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\n            } else {\n                return super.transferFrom(_from, _to, _value);\n            }\n        }\nThis approach to blacklisting gives the Tether the absolute control in what addresses it blacklists and for how long.\nAs we can see in the getBlacklistStatus the other contracts can use the same Blacklist to limit their usage as Tether thus leaning on their decision making.\nIn theory a blacklist protocol can be created where the voting what address to blacklist could be done by the community. The said addresses would be stored in the contract and those addresses could be whitelisted by voting again. Then, other contracts could lean on the “list” and block the addresses from using their functions. This would also make our solution the major point of centralization and considering how easy it is to set up blacklisting individually this proposes a question is the such solution needed?\nImplementing a separate blacklist functions is not challenging and any contract can include them and have the complete control in what addresses it freezes and for how long."
  },
  {
    "objectID": "documents/research/posts/ERFC-154.gfm.html#untransferable-nfts",
    "href": "documents/research/posts/ERFC-154.gfm.html#untransferable-nfts",
    "title": "Blacklisting Platform based on untransferable NFTs",
    "section": "Untransferable NFTs",
    "text": "Untransferable NFTs\nUntrasferable NFTs have been a topic of interest for a while in Web3 and there are various use cases that have been explored. Such as:\n\nidentity\nbadges\nachievements, etc\n\nVitalik Buterin in his blog post showed his interest in “soulbound NFTs”. If we want these NFTs to be truly soulbound (untrasferable) we would need to block transferability thus limiting them to only one address. When it comes to badges and achievements there are already POAPs. POAP has made the decision not to block transferability of POAPs themselves since the owners might want to change addresses and migrate assets for various reasons. There are various cases where they have been sold or even given out for free and after that sold for the highest bidder.3\nWhen it comes to creating a “soulbound NFT” we think that it is possible and that it can be done by modifying the transfer function from the ERC-721 standard.\nThe main issue here is utilizing them in the Blacklisting sense, the mint function from the ERC-721 interface can be included in the addBlacklist() function which would mint the said token to the said address. But so far we haven’t come to the use-case except for “flagging” the addresses for the world to see, so it seems unnecessary at the moment."
  },
  {
    "objectID": "documents/research/posts/ERFC-171.gfm.html#opensea",
    "href": "documents/research/posts/ERFC-171.gfm.html#opensea",
    "title": "Royalty Contract Standardization - RCS",
    "section": "OpenSea",
    "text": "OpenSea\nOpenSea offers royalties for Artists and Creator which are usually around 10%. They are also applied to secondary sales and the proceeds after fees go to the seller of the NFT.\nUsers can check the royalty fees with 3 methods:\n\nAttempting to buy an NFT which will then open up a checkout window where the royalty amount is listed under the name of the NFT.\nInstalling the Flava Chrome extension which shows the royalty next to the NFT without needing to open the checkout menu.\nUsing the NFT analytics tools - There are numerous NFT analytics tools that include creator royalties in their stats.1\n\nAs we can see royalties are very important part of NFT space and they are of great importance for both traders and creators.\n\nHow do creators earn their royaties\nOn OpenSea proceeds from the primary sales of the NFT are immediately forwarded to the creators address. Royalties are usually held by OpenSea for 2-4 weeks before paid out to the creator, this includes both primary sales and secondary sales.\nRoyalties are not automatically set on OpenSea and the creator of the collection must set the royalty percentage and the payout address on the collection level.\n\n\nOpenSea royalty on other marketplaces\nOpenSea royalties are enforced on many other platforms. This is a result of various legal agreements between platforms.\nIf we are talking about ERC-721 and ERC-1155 standard tokens there is no royalty support on token or smart contract level. That is why previosly mentioned legal agreements are needed to enforce royalty payments.2"
  },
  {
    "objectID": "documents/research/posts/ERFC-171.gfm.html#looksrare",
    "href": "documents/research/posts/ERFC-171.gfm.html#looksrare",
    "title": "Royalty Contract Standardization - RCS",
    "section": "LooksRare",
    "text": "LooksRare\nLooksRare is a decentralized NFT marketplace which rewards traders, token stakers, creators and collectors for participating on the platform.\nIt was launched in January 22 with an aim to dethrone Opensea from it’s spot as a leader in the NFT market.\nAs a community-first platform all the revenue generated is distributed to the stakers of LOOKS token.\n\nToken\nLOOKS is the native token that powers the LooksRare marketplace, its price is $0.5908 at the time of this writing. It is used for staking and various rewards.\n\n\nRoyalties\nWhenever the NFT is traded on LooksRare there are 2 types of fee the seller is charged:\n\nPlatform fee (2%)\nCreator royalties\n\n“Creator royalties are fees that are decided by the collection creator. Collection owners can specify a percentage of royalties they wish to recieve on their collection management page.”\nRoyalties are on-chain. Whenever a sale is made through the platform the royalties are paid in the same transaction as the sale and the creators instantly recieve their royalty. This is one of the ways LooksRare is different from OpenSea.\nLooksRare also supports EIP-2981 royalty standard which takes precedent over any royalties specified directly on LooksRare."
  },
  {
    "objectID": "documents/research/posts/ERFC-171.gfm.html#eip-2981",
    "href": "documents/research/posts/ERFC-171.gfm.html#eip-2981",
    "title": "Royalty Contract Standardization - RCS",
    "section": "EIP-2981",
    "text": "EIP-2981\nThis standard provides a way to retrieve royalty payment information for NFTs with a goal to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.\nThis standard enables all marketplaces to retrieve royalty payment information for a given NFT. This enables accurate royalty payments regardless of which marketplace the NFT is sold or re-sold at.\nThis standard only provides a mechanism to fetch the royalty amount and recipients. The actual funds transfer is something the marketplace needs to do.\n“Royalty amounts are always a percentage of the sale price. If a marketplace chooses not to implement this EIP, then no funds will be paid for secondary sales.”\nThat is one of the reasons hardcoding royalties idea was proposed.\nEIP-2981 can also be integrated with other contracts to return royalty payment information. ERC-2981 is a royalty standard for many asset types.\nIt is recomended to read the full specification of the proposal in order to better understand the issue at hand and the way it is handled in the EIP-2981.\nIn the proposal the writers have come to these conclusions:\n\n“It is impossible to know which NFT transfers are the result of sales, and which are merely wallets moving or consolidating their NFTs. Therefore, we cannot force every transfer function, such as transferFrom() in ERC-721, to involve a royalty payment as not every transfer is a sale that would require such payment.”\n“It is impossible to fully know and efficiently implement all possible types of royalty payments logic. With that said, it is on the royalty payment receiver to implement all additional complexity and logic for fee splitting, multiple receivers, taxes, accounting, etc. in their own receiving contract or off-chain processes. Attempting to do this as part of this standard, it would dramatically increase the implementation complexity, increase gas costs, and could not possibly cover every potential use-case.”\n“This EIP mandates a percentage-based royalty fee model. It is likely that the most common case of percentage calculation will be where the royaltyAmount is always calculated from the _salePrice using a fixed percent i.e. if the royalty fee is 10%, then a 10% royalty fee must apply whether _salePrice is 10, 10000 or 1234567890.”\n“This EIP does not specify a currency or token used for sales and royalty payments. The same percentage-based royalty fee must be paid regardless of what currency, or token was used in the sale, paid in the same currency or token. This applies to sales in any location including on-chain sales, over-the-counter (OTC) sales, and off-chain sales using fiat currency such as at auction houses. As royalty payments are voluntary, entities that respect this EIP must pay no matter where the sale occurred - a sale outside of the blockchain is still a sale.”\n\nThey also plan on taking on the mechanism for paying and notifying the recepient in the future EIPs.3\n\nOur experiment\nAfter trying to implement hardcoding the royalties the same issue with the transfer function occured.\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts@4.5.0/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts@4.5.0/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts@4.5.0/access/Ownable.sol\";\nimport \"@openzeppelin/contracts@4.5.0/utils/Counters.sol\";\nimport \"@openzeppelin/contracts@4.5.0/interfaces/IERC2981.sol\";\n\ncontract InstantRoyaltyToken is ERC721, ERC721Enumerable, Ownable, IERC2981 {\n    using Counters for Counters.Counter;\n\n    Counters.Counter private _tokenIdCounter;\n\n    address royaltyAddress;\n    uint256 royalty = 10_000;\n\n    constructor(address _royaltyAddress ) ERC721(\"InstantRoyaltyToken\", \"IRT\") {\n            royaltyAddress = _royaltyAddress;\n    }\n\n    function safeMint(address to) public onlyOwner {\n        uint256 tokenId = _tokenIdCounter.current();\n        _tokenIdCounter.increment();\n        _safeMint(to, tokenId);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId)\n        internal\n        override(ERC721, ERC721Enumerable)\n    {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC721, ERC721Enumerable, IERC165)\n        returns (bool)\n    {\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    function royaltyInfo(uint256 tokenId, uint256 salePrice) public view override returns(address receiver, uint256 royaltyAmount) {\n        return (royaltyAddress, royalty);\n    }\n    /* \n\n        * The function below from ERC721 is the main issue. Making this a\n        * payable function would add unecessary complexity to the standard\n        * and would make the function payable, thus requiring payment \n        * even when sales are not ocurring.\n\n    */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override(ERC721,IERC721) {\n            require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n            //royaltyInfo and pay royalty for transfer part would go here\n            //implementing this would make the function payable\n            _transfer(from, to, tokenId);\n    }\n\n}"
  },
  {
    "objectID": "documents/research/posts/ERFC-147.gfm.html#oauth-standard",
    "href": "documents/research/posts/ERFC-147.gfm.html#oauth-standard",
    "title": "OWT - Omni Web Token",
    "section": "OAuth standard",
    "text": "OAuth standard\nOpen Authorization, or OAuth for short, is an authorization standard followed by many APIs worldwide. The standard specifies the protocol between client and authorization server and data transferred in protocol messages. There are two versions of OAuth standard, 1 and 2.\nOAuth standard doesn’t specify the transfer method for sending messages, but one widely adopted standard is using JWT tokens as the authorization data container."
  },
  {
    "objectID": "documents/research/posts/ERFC-147.gfm.html#jwt-tokens",
    "href": "documents/research/posts/ERFC-147.gfm.html#jwt-tokens",
    "title": "OWT - Omni Web Token",
    "section": "JWT Tokens",
    "text": "JWT Tokens\nIn 2015, Michael Jones, John Bradley and Nat Sakimura introduced JSON Web Tokens (JWT) through RFC-7519 as a compact structure for representing claims transferred between two parties [3]. Since then, JWTs have been used for client authentication on the Web. Initially, the authentication was performed between APIs but quickly found use in client authentication following the growth of client-heavy applications.\nJWT has a general structure, made of a header, body, and signature segments. The header segment includes the token type and a label of the algorithm used for creating signatures.\nExample JWT header\n    {\n        \"type\": \"JWT\",\n        \"alg\": \"ES256\"\n    }\nThe body segment is a container segment used for storing protocol-specific information. OAuth 2.0 standard, introduced with RFC-6749 [4], specifies several fields required for authorization that are members of the body of a JWT token. Some of those fields are:\n\naud (Audience) - Identifier of the user to whom the client will present the token for executing an action\nexp (Expiration) - Token expiration timestamp\niss (Issuer) - Identifier of the token issuer, authorization service provider\nscope (Action scope) - List of actions for which the token owner would be authorized to perform\nsub (Subject) - Identifier of the token owner\niat (Issued at) - Isusing timestamp\n\nExample JWT Body\n    {\n      \"sub\": \"user1\",\n      \"name\": \"John Doe\",\n      \"iat\": 1516239022,\n      \"aud\": \"server1\",\n      \"scope\": [\"data.fetching\"]\n    }\nField name in the JWT body example represents a custom, application-specific data field.\nThe signature part of the JWT token contains the hash or signature of the token provided by the token issuer.\nThe three token parts are put together into one base64 encoded string (without trailint = symbols), having the tree parts separated by the dot . symbol.\nExample of a complete JWT string\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
  },
  {
    "objectID": "documents/research/posts/ERFC-147.gfm.html#general-authorization-protocol",
    "href": "documents/research/posts/ERFC-147.gfm.html#general-authorization-protocol",
    "title": "OWT - Omni Web Token",
    "section": "General Authorization Protocol",
    "text": "General Authorization Protocol\nA general protocol for client authorization on the Web using JWT tokens consists of two steps: - Requesting token from the authorization server for executing some action - Presenting the authorization token received from the authorization server to the server which would perform the requested action"
  },
  {
    "objectID": "documents/research/posts/ERFC-147.gfm.html#existing-approaches",
    "href": "documents/research/posts/ERFC-147.gfm.html#existing-approaches",
    "title": "OWT - Omni Web Token",
    "section": "Existing Approaches",
    "text": "Existing Approaches\nThere are existing approaches for combining the Blockchain and OAuth tokens. In one research [5], the authors used NFTs as authorization tokens generated on-chain that would be verifiable using the OAuth 2.0 protocol. That approach is inverse to this research: it doesn’t reduce costs but puts authorization tokens on the chain."
  },
  {
    "objectID": "documents/research/posts/ERFC-147.gfm.html#chain-token-ct-representation",
    "href": "documents/research/posts/ERFC-147.gfm.html#chain-token-ct-representation",
    "title": "OWT - Omni Web Token",
    "section": "Chain token (CT) representation",
    "text": "Chain token (CT) representation\nThe essential requirements for the token that would be used on the chain are:\n\nEfficient verifiability; token should be efficiently verifiable on the chain\nAuthenticity; the probability of token forgery should be negligible\nSuccinctness; token should be small in byte size\nNon-transferability; token should be used only by the user who received the token\n\nAs an example throughout this research, we will use the money checkout allowance problem, where a client needs to be authorized to payout a certain amount of money from the account of the authorizing entity. An existing approach for solving this problem is calling the approval method on the smart contract or whitelisting clients and explicitly approving the total allowed amount for each client. Method signature without a token argument would look like this:\npayout(address account, address receiver, uint256 amount)\nA naive approach for constructing a token that would follow JWT logic would be providing all the values bound by the token. In our example, the values that are required for money checkout from the account are: - account owner identifier; 20 bytes address value - authorized client identifier; 20 bytes address value - allowed amount; 32 bytes value\nNext, the apparent problem is a forgery. Everyone can create a token with listed values and submit it on the Blockchain. The solution for this problem is to provide a signature made by the authorization entity, which confirms the provided values. Ethereum signatures contain three segments, v, r, and s, 65 bytes long. All summed up to 137 bytes of memory. Even if this doesn’t look like a significant sum, the main issue is that the token size asymptotically grows by \\(O(n)\\), linearly with the number of arguments n. In other words, it would become costly, or even unusable, for methods with more arguments. It is not very efficient, but it is a start.\n\nToken size optimization\nThe problem with the naive approach is linear growth with the number of arguments. Solving this problem requires looking closely at the method that is being called. The method payout already contains the token values as a method argument, and it would be redundant to provide them again in the token. The same pattern is visible with different use-cases. This observation suggests that we can avoid providing the values within the token but use only a hash of the approved values and check if the hash of the provided input values matches the token hash. Using the hashing method clears the linear growth of the token as the size of the keccak256 hash is fixed to 32 bytes in length, achieving a constant \\(O(1)\\) size of the token. The hash can also cover other values that could be hard-coded into the smart contract without a token size increase, which will become an essential feature in later sections.\n\n\nSignature size optimization\nThe Ethereum signature size is fixed to 65 bytes. That means that it passes the size of 2 memory words (32 bytes in size) and requires three blocks of memory. The solution for this problem comes with EIP-2098 [6], which proposes a simple technique for compact signature representation, reducing its size by 1 byte and allowing it to fit into two memory blocks.\nThe total token size is now fixed to 32 bytes of token hash plus another 64 bytes of signature data totaling 96 bytes or three blocks of memory.\n\n\nMapping OAuth2.0 parameters\nNow that we have a token structure, we need to figure out how to standardize token parameters to comply with the OAuth2.0 standard.\nThe audience parameter refers to the smart contract containing the payout method. It doesn’t need to be provided explicitly as a method argument as it is already encoded in the smart contract.\nThe token issuer can be deduced from the signature and doesn’t need to be explicitly provided.\nThe subject parameter is provided both as the input argument of the payout method. It doesn’t have to be provided explicitly. It should not be provided even as the argument, as it is already given as the message sender value.\nThe scope parameter describes the action that should be executed. It should not be explicitly provided as it should be hardcoded in the method.\nThe token expiration time is a tricky one. It doesn’t naturally belong to method arguments, so it should be provided explicitly. To prevent the token size increase, we can do a simple modification of the token hash. The value of the timestamp can be stored in 8 bytes. A straightforward solution is to provide another method argument with an 8-byte value. A more elegant solution is to transform the keccak256 value into “pseudo-keccak224” (SHA224 [7] value, with unchanged initialization value) by truncating the hash size to its 224 bytes prefix and appending 8 bytes extension with expiration timestamp as the last 8 bytes of the token hash. This transformation returns us to the previously proposed token size without extra arguments.\nAs we can see, all the crucial parameters of the OAuth2.0 protocol can be successfully mapped to the Blockchain transactions and the chain token."
  },
  {
    "objectID": "documents/research/posts/ERFC-147.gfm.html#token-reusability",
    "href": "documents/research/posts/ERFC-147.gfm.html#token-reusability",
    "title": "OWT - Omni Web Token",
    "section": "Token reusability",
    "text": "Token reusability\nSome authorization tokens are reusable many times until the expiration date. However, some use-cases require that the tokens may be used only once. An example of such a use case is exactly the example we have used so far. Once the payout method has been executed, the user should not be able to perform double-payout transactions. This problem can be solved the same way as in Web 2.0 - by introducing a payment identifier. The payment identifier should be included as an extra method argument and included in the token hash. This solution also solves the issue of the lost token, as the token can be reissued with the same payment identifier and used for the same payment only once. Specific use cases may require the existence of only one token. In that case, the token (and method arguments) may include jti parameter or JWT token ID as a token identifier or use the token hash as an identifier. The smart contract should implement mechanisms for preventing double payments and a potential blacklisting of tokens."
  },
  {
    "objectID": "documents/research/posts/ERFC-147.gfm.html#action-scope-schemas",
    "href": "documents/research/posts/ERFC-147.gfm.html#action-scope-schemas",
    "title": "OWT - Omni Web Token",
    "section": "Action scope schemas",
    "text": "Action scope schemas\nOAuth2.0 proposes a parameter that includes the action scope or label of the action for which the client can use the token. Action scopes are not specified as they can be represented using any string value. The problem here is the cost of using string data types in smart contracts. This research proposes restriction for action type values to numerical data types of 4 bytes. This restriction allows \\(2^32\\) possible scope values that could represent many use cases.\nA library of token schemas can help developers properly format their tokens based on scope number schemas. Furthermore, enumeration of action types can introduce standardization for tokens where a smart contract may require, for example, “scope 42” tokens for executing a method. We present the first two token scopes that would be used in the following use-cases:\n\nScope 1: Generic Identity\nGeneric identity scope should be used for verification of the client’s identity. The verification is based on the client’s wallet address and unique identifier in the issuer’s database. The hash for “scope 1” tokens be made by hashing the following array of values in their respective order:\n\naddress iss; token issuer address aud; smart contract address or 0 address for general identification\naddress sub; client’s wallet address\nuint4 scope; action scope with value 1 for generic identification\nbytes32 uuid; unique identifier of the client in the issuer’s\nuint8 exp; token expiration timestamp in UNIX timestamp format database\n\n\n\nScope 2: Allowance\nAllowance tokens, used for crypto cheques, should have hashes made by hashing the following array of values in their respective order:\n\naddress iss; token issuer\naddress aud; smart contract address\naddress sub; money receiver\nuint4 scope; action scope with value 2 for allowance\nbytes32 paymentId; payment identifier (NOTE: token hash may be used as payment ID but it can introduce new problems)\nuint256 amount; amount to transfer\nuint8 exp; token expiration timestamp in UNIX timestamp format\n\nThe reader may notice that in both cases, there are two logical groups of parameters: - general parameters; iss, aud, sub,scopeandexp- application-specific parameters;userId,paymentId,amount`\nThe general parameters are the same for all tokens, and application-specific parameters are different for each scope."
  },
  {
    "objectID": "documents/research/posts/ERFC-147.gfm.html#from-chain-token-ct-to-omni-web-token-owt",
    "href": "documents/research/posts/ERFC-147.gfm.html#from-chain-token-ct-to-omni-web-token-owt",
    "title": "OWT - Omni Web Token",
    "section": "From Chain Token (CT) to Omni Web Token (OWT)",
    "text": "From Chain Token (CT) to Omni Web Token (OWT)\nNow that we have the complete definition of the chain token, we can go one more step and make it usable and transferrable in the Web 2.0 world. We can do this by packing chain token data as part of theJWT token, following the OAuth 2.0 schema.\n\nOWT Body\nThe token scopes define OAuth 2.0 parameters, so the only remaining thing is appropriately packing the chain token into the JWT body and creating a proper JWT signature. The verifier needs to know the CT hash value and the parameters used in the construction of the token.\nThe proposed OWT body schema is:\n    {\n   \"aud\":\"<smart contract address>\",\n   \"iss\":\"<issuer's wallet address>\",\n        \"scope\": \"<readable name of the '<scope>'\",\n        \"exp\": \"<token expiration timestamp>\",\n        \"chain_token\": {\n            \"token_hash\": \"<CT hash with expiration timestamp>\",\n        \"r\": \"<signature r value>\",\n        \"sv\": \"<compact representation of s and v signature values>\",\n            \"params\": \"[<ordered list of token parameters in form of:\n                     {\n                        param: <parameter name>,\n                        value: <parameter value>,\n                        type: <parameter data type>,\n                     }\n                >]\"\n        }\n\n\nOWT Signature\nThe JWT standard allows using the Ethereum secp256k1 signatures by providing the EC256 algorithm type value in the token header. The signature of the OWT token is created using the issuer’s private key. To verify the signature, the verifier needs access to the issuer’s public key, which should be available from the issuer’s /.well-known/jwks.json route of the authorization API."
  },
  {
    "objectID": "documents/research/posts/ERFC-147.gfm.html#owt-issuing",
    "href": "documents/research/posts/ERFC-147.gfm.html#owt-issuing",
    "title": "OWT - Omni Web Token",
    "section": "OWT Issuing",
    "text": "OWT Issuing\nThe OAuth 2.0 protocol allows using client id and client secret parameters when requesting the authorization tokens. OWT requests can be made using wallet address as client’s identity and signature of the clients wallet address as the client secret parameter"
  },
  {
    "objectID": "documents/research/posts/ERFC-147.gfm.html#allowance-use-case",
    "href": "documents/research/posts/ERFC-147.gfm.html#allowance-use-case",
    "title": "OWT - Omni Web Token",
    "section": "Allowance Use Case",
    "text": "Allowance Use Case\nThe allowance use case tested the token issuing protocol for payout allowances, evaluated the costs of performing payouts using the token, and compared the results with the basic whitelisting protocol.\n\nTest setup\nAuthorization entity submitted allowance amount for the client using the whitelist smart contract method. The cost of the whitelisting transaction was 44,484 gas.\n\n\nTest 1: Payout by Whitelisting\nThe client executed the payoutOld method of the smart contract with a propper allowance amount. The cost of the payout transaction was 22,389 + T gas.\n\n\nTest 2: Payout with Token\nThe client requested an OWT from the authorization server using OAuth 2.0 request schema. The authorization server verified the client’s credentials and issued a “scope 2” token to the client with a specified allowance amount. The client verified the OWT data and extracted the chain token and its parameters from the OWT. After the OWT verification step, the client submitted them to the smart contract using the payoutNew method. The payout was successful, and the execution cost was 59,935 + T gas.\n\n\nTest 3: Payout with Token using Token Hash as Payment Identifier\nThe protocol for issuing and verifying the OWT was done the same way as in the previous test. The only difference was that the token did not follow the “scope 2” schema but left out the payment identifier. The client performed a payout using the payoutNewShort method. Again, the payout was successful, and the execution cost was 59,189 + T gas.\n\n\nCost Analysis\nThe test results show that the cost of the payout protocol using whitelisting was 44,484 gas for the issuer and 22,389 gas for the client, resulting in 66,873 gas for the entire protocol. Test 2 showed that using the token has reduced the issuer’s costs to 0, but the client’s cost was increased to 59,935 gas which is 37,546 gas more than in test 1. Interestingly, the overhead cost for the client is lower than the costs of the issuer’s whitelisting, which indicates that using the token reduces the issuer’s fees, compared to whitelisting, even if the issuer compensates the overhead client’s costs by increasing the allowance amount. Test 3 showed that using token hash as payment identifier reduces the costs for extra 746 gas. However, this introduces problems with token reissuing. The exact token needs to be reissued every time the original one gets lost, requiring the expiration timestamp to be the same as the original one for the hashes to match and thus have the same payment identifier. This situation can cause the issuer to be unable to reissue the token as its timestamp has already expired. The results of the cost analysis are presented in Table 1. \n\n\n\nMethod\n\n\nIssuer’s costs (gas)\n\n\nClient’s costs (gas)\n\n\nTotal protocol costs (gas)\n\n\n\n\nWhitelisting\n\n\n44,484\n\n\n22,389\n\n\n66,873\n\n\n\n\nOWT allowance\n\n\n0\n\n\n59,935\n\n\n59,935\n\n\n\n\nShort OWT allowance\n\n\n0\n\n\n59,189\n\n\n59,189\n\n\n\n\nTable 1. Cost anlysis of the allowance use case methods"
  },
  {
    "objectID": "documents/research/posts/ERFC-147.gfm.html#generic-identity-use-case",
    "href": "documents/research/posts/ERFC-147.gfm.html#generic-identity-use-case",
    "title": "OWT - Omni Web Token",
    "section": "Generic Identity Use Case",
    "text": "Generic Identity Use Case\nThe generic identity use case tested the issuing and verification of the “scope 1” tokens and assessed the costs of using identification tokens on the chain.\nThe client acquired OWT from the authorization server and submitted the token with the received user id from the issuer’s database. The client submitted the token to the verifyIdentity method of the smart contract and successfully verified the identity token. The cost of the verification was 36,816 gas, which suggests that the verification proces cost was 15,817 gas, leaving out the base transaction cost.\n\nUse case analysis\nThe test showed that the costs for verifying the identity tokens are low and open a new path for the identity representations valid on multiple chains. Additional use cases may specify scope schemas for more specific identity tokens and introduce low-cost decentralized identities to a multi-chain environment."
  },
  {
    "objectID": "documents/research/posts/ERFC-147.gfm.html#general-purpose-token-verification-service-gptvs",
    "href": "documents/research/posts/ERFC-147.gfm.html#general-purpose-token-verification-service-gptvs",
    "title": "OWT - Omni Web Token",
    "section": "General Purpose Token Verification Service (GPTVS)",
    "text": "General Purpose Token Verification Service (GPTVS)\nThe entire verification protocol can be summed up into a token verification smart contract that can be deployed and used by multiple users to verify the authorization tokens for their smart contracts. Blacklisting can be introduced for tokens or clients. This service should allow listing approved issuers and smart contract addresses from which the requests may come. Also, the service can be monetized by requiring a certain amount of Ethers or ERC-20 tokens to be submitted monthly by the users to the verification smart contract, or the service will become unavailable for the requests coming from the user’s smart contracts."
  },
  {
    "objectID": "documents/research/posts/ERFC-147.gfm.html#appendix-1-chain-token-verification-smart-contract",
    "href": "documents/research/posts/ERFC-147.gfm.html#appendix-1-chain-token-verification-smart-contract",
    "title": "OWT - Omni Web Token",
    "section": "Appendix 1: Chain token verification smart contract",
    "text": "Appendix 1: Chain token verification smart contract\n\n// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.0 <0.9.0;\n\ncontract VerifierContract {\n        mapping(address => uint256) whitelisted;\n        mapping(bytes32 => bool ) usedPaymentIds;\n        bytes prefix = \"\\x19Ethereum Signed Message:\\n32\";\n        uint32 genericIdentityScope = 1;\n        uint32 payoutScope = 2;\n\n        function checkSignature(bytes32[3] calldata token, address signer) public returns (bool) {\n                // Decode r, s, v values\n                bytes32 hash = token[0];\n                bytes32 sv = token[2];\n                bytes32 r = token[1];\n                bytes32 s = sv & bytes32((uint((1 << 255) - 1)));\n                uint8 v = uint8(uint(sv >> 255) + 27);\n\n                // Create signature hash\n                bytes32 prefixedProof = keccak256(abi.encodePacked(prefix, hash));\n\n                // Verify signer\n                address recovered = ecrecover(prefixedProof, v, r, s);\n                return recovered == signer;\n        }\n\n        function whitelist(address client, uint256 amount) public {\n                whitelisted[client] = amount;\n        }\n\n        function payoutOld(uint256 amount) public {\n                require(amount <= (whitelisted[msg.sender]));\n                whitelisted[msg.sender] -= amount;\n        }\n\n        function payoutNew(address sender, uint256 amount, bytes32 paymentId, bytes32[3] calldata token) public{\n                // Check if token has already been used\n                require(usedPaymentIds[paymentId] == false);\n\n                // Check token expiration\n                uint32 exp = uint32(uint256(token[0]));\n                require(exp > block.timestamp, \"Token expired\");\n\n                // Check token signature\n                require(this.checkSignature(token, sender) == true, \"Invalid signature\");\n\n                // Check token values\n                bytes32 prefixedProof = keccak256(abi.encodePacked(sender, address(this), msg.sender, payoutScope, exp, paymentId, amount));\n                require (bytes32((uint256(prefixedProof >> 32 << 32) | uint256(exp))) == token[0]);\n\n                usedPaymentIds[paymentId] = true;\n        }\n\n        function payoutNewShort(address sender, uint256 amount, bytes32[3] calldata token) public{\n                // Check if token has already been used\n                require(usedPaymentIds[token[0]] == false);\n\n                // Check token expiration\n                uint32 exp = uint32(uint256(token[0]));\n                require(exp > block.timestamp);\n\n                // Check token signature\n                require(this.checkSignature(token, sender) == true);\n\n                // Check token values\n                bytes32 prefixedProof = keccak256(abi.encodePacked(sender, address(this), msg.sender, payoutScope, exp, amount));\n                require (bytes32((uint256(prefixedProof >> 32 << 32) | uint256(exp))) == token[0]);\n\n                usedPaymentIds[token[0]] = true;\n        }\n\n        function verifyIdentity(address issuer, bytes32 userId, bytes32[3] calldata token) public {\n                // Check token expiration\n                uint32 exp = uint32(uint256(token[0]));\n                require(exp > block.timestamp);\n\n                // Check token signature\n                require(this.checkSignature(token, issuer) == true);\n\n                // Check token values\n                bytes32 prefixedProof = keccak256(abi.encodePacked(issuer, address(this), msg.sender, genericIdentityScope, exp, userId));\n                require (bytes32((uint256(prefixedProof >> 32 << 32) | uint256(exp))) == token[0]);\n        }\n}"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "3327 Research",
    "section": "",
    "text": "Welcome to our Research page\n\nCrazy. Bold. Forward.\n\nBADASS PEOPLE INSPIRED BY A BADASS SCIENTIST\n\n\nR&D digital collective working on cutting edge web3 technologies\n\n3327 is an open, distributed, and autonomous collective. Some may call it a DAO, but we tend to say we are already past that point.\n\n\n\n\n3327 is a celebration of the greatest geek who ever lived. Our collective is named after the NYC hotel room where Nikola Tesla spent his last decade, working on his crazy, bold, and progressive innovations.\n\n\n\nVisit 3327 Website\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLet’s Nerd Out Together\n\n\n\nResearch"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright © 2012-present Contributors.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/CHANGELOG.html#unreleasedunreleased",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/CHANGELOG.html#unreleasedunreleased",
    "title": "3327 Research",
    "section": "Unreleased",
    "text": "Unreleased"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "2.0.0 - 2019-03-30",
    "text": "2.0.0 - 2019-03-30\n\nChanged\n\nUpgrade readable-stream from ^2.2.8 to ^3.1.0 (#105) (@ralphtheninja)\nUpgrade level devDependency from ^4.0.0 to ^5.0.1 (#109) (@vweevers)\nUpgrade nyc devDependency from ^12.0.2 to ^13.2.0 (#108) (@vweevers)\nUpgrade standard devDependency from ^11.0.1 to ^12.0.0 (#102) (@ralphtheninja)\nApply common project tweaks (#106, #107) (@vweevers)\n\n\n\nRemoved\n\nRemove node 9 (6e1ef3b) (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "1.0.0 - 2018-06-30",
    "text": "1.0.0 - 2018-06-30\n\nChanged\n\nRefactor test options to always set createIfMissing and errorIfExists (@ralphtheninja)\nMove setUp() function into test() (@ralphtheninja)\nMove openTestDatabase() calls into test() and pass ctx to tests (@ralphtheninja)\nTest error after db.close() and after cleanup() (@ralphtheninja)\nUse after in cleanup() (@ralphtheninja)\nUse only readable-stream from user land (@ralphtheninja)\nUse ^ for devDependencies (@ralphtheninja)\nSwitch to plain MIT license (@ralphtheninja)\nReplace util.inherits with inherits module (@ralphtheninja)\nReplace this._destroyed with this.destroyed from Writable (@ralphtheninja)\nExport single function that creates the stream (@ralphtheninja)\nFlip parameters in WriteStream constructor (@ralphtheninja)\nVerify results once using level-concat-iterator intead of multiple db.get() operations (@ralphtheninja)\nUpdate README style (@ralphtheninja)\nOptimize internal batch _buffer by pushing transformed data (@ralphtheninja)\nUse tempy for test locations and remove cleanup() (@vweevers)\nPass complete object in _write() extending default type (@ralphtheninja)\nLink to node 8 lts version of Writable (@ralphtheninja)\nSupport custom highWaterMark (@vweevers)\nChange maxBufferLength to pause rather than drop writes (@vweevers)\n\n\n\nAdded\n\nAdd node 6, 8, 9 and 10 to Travis (@ralphtheninja)\nAdd standard for linting (@ralphtheninja)\nTest race condition (@vweevers)\nAdd nyc and coveralls (@vweevers)\nAdd CHANGELOG.md (@ralphtheninja)\nAdd UPGRADING.md (@ralphtheninja)\nTest maxBufferLength (@vweevers)\nTest edge cases (@vweevers)\n\n\n\nRemoved\n\nRemove node 0.10, 2, 3, 4 and 5 from Travis (@ralphtheninja)\nRemove contributors from package.json (@ralphtheninja)\nRemove copyright headers from code (@ralphtheninja)\nRemove this.{writable,readable} state (@ralphtheninja)\nRemove this._db.isOpen() checks (@ralphtheninja)\nRemove patching db from the API (@ralphtheninja)\nRemove default 'utf8' encoding and per stream encodings (@ralphtheninja, @vweevers)\nRemove .jshintrc (@ralphtheninja)\nRemove WriteStream#destroySoon() (@vweevers)\nRemove WriteStream#toString() (@vweevers)\nRemove redundant !buffer check (@vweevers)\n\n\n\nFixed\n\nFix erroneous test on missing type (@ralphtheninja)\nFix race condition by flushing before finish (@vweevers)\nFix _destroy to emit 'close' after error (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "0.1.0 - 2017-04-07",
    "text": "0.1.0 - 2017-04-07\n\nChanged\n\nUpgrade readable-stream from ~2.0.6 to ^2.2.8 (@mcollina)\nUpgrade xtend from ~2.2.1 to ^4.0.0 (@mcollina)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "0.0.1 - 2016-03-14",
    "text": "0.0.1 - 2016-03-14\n\nChanged\n\nUpgrade readable-stream from ~1.0.15 to ~2.0.6 (@rvagg, @greenkeeper)\nUse __dirname instead of temporary directory (@rvagg)\nUpdate logo and copyright (@ralphtheninja)\n\n\n\nAdded\n\nAdd Travis (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "0.0.0 - 2013-10-12",
    "text": "0.0.0 - 2013-10-12\n:seedling: Initial release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/CONTRIBUTORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/CONTRIBUTORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "Contributors\n\n\n\n\nRod Vagg\n\n\nGitHub/rvagg\n\n\nTwitter/@rvagg\n\n\n\n\nJohn Chesley\n\n\nGitHub/chesles\n\n\nTwitter/@chesles\n\n\n\n\nJake Verbaten\n\n\nGitHub/raynos\n\n\nTwitter/@raynos2\n\n\n\n\nDominic Tarr\n\n\nGitHub/dominictarr\n\n\nTwitter/@dominictarr\n\n\n\n\nMax Ogden\n\n\nGitHub/maxogden\n\n\nTwitter/@maxogden\n\n\n\n\nLars-Magnus Skog\n\n\nGitHub/ralphtheninja\n\n\nMastodon/@ralph\n\n\n\n\nDavid Björklund\n\n\nGitHub/kesla\n\n\nTwitter/@david_bjorklund\n\n\n\n\nJulian Gruber\n\n\nGitHub/juliangruber\n\n\nTwitter/@juliangruber\n\n\n\n\nPaolo Fragomeni\n\n\nGitHub/hij1nx\n\n\nTwitter/@hij1nx\n\n\n\n\nAnton Whalley\n\n\nGitHub/No9\n\n\nTwitter/@antonwhalley\n\n\n\n\nMatteo Collina\n\n\nGitHub/mcollina\n\n\nTwitter/@matteocollina\n\n\n\n\nPedro Teixeira\n\n\nGitHub/pgte\n\n\nTwitter/@pgte\n\n\n\n\nJames Halliday\n\n\nGitHub/substack\n\n\nTwitter/@substack"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/UPGRADING.html#v2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/UPGRADING.html#v2",
    "title": "3327 Research",
    "section": "v2",
    "text": "v2\nDropped node 9 and upgraded to readable-stream@3."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/UPGRADING.html#v1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-ws/UPGRADING.html#v1",
    "title": "3327 Research",
    "section": "v1",
    "text": "v1\nDropped support for node 0.10, 0.12, 2, 3, 4 and 5.\n\nThe API only exports a single function and no longer patches levelup.\nSo if you previously did:\nvar ws = require('level-ws')\nvar db = ws(level('DB'))\nvar stream = db.createWriteStream()\nYou should now do:\nvar WriteStream = require('level-ws')\nvar db = level('DB')\nvar stream = WriteStream(db)\n\nThe parameters to the stream constructor were flipped.\nSo if you previously did:\nvar WriteStream = require('level-ws').WriteStream\nvar db = level('DB')\nvar stream = WriteStream({ type: 'del' }, db)\nYou should now do:\nvar WriteStream = require('level-ws')\nvar db = level('DB')\nvar stream = WriteStream(db, { type: 'del' })\n\nThe behavior of maxBufferLength was changed. Previously all write operations exceeding maxBufferLength in the same tick were dropped. Instead the stream is now paused until a batch has been flushed and unpaused once the batch has been completed.\n\nWriteStream#destroySoon() was removed.\n\nInternally this.writable and this.readable were removed. However, this.writable still exists due to inheritance, but this.readable is now undefined.\n\nDefault 'utf8' encoding was removed and also per stream encodings. However, it’s still possible to specify encodings for individual entries. This means if you previously relied on per stream encodings, you must specify this in calls to .write():\nwriteStream.write({\n  key: new Buffer([1, 2, 3]),\n  value: { some: 'json' },\n  keyEncoding: 'binary',\n  valueEncoding : 'json'\n})"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "2.4.0 / 2016-09-15",
    "text": "2.4.0 / 2016-09-15\n\nChanged\n\nadded optional support for graceful-fs [#62]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "2.3.1 / 2016-05-13",
    "text": "2.3.1 / 2016-05-13\n\nfix to support BOM. #45"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "2.3.0 / 2016-04-16",
    "text": "2.3.0 / 2016-04-16\n\nadd throws to readFile(). See #39\nadd support for any arbitrary fs module. Useful with mock-fs"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "2.2.3 / 2015-10-14",
    "text": "2.2.3 / 2015-10-14\n\ninclude file name in parse error. See: https://github.com/jprichardson/node-jsonfile/pull/34"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "2.2.2 / 2015-09-16",
    "text": "2.2.2 / 2015-09-16\n\nsplit out tests into separate files\nfixed throws when set to true in readFileSync(). See: https://github.com/jprichardson/node-jsonfile/pull/33"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "2.2.1 / 2015-06-25",
    "text": "2.2.1 / 2015-06-25\n\nfixed regression when passing in string as encoding for options in writeFile() and writeFileSync(). See: https://github.com/jprichardson/node-jsonfile/issues/28"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "2.2.0 / 2015-06-25",
    "text": "2.2.0 / 2015-06-25\n\nadded options.spaces to writeFile() and writeFileSync()"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "2.1.2 / 2015-06-22",
    "text": "2.1.2 / 2015-06-22\n\nfixed if passed readFileSync(file, 'utf8'). See: https://github.com/jprichardson/node-jsonfile/issues/25"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "2.1.1 / 2015-06-19",
    "text": "2.1.1 / 2015-06-19\n\nfixed regressions if null is passed for options. See: https://github.com/jprichardson/node-jsonfile/issues/24"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "2.1.0 / 2015-06-19",
    "text": "2.1.0 / 2015-06-19\n\ncleanup: JavaScript Standard Style, rename files, dropped terst for assert\nmethods now support JSON revivers/replacers"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "2.0.1 / 2015-05-24",
    "text": "2.0.1 / 2015-05-24\n\nupdate license attribute https://github.com/jprichardson/node-jsonfile/pull/21"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "2.0.0 / 2014-07-28",
    "text": "2.0.0 / 2014-07-28\n\nadded \\n to end of file on write. #14\nadded options.throws to readFileSync()\ndropped support for Node v0.8"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "1.2.0 / 2014-06-29",
    "text": "1.2.0 / 2014-06-29\n\nremoved semicolons\nbugfix: passed options to fs.readFile and fs.readFileSync. This technically changes behavior, but changes it according to docs. #12"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "1.1.1 / 2013-11-11",
    "text": "1.1.1 / 2013-11-11\n\nfixed catching of callback bug (ffissore / #5)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "1.1.0 / 2013-10-11",
    "text": "1.1.0 / 2013-10-11\n\nadded options param to methods, (seanodell / #4)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "1.0.1 / 2013-09-05",
    "text": "1.0.1 / 2013-09-05\n\nremoved homepage field from package.json to remove NPM warning"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "1.0.0 / 2013-06-28",
    "text": "1.0.0 / 2013-06-28\n\nadded .npmignore, #1\nchanged spacing default from 4 to 2 to follow Node conventions"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/jsonfile/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "0.0.1 / 2012-09-10",
    "text": "0.0.1 / 2012-09-10\n\nInitial release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "0.30.0 / 2016-04-28",
    "text": "0.30.0 / 2016-04-28\n\nBrought back Node v0.10 support. I didn’t realize there was still demand. Official support will end 2016-10-01."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "0.29.0 / 2016-04-27",
    "text": "0.29.0 / 2016-04-27\n\nBREAKING: removed support for Node v0.10. If you still want to use Node v0.10, everything should work except for ensureLink()/ensureSymlink(). Node v0.12 is still supported but will be dropped in the near future as well."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "0.28.0 / 2016-04-17",
    "text": "0.28.0 / 2016-04-17\n\nBREAKING: removed createOutputStream(). Use https://www.npmjs.com/package/create-output-stream. See: #192\nmkdirs()/mkdirsSync() check for invalid win32 path chars. See: #209, #237\nmkdirs()/mkdirsSync() if drive not mounted, error. See: [#93][#93]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "0.27.0 / 2016-04-15",
    "text": "0.27.0 / 2016-04-15\n\nadd dereference option to copySync(). #235"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "0.26.7 / 2016-03-16",
    "text": "0.26.7 / 2016-03-16\n\nfixed copy() if source and dest are the same. #230"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "0.26.6 / 2016-03-15",
    "text": "0.26.6 / 2016-03-15\n\nfixed if emptyDir() does not have a callback: #229"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "0.26.5 / 2016-01-27",
    "text": "0.26.5 / 2016-01-27\n\ncopy() with two arguments (w/o callback) was broken. See: #215"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "0.26.4 / 2016-01-05",
    "text": "0.26.4 / 2016-01-05\n\ncopySync() made preserveTimestamps default consistent with copy() which is false. See: #208"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "0.26.3 / 2015-12-17",
    "text": "0.26.3 / 2015-12-17\n\nfixed copy() hangup in copying blockDevice / characterDevice / /dev/null. See: #193"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "0.26.2 / 2015-11-02",
    "text": "0.26.2 / 2015-11-02\n\nfixed outputJson{Sync}() spacing adherence to fs.spaces"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "0.26.1 / 2015-11-02",
    "text": "0.26.1 / 2015-11-02\n\nfixed copySync() when clogger=true and the destination is read only. See: #190"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "0.26.0 / 2015-10-25",
    "text": "0.26.0 / 2015-10-25\n\nextracted the walk() function into its own module klaw."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "0.25.0 / 2015-10-24",
    "text": "0.25.0 / 2015-10-24\n\nnow has a file walker walk()"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "0.24.0 / 2015-08-28",
    "text": "0.24.0 / 2015-08-28\n\nremoved alias delete() and deleteSync(). See: #171"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "0.23.1 / 2015-08-07",
    "text": "0.23.1 / 2015-08-07\n\nBetter handling of errors for move() when moving across devices. #170\nensureSymlink() and ensureLink() should not throw errors if link exists. #169"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "0.23.0 / 2015-08-06",
    "text": "0.23.0 / 2015-08-06\n\nadded ensureLink{Sync}() and ensureSymlink{Sync}(). See: #165"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "0.22.1 / 2015-07-09",
    "text": "0.22.1 / 2015-07-09\n\nPrevent calling hasMillisResSync() on module load. See: #149. Fixes regression that was introduced in 0.21.0."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "0.22.0 / 2015-07-09",
    "text": "0.22.0 / 2015-07-09\n\npreserve permissions / ownership in copy(). See: [#54][#54]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "0.21.0 / 2015-07-04",
    "text": "0.21.0 / 2015-07-04\n\nadd option to preserve timestamps in copy() and copySync(). See: #141\nupdated graceful-fs@3.x to 4.x. This brings in features from amazing-graceful-fs (much cleaner code / less hacks)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "0.20.1 / 2015-06-23",
    "text": "0.20.1 / 2015-06-23\n\nfixed regression caused by latest jsonfile update: See: https://github.com/jprichardson/node-jsonfile/issues/26"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "0.20.0 / 2015-06-19",
    "text": "0.20.0 / 2015-06-19\n\nremoved jsonfile aliases with File in the name, they weren’t documented and probably weren’t in use e.g. this package had both fs.readJsonFile and fs.readJson that were aliases to each other, now use fs.readJson.\npreliminary walker created. Intentionally not documented. If you use it, it will almost certainly change and break your code.\nstarted moving tests inline\nupgraded to jsonfile@2.1.0, can now pass JSON revivers/replacers to readJson(), writeJson(), outputJson()"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "0.19.0 / 2015-06-08",
    "text": "0.19.0 / 2015-06-08\n\nfs.copy() had support for Node v0.8, dropped support"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "0.18.4 / 2015-05-22",
    "text": "0.18.4 / 2015-05-22\n\nfixed license field according to this: #136 and https://github.com/npm/npm/releases/tag/v2.10.0"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-23",
    "title": "3327 Research",
    "section": "0.18.3 / 2015-05-08",
    "text": "0.18.3 / 2015-05-08\n\nbugfix: handle EEXIST when clobbering on some Linux systems. #134"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-24",
    "title": "3327 Research",
    "section": "0.18.2 / 2015-04-17",
    "text": "0.18.2 / 2015-04-17\n\nbugfix: allow F_OK ([#120][#120])"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-25",
    "title": "3327 Research",
    "section": "0.18.1 / 2015-04-15",
    "text": "0.18.1 / 2015-04-15\n\nimproved windows support for move() a bit. https://github.com/jprichardson/node-fs-extra/commit/92838980f25dc2ee4ec46b43ee14d3c4a1d30c1b\nfixed a lot of tests for Windows (appveyor)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-26",
    "title": "3327 Research",
    "section": "0.18.0 / 2015-03-31",
    "text": "0.18.0 / 2015-03-31\n\nadded emptyDir() and emptyDirSync()"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-27",
    "title": "3327 Research",
    "section": "0.17.0 / 2015-03-28",
    "text": "0.17.0 / 2015-03-28\n\ncopySync added clobber option (before always would clobber, now if clobber is false it throws an error if the destination exists). Only works with files at the moment.\ncreateOutputStream() added. See: [#118][#118]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-28",
    "title": "3327 Research",
    "section": "0.16.5 / 2015-03-08",
    "text": "0.16.5 / 2015-03-08\n\nfixed fs.move when clobber is true and destination is a directory, it should clobber. [#114][#114]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-29",
    "title": "3327 Research",
    "section": "0.16.4 / 2015-03-01",
    "text": "0.16.4 / 2015-03-01\n\nfs.mkdirs fix infinite loop on Windows. See: See https://github.com/substack/node-mkdirp/pull/74 and https://github.com/substack/node-mkdirp/issues/66"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-30",
    "title": "3327 Research",
    "section": "0.16.3 / 2015-01-28",
    "text": "0.16.3 / 2015-01-28\n\nreverted https://github.com/jprichardson/node-fs-extra/commit/1ee77c8a805eba5b99382a2591ff99667847c9c9"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-31",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-31",
    "title": "3327 Research",
    "section": "0.16.2 / 2015-01-28",
    "text": "0.16.2 / 2015-01-28\n\nfixed fs.copy for Node v0.8 (support is temporary and will be removed in the near future)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-32",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-32",
    "title": "3327 Research",
    "section": "0.16.1 / 2015-01-28",
    "text": "0.16.1 / 2015-01-28\n\nif setImmediate is not available, fall back to process.nextTick"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-33",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-33",
    "title": "3327 Research",
    "section": "0.16.0 / 2015-01-28",
    "text": "0.16.0 / 2015-01-28\n\nbugfix fs.move() into itself. Closes #104\nbugfix fs.move() moving directory across device. Closes #108\nadded coveralls support\nbugfix: nasty multiple callback fs.copy() bug. Closes #98\nmisc fs.copy code cleanups"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-34",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-34",
    "title": "3327 Research",
    "section": "0.15.0 / 2015-01-21",
    "text": "0.15.0 / 2015-01-21\n\ndropped ncp, imported code in\nbecause of previous, now supports io.js\ngraceful-fs is now a dependency"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-35",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-35",
    "title": "3327 Research",
    "section": "0.14.0 / 2015-01-05",
    "text": "0.14.0 / 2015-01-05\n\nchanged copy/copySync from fs.copy(src, dest, [filters], callback) to fs.copy(src, dest, [options], callback) [#100][#100]\nremoved mockfs tests for mkdirp (this may be temporary, but was getting in the way of other tests)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-36",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-36",
    "title": "3327 Research",
    "section": "0.13.0 / 2014-12-10",
    "text": "0.13.0 / 2014-12-10\n\nremoved touch and touchSync methods (they didn’t handle permissions like UNIX touch)\nupdated \"ncp\": \"^0.6.0\" to \"ncp\": \"^1.0.1\"\nimported mkdirp => minimist and mkdirp are no longer dependences, should now appease people who wanted mkdirp to be --use_strict safe. See #59"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-37",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-37",
    "title": "3327 Research",
    "section": "0.12.0 / 2014-09-22",
    "text": "0.12.0 / 2014-09-22\n\ncopy symlinks in copySync() [#85][#85]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-38",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-38",
    "title": "3327 Research",
    "section": "0.11.1 / 2014-09-02",
    "text": "0.11.1 / 2014-09-02\n\nbugfix copySync() preserve file permissions [#80][#80]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-39",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-39",
    "title": "3327 Research",
    "section": "0.11.0 / 2014-08-11",
    "text": "0.11.0 / 2014-08-11\n\nupgraded \"ncp\": \"^0.5.1\" to \"ncp\": \"^0.6.0\"\nupgrade jsonfile\": \"^1.2.0\" to jsonfile\": \"^2.0.0\" => on write, json files now have \\n at end. Also adds options.throws to readJsonSync() see https://github.com/jprichardson/node-jsonfile#readfilesyncfilename-options for more details."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-40",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-40",
    "title": "3327 Research",
    "section": "0.10.0 / 2014-06-29",
    "text": "0.10.0 / 2014-06-29\n\nbugfix: upgaded \"jsonfile\": \"~1.1.0\" to \"jsonfile\": \"^1.2.0\", bumped minor because of jsonfile dep change from ~ to ^. #67"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-41",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-41",
    "title": "3327 Research",
    "section": "0.9.1 / 2014-05-22",
    "text": "0.9.1 / 2014-05-22\n\nremoved Node.js 0.8.x support, 0.9.0 was published moments ago and should have been done there"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-42",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-42",
    "title": "3327 Research",
    "section": "0.9.0 / 2014-05-22",
    "text": "0.9.0 / 2014-05-22\n\nupgraded ncp from ~0.4.2 to ^0.5.1, #58\nupgraded rimraf from ~2.2.6 to ^2.2.8\nupgraded mkdirp from 0.3.x to ^0.5.0\nadded methods ensureFile(), ensureFileSync()\nadded methods ensureDir(), ensureDirSync() #31\nadded move() method. From: https://github.com/andrewrk/node-mv"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-43",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-43",
    "title": "3327 Research",
    "section": "0.8.1 / 2013-10-24",
    "text": "0.8.1 / 2013-10-24\n\ncopy failed to return an error to the callback if a file doesn’t exist (ulikoehler #38, #39)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-44",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-44",
    "title": "3327 Research",
    "section": "0.8.0 / 2013-10-14",
    "text": "0.8.0 / 2013-10-14\n\nfilter implemented on copy() and copySync(). (Srirangan / #36)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-45",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-45",
    "title": "3327 Research",
    "section": "0.7.1 / 2013-10-12",
    "text": "0.7.1 / 2013-10-12\n\ncopySync() implemented (Srirangan / #33)\nupdated to the latest jsonfile version 1.1.0 which gives options params for the JSON methods. Closes #32"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-46",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-46",
    "title": "3327 Research",
    "section": "0.7.0 / 2013-10-07",
    "text": "0.7.0 / 2013-10-07\n\nupdate readme conventions\ncopy() now works if destination directory does not exist. Closes #29"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-47",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-47",
    "title": "3327 Research",
    "section": "0.6.4 / 2013-09-05",
    "text": "0.6.4 / 2013-09-05\n\nchanged homepage field in package.json to remove NPM warning"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-48",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-48",
    "title": "3327 Research",
    "section": "0.6.3 / 2013-06-28",
    "text": "0.6.3 / 2013-06-28\n\nchanged JSON spacing default from 4 to 2 to follow Node conventions\nupdated jsonfile dep\nupdated rimraf dep"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-49",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-49",
    "title": "3327 Research",
    "section": "0.6.2 / 2013-06-28",
    "text": "0.6.2 / 2013-06-28\n\nadded .npmignore, #25"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-50",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-50",
    "title": "3327 Research",
    "section": "0.6.1 / 2013-05-14",
    "text": "0.6.1 / 2013-05-14\n\nmodified for strict mode, closes #24\nadded outputJson()/outputJsonSync(), closes #23"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-51",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-51",
    "title": "3327 Research",
    "section": "0.6.0 / 2013-03-18",
    "text": "0.6.0 / 2013-03-18\n\nremoved node 0.6 support\nadded node 0.10 support\nupgraded to latest ncp and rimraf.\noptional graceful-fs support. Closes #17"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-52",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-52",
    "title": "3327 Research",
    "section": "0.5.0 / 2013-02-03",
    "text": "0.5.0 / 2013-02-03\n\nRemoved readTextFile.\nRenamed readJSONFile to readJSON and readJson, same with write.\nRestructured documentation a bit. Added roadmap."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-53",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-53",
    "title": "3327 Research",
    "section": "0.4.0 / 2013-01-28",
    "text": "0.4.0 / 2013-01-28\n\nSet default spaces in jsonfile from 4 to 2.\nUpdated testutil deps for tests.\nRenamed touch() to createFile()\nAdded outputFile() and outputFileSync()\nChanged creation of testing diretories so the /tmp dir is not littered.\nAdded readTextFile() and readTextFileSync()."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-54",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-54",
    "title": "3327 Research",
    "section": "0.3.2 / 2012-11-01",
    "text": "0.3.2 / 2012-11-01\n\nAdded touch() and touchSync() methods."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-55",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-55",
    "title": "3327 Research",
    "section": "0.3.1 / 2012-10-11",
    "text": "0.3.1 / 2012-10-11\n\nFixed some stray globals."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-56",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-56",
    "title": "3327 Research",
    "section": "0.3.0 / 2012-10-09",
    "text": "0.3.0 / 2012-10-09\n\nRemoved all CoffeeScript from tests.\nRenamed mkdir to mkdirs/mkdirp."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-57",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-57",
    "title": "3327 Research",
    "section": "0.2.1 / 2012-09-11",
    "text": "0.2.1 / 2012-09-11\n\nUpdated rimraf dep."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-58",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-58",
    "title": "3327 Research",
    "section": "0.2.0 / 2012-09-10",
    "text": "0.2.0 / 2012-09-10\n\nRewrote module into JavaScript. (Must still rewrite tests into JavaScript)\nAdded all methods of [jsonfile][https://github.com/jprichardson/node-jsonfile]\nAdded Travis-CI."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-59",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-59",
    "title": "3327 Research",
    "section": "0.1.3 / 2012-08-13",
    "text": "0.1.3 / 2012-08-13\n\nAdded method readJSONFile."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-60",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-60",
    "title": "3327 Research",
    "section": "0.1.2 / 2012-06-15",
    "text": "0.1.2 / 2012-06-15\n\nBug fix: deleteSync() didn’t exist.\nVerified Node v0.8 compatibility."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-61",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-61",
    "title": "3327 Research",
    "section": "0.1.1 / 2012-06-15",
    "text": "0.1.1 / 2012-06-15\n\nFixed bug in remove()/delete() that wouldn’t execute the function if a callback wasn’t passed."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-62",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-62",
    "title": "3327 Research",
    "section": "0.1.0 / 2012-05-31",
    "text": "0.1.0 / 2012-05-31\n\nRenamed copyFile() to copy(). copy() can now copy directories (recursively) too.\nRenamed rmrf() to remove().\nremove() aliased with delete().\nAdded mkdirp capabilities. Named: mkdir(). Hides Node.js native mkdir().\nInstead of exporting the native fs module with new functions, I now copy over the native methods to a new object and export that instead."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-63",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-63",
    "title": "3327 Research",
    "section": "0.0.4 / 2012-03-14",
    "text": "0.0.4 / 2012-03-14\n\nRemoved CoffeeScript dependency"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-64",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/fs-extra/CHANGELOG.html#section-64",
    "title": "3327 Research",
    "section": "0.0.3 / 2012-01-11",
    "text": "0.0.3 / 2012-01-11\n\nAdded methods rmrf and rmrfSync\nMoved tests from Jasmine to Mocha\n\n[#126]: https://github.com/jprichardson/node-fs-extra/issues/126 ” TypeError: Object # has no method ‘access’” [#125]: https://github.com/jprichardson/node-fs-extra/issues/125 “Question: What do the *Sync function do different from non-sync” [#124]: https://github.com/jprichardson/node-fs-extra/issues/124 “move with clobber option ‘ENOTEMPTY’” [#123]: https://github.com/jprichardson/node-fs-extra/issues/123 “Only copy the content of a directory” [#122]: https://github.com/jprichardson/node-fs-extra/pull/122 “Update section links in README to match current section ids.” [#121]: https://github.com/jprichardson/node-fs-extra/issues/121 “emptyDir is undefined” [#120]: https://github.com/jprichardson/node-fs-extra/issues/120 “usage bug caused by shallow cloning methods of ‘graceful-fs’” [#119]: https://github.com/jprichardson/node-fs-extra/issues/119 “mkdirs and ensureDir never invoke callback and consume CPU indefinitely if provided a path with invalid characters on Windows” [#118]: https://github.com/jprichardson/node-fs-extra/pull/118 “createOutputStream” [#117]: https://github.com/jprichardson/node-fs-extra/pull/117 “Fixed issue with slash separated paths on windows” [#116]: https://github.com/jprichardson/node-fs-extra/issues/116 “copySync can only copy directories not files [documentation, feature-copy]” [#115]: https://github.com/jprichardson/node-fs-extra/issues/115 “.Copy & .CopySync [feature-copy]” [#114]: https://github.com/jprichardson/node-fs-extra/issues/114 “Fails to move (rename) directory to non-empty directory even with clobber: true” [#113]: https://github.com/jprichardson/node-fs-extra/issues/113 “fs.copy seems to callback early if the destination file already exists” [#112]: https://github.com/jprichardson/node-fs-extra/pull/112 “Copying a file into an existing directory” [#111]: https://github.com/jprichardson/node-fs-extra/pull/111 “Moving a file into an existing directory” [#110]: https://github.com/jprichardson/node-fs-extra/pull/110 “Moving a file into an existing directory” [#109]: https://github.com/jprichardson/node-fs-extra/issues/109 “fs.move across windows drives fails” [#108]: https://github.com/jprichardson/node-fs-extra/issues/108 “fse.move directories across multiple devices doesn’t work” [#107]: https://github.com/jprichardson/node-fs-extra/pull/107 “Check if dest path is an existing dir and copy or move source in it” [#106]: https://github.com/jprichardson/node-fs-extra/issues/106 “fse.copySync crashes while copying across devices D: [feature-copy]” [#105]: https://github.com/jprichardson/node-fs-extra/issues/105 “fs.copy hangs on iojs” [#104]: https://github.com/jprichardson/node-fs-extra/issues/104 “fse.move deletes folders [bug]” [#103]: https://github.com/jprichardson/node-fs-extra/issues/103 “Error: EMFILE with copy” [#102]: https://github.com/jprichardson/node-fs-extra/issues/102 “touch / touchSync was removed ?” [#101]: https://github.com/jprichardson/node-fs-extra/issues/101 “fs-extra promisified” [#100]: https://github.com/jprichardson/node-fs-extra/pull/100 “copy: options object or filter to pass to ncp” [#99]: https://github.com/jprichardson/node-fs-extra/issues/99 “ensureDir() modes [future]” [#98]: https://github.com/jprichardson/node-fs-extra/issues/98 “fs.copy() incorrect async behavior [bug]” [#97]: https://github.com/jprichardson/node-fs-extra/pull/97 “use path.join; fix copySync bug” [#96]: https://github.com/jprichardson/node-fs-extra/issues/96 “destFolderExists in copySync is always undefined.” [#95]: https://github.com/jprichardson/node-fs-extra/pull/95 “Using graceful-ncp instead of ncp” [#94]: https://github.com/jprichardson/node-fs-extra/issues/94 “Error: EEXIST, file already exists ‘../mkdirp/bin/cmd.js’ on fs.copySync() [enhancement, feature-copy]” [#93]: https://github.com/jprichardson/node-fs-extra/issues/93 “Confusing error if drive not mounted [enhancement]” [#92]: https://github.com/jprichardson/node-fs-extra/issues/92 “Problems with Bluebird” [#91]: https://github.com/jprichardson/node-fs-extra/issues/91 “fs.copySync(‘/test’, ‘/haha’) is different with ‘cp -r /test /haha’ [enhancement]” [#90]: https://github.com/jprichardson/node-fs-extra/issues/90 “Folder creation and file copy is Happening in 64 bit machine but not in 32 bit machine” [#89]: https://github.com/jprichardson/node-fs-extra/issues/89 “Error: EEXIST using fs-extra’s fs.copy to copy a directory on Windows” [#88]: https://github.com/jprichardson/node-fs-extra/issues/88 “Stacking those libraries” [#87]: https://github.com/jprichardson/node-fs-extra/issues/87 “createWriteStream + outputFile = ?” [#86]: https://github.com/jprichardson/node-fs-extra/issues/86 “no moveSync?” [#85]: https://github.com/jprichardson/node-fs-extra/pull/85 “Copy symlinks in copySync” [#84]: https://github.com/jprichardson/node-fs-extra/issues/84 “Push latest version to npm ?” [#83]: https://github.com/jprichardson/node-fs-extra/issues/83 “Prevent copying a directory into itself [feature-copy]” [#82]: https://github.com/jprichardson/node-fs-extra/pull/82 “README updates for move” [#81]: https://github.com/jprichardson/node-fs-extra/issues/81 “fd leak after fs.move” [#80]: https://github.com/jprichardson/node-fs-extra/pull/80 “Preserve file mode in copySync” [#79]: https://github.com/jprichardson/node-fs-extra/issues/79 “fs.copy only .html file empty” [#78]: https://github.com/jprichardson/node-fs-extra/pull/78 “copySync was not applying filters to directories” [#77]: https://github.com/jprichardson/node-fs-extra/issues/77 “Create README reference to bluebird” [#76]: https://github.com/jprichardson/node-fs-extra/issues/76 “Create README reference to typescript” [#75]: https://github.com/jprichardson/node-fs-extra/issues/75 “add glob as a dep? [question]” [#74]: https://github.com/jprichardson/node-fs-extra/pull/74 “including new emptydir module” [#73]: https://github.com/jprichardson/node-fs-extra/pull/73 “add dependency status in readme” [#72]: https://github.com/jprichardson/node-fs-extra/pull/72 “Use svg instead of png to get better image quality” [#71]: https://github.com/jprichardson/node-fs-extra/issues/71 “fse.copy not working on Windows 7 x64 OS, but, copySync does work” [#70]: https://github.com/jprichardson/node-fs-extra/issues/70 “Not filter each file, stops on first false [bug]” [#69]: https://github.com/jprichardson/node-fs-extra/issues/69 “How to check if folder exist and read the folder name” [#68]: https://github.com/jprichardson/node-fs-extra/issues/68 “consider flag to readJsonSync (throw false) [enhancement]” [#67]: https://github.com/jprichardson/node-fs-extra/issues/67 “docs for readJson incorrectly states that is accepts options” [#66]: https://github.com/jprichardson/node-fs-extra/issues/66 “ENAMETOOLONG” [#65]: https://github.com/jprichardson/node-fs-extra/issues/65 “exclude filter in fs.copy” [#64]: https://github.com/jprichardson/node-fs-extra/issues/64 “Announce: mfs - monitor your fs-extra calls” [#63]: https://github.com/jprichardson/node-fs-extra/issues/63 “Walk” [#62]: https://github.com/jprichardson/node-fs-extra/issues/62 “npm install fs-extra doesn’t work” [#61]: https://github.com/jprichardson/node-fs-extra/issues/61 “No longer supports node 0.8 due to use of ^ in package.json dependencies” [#60]: https://github.com/jprichardson/node-fs-extra/issues/60 “chmod & chown for mkdirs” [#59]: https://github.com/jprichardson/node-fs-extra/issues/59 “Consider including mkdirp and making fs-extra”–use_strict” safe [question]” [#58]: https://github.com/jprichardson/node-fs-extra/issues/58 “Stack trace not included in fs.copy error” [#57]: https://github.com/jprichardson/node-fs-extra/issues/57 “Possible to include wildcards in delete?” [#56]: https://github.com/jprichardson/node-fs-extra/issues/56 “Crash when have no access to write to destination file in copy” [#55]: https://github.com/jprichardson/node-fs-extra/issues/55 “Is it possible to have any console output similar to Grunt copy module?” [#54]: https://github.com/jprichardson/node-fs-extra/issues/54 “copy does not preserve file ownership and permissons” [#53]: https://github.com/jprichardson/node-fs-extra/issues/53 “outputFile() - ability to write data in appending mode” [#52]: https://github.com/jprichardson/node-fs-extra/pull/52 “This fixes (what I think) is a bug in copySync” [#51]: https://github.com/jprichardson/node-fs-extra/pull/51 “Add a Bitdeli Badge to README” [#50]: https://github.com/jprichardson/node-fs-extra/issues/50 “Replace mechanism in createFile” [#49]: https://github.com/jprichardson/node-fs-extra/pull/49 “update rimraf to v2.2.6” [#48]: https://github.com/jprichardson/node-fs-extra/issues/48 “fs.copy issue [bug]” [#47]: https://github.com/jprichardson/node-fs-extra/issues/47 “Bug in copy - callback called on readStream”close” - Fixed in ncp 0.5.0” [#46]: https://github.com/jprichardson/node-fs-extra/pull/46 “update copyright year” [#45]: https://github.com/jprichardson/node-fs-extra/pull/45 “Added note about fse.outputFile() being the one that overwrites” [#44]: https://github.com/jprichardson/node-fs-extra/pull/44 “Proposal: Stream support” [#43]: https://github.com/jprichardson/node-fs-extra/issues/43 “Better error reporting” [#42]: https://github.com/jprichardson/node-fs-extra/issues/42 “Performance issue?” [#41]: https://github.com/jprichardson/node-fs-extra/pull/41 “There does seem to be a synchronous version now” [#40]: https://github.com/jprichardson/node-fs-extra/issues/40 “fs.copy throw unexplained error ENOENT, utime” [#39]: https://github.com/jprichardson/node-fs-extra/pull/39 “Added regression test for copy() return callback on error” [#38]: https://github.com/jprichardson/node-fs-extra/pull/38 “Return err in copy() fstat cb, because stat could be undefined or null” [#37]: https://github.com/jprichardson/node-fs-extra/issues/37 “Maybe include a line reader? [enhancement, question]” [#36]: https://github.com/jprichardson/node-fs-extra/pull/36 “filter parameter fs.copy and fs.copySync” [#35]: https://github.com/jprichardson/node-fs-extra/pull/35 “filter parameter fs.copy and fs.copySync” [#34]: https://github.com/jprichardson/node-fs-extra/issues/34 “update docs to include options for JSON methods [enhancement]” [#33]: https://github.com/jprichardson/node-fs-extra/pull/33 “fs_extra.copySync” [#32]: https://github.com/jprichardson/node-fs-extra/issues/32 “update to latest jsonfile [enhancement]” [#31]: https://github.com/jprichardson/node-fs-extra/issues/31 “Add ensure methods [enhancement]” [#30]: https://github.com/jprichardson/node-fs-extra/issues/30 “update package.json optional dep graceful-fs” [#29]: https://github.com/jprichardson/node-fs-extra/issues/29 “Copy failing if dest directory doesn’t exist. Is this intended?” [#28]: https://github.com/jprichardson/node-fs-extra/issues/28 “homepage field must be a string url. Deleted.” [#27]: https://github.com/jprichardson/node-fs-extra/issues/27 “Update Readme” [#26]: https://github.com/jprichardson/node-fs-extra/issues/26 “Add readdir recursive method. [enhancement]” [#25]: https://github.com/jprichardson/node-fs-extra/pull/25 “adding an .npmignore file” [#24]: https://github.com/jprichardson/node-fs-extra/issues/24 “[bug] cannot run in strict mode [bug]” [#23]: https://github.com/jprichardson/node-fs-extra/issues/23 “writeJSON() should create parent directories” [#22]: https://github.com/jprichardson/node-fs-extra/pull/22 “Add a limit option to mkdirs()” [#21]: https://github.com/jprichardson/node-fs-extra/issues/21 “touch() in 0.10.0” [#20]: https://github.com/jprichardson/node-fs-extra/issues/20 “fs.remove yields callback before directory is really deleted” [#19]: https://github.com/jprichardson/node-fs-extra/issues/19 “fs.copy err is empty array” [#18]: https://github.com/jprichardson/node-fs-extra/pull/18 “Exposed copyFile Function” [#17]: https://github.com/jprichardson/node-fs-extra/issues/17 “Use require(\"graceful-fs\") if found instead of require(\"fs\")” [#16]: https://github.com/jprichardson/node-fs-extra/pull/16 “Update README.md” [#15]: https://github.com/jprichardson/node-fs-extra/issues/15 “Implement cp -r but sync aka copySync. [enhancement]” [#14]: https://github.com/jprichardson/node-fs-extra/issues/14 “fs.mkdirSync is broken in 0.3.1” [#13]: https://github.com/jprichardson/node-fs-extra/issues/13 “Thoughts on including a directory tree / file watcher? [enhancement, question]” [#12]: https://github.com/jprichardson/node-fs-extra/issues/12 “copyFile & copyFileSync are global” [#11]: https://github.com/jprichardson/node-fs-extra/issues/11 “Thoughts on including a file walker? [enhancement, question]” [#10]: https://github.com/jprichardson/node-fs-extra/issues/10 “move / moveFile API [enhancement]” [#9]: https://github.com/jprichardson/node-fs-extra/issues/9 “don’t import normal fs stuff into fs-extra” [#8]: https://github.com/jprichardson/node-fs-extra/pull/8 “Update rimraf to latest version” [#6]: https://github.com/jprichardson/node-fs-extra/issues/6 “Remove CoffeeScript development dependency” [#5]: https://github.com/jprichardson/node-fs-extra/issues/5 “comments on naming” [#4]: https://github.com/jprichardson/node-fs-extra/issues/4 “version bump to 0.2” [#3]: https://github.com/jprichardson/node-fs-extra/pull/3 “Hi! I fixed some code for you!” [#2]: https://github.com/jprichardson/node-fs-extra/issues/2 “Merge with fs.extra and mkdirp” [#1]: https://github.com/jprichardson/node-fs-extra/issues/1 “file-extra npm !exist”\n\n\n\n \n\n\n \n\n  \n    Proudly supported by    \n      \n        \n    \n    About"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/semver/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/semver/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "5.7",
    "text": "5.7\n\nAdd minVersion method"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/semver/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/semver/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "5.6",
    "text": "5.6\n\nMove boolean loose param to an options object, with backwards-compatibility protection.\nAdd ability to opt out of special prerelease version handling with the includePrerelease option flag."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/semver/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/semver/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "5.5",
    "text": "5.5\n\nAdd version coercion capabilities"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/semver/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/semver/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "5.4",
    "text": "5.4\n\nAdd intersection checking"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/semver/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/semver/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "5.3",
    "text": "5.3\n\nAdd minSatisfying method"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/semver/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/semver/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "5.2",
    "text": "5.2\n\nAdd prerelease(v) that returns prerelease components"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/semver/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/semver/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "5.1",
    "text": "5.1\n\nAdd Backus-Naur for ranges\nRemove excessively cute inspection methods"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/semver/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/solc/node_modules/semver/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "5.0",
    "text": "5.0\n\nRemove AMD/Browserified build artifacts\nFix ltr and gtr when using the * range\nFix for range * with a prerelease identifier"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-bigint/CHANGELOG.html#v1.0.4---2021-08-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-bigint/CHANGELOG.html#v1.0.4---2021-08-11",
    "title": "3327 Research",
    "section": "v1.0.4 - 2021-08-11",
    "text": "v1.0.4 - 2021-08-11\n\nCommits\n\n[eslint] remove unnecessary eslintrc file 7220aa5\n[readme] add github actions/codecov badges 053a071\n[Deps] add has-bigints as a runtime dependency 0fc3c9d\n[Dev Deps] update tape 145f11d"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-bigint/CHANGELOG.html#v1.0.3---2021-08-06",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-bigint/CHANGELOG.html#v1.0.3---2021-08-06",
    "title": "3327 Research",
    "section": "v1.0.3 - 2021-08-06",
    "text": "v1.0.3 - 2021-08-06\n\nCommits\n\n[Tests] use has-tostringtag for easier checking of Symbol.toStringTag 3b44080\n[Dev Deps] update auto-changelog, eslint, object-inspect, tape e4d4a6c\n[Fix] use has-bigints for more robust BigInt detection 7bb9d7a"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-bigint/CHANGELOG.html#v1.0.2---2021-05-04",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-bigint/CHANGELOG.html#v1.0.2---2021-05-04",
    "title": "3327 Research",
    "section": "v1.0.2 - 2021-05-04",
    "text": "v1.0.2 - 2021-05-04\n\nCommits\n\n[meta] do not publish github action workflow files 276d677\n[actions] use node/install instead of node/run; use codecov action cea7fb6\n[readme] fix repo URLs; remove travis badge c8e7c36\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, has-symbols, object-inspect, tape 32f3d90\n[Dev Deps] update eslint, @ljharb/eslint-config, object-inspect, tape c2f20f5\n[meta] remove unneeded token; update checkout action 94e46e9\n[meta] use prepublishOnly script for npm 7+ 3e663ec"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-bigint/CHANGELOG.html#v1.0.1---2020-11-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-bigint/CHANGELOG.html#v1.0.1---2020-11-30",
    "title": "3327 Research",
    "section": "v1.0.1 - 2020-11-30",
    "text": "v1.0.1 - 2020-11-30\n\nCommits\n\n[Tests] use shared travis-ci configs 28f1211\n[Tests] migrate tests to Github Actions 0998c64\n[meta] add auto-changelog 2352de6\n[Tests] run nyc on all tests 9c16a9a\n[Dev Deps] update eslint, @ljharb/eslint-config, auto-changelog, object-inspect, tape 4cd0edd\n[actions] add automatic rebasing / merge commit blocking f0f4b91\n[actions] add “Allow Edits” workflow 7f4f46e\n[meta] create FUNDING.yml 2d0cb9a\n[Dev Deps] update eslint, @ljharb/eslint-config, aud 0ee110e\n[Dev Deps] update eslint, @ljharb/eslint-config, has-symbols, object-inspect, tape 5bb7f3a\n[Dev Deps] update eslint, @ljharb/eslint-config, safe-publish-latest, tape d3d67d0\n[Dev Deps] update auto-changelog, tape 54e270f\n[Dev Deps] update @ljharb/eslint-config, tape d82bfe7\n[Dev Deps] update auto-changelog; add aud 9c34bd1\n[Tests] add missing posttest script 0690bd9\n[meta] add funding field 7ca36d0\n[actions] switch Automatic Rebase workflow to pull_request_target event 5ffa8da\n[Dev Deps] update eslint 8512c2f\n[Tests] only audit prod deps f2147dc\n[readme] fix header d6eff75"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-bigint/CHANGELOG.html#v1.0.0---2018-09-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-bigint/CHANGELOG.html#v1.0.0---2018-09-20",
    "title": "3327 Research",
    "section": "v1.0.0 - 2018-09-20",
    "text": "v1.0.0 - 2018-09-20\n\nCommits\n\n[Tests] add tests 847f12a\nInitial commit b53f3c6\nreadme 66c15fe\nImplementation c2c0974\npackage.json 98b174c\nOnly apps should have lockfiles a77c74b"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which-boxed-primitive/CHANGELOG.html#v1.0.2---2020-12-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which-boxed-primitive/CHANGELOG.html#v1.0.2---2020-12-14",
    "title": "3327 Research",
    "section": "v1.0.2 - 2020-12-14",
    "text": "v1.0.2 - 2020-12-14\n\nCommits\n\n[Tests] use shared travis-ci configs 8674582\n[Tests] migrate tests to Github Actions dff6643\n[meta] do not publish github action workflow files b26112a\n[meta] make auto-changelog config consistent 8d10175\n[readme] fix repo URLs, remove defunct badges ab8db24\n[Tests] run nyc on all tests; use tape runner 7d084df\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog, object-inspect, tape 576f6f3\n[actions] add automatic rebasing / merge commit blocking 97efa53\n[actions] add “Allow Edits” workflow fb1b4f7\n[Dev Deps] update eslint, @ljharb/eslint-config, has-symbols, object-inspect, safe-publish-latest 1e03c61\n[Deps] update is-boolean-object, is-number-object, is-string, is-symbol 13673df\n[Dev Deps] update auto-changelog, in-publish, tape 65a0e15\n[Dev Deps] update eslint, @ljharb/eslint-config, tape f8a0afe\n[Deps] update is-bigint, is-boolean-object e7a1ce2\n[actions] switch Automatic Rebase workflow to pull_request_target event e46f193\n[Dev Deps] update @ljharb/eslint-config, tape df3da14\n[Dev Deps] update auto-changelog; add aud e2e8a12\n[meta] add funding field 7df404b\n[Dev Deps] update auto-changelog 0d6b76d\n[Tests] only audit prod deps 246151c\n[meta] fix changelog c2d1685\n[readme] Fix spelling error 25fb2b5"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which-boxed-primitive/CHANGELOG.html#v1.0.1---2019-08-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which-boxed-primitive/CHANGELOG.html#v1.0.1---2019-08-10",
    "title": "3327 Research",
    "section": "v1.0.1 - 2019-08-10",
    "text": "v1.0.1 - 2019-08-10\n\nCommits\n\n[meta] avoid running safe-publish-latest when not publishing df44b27"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which-boxed-primitive/CHANGELOG.html#v1.0.0---2019-08-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which-boxed-primitive/CHANGELOG.html#v1.0.0---2019-08-10",
    "title": "3327 Research",
    "section": "v1.0.0 - 2019-08-10",
    "text": "v1.0.0 - 2019-08-10\n\nCommits\n\n[Tests] add .travis.yml 764b0cf\nInitial commit da7d068\nreadme 1395bb2\n[Tests] add tests 0ff580f\nimplementation 8811c32\nnpm init cffdea9\n[Tests] add npm run lint a8be993\n[meta] add FUNDING.yml 941258c\nOnly apps should have lockfiles 6857316\n[Tests] use npx aud in posttest ee48a91"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/lodash/release.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/lodash/release.html",
    "title": "3327 Research",
    "section": "",
    "text": "npm run build npm run doc npm i git clone –depth=10 –branch=master git@github.com:lodash-archive/lodash-cli.git ./node_modules/lodash-cli mkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json cd ../../; npm i –production; cd ../../ node ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js node ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package cp lodash.js npm-package/lodash.js cp dist/lodash.min.js npm-package/lodash.min.js cp LICENSE npm-package/LICENSE\n\nClone two repos Bump lodash version in package.json, readme, package=locak, lodash.js npm run build npm run doc\nupdate mappings in ldoash-cli\ncopy ldoash into lodash-cli node modules and package json.\n\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js node ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\n\nClone the two repositories:\n\n$ git clone https://github.com/lodash/lodash.git\n$ git clone https://github.com/bnjmnt4n/lodash-cli.git\n\nUpdate lodash-cli to accomdate changes in lodash source. This can typically involve adding new function dependency mappings in lib/mappings.js. Sometimes, additional changes might be needed for more involved functions.\nIn the lodash repository, update references to the lodash version in README.md, lodash.js, package.jsona nd package-lock.json\nRun:\n\nnpm run build\nnpm run doc\nnode ../lodash-cli/bin/lodash core -o ./dist/lodash.core.js\n\nAdd a commit and tag the release mkdir ../lodash-temp cp lodash.js dist/lodash.min.js dist/lodash.core.js dist/lodash.core.min.js ../lodash-temp/ node ../lodash-cli/bin/lodash modularize exports=node -o . cp ../lodash-temp/lodash.core.js core.js cp ../lodash-temp/lodash.core.min.js core.min.js cp ../lodash-temp/lodash.js lodash.js cp ../lodash-temp/lodash.min.js lodash.min.js\n\n❯ node ../lodash-cli/bin/lodash modularize exports=es -o ."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-2.3.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-2.3.0",
    "title": "3327 Research",
    "section": "2021-03-05, Version 2.3.0",
    "text": "2021-03-05, Version 2.3.0\n\nFix use require.main instead of module.parent #34."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-2.2.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-2.2.0",
    "title": "3327 Research",
    "section": "2020-10-28, Version 2.2.0",
    "text": "2020-10-28, Version 2.2.0\n\nAdded V8_COMPILE_CACHE_CACHE_DIR option #23."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-2.1.1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-2.1.1",
    "title": "3327 Research",
    "section": "2020-05-30, Version 2.1.1",
    "text": "2020-05-30, Version 2.1.1\n\nStop using process.umask() #28."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-2.1.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-2.1.0",
    "title": "3327 Research",
    "section": "2019-08-04, Version 2.1.0",
    "text": "2019-08-04, Version 2.1.0\n\nFix Electron by calling the module wrapper with Buffer #10."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-2.0.3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-2.0.3",
    "title": "3327 Research",
    "section": "2019-05-10, Version 2.0.3",
    "text": "2019-05-10, Version 2.0.3\n\nAdd LICENSE file #19.\nAdd “repository” to package.json (see eea336e).\nSupport require.resolve.paths (added in Node v8.9.0) #20/#22."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-2.0.2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-2.0.2",
    "title": "3327 Research",
    "section": "2018-08-06, Version 2.0.2",
    "text": "2018-08-06, Version 2.0.2\n\nRe-publish."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-2.0.1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-2.0.1",
    "title": "3327 Research",
    "section": "2018-08-06, Version 2.0.1",
    "text": "2018-08-06, Version 2.0.1\n\nSupport require.resolve options (added in Node v8.9.0)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-2.0.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-2.0.0",
    "title": "3327 Research",
    "section": "2018-04-30, Version 2.0.0",
    "text": "2018-04-30, Version 2.0.0\n\nUse Buffer.alloc instead of new Buffer().\nDrop support for Node 5.x."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-1.1.2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-1.1.2",
    "title": "3327 Research",
    "section": "2018-01-23, Version 1.1.2",
    "text": "2018-01-23, Version 1.1.2\n\nInstead of checking for process.versions.v8, check that script.cachedDataProduced is true (rather than null/undefined) for support to be considered existent."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-1.1.1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-1.1.1",
    "title": "3327 Research",
    "section": "2018-01-23, Version 1.1.1",
    "text": "2018-01-23, Version 1.1.1\n\nCheck for the existence of process.versions.v8 before attaching hook (see f8b0388)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-1.1.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-1.1.0",
    "title": "3327 Research",
    "section": "2017-03-27, Version 1.1.0",
    "text": "2017-03-27, Version 1.1.0\n\nSafer cache directory creation (see bcb3b12).\n\nThe cache is now suffixed with the user’s uid on POSIX systems (i.e. /path/to/tmp/v8-compile-cache-1234)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-1.0.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/v8-compile-cache-lib/CHANGELOG.html#version-1.0.0",
    "title": "3327 Research",
    "section": "2017-02-21, Version 1.0.0",
    "text": "2017-02-21, Version 1.0.0\n\nInitial release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-is-absolute/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-is-absolute/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install --save path-is-absolute"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-is-absolute/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-is-absolute/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst pathIsAbsolute = require('path-is-absolute');\n\n// Running on Linux\npathIsAbsolute('/home/foo');\n//=> true\npathIsAbsolute('C:/Users/foo');\n//=> false\n\n// Running on Windows\npathIsAbsolute('C:/Users/foo');\n//=> true\npathIsAbsolute('/home/foo');\n//=> false\n\n// Running on any OS\npathIsAbsolute.posix('/home/foo');\n//=> true\npathIsAbsolute.posix('C:/Users/foo');\n//=> false\npathIsAbsolute.win32('C:/Users/foo');\n//=> true\npathIsAbsolute.win32('/home/foo');\n//=> false"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-is-absolute/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-is-absolute/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\nSee the path.isAbsolute() docs.\n\npathIsAbsolute(path)\n\n\npathIsAbsolute.posix(path)\nPOSIX specific version.\n\n\npathIsAbsolute.win32(path)\nWindows specific version."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-is-absolute/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-is-absolute/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/stacktrace-parser/node_modules/type-fest/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/stacktrace-parser/node_modules/type-fest/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install type-fest\nRequires TypeScript >=3.2"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/stacktrace-parser/node_modules/type-fest/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/stacktrace-parser/node_modules/type-fest/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nimport {Except} from 'type-fest';\n\ntype Foo = {\n    unicorn: string;\n    rainbow: boolean;\n};\n\ntype FooWithoutRainbow = Except<Foo, 'rainbow'>;\n//=> {unicorn: string}"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/stacktrace-parser/node_modules/type-fest/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/stacktrace-parser/node_modules/type-fest/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\nClick the type names for complete docs.\n\nBasic\n\nPrimitive - Matches any primitive value.\nClass - Matches a class constructor.\nTypedArray - Matches any typed array, like Uint8Array or Float64Array.\nJsonObject - Matches a JSON object.\nJsonArray - Matches a JSON array.\nJsonValue - Matches any valid JSON value.\nObservableLike - Matches a value that is like an Observable.\n\n\n\nUtilities\n\nExcept - Create a type from an object type without certain keys. This is a stricter version of Omit.\nMutable - Convert an object with readonly properties into a mutable object. Inverse of Readonly<T>.\nMerge - Merge two types into a new type. Keys of the second type overrides keys of the first type.\nMergeExclusive - Create a type that has mutually exclusive properties.\nRequireAtLeastOne - Create a type that requires at least one of the given properties.\nReadonlyDeep - Create a deeply immutable version of a object/Map/Set/Array type.\nLiteralUnion - Create a union type by combining primitive types and literal types without sacrificing auto-completion in IDEs for the literal type part of the union. Workaround for Microsoft/TypeScript#29729.\nPromisable - Create a type that represents either the value or the value wrapped in PromiseLike.\nOpaque - Create an opaque type.\n\n\n\nMiscellaneous\n\nPackageJson - Type for npm’s package.json file."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/stacktrace-parser/node_modules/type-fest/readme.html#declined-types",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/stacktrace-parser/node_modules/type-fest/readme.html#declined-types",
    "title": "3327 Research",
    "section": "Declined types",
    "text": "Declined types\nIf we decline a type addition, we will make sure to document the better solution here.\n\nDiff and Spread - The PR author didn’t provide any real-world use-cases and the PR went stale. If you think this type is useful, provide some real-world use-cases and we might reconsider."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/stacktrace-parser/node_modules/type-fest/readme.html#tips",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/stacktrace-parser/node_modules/type-fest/readme.html#tips",
    "title": "3327 Research",
    "section": "Tips",
    "text": "Tips\n\nBuilt-in types\nThere are many advanced types most users don’t know about.\n\nPartial<T> - Make all properties in T optional.\nRequired<T> - Make all properties in T required.\nReadonly<T> - Make all properties in T readonly.\nPick<T, K> - From T, pick a set of properties whose keys are in the union K.\nRecord<K, T> - Construct a type with a set of properties K of type T.\nExclude<T, U> - Exclude from T those types that are assignable to U.\nExtract<T, U> - Extract from T those types that are assignable to U.\nNonNullable<T> - Exclude null and undefined from T.\nParameters<T> - Obtain the parameters of a function type in a tuple.\nConstructorParameters<T> - Obtain the parameters of a constructor function type in a tuple.\nReturnType<T> – Obtain the return type of a function type.\nInstanceType<T> – Obtain the instance type of a constructor function type.\n\nYou can find some examples in the TypeScript docs."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/stacktrace-parser/node_modules/type-fest/readme.html#maintainers",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/stacktrace-parser/node_modules/type-fest/readme.html#maintainers",
    "title": "3327 Research",
    "section": "Maintainers",
    "text": "Maintainers\n\nSindre Sorhus\nJarek Radosz\nDimitri Benin"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/stacktrace-parser/node_modules/type-fest/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/stacktrace-parser/node_modules/type-fest/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\n(MIT OR CC0-1.0)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/toidentifier/HISTORY.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/toidentifier/HISTORY.html",
    "title": "3327 Research",
    "section": "",
    "text": "1.0.1 / 2021-11-14\n\npref: enable strict mode\n\n\n\n1.0.0 / 2018-07-09\n\nInitial release"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimend/CHANGELOG.html#v1.0.4---2021-02-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimend/CHANGELOG.html#v1.0.4---2021-02-23",
    "title": "3327 Research",
    "section": "v1.0.4 - 2021-02-23",
    "text": "v1.0.4 - 2021-02-23\n\nCommits\n\n[meta] do not publish github action workflow files 08e735c\n[readme] remove travis badge 10e0e47\n[Dev Deps] update eslint, @ljharb/eslint-config, functions-have-names, has-strict-mode, tape 0871432\n[Tests] increase coverage 711e6a6\n[actions] update workflows deb0d06\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, tape e250b4a\n[meta] gitignore coverage output 55231df\n[Deps] update call-bind 0580f5f"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimend/CHANGELOG.html#v1.0.3---2020-11-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimend/CHANGELOG.html#v1.0.3---2020-11-21",
    "title": "3327 Research",
    "section": "v1.0.3 - 2020-11-21",
    "text": "v1.0.3 - 2020-11-21\n\nCommits\n\n[Tests] migrate tests to Github Actions 23e7a09\n[Tests] add implementation test; run es-shim-api in postlint; use tape runner 26e8623\n[Tests] run nyc on all tests a72a546\n[Deps] replace es-abstract with call-bind f07b87d\n[Dev Deps] update eslint, aud; add safe-publish-latest 122ecb7"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimend/CHANGELOG.html#v1.0.2---2020-10-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimend/CHANGELOG.html#v1.0.2---2020-10-20",
    "title": "3327 Research",
    "section": "v1.0.2 - 2020-10-20",
    "text": "v1.0.2 - 2020-10-20\n\nCommits\n\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog, tape a003e71\n[actions] add “Allow Edits” workflow 0b4b43c\n[Deps] update es-abstract 75ca6b0\n[actions] switch Automatic Rebase workflow to pull_request_target event 552016c"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimend/CHANGELOG.html#v1.0.1---2020-04-09",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimend/CHANGELOG.html#v1.0.1---2020-04-09",
    "title": "3327 Research",
    "section": "v1.0.1 - 2020-04-09",
    "text": "v1.0.1 - 2020-04-09\n\nCommits\n\n[meta] add some missing repo metadata 6abe248\n[Dev Deps] update auto-changelog e2eaab2"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimend/CHANGELOG.html#v1.0.0---2020-03-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimend/CHANGELOG.html#v1.0.0---2020-03-30",
    "title": "3327 Research",
    "section": "v1.0.0 - 2020-03-30",
    "text": "v1.0.0 - 2020-03-30\n\nCommits\n\n[Breaking] convert to es-shim API 2c6ef13\n[meta] add auto-changelog 6f1fcc1\n[meta] update readme ed4ce0d\n[Tests] add npm run lint eadaf2c\nOnly apps should have lockfiles 44d355f\n[actions] add automatic rebasing / merge commit blocking e78bf8e\n[Tests] use shared travis-ci configs 983c563\n[meta] add funding field 35139d6\n[meta] fix non-updated version number a2d308b"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimend/CHANGELOG.html#v0.1.0---2017-12-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimend/CHANGELOG.html#v0.1.0---2017-12-19",
    "title": "3327 Research",
    "section": "v0.1.0 - 2017-12-19",
    "text": "v0.1.0 - 2017-12-19\n\nCommits\n\nupdated README f1c71a0"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimend/CHANGELOG.html#v0.0.1---2017-12-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimend/CHANGELOG.html#v0.0.1---2017-12-19",
    "title": "3327 Research",
    "section": "v0.0.1 - 2017-12-19",
    "text": "v0.0.1 - 2017-12-19\n\nCommits\n\nfinished polyfill e58d550\ncreated README file f78628a\nInitial commit 9199478\ntypo d1f4558"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-ansi/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-ansi/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install strip-ansi"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-ansi/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-ansi/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst stripAnsi = require('strip-ansi');\n\nstripAnsi('\\u001B[4mUnicorn\\u001B[0m');\n//=> 'Unicorn'"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-ansi/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-ansi/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nstrip-ansi-cli - CLI for this module\nhas-ansi - Check if a string has ANSI escape codes\nansi-regex - Regular expression for matching ANSI escape codes\nchalk - Terminal string styling done right"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-ansi/readme.html#maintainers",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-ansi/readme.html#maintainers",
    "title": "3327 Research",
    "section": "Maintainers",
    "text": "Maintainers\n\nSindre Sorhus\nJosh Junon"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-ansi/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-ansi/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements",
    "title": "3327 Research",
    "section": ":tada: Enhancements",
    "text": ":tada: Enhancements\n\n#4234: Add ability to run tests in a mocha instance multiple times (@nicojs)\n#4219: Exposing filename in JSON, doc, and json-stream reporters (@Daniel0113)\n#4244: Add Root Hook Plugins (@boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#4258: Fix missing dot in name of configuration file (@sonicdoe)\n#4194: Check if module.paths really exists (@ematipico)\n#4256: --forbid-only does not recognize it.only when before crashes (@arvidOtt)\n#4152: Bug with multiple async done() calls (@boneskull)\n#4275: Improper warnings for invalid reporters (@boneskull)\n#4288: Broken hook.spec.js test for IE11 (@boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\n#4081: Insufficient white space for API docs in view on mobile (@HyunSangHan)\n#4255: Update mocha-docdash for UI fixes on API docs (@craigtaub)\n#4235: Enable emoji on website; enable normal ul elements (@boneskull)\n#4272: Fetch sponsors at build time, show ALL non-skeevy sponsors (@boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other",
    "title": "3327 Research",
    "section": ":nut_and_bolt: Other",
    "text": ":nut_and_bolt: Other\n\n#4249: Refactoring improving encapsulation (@arvidOtt)\n#4242: CI add job names, add Node.js v14 to matrix (@boneskull)\n#4237: Refactor validatePlugins to throw coded errors (@boneskull)\n#4236: Better debug output (@boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-1",
    "title": "3327 Research",
    "section": ":nut_and_bolt: Other",
    "text": ":nut_and_bolt: Other\n\n#4251: Prevent karma-mocha from stalling (@juergba)\n#4222: Update dependency mkdirp to v0.5.5 (@outsideris)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-1",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\n#4208: Add Wallaby logo to site (@boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#lock-security-fixes",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#lock-security-fixes",
    "title": "3327 Research",
    "section": ":lock: Security Fixes",
    "text": ":lock: Security Fixes\n\n#4204: Update dependencies mkdirp, yargs-parser and yargs (@juergba)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-1",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#3660: Fix runner listening to start and end events (@juergba)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-2",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\n#4190: Show Netlify badge on footer (@outsideris)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-1",
    "title": "3327 Research",
    "section": ":tada: Enhancements",
    "text": ":tada: Enhancements\n#4038: Add Node.js native ESM support (@giltayar)\nMocha supports writing your test files as ES modules:\n\nNode.js only v12.11.0 and above\nNode.js below v13.2.0, you must set --experimental-modules option\ncurrent limitations: please check our documentation\nfor programmatic usage: see API: loadFilesAsync()\n\nNote: Node.JS native ECMAScript Modules implementation has status: Stability: 1 - Experimental"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-2",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#4181: Programmatic API cannot access retried test objects (@juergba)\n#4174: Browser: fix allowUncaught option (@juergba)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-3",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\n#4058: Manage author list in AUTHORS instead of package.json (@outsideris)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-2",
    "title": "3327 Research",
    "section": ":nut_and_bolt: Other",
    "text": ":nut_and_bolt: Other\n\n#4138: Upgrade ESLint v6.8 (@kaicataldo)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-3",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#4165: Fix exception when skipping tests programmatically (@juergba)\n#4153: Restore backwards compatibility for reporterOptions (@holm)\n#4150: Fix recovery of an open test upon uncaught exception (@juergba)\n#4147: Fix regression of leaking uncaught exception handler (@juergba)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-4",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\n#4146: Update copyright & trademark notices per OJSF (@boneskull)\n#4140: Fix broken links (@KyoungWan)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-3",
    "title": "3327 Research",
    "section": ":nut_and_bolt: Other",
    "text": ":nut_and_bolt: Other\n\n#4133: Print more descriptive error message (@Zirak)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#boom-breaking-changes",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#boom-breaking-changes",
    "title": "3327 Research",
    "section": ":boom: Breaking Changes",
    "text": ":boom: Breaking Changes\n\n#3885: Drop Node.js v6.x support (@mojosoeun)\n#3890: Remove Node.js debug-related flags --debug/--debug-brk and deprecate debug argument (@juergba)\n#3962: Changes to command-line options (@ParkSB):\n\n--list-interfaces replaces --interfaces\n--list-reporters replaces --reporters\n\nHook pattern of this.skip() (@juergba):\n\n#3859: When conditionally skipping in a it test, related afterEach hooks are now executed\n#3741: When conditionally skipping in a beforeEach hook, subsequent inner beforeEach hooks are now skipped and related afterEach hooks are executed\n#4136: Disallow this.skip() within after hooks\n\n#3967: Remove deprecated getOptions() and lib/cli/options.js (@juergba)\n#4083: Uncaught exception in pending test: don’t swallow, but retrospectively fail the test for correct exit code (@juergba)\n#4004: Align Mocha constructor’s option names with command-line options (@juergba)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-2",
    "title": "3327 Research",
    "section": ":tada: Enhancements",
    "text": ":tada: Enhancements\n\n#3980: Refactor and improve --watch mode with chokidar (@geigerzaehler):\n\nadds command-line options --watch-files and --watch-ignore\nremoves --watch-extensions\n\n#3979: Type “rs\\n” to restart tests (@broofa)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#fax-deprecations",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#fax-deprecations",
    "title": "3327 Research",
    "section": ":fax: Deprecations",
    "text": ":fax: Deprecations\nThese are soft-deprecated, and will emit a warning upon use. Support will be removed in (likely) the next major version of Mocha:\n\n#3968: Deprecate legacy configuration via mocha.opts (@juergba)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-4",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#4125: Fix timeout handling with --inspect-brk/--inspect (@juergba)\n#4070: Mocha constructor: improve browser setup (@juergba)\n#4068: XUnit reporter should handle exceptions during diff generation (@rgroothuijsen)\n#4030: Fix --allow-uncaught with this.skip() (@juergba)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#mag-coverage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#mag-coverage",
    "title": "3327 Research",
    "section": ":mag: Coverage",
    "text": ":mag: Coverage\n\n#4109: Add Node.js v13.x to CI test matrix (@juergba)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-5",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\n#4129: Fix broken links (@SaeromB)\n#4127: Add reporter alias names to docs (@khg0712)\n#4101: Clarify invalid usage of done() (@jgehrcke)\n#4092: Replace :coffee: with emoji ☕️ (@pzrq)\n#4088: Initial draft of project charter (@boneskull)\n#4066: Change sh to bash for code block in docs/index.md (@HyunSangHan)\n#4045: Update README.md concerning GraphicsMagick installation (@HyunSangHan)\n#3988: Fix sponsors background color for readability (@outsideris)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-4",
    "title": "3327 Research",
    "section": ":nut_and_bolt: Other",
    "text": ":nut_and_bolt: Other\n\n#4118: Update node-environment-flags to 1.0.6 (@kylef)\n#4097: Add GH Funding Metadata (@SheetJSDev)\n#4089: Add funding information to package.json (@Munter)\n#4077: Improve integration tests (@soobing)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-5",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#4025: Fix duplicate EVENT_RUN_END events upon uncaught exception (@juergba)\n#4051: Fix “unhide” function in html reporter (browser) (@pec9399)\n#4063: Fix use of esm in Node.js v8.x (@boneskull)\n#4033: Fix output when multiple async exceptions are thrown (@juergba)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-6",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\n#4046: Site accessibility fixes (@Mia-jeong)\n#4026: Update docs for custom reporters in browser (@Lindsay-Needs-Sleep)\n#3971: Adopt new OpenJS Foundation Code of Conduct (@craigtaub)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-6",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#3955: tty.getWindowSize is not a function inside a “worker_threads” worker (@1999)\n#3970: remove extraGlobals() (@juergba)\n#3984: Update yargs-unparser to v1.6.0 (@juergba)\n#3983: Package ‘esm’: spawn child-process for correct loading (@juergba)\n#3986: Update yargs to v13.3.0 and yargs-parser to v13.1.1 (@juergba)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-7",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\n#3886: fix styles on mochajs.org (@outsideris)\n#3966: Remove jsdoc index.html placeholder from eleventy file structure and fix broken link in jsdoc tutorial (@Munter)\n#3765: Add Matomo to website (@MarioDiaz98)\n#3947: Clarify effect of .skip() (@oliversalzburg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-3",
    "title": "3327 Research",
    "section": ":tada: Enhancements",
    "text": ":tada: Enhancements\n\n#3827: Do not fork child-process if no Node flags are present (@boneskull)\n#3725: Base reporter store ref to console.log, see mocha/wiki (@craigtaub)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-7",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#3942: Fix “No test files found” Error when file is passed via --file (@gabegorelick)\n#3914: Modify Mocha constructor to accept options global or globals (@pascalpp)\n#3894: Fix parsing of config files with _mocha binary (@juergba)\n#3834: Fix CLI parsing with default values (@boneskull, @juergba)\n#3831: Fix --timeout/--slow string values and duplicate arguments (@boneskull, @juergba)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-8",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\n#3906: Document option to define custom report name for XUnit reporter (@pkuczynski)\n#3889: Adds doc links for mocha-examples (@craigtaub)\n#3887: Fix broken links (@toyjhlee)\n#3841: Fix anchors to configuration section (@trescube)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#mag-coverage-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#mag-coverage-1",
    "title": "3327 Research",
    "section": ":mag: Coverage",
    "text": ":mag: Coverage\n\n#3915, #3929: Increase tests coverage for --watch options (@geigerzaehler)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-5",
    "title": "3327 Research",
    "section": ":nut_and_bolt: Other",
    "text": ":nut_and_bolt: Other\n\n#3953: Collect test files later, prepares improvements to the --watch mode behavior (@geigerzaehler)\n#3939: Upgrade for npm audit (@boneskull)\n#3930: Extract runWatch into separate module (@geigerzaehler)\n#3922: Add mocha.min.js file to stacktrace filter (@brian-lagerman)\n#3919: Update CI config files to use Node-12.x (@plroebuck)\n#3892: Rework reporter tests (@plroebuck)\n#3872: Rename --exclude to --ignore and create alias (@boneskull)\n#3963: Hide stacktrace when cli args are missing (@outsideris)\n#3956: Do not redeclare variable in docs array example (@DanielRuf)\n#3957: Remove duplicate line-height property in mocha.css (@DanielRuf)\n#3960: Don’t re-initialize grep option on watch re-run (@geigerzaehler)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#lock-security-fixes-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#lock-security-fixes-1",
    "title": "3327 Research",
    "section": ":lock: Security Fixes",
    "text": ":lock: Security Fixes\n\n#3877: Upgrade js-yaml, addressing code injection vulnerability (@bjornstar)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-8",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#3863: Fix yargs-related global scope pollution (@inukshuk)\n#3869: Fix failure when installed w/ pnpm (@boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-9",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#3867: Re-publish v6.1.1 from POSIX OS to avoid dropped executable flags (@boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-10",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#3866: Fix Windows End-of-Line publishing issue (@juergba & @cspotcode)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#lock-security-fixes-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#lock-security-fixes-2",
    "title": "3327 Research",
    "section": ":lock: Security Fixes",
    "text": ":lock: Security Fixes\n\n#3845: Update dependency “js-yaml” to v3.13.0 per npm security advisory (@plroebuck)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-4",
    "title": "3327 Research",
    "section": ":tada: Enhancements",
    "text": ":tada: Enhancements\n\n#3766: Make reporter constructor support optional options parameter (@plroebuck)\n#3760: Add support for config files with .jsonc extension (@sstephant)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#fax-deprecations-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#fax-deprecations-1",
    "title": "3327 Research",
    "section": ":fax: Deprecations",
    "text": ":fax: Deprecations\nThese are soft-deprecated, and will emit a warning upon use. Support will be removed in (likely) the next major version of Mocha:\n\n#3719: Deprecate this.skip() for “after all” hooks (@juergba)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-11",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#3829: Use cwd-relative pathname to load config file (@plroebuck)\n#3745: Fix async calls of this.skip() in “before each” hooks (@juergba)\n#3669: Enable --allow-uncaught for uncaught exceptions thrown inside hooks (@givanse)\n\nand some regressions:\n\n#3848: Fix Suite cloning by copying root property (@fatso83)\n#3816: Guard against undefined timeout option (@boneskull)\n#3814: Update “yargs” in order to avoid deprecation message (@boneskull)\n#3788: Fix support for multiple node flags (@aginzberg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-9",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\nmochajs/mocha-examples: New repository of working examples of common configurations using mocha (@craigtaub)\n#3850: Remove pound icon showing on header hover on docs (@jd2rogers2)\n#3812: Add autoprefixer to documentation page CSS (@Munter)\n#3811: Update doc examples “tests.html” (@DavidLi119)\n#3807: Mocha website HTML tweaks (@plroebuck)\n#3793: Update config file example “.mocharc.yml” (@cspotcode)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-6",
    "title": "3327 Research",
    "section": ":nut_and_bolt: Other",
    "text": ":nut_and_bolt: Other\n\n#3830: Replace dependency “findup-sync” with “find-up” for faster startup (@cspotcode)\n#3799: Update devDependencies to fix many npm vulnerabilities (@XhmikosR)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-12",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\nTwo more regressions fixed:\n\n#3768: Test file paths no longer dropped from mocha.opts (@boneskull)\n#3767: --require does not break on module names that look like certain node flags (@boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-13",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\nThese issues were regressions.\n\n#3754: Mocha again finds test.js when run without arguments (@plroebuck)\n#3756: Mocha again supports third-party interfaces via --ui (@boneskull)\n#3755: Fix broken --watch (@boneskull)\n#3759: Fix unwelcome deprecation notice when Mocha run against languages (CoffeeScript) with implicit return statements; returning a non-undefined value from a describe callback is no longer considered deprecated (@boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-10",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\n#3738: Upgrade to @mocha/docdash@2 (@tendonstrength)\n#3751: Use preferred names for example config files (@Szauka)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-5",
    "title": "3327 Research",
    "section": ":tada: Enhancements",
    "text": ":tada: Enhancements\n\n#3726: Add ability to unload files from require cache (@plroebuck)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-14",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#3737: Fix falsy values from options globals (@plroebuck)\n#3707: Fix encapsulation issues for Suite#_onlyTests and Suite#_onlySuites (@vkarpov15)\n#3711: Fix diagnostic messages dealing with plurality and markup of output (@plroebuck)\n#3723: Fix “reporter-option” to allow comma-separated options (@boneskull)\n#3722: Fix code quality and performance of lookupFiles and files (@plroebuck)\n#3650, #3654: Fix noisy error message when no files found (@craigtaub)\n#3632: Tests having an empty title are no longer confused with the “root” suite (@juergba)\n#3666: Fix missing error codes (@vkarpov15)\n#3684: Fix exiting problem in Node.js v11.7.0+ (@addaleax)\n#3691: Fix --delay (and other boolean options) not working in all cases (@boneskull)\n#3692: Fix invalid command-line argument usage not causing actual errors (@boneskull)\n#3698, #3699: Fix debug-related Node.js options not working in all cases (@boneskull)\n#3700: Growl notifications now show the correct number of tests run (@outsideris)\n#3686: Avoid potential ReDoS when diffing large objects (@cyjake)\n#3715: Fix incorrect order of emitted events when used programmatically (@boneskull)\n#3706: Fix regression wherein --reporter-option/--reporter-options did not support comma-separated key/value pairs (@boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-11",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\n#3652: Switch from Jekyll to Eleventy (@Munter)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-7",
    "title": "3327 Research",
    "section": ":nut_and_bolt: Other",
    "text": ":nut_and_bolt: Other\n\n#3677: Add error objects for createUnsupportedError and createInvalidExceptionError (@boneskull)\n#3733: Removed unnecessary processing in post-processing hook (@wanseob)\n#3730: Update nyc to latest version (@coreyfarrell)\n#3648, #3680: Fixes to support latest versions of unexpected and unexpected-sinon (@sunesimonsen)\n#3638: Add meta tag to site (@MartijnCuppens)\n#3653: Fix parts of test suite failing to run on Windows (@boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-15",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\nFix missing mocharc.json in published package (@boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#boom-breaking-changes-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#boom-breaking-changes-1",
    "title": "3327 Research",
    "section": ":boom: Breaking Changes",
    "text": ":boom: Breaking Changes\n\n#3149: Drop Node.js v4.x support (@outsideris)\n#3556: Changes to command-line options (@boneskull):\n\n--grep and --fgrep are now mutually exclusive; attempting to use both will cause Mocha to fail instead of simply ignoring --grep\n--compilers is no longer supported; attempting to use will cause Mocha to fail with a link to more information\n-d is no longer an alias for --debug; -d is currently ignored\n#3275: --watch-extensions no longer implies js; it must be explicitly added (@TheDancingCode)\n\n#2908: tap reporter emits error messages (@chrmod)\n#2819: When conditionally skipping in a before hook, subsequent before hooks and tests in nested suites are now skipped (@bannmoore)\n#627: Emit filepath in “timeout exceeded” exceptions where applicable (@boneskull)\n#3556: lib/template.html has moved to lib/browser/template.html (@boneskull)\n#2576: An exception is now thrown if Mocha fails to parse or find a mocha.opts at a user-specified path (@plroebuck)\n#3458: Instantiating a Base-extending reporter without a Runner parameter will throw an exception (@craigtaub)\n#3125: For consumers of Mocha’s programmatic API, all exceptions thrown from Mocha now have a code property (and some will have additional metadata). Some Error messages have changed. Please use the code property to check Error types instead of the message property; these descriptions will be localized in the future. (@craigtaub)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#fax-deprecations-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#fax-deprecations-2",
    "title": "3327 Research",
    "section": ":fax: Deprecations",
    "text": ":fax: Deprecations\nThese are soft-deprecated, and will emit a warning upon use. Support will be removed in (likely) the next major version of Mocha:\n\n-gc users should use --gc-global instead\nConsumers of the function exported by bin/options should now use the loadMochaOpts or loadOptions (preferred) functions exported by the lib/cli/options module\n\nRegarding the Mocha class constructor (from lib/mocha):\n\nUse property color: false instead of useColors: false\nUse property timeout: false instead of enableTimeouts: false\n\nAll of the above deprecations were introduced by #3556.\nmocha.opts is now considered “legacy”; please prefer RC file or package.json over mocha.opts."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-6",
    "title": "3327 Research",
    "section": ":tada: Enhancements",
    "text": ":tada: Enhancements\nEnhancements introduced in #3556:\n\nMocha now supports “RC” files in JS, JSON, YAML, or package.json-based (using mocha property) format\n\n.mocharc.js, .mocharc.json, .mocharc.yaml or .mocharc.yml are valid “rc” file names and will be automatically loaded\nUse --config /path/to/rc/file to specify an explicit path\nUse --package /path/to/package.json to specify an explicit package.json to read the mocha prop from\nUse --no-config or --no-package to completely disable loading of configuration via RC file and package.json, respectively\nConfigurations are merged as applicable using the priority list:\n\nCommand-line arguments\nRC file\npackage.json\nmocha.opts\nMocha’s own defaults\n\nCheck out these example config files\n\nNode/V8 flag support in mocha executable:\n\nSupport all allowed node flags as supported by the running version of node (also thanks to @demurgos)\nSupport any V8 flag by prepending --v8- to the flag name\nAll flags are also supported via config files, package.json properties, or mocha.opts\nDebug-related flags (e.g., --inspect) now imply --no-timeouts\nUse of e.g., --debug will automatically invoke --inspect if supported by running version of node\n\nSupport negation of any Mocha-specific command-line flag by prepending --no- to the flag name\nInterfaces now have descriptions when listed using --interfaces flag\nMocha constructor supports all options\n--extension is now an alias for --watch-extensions and affects non-watch-mode test runs as well. For example, to run only test/*.coffee (not test/*.js), you can do mocha --require coffee-script/register --extensions coffee.\n#3552: tap reporter is now TAP13-capable (@plroebuck & @mollstam)\n#3535: Mocha’s version can now be queried programmatically via public property Mocha.prototype.version (@plroebuck)\n#3428: xunit reporter shows diffs (@mlucool)\n#2529: Runner now emits a retry event when tests are retried (reporters can listen for this) (@catdad)\n#2962, #3111: In-browser notification support; warn about missing prereqs when --growl supplied (@plroebuck)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-16",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#3356: --no-timeouts and --timeout 0 now does what you’d expect (@boneskull)\n#3475: Restore --no-exit option (@boneskull)\n#3570: Long-running tests now respect SIGINT (@boneskull)\n#2944: --forbid-only and --forbid-pending now “fail fast” when encountered on a suite (@outsideris)\n#1652, #2951: Fix broken clamping of timeout values (@plroebuck)\n#2095, #3521: Do not log stdout: prefix in browser console (@Bamieh)\n#3595: Fix mochajs.org deployment problems (@papandreou)\n#3518: Improve utils.isPromise() (@fabiosantoscode)\n#3320: Fail gracefully when non-extensible objects are thrown in async tests (@fargies)\n#2475: XUnit does not duplicate test result numbers in “errors” and “failures”; “failures” will always be zero (@mlucool)\n#3398, #3598, #3457, #3617: Fix regression wherein --bail would not execute “after” nor “after each” hooks (@juergba)\n#3580: Fix potential exception when using XUnit reporter programmatically (@Lana-Light)\n#1304: Do not output color to TERM=dumb (@plroebuck)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-12",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\n#3525: Improvements to .github/CONTRIBUTING.md (@markowsiak)\n#3466: Update description of slow option (@finfin)\n#3405: Remove references to bower installations (@goteamtim)\n#3361: Improvements to --watch docs (@benglass)\n#3136: Improve docs around globbing and shell expansion (@akrawchyk)\n#2819: Update docs around skips and hooks (@bannmoore)\nMany improvements by @outsideris"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-8",
    "title": "3327 Research",
    "section": ":nut_and_bolt: Other",
    "text": ":nut_and_bolt: Other\n\n#3557: Use ms userland module instead of hand-rolled solution (@gizemkeser)\nMany CI fixes and other refactors by @plroebuck\nTest refactors by @outsideris"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-7",
    "title": "3327 Research",
    "section": ":tada: Enhancements",
    "text": ":tada: Enhancements\n\n#3375: Add support for comments in mocha.opts (@plroebuck)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-17",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#3346: Exit correctly from before hooks when using --bail (@outsideris)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-13",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\n#3328: Mocha-flavored API docs! (@Munter)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-9",
    "title": "3327 Research",
    "section": ":nut_and_bolt: Other",
    "text": ":nut_and_bolt: Other\n\n#3330: Use Buffer.from() (@harrysarson)\n#3295: Remove redundant folder (@DavNej)\n#3356: Refactoring (@plroebuck)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-18",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#3325: Revert change which broke --watch (@boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-8",
    "title": "3327 Research",
    "section": ":tada: Enhancements",
    "text": ":tada: Enhancements\n\n#3210: Add --exclude option (@metalex9)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-19",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#3318: Fix failures in circular objects in JSON reporter (@jeversmann, @boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-14",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\n#3323: Publish actual API documentation! (@dfberry, @Munter)\n#3299: Improve docs around exclusive tests (@nicgirault)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-10",
    "title": "3327 Research",
    "section": ":nut_and_bolt: Other",
    "text": ":nut_and_bolt: Other\n\n#3302, #3308, #3310, #3315, #3316: Build matrix improvements (more info) (@outsideris, @boneskull)\n#3272: Refactor reporter tests (@jMuzsik)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-20",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#3096: Fix --bail failing to bail within hooks (@outsideris)\n#3184: Don’t skip too many suites (using describe.skip()) (@outsideris)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-15",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\n#3133: Improve docs regarding “pending” behavior (@ematicipo)\n#3276, #3274: Fix broken stuff in CHANGELOG.md (@tagoro9, @honzajavorek)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-11",
    "title": "3327 Research",
    "section": ":nut_and_bolt: Other",
    "text": ":nut_and_bolt: Other\n\n#3208: Improve test coverage for AMD users (@outsideris)\n#3267: Remove vestiges of PhantomJS from CI (@anishkny)\n#2952: Fix a debug message (@boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-21",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#3265: Fixes regression in “watch” functionality introduced in v5.0.2 (@outsideris)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#lock-security-fixes-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#lock-security-fixes-3",
    "title": "3327 Research",
    "section": ":lock: Security Fixes",
    "text": ":lock: Security Fixes\n\n#3266: Bump diff to v3.5.0 (@anishkny)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-12",
    "title": "3327 Research",
    "section": ":nut_and_bolt: Other",
    "text": ":nut_and_bolt: Other\n\n#3011: Expose generateDiff() in Base reporter (@harrysarson)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-22",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#3226: Do not swallow errors that are thrown asynchronously from passing tests (@boneskull). Example:\n```js it(‘should actually fail, sorry!’, function (done) { // passing assertion assert(true === true);\n// test complete & is marked as passing done();\n// …but something evil lurks within setTimeout(() => { throw new Error(‘chaos!’); }, 100); }); ```\nPreviously to this version, Mocha would have silently swallowed the chaos! exception, and you wouldn’t know. Well, now you know. Mocha cannot recover from this gracefully, so it will exit with a nonzero code.\nMaintainers of external reporters: If a test of this class is encountered, the Runner instance will emit the end event twice; you may need to change your reporter to use runner.once('end') intead of runner.on('end').\n#3093: Fix stack trace reformatting problem (@outsideris)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-13",
    "title": "3327 Research",
    "section": ":nut_and_bolt: Other",
    "text": ":nut_and_bolt: Other\n\n#3248: Update browser-stdout to v1.3.1 (@honzajavorek)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-23",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#1838: --delay now works with .only() (@silviom)\n#3119: Plug memory leak present in v8 (@boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-16",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\n#3132, #3098: Update --glob docs (@outsideris)\n#3212: Update Wallaby.js-related docs (@ArtemGovorov)\n#3205: Remove outdated cruft (@boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-14",
    "title": "3327 Research",
    "section": ":nut_and_bolt: Other",
    "text": ":nut_and_bolt: Other\n\n#3224: Add proper Wallaby.js config (@ArtemGovorov)\n#3230: Update copyright year (@josephlin55555)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#boom-breaking-changes-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#boom-breaking-changes-2",
    "title": "3327 Research",
    "section": ":boom: Breaking Changes",
    "text": ":boom: Breaking Changes\n\n#3148: Drop support for IE9 and IE10 (@Bamieh) Practically speaking, only code which consumes (through bundling or otherwise) the userland buffer module should be affected. However, Mocha will no longer test against these browsers, nor apply fixes for them."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#tada-enhancements-9",
    "title": "3327 Research",
    "section": ":tada: Enhancements",
    "text": ":tada: Enhancements\n\n#3181: Add useful new --file command line argument (documentation) (@hswolff)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#bug-fixes-24",
    "title": "3327 Research",
    "section": ":bug: Fixes",
    "text": ":bug: Fixes\n\n#3187: Fix inaccurate test duration reporting (@FND)\n#3202: Fix bad markup in HTML reporter (@DanielRuf)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#sunglasses-developer-experience",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#sunglasses-developer-experience",
    "title": "3327 Research",
    "section": ":sunglasses: Developer Experience",
    "text": ":sunglasses: Developer Experience\n\n#2352: Ditch GNU Make for nps to manage scripts (@TedYav)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#book-documentation-17",
    "title": "3327 Research",
    "section": ":book: Documentation",
    "text": ":book: Documentation\n\n#3137: Add missing --no-timeouts docs (@dfberry)\n#3134: Improve done() callback docs (@maraisr)\n#3135: Fix cross-references (@vkarpov15)\n#3163: Fix tpyos (@tbroadley)\n#3177: Tweak README.md organization (@xxczaki)\nMisc updates (@boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/CHANGELOG.html#nut_and_bolt-other-15",
    "title": "3327 Research",
    "section": ":nut_and_bolt: Other",
    "text": ":nut_and_bolt: Other\n\n#3118: Move TextMate Integration to its own repo (@Bamieh)\n#3185: Add Node.js v9 to build matrix; remove v7 (@xxczaki)\n#3172: Markdown linting (@boneskull)\nTest & Netlify updates (@Munter, @boneskull)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/ms/license.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/ms/license.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright (c) 2016 Zeit, Inc.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/ms/readme.html#examples",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/ms/readme.html#examples",
    "title": "3327 Research",
    "section": "Examples",
    "text": "Examples\nms('2 days')  // 172800000\nms('1d')      // 86400000\nms('10h')     // 36000000\nms('2.5 hrs') // 9000000\nms('2h')      // 7200000\nms('1m')      // 60000\nms('5s')      // 5000\nms('1y')      // 31557600000\nms('100')     // 100\nms('-3 days') // -259200000\nms('-1h')     // -3600000\nms('-200')    // -200\n\nConvert from Milliseconds\nms(60000)             // \"1m\"\nms(2 * 60000)         // \"2m\"\nms(-3 * 60000)        // \"-3m\"\nms(ms('10 hours'))    // \"10h\"\n\n\nTime Format Written-Out\nms(60000, { long: true })             // \"1 minute\"\nms(2 * 60000, { long: true })         // \"2 minutes\"\nms(-3 * 60000, { long: true })        // \"-3 minutes\"\nms(ms('10 hours'), { long: true })    // \"10 hours\""
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/ms/readme.html#features",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/ms/readme.html#features",
    "title": "3327 Research",
    "section": "Features",
    "text": "Features\n\nWorks both in Node.js and in the browser\nIf a number is supplied to ms, a string with a unit is returned\nIf a string that contains the number is supplied, it returns it as a number (e.g.: it returns 100 for '100')\nIf you pass a string with a number and a valid unit, the number of equivalent milliseconds is returned"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/ms/readme.html#related-packages",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/ms/readme.html#related-packages",
    "title": "3327 Research",
    "section": "Related Packages",
    "text": "Related Packages\n\nms.macro - Run ms as a macro at build-time."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/ms/readme.html#caught-a-bug",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/ms/readme.html#caught-a-bug",
    "title": "3327 Research",
    "section": "Caught a Bug?",
    "text": "Caught a Bug?\n\nFork this repository to your own GitHub account and then clone it to your local device\nLink the package to the global module directory: npm link\nWithin the module you want to test your local development instance of ms, just link it to the dependencies: npm link ms. Instead of the default one from npm, Node.js will now use your clone of ms!\n\nAs always, you can run the tests using: npm test"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-locate/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-locate/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install p-locate"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-locate/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-locate/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nHere we find the first file that exists on disk, in array order.\nconst pathExists = require('path-exists');\nconst pLocate = require('p-locate');\n\nconst files = [\n    'unicorn.png',\n    'rainbow.png', // Only this one actually exists on disk\n    'pony.png'\n];\n\n(async () => {\n    const foundPath = await pLocate(files, file => pathExists(file));\n\n    console.log(foundPath);\n    //=> 'rainbow'\n})();\nThe above is just an example. Use locate-path if you need this."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-locate/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-locate/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\npLocate(input, tester, options)\nReturns a Promise that is fulfilled when tester resolves to true or the iterable is done, or rejects if any of the promises reject. The fulfilled value is the current iterable value or undefined if tester never resolved to true.\n\ninput\nType: Iterable<Promise|any>\n\n\ntester(element)\nType: Function\nExpected to return a Promise<boolean> or boolean.\n\n\noptions\nType: Object\n\nconcurrency\nType: number Default: Infinity Minimum: 1\nNumber of concurrently pending promises returned by tester.\n\n\npreserveOrder\nType: boolean Default: true\nPreserve input order when searching.\nDisable this to improve performance if you don’t care about the order."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-locate/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-locate/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\np-map - Map over promises concurrently\np-filter - Filter promises concurrently\np-any - Wait for any promise to be fulfilled\nMore…"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-locate/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-locate/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-limit/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-limit/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install p-limit"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-limit/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-limit/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst pLimit = require('p-limit');\n\nconst limit = pLimit(1);\n\nconst input = [\n    limit(() => fetchSomething('foo')),\n    limit(() => fetchSomething('bar')),\n    limit(() => doSomething())\n];\n\n(async () => {\n    // Only one promise is run at once\n    const result = await Promise.all(input);\n    console.log(result);\n})();"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-limit/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-limit/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\npLimit(concurrency)\nReturns a limit function.\n\nconcurrency\nType: number\nMinimum: 1\nDefault: Infinity\nConcurrency limit.\n\n\n\nlimit(fn, …args)\nReturns the promise returned by calling fn(...args).\n\nfn\nType: Function\nPromise-returning/async function.\n\n\nargs\nAny arguments to pass through to fn.\nSupport for passing arguments on to the fn is provided in order to be able to avoid creating unnecessary closures. You probably don’t need this optimization unless you’re pushing a lot of functions.\n\n\n\nlimit.activeCount\nThe number of promises that are currently running.\n\n\nlimit.pendingCount\nThe number of promises that are waiting to run (i.e. their internal fn was not called yet).\n\n\nlimit.clearQueue()\nDiscard pending promises that are waiting to run.\nThis might be useful if you want to teardown the queue at the end of your program’s lifecycle or discard any function calls referencing an intermediary state of your app.\nNote: This does not cancel promises that are already running."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-limit/readme.html#faq",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-limit/readme.html#faq",
    "title": "3327 Research",
    "section": "FAQ",
    "text": "FAQ\n\nHow is this different from the p-queue package?\nThis package is only about limiting the number of concurrent executions, while p-queue is a fully featured queue implementation with lots of different options, introspection, and ability to pause the queue."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-limit/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-limit/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\np-queue - Promise queue with concurrency control\np-throttle - Throttle promise-returning & async functions\np-debounce - Debounce promise-returning & async functions\np-all - Run promise-returning & async functions concurrently with optional limited concurrency\nMore…\n\n\n\n<b>\n    <a href=\"https://tidelift.com/subscription/pkg/npm-p-limit?utm_source=npm-p-limit&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n</b>\n<br>\n<sub>\n    Tidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n</sub>"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/find-up/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/find-up/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install find-up"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/find-up/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/find-up/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\n/\n└── Users\n        └── sindresorhus\n                ├── unicorn.png\n                └── foo\n                        └── bar\n                                ├── baz\n                                └── example.js\nexample.js\nconst findUp = require('find-up');\n\n(async () => {\n    console.log(await findUp('unicorn.png'));\n    //=> '/Users/sindresorhus/unicorn.png'\n\n    console.log(await findUp(['rainbow.png', 'unicorn.png']));\n    //=> '/Users/sindresorhus/unicorn.png'\n})();"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/find-up/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/find-up/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nfindUp(filename, options)\nReturns a Promise for either the filepath or null if it couldn’t be found.\n\n\nfindUp([filenameA, filenameB], options)\nReturns a Promise for either the first filepath found (by respecting the order) or null if none could be found.\n\n\nfindUp.sync(filename, options)\nReturns a filepath or null.\n\n\nfindUp.sync([filenameA, filenameB], options)\nReturns the first filepath found (by respecting the order) or null.\n\nfilename\nType: string\nFilename of the file to find.\n\n\noptions\nType: Object\n\ncwd\nType: string Default: process.cwd()\nDirectory to start from."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/find-up/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/find-up/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nfind-up-cli - CLI for this module\npkg-up - Find the closest package.json file\npkg-dir - Find the root directory of an npm package\nresolve-from - Resolve the path of a module like require.resolve() but from a given path"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/find-up/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/find-up/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/supports-color/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/supports-color/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install supports-color"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/supports-color/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/supports-color/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst supportsColor = require('supports-color');\n\nif (supportsColor.stdout) {\n    console.log('Terminal stdout supports color');\n}\n\nif (supportsColor.stdout.has256) {\n    console.log('Terminal stdout supports 256 colors');\n}\n\nif (supportsColor.stderr.has16m) {\n    console.log('Terminal stderr supports 16 million colors (truecolor)');\n}"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/supports-color/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/supports-color/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\nReturns an Object with a stdout and stderr property for testing either streams. Each property is an Object, or false if color is not supported.\nThe stdout/stderr objects specifies a level of support for color through a .level property and a corresponding flag:\n\n.level = 1 and .hasBasic = true: Basic color support (16 colors)\n.level = 2 and .has256 = true: 256 color support\n.level = 3 and .has16m = true: Truecolor support (16 million colors)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/supports-color/readme.html#info",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/supports-color/readme.html#info",
    "title": "3327 Research",
    "section": "Info",
    "text": "Info\nIt obeys the --color and --no-color CLI flags.\nFor situations where using --color is not possible, use the environment variable FORCE_COLOR=1 (level 1), FORCE_COLOR=2 (level 2), or FORCE_COLOR=3 (level 3) to forcefully enable color, or FORCE_COLOR=0 to forcefully disable. The use of FORCE_COLOR overrides all other color support checks.\nExplicit 256/Truecolor mode can be enabled using the --color=256 and --color=16m flags, respectively."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/supports-color/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/supports-color/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nsupports-color-cli - CLI for this module\nchalk - Terminal string styling done right"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/supports-color/readme.html#maintainers",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/supports-color/readme.html#maintainers",
    "title": "3327 Research",
    "section": "Maintainers",
    "text": "Maintainers\n\nSindre Sorhus\nJosh Junon"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/supports-color/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/supports-color/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section",
    "title": "3327 Research",
    "section": "7.0",
    "text": "7.0\n\nRaise error if options.cwd is specified, and not a directory"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section-1",
    "title": "3327 Research",
    "section": "6.0",
    "text": "6.0\n\nRemove comment and negation pattern support\nIgnore patterns are always in dot:true mode"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section-2",
    "title": "3327 Research",
    "section": "5.0",
    "text": "5.0\n\nDeprecate comment and negation patterns\nFix regression in mark and nodir options from making all cache keys absolute path.\nAbort if fs.readdir returns an error that’s unexpected\nDon’t emit match events for ignored items\nTreat ENOTSUP like ENOTDIR in readdir"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section-3",
    "title": "3327 Research",
    "section": "4.5",
    "text": "4.5\n\nAdd options.follow to always follow directory symlinks in globstar\nAdd options.realpath to call fs.realpath on all results\nAlways cache based on absolute path"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section-4",
    "title": "3327 Research",
    "section": "4.4",
    "text": "4.4\n\nAdd options.ignore\nFix handling of broken symlinks"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section-5",
    "title": "3327 Research",
    "section": "4.3",
    "text": "4.3\n\nBump minimatch to 2.x\nPass all tests on Windows"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section-6",
    "title": "3327 Research",
    "section": "4.2",
    "text": "4.2\n\nAdd glob.hasMagic function\nAdd options.nodir flag"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section-7",
    "title": "3327 Research",
    "section": "4.1",
    "text": "4.1\n\nRefactor sync and async implementations for performance\nThrow if callback provided to sync glob function\nTreat symbolic links in globstar results the same as Bash 4.3"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#section-8",
    "title": "3327 Research",
    "section": "4.0",
    "text": "4.0\n\nUse ^ for dependency versions (bumped major because this breaks older npm versions)\nEnsure callbacks are only ever called once\nswitch to ISC license"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#x",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#x",
    "title": "3327 Research",
    "section": "3.x",
    "text": "3.x\n\nRewrite in JavaScript\nAdd support for setting root, cwd, and windows support\nCache many fs calls\nAdd globstar support\nemit match events"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#x-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#x-1",
    "title": "3327 Research",
    "section": "2.x",
    "text": "2.x\n\nUse glob.h and fnmatch.h from NetBSD"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#x-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/glob/changelog.html#x-2",
    "title": "3327 Research",
    "section": "1.x",
    "text": "1.x\n\nglob.h static binding."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-try/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-try/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install p-try"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-try/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-try/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst pTry = require('p-try');\n\n(async () => {\n    try {\n        const value = await pTry(() => {\n            return synchronousFunctionThatMightThrow();\n        });\n        console.log(value);\n    } catch (error) {\n        console.error(error);\n    }\n})();"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-try/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-try/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\npTry(fn, …arguments)\nReturns a Promise resolved with the value of calling fn(...arguments). If the function throws an error, the returned Promise will be rejected with that error.\nSupport for passing arguments on to the fn is provided in order to be able to avoid creating unnecessary closures. You probably don’t need this optimization unless you’re pushing a lot of functions.\n\nfn\nThe function to run to start the promise chain.\n\n\narguments\nArguments to pass to fn."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-try/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-try/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\np-finally - Promise#finally() ponyfill - Invoked when the promise is settled regardless of outcome\nMore…"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-try/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/p-try/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/locate-path/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/locate-path/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install locate-path"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/locate-path/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/locate-path/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nHere we find the first file that exists on disk, in array order.\nconst locatePath = require('locate-path');\n\nconst files = [\n    'unicorn.png',\n    'rainbow.png', // Only this one actually exists on disk\n    'pony.png'\n];\n\n(async () => {\n    console(await locatePath(files));\n    //=> 'rainbow'\n})();"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/locate-path/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/locate-path/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nlocatePath(input, options)\nReturns a Promise for the first path that exists or undefined if none exists.\n\ninput\nType: Iterable<string>\nPaths to check.\n\n\noptions\nType: Object\n\nconcurrency\nType: number Default: Infinity Minimum: 1\nNumber of concurrently pending promises.\n\n\npreserveOrder\nType: boolean Default: true\nPreserve input order when searching.\nDisable this to improve performance if you don’t care about the order.\n\n\ncwd\nType: string Default: process.cwd()\nCurrent working directory.\n\n\n\n\nlocatePath.sync(input, options)\nReturns the first path that exists or undefined if none exists.\n\ninput\nType: Iterable<string>\nPaths to check.\n\n\noptions\nType: Object\n\ncwd\nSame as above."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/locate-path/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/locate-path/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\npath-exists - Check if a path exists"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/locate-path/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/locate-path/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/debug/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mocha/node_modules/debug/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "3.1.0 / 2017-09-26\n\nAdd DEBUG_HIDE_DATE env var (#486)\nRemove ReDoS regexp in %o formatter (#504)\nRemove “component” from package.json\nRemove component.json\nIgnore package-lock.json\nExamples: fix colors printout\nFix: browser detection\nFix: spelling mistake (#496, @EdwardBetts)\n\n\n\n3.0.1 / 2017-08-24\n\nFix: Disable colors in Edge and Internet Explorer (#489)\n\n\n\n3.0.0 / 2017-08-08\n\nBreaking: Remove DEBUG_FD (#406)\nBreaking: Use Date#toISOString() instead to Date#toUTCString() when output is not a TTY (#418)\nBreaking: Make millisecond timer namespace specific and allow ‘always enabled’ output (#408)\nAddition: document enabled flag (#465)\nAddition: add 256 colors mode (#481)\nAddition: enabled() updates existing debug instances, add destroy() function (#440)\nUpdate: component: update “ms” to v2.0.0\nUpdate: separate the Node and Browser tests in Travis-CI\nUpdate: refactor Readme, fixed documentation, added “Namespace Colors” section, redid screenshots\nUpdate: separate Node.js and web browser examples for organization\nUpdate: update “browserify” to v14.4.0\nFix: fix Readme typo (#473)\n\n\n\n2.6.9 / 2017-09-22\n\nremove ReDoS regexp in %o formatter (#504)\n\n\n\n2.6.8 / 2017-05-18\n\nFix: Check for undefined on browser globals (#462, @marbemac)\n\n\n\n2.6.7 / 2017-05-16\n\nFix: Update ms to 2.0.0 to fix regular expression denial of service vulnerability (#458, @hubdotcom)\nFix: Inline extend function in node implementation (#452, @dougwilson)\nDocs: Fix typo (#455, @msasad)\n\n\n\n2.6.5 / 2017-04-27\n\nFix: null reference check on window.documentElement.style.WebkitAppearance (#447, @thebigredgeek)\nMisc: clean up browser reference checks (#447, @thebigredgeek)\nMisc: add npm-debug.log to .gitignore (@thebigredgeek)\n\n\n\n2.6.4 / 2017-04-20\n\nFix: bug that would occur if process.env.DEBUG is a non-string value. (#444, @LucianBuzzo)\nChore: ignore bower.json in npm installations. (#437, @joaovieira)\nMisc: update “ms” to v0.7.3 (@tootallnate)\n\n\n\n2.6.3 / 2017-03-13\n\nFix: Electron reference to process.env.DEBUG (#431, @paulcbetts)\nDocs: Changelog fix (@thebigredgeek)\n\n\n\n2.6.2 / 2017-03-10\n\nFix: DEBUG_MAX_ARRAY_LENGTH (#420, @slavaGanzin)\nDocs: Add backers and sponsors from Open Collective (#422, @piamancini)\nDocs: Add Slackin invite badge (@tootallnate)\n\n\n\n2.6.1 / 2017-02-10\n\nFix: Module’s export default syntax fix for IE8 Expected identifier error\nFix: Whitelist DEBUG_FD for values 1 and 2 only (#415, @pi0)\nFix: IE8 “Expected identifier” error (#414, @vgoma)\nFix: Namespaces would not disable once enabled (#409, @musikov)\n\n\n\n2.6.0 / 2016-12-28\n\nFix: added better null pointer checks for browser useColors (@thebigredgeek)\nImprovement: removed explicit window.debug export (#404, @tootallnate)\nImprovement: deprecated DEBUG_FD environment variable (#405, @tootallnate)\n\n\n\n2.5.2 / 2016-12-25\n\nFix: reference error on window within webworkers (#393, @KlausTrainer)\nDocs: fixed README typo (#391, @lurch)\nDocs: added notice about v3 api discussion (@thebigredgeek)\n\n\n\n2.5.1 / 2016-12-20\n\nFix: babel-core compatibility\n\n\n\n2.5.0 / 2016-12-20\n\nFix: wrong reference in bower file (@thebigredgeek)\nFix: webworker compatibility (@thebigredgeek)\nFix: output formatting issue (#388, @kribblo)\nFix: babel-loader compatibility (#383, @escwald)\nMisc: removed built asset from repo and publications (@thebigredgeek)\nMisc: moved source files to /src (#378, @yamikuronue)\nTest: added karma integration and replaced babel with browserify for browser tests (#378, @yamikuronue)\nTest: coveralls integration (#378, @yamikuronue)\nDocs: simplified language in the opening paragraph (#373, @yamikuronue)\n\n\n\n2.4.5 / 2016-12-17\n\nFix: navigator undefined in Rhino (#376, @jochenberger)\nFix: custom log function (#379, @hsiliev)\nImprovement: bit of cleanup + linting fixes (@thebigredgeek)\nImprovement: rm non-maintainted dist/ dir (#375, @freewil)\nDocs: simplified language in the opening paragraph. (#373, @yamikuronue)\n\n\n\n2.4.4 / 2016-12-14\n\nFix: work around debug being loaded in preload scripts for electron (#368, @paulcbetts)\n\n\n\n2.4.3 / 2016-12-14\n\nFix: navigation.userAgent error for react native (#364, @escwald)\n\n\n\n2.4.2 / 2016-12-14\n\nFix: browser colors (#367, @tootallnate)\nMisc: travis ci integration (@thebigredgeek)\nMisc: added linting and testing boilerplate with sanity check (@thebigredgeek)\n\n\n\n2.4.1 / 2016-12-13\n\nFix: typo that broke the package (#356)\n\n\n\n2.4.0 / 2016-12-13\n\nFix: bower.json references unbuilt src entry point (#342, @justmatt)\nFix: revert “handle regex special characters” (@tootallnate)\nFeature: configurable util.inspect()`options for NodeJS (#327, @tootallnate)\nFeature: %O`(big O) pretty-prints objects (#322, @tootallnate)\nImprovement: allow colors in workers (#335, @botverse)\nImprovement: use same color for same namespace. (#338, @lchenay)\n\n\n\n2.3.3 / 2016-11-09\n\nFix: Catch JSON.stringify() errors (#195, Jovan Alleyne)\nFix: Returning localStorage saved values (#331, Levi Thomason)\nImprovement: Don’t create an empty object when no process (Nathan Rajlich)\n\n\n\n2.3.2 / 2016-11-09\n\nFix: be super-safe in index.js as well (@TooTallNate)\nFix: should check whether process exists (Tom Newby)\n\n\n\n2.3.1 / 2016-11-09\n\nFix: Added electron compatibility (#324, @paulcbetts)\nImprovement: Added performance optimizations (@tootallnate)\nReadme: Corrected PowerShell environment variable example (#252, @gimre)\nMisc: Removed yarn lock file from source control (#321, @fengmk2)\n\n\n\n2.3.0 / 2016-11-07\n\nFix: Consistent placement of ms diff at end of output (#215, @gorangajic)\nFix: Escaping of regex special characters in namespace strings (#250, @zacronos)\nFix: Fixed bug causing crash on react-native (#282, @vkarpov15)\nFeature: Enabled ES6+ compatible import via default export (#212 @bucaran)\nFeature: Added %O formatter to reflect Chrome’s console.log capability (#279, @oncletom)\nPackage: Update “ms” to 0.7.2 (#315, @DevSide)\nPackage: removed superfluous version property from bower.json (#207 @kkirsche)\nReadme: fix USE_COLORS to DEBUG_COLORS\nReadme: Doc fixes for format string sugar (#269, @mlucool)\nReadme: Updated docs for DEBUG_FD and DEBUG_COLORS environment variables (#232, @mattlyons0)\nReadme: doc fixes for PowerShell (#271 #243, @exoticknight @unreadable)\nReadme: better docs for browser support (#224, @matthewmueller)\nTooling: Added yarn integration for development (#317, @thebigredgeek)\nMisc: Renamed History.md to CHANGELOG.md (@thebigredgeek)\nMisc: Added license file (#226 #274, @CantemoInternal @sdaitzman)\nMisc: Updated contributors (@thebigredgeek)\n\n\n\n2.2.0 / 2015-05-09\n\npackage: update “ms” to v0.7.1 (#202, @dougwilson)\nREADME: add logging to file example (#193, @DanielOchoa)\nREADME: fixed a typo (#191, @amir-s)\nbrowser: expose storage (#190, @stephenmathieson)\nMakefile: add a distclean target (#189, @stephenmathieson)\n\n\n\n2.1.3 / 2015-03-13\n\nUpdated stdout/stderr example (#186)\nUpdated example/stdout.js to match debug current behaviour\nRenamed example/stderr.js to stdout.js\nUpdate Readme.md (#184)\nreplace high intensity foreground color for bold (#182, #183)\n\n\n\n2.1.2 / 2015-03-01\n\ndist: recompile\nupdate “ms” to v0.7.0\npackage: update “browserify” to v9.0.3\ncomponent: fix “ms.js” repo location\nchanged bower package name\nupdated documentation about using debug in a browser\nfix: security error on safari (#167, #168, @yields)\n\n\n\n2.1.1 / 2014-12-29\n\nbrowser: use typeof to check for console existence\nbrowser: check for console.log truthiness (fix IE 8/9)\nbrowser: add support for Chrome apps\nReadme: added Windows usage remarks\nAdd bower.json to properly support bower install\n\n\n\n2.1.0 / 2014-10-15\n\nnode: implement DEBUG_FD env variable support\npackage: update “browserify” to v6.1.0\npackage: add “license” field to package.json (#135, @panuhorsmalahti)\n\n\n\n2.0.0 / 2014-09-01\n\npackage: update “browserify” to v5.11.0\nnode: use stderr rather than stdout for logging (#29, @stephenmathieson)\n\n\n\n1.0.4 / 2014-07-15\n\ndist: recompile\nexample: remove console.info() log usage\nexample: add “Content-Type” UTF-8 header to browser example\nbrowser: place %c marker after the space character\nbrowser: reset the “content” color via color: inherit\nbrowser: add colors support for Firefox >= v31\ndebug: prefer an instance log() function over the global one (#119)\nReadme: update documentation about styled console logs for FF v31 (#116, @wryk)\n\n\n\n1.0.3 / 2014-07-09\n\nAdd support for multiple wildcards in namespaces (#122, @seegno)\nbrowser: fix lint\n\n\n\n1.0.2 / 2014-06-10\n\nbrowser: update color palette (#113, @gscottolson)\ncommon: make console logging function configurable (#108, @timoxley)\nnode: fix %o colors on old node <= 0.8.x\nMakefile: find node path using shell/which (#109, @timoxley)\n\n\n\n1.0.1 / 2014-06-06\n\nbrowser: use removeItem() to clear localStorage\nbrowser, node: don’t set DEBUG if namespaces is undefined (#107, @leedm777)\npackage: add “contributors” section\nnode: fix comment typo\nREADME: list authors\n\n\n\n1.0.0 / 2014-06-04\n\nmake ms diff be global, not be scope\ndebug: ignore empty strings in enable()\nnode: make DEBUG_COLORS able to disable coloring\n*: export the colors array\nnpmignore: don’t publish the dist dir\nMakefile: refactor to use browserify\npackage: add “browserify” as a dev dependency\nReadme: add Web Inspector Colors section\nnode: reset terminal color for the debug content\nnode: map “%o” to util.inspect()\nbrowser: map “%j” to JSON.stringify()\ndebug: add custom “formatters”\ndebug: use “ms” module for humanizing the diff\nReadme: add “bash” syntax highlighting\nbrowser: add Firebug color support\nbrowser: add colors for WebKit browsers\nnode: apply log to console\nrewrite: abstract common logic for Node & browsers\nadd .jshintrc file\n\n\n\n0.8.1 / 2014-04-14\n\npackage: re-add the “component” section\n\n\n\n0.8.0 / 2014-03-30\n\nadd enable() method for nodejs. Closes #27\nchange from stderr to stdout\nremove unnecessary index.js file\n\n\n\n0.7.4 / 2013-11-13\n\nremove “browserify” key from package.json (fixes something in browserify)\n\n\n\n0.7.3 / 2013-10-30\n\nfix: catch localStorage security error when cookies are blocked (Chrome)\nadd debug(err) support. Closes #46\nadd .browser prop to package.json. Closes #42\n\n\n\n0.7.2 / 2013-02-06\n\nfix package.json\nfix: Mobile Safari (private mode) is broken with debug\nfix: Use unicode to send escape character to shell instead of octal to work with strict mode javascript\n\n\n\n0.7.1 / 2013-02-05\n\nadd repository URL to package.json\nadd DEBUG_COLORED to force colored output\nadd browserify support\nfix component. Closes #24\n\n\n\n0.7.0 / 2012-05-04\n\nAdded .component to package.json\nAdded debug.component.js build\n\n\n\n0.6.0 / 2012-03-16\n\nAdded support for “-” prefix in DEBUG [Vinay Pulim]\nAdded .enabled flag to the node version [TooTallNate]\n\n\n\n0.5.0 / 2012-02-02\n\nAdded: humanize diffs. Closes #8\nAdded debug.disable() to the CS variant\nRemoved padding. Closes #10\nFixed: persist client-side variant again. Closes #9\n\n\n\n0.4.0 / 2012-02-01\n\nAdded browser variant support for older browsers [TooTallNate]\nAdded debug.enable('project:*') to browser variant [TooTallNate]\nAdded padding to diff (moved it to the right)\n\n\n\n0.3.0 / 2012-01-26\n\nAdded millisecond diff when isatty, otherwise UTC string\n\n\n\n0.2.0 / 2012-01-22\n\nAdded wildcard support\n\n\n\n0.1.0 / 2011-12-02\n\nAdded: remove colors unless stderr isatty [TooTallNate]\n\n\n\n0.0.1 / 2010-01-03\n\nInitial release"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimstart/CHANGELOG.html#v1.0.4---2021-02-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimstart/CHANGELOG.html#v1.0.4---2021-02-23",
    "title": "3327 Research",
    "section": "v1.0.4 - 2021-02-23",
    "text": "v1.0.4 - 2021-02-23\n\nCommits\n\n[meta] do not publish github action workflow files 9c434ec\n[readme] remove travis badge 7843160\n[Dev Deps] update eslint, @ljharb/eslint-config, functions-have-names, has-strict-mode, tape 8b52646\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, tape badeda2\n[Tests] increase coverage bf8777d\n[actions] update workflows 61be1c6\n[meta] gitignore coverage output c9c98d7\n[Deps] update call-bind c8645e8"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimstart/CHANGELOG.html#v1.0.3---2020-11-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimstart/CHANGELOG.html#v1.0.3---2020-11-21",
    "title": "3327 Research",
    "section": "v1.0.3 - 2020-11-21",
    "text": "v1.0.3 - 2020-11-21\n\nCommits\n\n[Tests] migrate tests to Github Actions fbc7519\n[Tests] add implementation test; run es-shim-api in postlint; use tape runner 3c9330b\n[Tests] run nyc on all tests 52229ca\n[Deps] replace es-abstract with call-bind 5e5068d\n[Dev Deps] update eslint, aud; add safe-publish-latest 42a853e"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimstart/CHANGELOG.html#v1.0.2---2020-10-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimstart/CHANGELOG.html#v1.0.2---2020-10-20",
    "title": "3327 Research",
    "section": "v1.0.2 - 2020-10-20",
    "text": "v1.0.2 - 2020-10-20\n\nCommits\n\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog, tape d032b38\n[actions] add “Allow Edits” workflow 83e30ba\n[Deps] update es-abstract 707d85d\n[actions] switch Automatic Rebase workflow to pull_request_target event 096c6d9"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimstart/CHANGELOG.html#v1.0.1---2020-04-09",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimstart/CHANGELOG.html#v1.0.1---2020-04-09",
    "title": "3327 Research",
    "section": "v1.0.1 - 2020-04-09",
    "text": "v1.0.1 - 2020-04-09\n\nCommits\n\n[meta] add some missing repo metadata 3385da3\n[Dev Deps] update auto-changelog 879377d"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimstart/CHANGELOG.html#v1.0.0---2020-03-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimstart/CHANGELOG.html#v1.0.0---2020-03-30",
    "title": "3327 Research",
    "section": "v1.0.0 - 2020-03-30",
    "text": "v1.0.0 - 2020-03-30\n\nCommits\n\n[Breaking] convert to es-shim API 970922c\n[meta] add auto-changelog ff30c09\n[meta] update readme 816291d\n[Tests] add npm run lint 3341104\nOnly apps should have lockfiles f008df7\n[actions] add automatic rebasing / merge commit blocking e5ba35c\n[Tests] use shared travis-ci configs 46516b1\n[meta] add funding field 34ae856\n[meta] fix non-updated version number 3b0e262"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimstart/CHANGELOG.html#v0.1.0---2017-12-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimstart/CHANGELOG.html#v0.1.0---2017-12-19",
    "title": "3327 Research",
    "section": "v0.1.0 - 2017-12-19",
    "text": "v0.1.0 - 2017-12-19\n\nCommits\n\nupdated README ab2f6ac"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimstart/CHANGELOG.html#v0.0.1---2017-12-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string.prototype.trimstart/CHANGELOG.html#v0.0.1---2017-12-19",
    "title": "3327 Research",
    "section": "v0.0.1 - 2017-12-19",
    "text": "v0.0.1 - 2017-12-19\n\nCommits\n\nfinished polyfill 1c7ca20\ncreated README file: 192ecad\nInitial commit 14044f8\nupdated README d4fb6be"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-main-filename/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-main-filename/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "Change Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n # 2.0.0 (2019-01-28)\n\nChores\n\ndrop support for Node 0.10 (#11) (87f4e13)\n\n\n\nBREAKING CHANGES\n\ndrop support for Node 0.10/0.12\n\n ## 1.0.2 (2017-06-16)\n\n\nBug Fixes\n\nadd files to package.json (#4) (fa29988)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/os-tmpdir/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/os-tmpdir/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install --save os-tmpdir"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/os-tmpdir/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/os-tmpdir/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst osTmpdir = require('os-tmpdir');\n\nosTmpdir();\n//=> '/var/folders/m3/5574nnhn0yj488ccryqr7tc80000gn/T'"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/os-tmpdir/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/os-tmpdir/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\nSee the os.tmpdir() docs."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/os-tmpdir/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/os-tmpdir/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CODE_OF_CONDUCT.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CODE_OF_CONDUCT.html",
    "title": "3327 Research",
    "section": "",
    "text": "Code of Conduct\nThe Node.js Code of Conduct, which applies to this project, can be found at https://github.com/nodejs/admin/blob/master/CODE_OF_CONDUCT.md."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/LICENSE.html#copyright-c-2017-node.js-api-collaborators",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/LICENSE.html#copyright-c-2017-node.js-api-collaborators",
    "title": "3327 Research",
    "section": "Copyright (c) 2017 Node.js API collaborators",
    "text": "Copyright (c) 2017 Node.js API collaborators\nNode.js API collaborators listed at https://github.com/nodejs/node-addon-api#collaborators\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-2.0.2-nicknaso",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-2.0.2-nicknaso",
    "title": "3327 Research",
    "section": "2020-07-01 Version 2.0.2, @NickNaso",
    "text": "2020-07-01 Version 2.0.2, @NickNaso\n\nNotable changes:\n\nAPI\n\nNapi::ObjectWrap: avoid double-free on old Node.js.\nNapi::ObjectWrap: remove wrap only on failure.\nNapi::ObjectWrap: gracefully handle constructor exceptions\nNapi::ObjectWrap: call napi_remove_wrap() in destructor.\n\n\n\nTEST\n\nUpdated Napi::BigInt test for recent change in core.\n\n\n\n\nCommmits\n\n[5abf60257d] - Merge pull request #723 from gabrielschulhof/backport-4e885069-pr-475 (Nicola Del Gobbo)\n[470f130666] - objectwrap: avoid double-free on old Node.js (Gabriel Schulhof)\n[81e2eac7ba] - test: update BigInt test for recent change in core (Michael Dawson) #649\n[204f07252c] - objectwrap: remove wrap only on failure (Gabriel Schulhof)\n[a552a384dd] - src: call napi\\_remove\\_wrap() in ObjectWrap dtor (Anna Henningsen) #475\n[1a51067438] - objectwrap: gracefully handle constructor exceptions (Gabriel Schulhof)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-2.0.1-nicknaso",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-2.0.1-nicknaso",
    "title": "3327 Research",
    "section": "2020-06-02 Version 2.0.1, @NickNaso",
    "text": "2020-06-02 Version 2.0.1, @NickNaso\n\nNotable changes:\n\nAPI\n\nFix memory corruption vulnerability\n\n\n\n\nCommmits\n\n[265fea9edd] - napi: fix memory corruption vulnerability (Tobias Nießen )"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-2.0.0-nicknaso",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-2.0.0-nicknaso",
    "title": "3327 Research",
    "section": "2019-11-21 Version 2.0.0, @NickNaso",
    "text": "2019-11-21 Version 2.0.0, @NickNaso\n\nNotable changes:\n\nAPI\n\nAdded Napi::AsyncProgressWorker api.\nAdded error checking on Napi::ThreadSafeFunction::GetContext.\nAdded copy constructor to Napi::ThreadSafeFunction.\nAdded Napi::ThreadSafeFunction::Ref and Napi::ThreadSafeFunction::Unref to Napi::ThreadSafeFunction.\nAdded Napi::Object::AddFinalizer method.\nUse napi_add_finalizer() to attach data when building against N-API 5.\nAdded Napi::Date api.\nAdded Napi::ObjectWrap::Finalize method.\n\n\n\nDocumentation\n\nAdded documentation for Napi::AsyncProgressWorker.\nImprove Napi::AsyncWorker documentation.\nAdded documentation for Napi::Object::AddFinalizer method.\nImproved documentation for Napi::ThreadSafeFunction.\nImproved documentation about the usage of CMake as build tool.\nSome minor corrections all over the documentation.\n\n\n\nTEST\n\nAdded test cases for Napi::AsyncProgressWorker api.\nAdded test cases for Napi::Date api.\nAdded test cases for new features added to Napi::ThreadSafeFunction.\n\n\n\n\nCommmits\n\n[c881168d49] - tsfn: add error checking on GetContext (#583) (Kevin Eady) #583\n[24d75dd82f] - Merge pull request #588 from NickNaso/add-asyncprogress-worker-readme (Nicola Del Gobbo)\n[aa79e37b62] - Merge pull request #587 from timrach/patch-1 (Nicola Del Gobbo)\n[df75e08c2b] - tsfn: support direct calls to underlying napi_tsfn (Kevin Eady) #58\n[2298dfae58] - doc: Added AsyncProgressWorker to readme (NickNaso)\n[b3609d33b6] - Fix return type and declaration of setter callback (Tim Rach)\n[295e560f55] - test: improve guards for experimental features (legendecas)\n[2e71842f63] - tsfn: Implement copy constructor (Kevin Eady) #546\n[650562cab9] - src: implement AsyncProgressWorker (legendecas) #529\n[bdfd14101f] - src: attach data with napi_add_finalizer (Gabriel Schulhof) #577\n[9e955a802b] - doc: change node.js to Node.js per guideline (#579) (Tobias Nießen) #579\n[b42e21e3a9] - build: move node/6 to travis allowed failures and add node/13 (#573) (Gabriel Schulhof)\n[8d6132f609] - doc: improve AsyncWorker docs (#571) (legendecas) #571\n[bc8fc23627] - test: do not run TSFN tests on NAPI_VERSION < 4 (legendecas) #576\n[bcc1d58fc4] - implement Object::AddFinalizer (Gabriel Schulhof)\n[e9a4bcd52a] - doc: updates Make.js doc to current best practices (Jim Schlight) #558\n[b513d1aa7a] - doc: fix return type of ArrayBuffer::Data (Tobias Nießen) #552\n[34c11cf0a4] - src: disallow copying, double close of scopes (legendecas) #566\n[ce139a05e8] - src: make failure of closing scopes fatal (legendecas) #566\n[740c79823e] - src: add Env() to AsyncContext (Rolf Timmermans) #568\n[ea9ce1c801] - tsfn: add wrappers for Ref and Unref (Kevin Eady) #561\n[2e1769e1a3] - error: remove unnecessary if condition (legendecas) #562\n[828f223a87] - doc: fix spelling in ObjectWrap doc (#563) (Tobias Nießen) #563\n[dd9fa8a4a8] - doc: move Arunesh and Taylor to Emeritus (#540) (Michael Dawson) #540\n[cf8b8415df] - doc: add Kevin to the list of collaborators (#539) (Michael Dawson) #539\n[5d6aeae7b5] - build: enable travis for fast PR check (legendecas)\n[6192e705cd] - src: add napi_date (Mathias Küsel) #497\n[7b1ee96d52] - doc: update prebuild_tools.md (Nurbol Alpysbayev) #527\n[0b4f3a5b8c] - tsfn: fix crash on releasing tsfn (legendecas) #532\n[c3c8814d2f] - implement virutal ObjectWrap::Finalize (Michael Price) #515"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.7.1-nicknaso",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.7.1-nicknaso",
    "title": "3327 Research",
    "section": "2019-07-23 Version 1.7.1, @NickNaso",
    "text": "2019-07-23 Version 1.7.1, @NickNaso\n\nNotable changes:\n\nAPI\n\nFixed compilation problems that happen on Node.js with N-API version less than 4.\n\n\n\n\nCommmits\n\n[c20bcbd069] - Merge pull request #518 from NickNaso/master (Nicola Del Gobbo)\n[6720d57253] - Create the native threadsafe_function for test only for N-API greater than 3. (NickNaso)\n[37b6c185ad] - Fix compilation breakage on 1.7.0 (NickNaso)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.7.0-nicknaso",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.7.0-nicknaso",
    "title": "3327 Research",
    "section": "2019-07-23 Version 1.7.0, @NickNaso",
    "text": "2019-07-23 Version 1.7.0, @NickNaso\n\nNotable changes:\n\nAPI\n\nAdded Napi::ThreadSafeFunction api.\nAdded Napi::AsyncWorker::GetResult() method to Napi::AsyncWorker.\nAdded Napi::AsyncWorker::Destroy()() method to Napi::AsyncWorker.\nUse full namespace on macros that create the errors.\n\n\n\nDocumentation\n\nAdded documentation about contribution philosophy.\nAdded documentation for Napi::ThreadSafeFunction.\nSome minor corrections all over the documentation.\n\n\n\nTEST\n\nAdded test case for bool operator.\nFixed test case for Napi::ObjectWrap.\n\n\n\n\nCommmits\n\n[717c9ab163] - AsyncWorker: add GetResult() method (Kevin Eady) #512\n[d9d991bbc9] - doc: add ThreadSafeFunction to main README (#513) (Kevin Eady) #513\n[ac6000d0fd] - doc: fix minor typo (Yohei Kishimoto) #510\n[e9fa1eaa86] - doc: document ThreadSafeFunction (#494) (Kevin Eady) #494\n[cab3b1e2a2] - doc: ClassPropertyDescriptor example (Ross Weir) #507\n[c32d7dbdcf] - macros: create errors fully namespaced (Gabriel Schulhof) #506\n[0a90df2fcb] - Implement ThreadSafeFunction class (Jinho Bang)\n[1fb540eeb5] - Use curly brackets to include node_api.h (NickNaso) #493\n[b2b08122ea] - AsyncWorker: make callback optional (Kevin Eady) #489\n[a0cac77c82] - Added test for bool operator (NickNaso) #490\n[ab7d8fcc48] - src: fix objectwrap test case (Michael Dawson) #495\n[3b6b9eb88a] - AsyncWorker: introduce Destroy() method (Gabriel Schulhof) #488\n[f633fbd95d] - string.md: Document existing New(env, value, length) APIs (Tux3) #486\n[aaea55eda9] - Little fix on code example (Nicola Del Gobbo) #470\n[e1cf9a35a1] - Use Value::IsEmpty to check for empty value (NickNaso) #478\n[3ad5dfc7d9] - Fix link (Alba Mendez) #481\n[a3b4d99c45] - doc: Add contribution philosophy doc (Hitesh Kanwathirtha)\n[36863f087b] - doc: refer to TypedArray and ArrayBuffer from Array (Gabriel “|Nix|” Schulhof) #465"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.6.3-nicknaso",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.6.3-nicknaso",
    "title": "3327 Research",
    "section": "2019-04-03 Version 1.6.3, @NickNaso",
    "text": "2019-04-03 Version 1.6.3, @NickNaso\n\nNotable changes:\n\nAPI\n\nAdded SuppressDestruct method to Napi::AsyncWorker.\nAdded new build targets for debug.\nExposed macros that throw errors.\nFixed memory leaks caused by callback data when a napi error occurs.\nFixed missing void *data usage in Napi::PropertyDescriptors.\n\n\n\nDocumentation\n\nSome minor corrections all over the documentation.\n\n\n\n\nCommmits\n\n[83b41c2fe4] - Document adding -fvisibility=hidden flag for macOS users (Nicola Del Gobbo) #460\n[1ed7ad8769] - doc: correct return type of Int32Value to int32_t (Bill Gallafent) #459\n[b0f6b601aa] - src: add AsyncWorker destruction suppression (Gabriel Schulhof) #407\n[72b1975cff] - doc: fix links to the Property Descriptor docs (Ryuichi Okumura) #458\n[fcfc612728] - build: new build targets for debug purposes (Jinho Bang) #186\n[c629553cd7] - doc: minor doc corrections and clarifications (Bruce A. MacNaughton) #426\n[7b87e0b999] - doc: update number.md (Bernardo Heynemann) #436\n[fcf173d2a1] - src: expose macros that throw errors (Gabriel Schulhof) #448\n[b409a2f987] - package: add npm search keywords (Sam Roberts) #452\n[0bc7987806] - doc: fix references to Weak and Persistent (Jake Barnes) #428\n[ad6f569f85] - doc: dix typo (Abhishek Kumar Singh) #435\n[28df833a49] - Merge pull request #441 from jschlight/master (Jim Schlight)\n[4921e74d83] - Rearranges names to be alphabetical (Jim Schlight)\n[48220335b0] - Membership review update (Jim Schlight)\n[44f0695533] - Merge pull request #394 from NickNaso/create_release (Nicola DelGobbo)\n[fa49d68416] - doc: fix some Finalizer signatures (Philipp Renoth) #414\n[020ac4a628] - src: make Object::GetPropertyNames() const (Philipp Renoth)#415\n[91eaa6f4cb] - src: fix callbackData leaks on error napi status (Philipp Renoth) #417\n[0b40275752] - src: fix noexcept control flow issues (Philipp Renoth) #420\n[c1ff2936f9] - src: fix missing void*data usage in PropertyDescriptors (Luciano Martorella) #374"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.6.2-nicknaso",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.6.2-nicknaso",
    "title": "3327 Research",
    "section": "2018-11-29 Version 1.6.2, @NickNaso",
    "text": "2018-11-29 Version 1.6.2, @NickNaso\n\nNotable changes:\n\nAPI\n\nFixed selection logic for version 6.x.\n\n\n\n\nCommmits\n\n[07a0fc4e95] - src: fix selection logic for 6.x (Michael Dawson) #402"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.6.1-nicknaso",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.6.1-nicknaso",
    "title": "3327 Research",
    "section": "2018-11-14 Version 1.6.1, @NickNaso",
    "text": "2018-11-14 Version 1.6.1, @NickNaso\n\nNotable changes:\n\nDocumentation\n\nUpdated links for examples to point to node-addon-examples repo.\nFixed typos on some parts of documentation.\n\n\n\nAPI\n\nRemoved unused member on Napi::CallbackScope.\nEnabled Napi::CallbackScope only with N-API v3.\n\n\n\n\nCommmits\n\n[e7cd292a74] - src: remove unused CallbackScope member (Gabriel Schulhof) #391\n[d47399fe25] - src: guard CallbackScope with N-API v3 (Michael Dawson) #395\n[29a0262ab9] - doc: fix typo (Dongjin Na) #385\n[b6dc15b88d] - doc: make links point to node-addon-examples repo (Nicola Del Gobbo) #389"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.6.0-nicknaso",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.6.0-nicknaso",
    "title": "3327 Research",
    "section": "2018-11-02 Version 1.6.0, @NickNaso",
    "text": "2018-11-02 Version 1.6.0, @NickNaso\n\nNotable changes:\n\nDocumentation\n\nImproved documentation about ABI stability.\n\n\n\nAPI\n\nAdd Napi::CallbackScope class that help to have the equivalent of the scope associated with a callback in place when making certain N-API calls\n\n\n\nTEST\n\nAdded tests for Napi::Array class.\nAdded tests for Napi::ArrayBuffer class.\n\n\n\n\nCommmits\n\n[8ce605c657] - build: avoid using package-lock.json (Jaeseok Yoon) #359\n[fa3a6150b3] - src: use MakeCallback() -> Call() in AsyncWorker (Jinho Bang) #361\n[2342415463] - test: create test objects in the stack instead of the heap (Dongjin Na) #371\n[67b7db0a6f] - test: write tests for Array class (Jaeseok Yoon) #363\n[729f6dc4ee] - test: add arraybuffer tests (Dongjin Na) #369\n[405f3e5b5b] - src: implement CallbackScope class (Jinho Bang) #362\n[015d95312f] - doc: fix Napi::Reference link (Gentilhomme) #365\n[fd65078e3c] - README.md: link to new ABI stability guide (Gabriel Schulhof) #367\n[ffebf9ba9a] - Updates for release 1.5.0 (NickNaso)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.5.0-nicknaso",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.5.0-nicknaso",
    "title": "3327 Research",
    "section": "2018-10-03 Version 1.5.0, @NickNaso",
    "text": "2018-10-03 Version 1.5.0, @NickNaso\n\nNotable changes:\n\nDocumentation\n\nCompleted the documentation to cover all the API surface.\nNumerous fixes to make documentation more consistent in all of its parts.\n\n\n\nAPI\n\nAdd Napi::AsyncContext class to handle asynchronous operation.\nAdd Napi::BigInt class to work with BigInt type.\nAdd Napi::VersionManagement class to retrieve the versions of Node.js and N-API.\nFix potential memory leaks.\nDataView feature is enabled by default\nAdd descriptor for Symbols\nAdd new methods on Napi::FunctionReference.\nAdd the possibility to retrieve the environment on Napi::Promise::Deferred\n\n\n\nTOOL\n\nAdd tool to check if a native add-on is built using N-API\n\n\n\nTEST\n\nStart to increase the test coverage\nFix in the test suite to better handle the experimental features that are not yet backported in the previous Node.js version.\n\n\n\n\nCommits\n\n[2009c019af] - Merge pull request #292 from devsnek/feature/bigint (Gus Caplan)\n[e44aca985e] - add bigint class (Gus Caplan)\n[a3951ab973] - Add documentation for Env(). (Rolf Timmermans) #318\n[a6f7a6ad51] - Add Env() to Promise::Deferred. (Rolf Timmermans)\n[0097e96b92] - Fixed broken links for Symbol and String (NickNaso)\n[b0ecd38d76] - Fix Code of conduct link properly (#323) (Jake Yoon) #323\n[223474900f] - doc: update Version management (Dongjin Na) #360\n[4f76262a10] - doc: some fix on Napi::Boolean documentation (NickNaso) #354\n[78374f72d2] - doc: number documentation (NickNaso) #356\n[51ffe453f8] - doc: doc cleanup (NickNaso) #353\n[fc11c944b2] - doc: major doc cleanup (NickNaso) #335\n[100d0a7cb2] - doc: first pass on objectwrap documentation (NickNaso) #321\n[c7d54180ff] - doc: the Napi::ObjectWrap example does not compile (Arnaud Botella) #339\n[7cdd78726a] - doc: added cpp highlight for string.md (Jaeseok Yoon) #329\n[8ed29f547c] - doc: add blurb about ABI stability (Gabriel Schulhof) #326\n[757eb1f5a3] - doc: add function and function reference doc (NickNaso) #299\n[2885c18591] - doc: Create changelog for release 1.4.0 (Nicola Del Gobbo)\n[917bd60baa] - src: remove TODOs by fixing memory leaks (Gabriel Schulhof) #343\n[dfcb93945f] - src: implement AsyncContext class (Jinho Bang) #252\n[211ed38d0d] - src: make ‘nothing’ target a static library (Gabriel Schulhof) #348\n[97c4ab5cf2] - src: add Call and MakeCallback that accept cargs (NickNaso) #344\n[b6e2d92c09] - src: enable DataView feature by default (Jinho) #331\n[0a00e7c97b] - src: implement missing descriptor defs for symbols (Philipp Renoth) #280\n[38e01b7e3b] - src: first pass on adding version management apis (NickNaso) #325\n[79ee8381d2] - src: fix compile failure in test (Michael Dawson) #345\n[4d92a6066f] - src: Add ObjectReference test case (Anisha Rohra) #212\n[779560f397] - test: add operator overloading tests in Number (Your Name) #355\n[73fed84ceb] - test: add ability to control experimental tests (Michael Dawson) #350\n[14c69abd46] - test: write tests for Boolean class (Jaeseok Yoon) #328\n[2ad47a83b1] - test: explicitly cast to uint32_t in test (Gabriel Schulhof) #341\n[622ffaea76] - test: Tighten up compiler warnings (Mikhail Cheshkov) #315\n[fd3c37b0f2] - tools: add tool to check for N-API modules (Gabriel Schulhof) #346"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.4.0-nicknaso",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.4.0-nicknaso",
    "title": "3327 Research",
    "section": "2018-07-19 Version 1.4.0, @NickNaso",
    "text": "2018-07-19 Version 1.4.0, @NickNaso\n\nNotable changes:\n\nDocumentation\n\nNumerous additions to the documentation, filling out coverage of API surface\n\n\n\nAPI\n\nAdd resource parameters to AsyncWorker constructor\nAdd memory management feature\n\n\n\n\nCommits\n\n[7dc5ac8bc3] - doc: update metadata for release (Nicola Del Gobbo)\n[d68e86adb4] - doc: Added documentation for PropertyDescriptor (Anisha Rohra) #309\n[968a5f2000] - doc: Add documentation for ObjectReference.md (Anisha Rohra) #307\n[908cdc314c] - doc: add TypedArray and TypedArrayOf (Kyle Farnung) #305\n[2ff776ffe3] - backport node::Persistent (Gabriel Schulhof) #300\n[98161970c9] - Backport perf, crash and exception handling fixes (Gabriel Schulhof) #295\n[dd1191e086] - test: fix asyncworker test so it runs on 6.x (Michael Dawson) #298\n[11697fcecd] - doc: ArrayBuffer and Buffer documentation (Kyle Farnung) #256\n[605aa2babf] - Add memory management feature (NickNaso) #286\n[86be13a611] - doc: Fix HandleScope docs (Ben Berman) #287\n[90f92c4dc0] - doc: Update broken links in README.md (Hitesh Kanwathirtha) #290\n[c2a620dc11] - doc: Clarify positioning versus N-API (Michael Dawson) #288\n[6cff890ee5] - doc: Fix typo in docs (Ben Berman) #284\n[7394bfd154] - doc: Fix typo in docs (Ben Berman) #285\n[12b2cdeed3] - fix test files (Kyle Farnung) #257\n[9ab6607242] - doc: Update Doc Version Number (joshgarde) #277\n[e029a076c6] - doc: First pass at basic Node Addon API docs (Hitesh Kanwathirtha) #268\n[74ff79717e] - doc: fix link to async_worker.md (Michael Dawson)\n[5a63f45eda] - doc: First step of error and async doc (NickNaso) #272\n[9d38f61afb] - doc: New Promise and Reference docs (Jim Schlight) #243\n[43ff9fa836] - doc: Updated Object documentation (Anisha Rohra) #254\n[b197f7cc8b] - doc: minor typos (Nick Soggin) #248\n[4b8918b352] - Add resource parameters to AsyncWorker constructor (Jinho Bang) #253\n[1ecf7c19b6] - doc: fix wrong link in readme (miloas) #255\n[a750ed1932] - release: updates to metadata for next release (Michael Dawson)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.3.0-mhdawson",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CHANGELOG.html#version-1.3.0-mhdawson",
    "title": "3327 Research",
    "section": "2018-05-08 Version 1.3.0, @mhdawson",
    "text": "2018-05-08 Version 1.3.0, @mhdawson\n\nNotable changes:\n\nDocumentation\n\nAdded documentation for Scopes\nAdded documentation for migration from NAN\nUpdate documentation to better explain the use of NODE_ADDON_API\n\n\n\nAPI\n\nImplement data manipulation methods for dataview\nUse built-in N-API on Node.js >= 6.14.2\nValue\n\nAdded IsExternal()\nIsObject() allow functions\n\nString\n\nFixed initialization of std::string to nullptr\n\n\n\n\nTests\n\nFix test failures on linuxOne and AIX\nAdded basic tests for Scopes\nFix MSVC warning C4244 in tests\n\n\n\n\nCommits\n\n[386c2aeb74] - test: remove dep on later C++ feature (Michael Dawson) https://github.com/nodejs/node-addon-api/pull/267\n[10697734da] - Use built-in N-API on Node.js >= 6.14.2 (Gabriel Schulhof)\n[75086da273] - test: add basic tests and doc for scopes (Michael Dawson) https://github.com/nodejs/node-addon-api/pull/250\n[341dbd25d5] - doc: update blurb explaining NODE_ADDON_API (Gabriel Schulhof) https://github.com/nodejs/node-addon-api/pull/251\n[cf6c93e4ee] - don’t try to escape null (Michael Dawson) https://github.com/nodejs/node-addon-api/pull/245\n[15e4b35fc2] - test: fix MSVC warning C4244 in tests (Kyle Farnung) https://github.com/nodejs/node-addon-api/pull/236\n[7f3ca03b8e] - Create a doc for migration (Sampson Gao) https://github.com/nodejs/node-addon-api/pull/118\n[0a2177debe] - Fix test failures on linuxOne and AIX (Jinho Bang) https://github.com/nodejs/node-addon-api/pull/232\n[d567f4b6b5] - Added Napi::Value::IsExternal() (Eric Bickle) https://github.com/nodejs/node-addon-api/pull/227\n[1b0f0e004a] - Update node-gyp.md (Michele Campus) https://github.com/nodejs/node-addon-api/pull/226\n[faf19c4f7a] - Fixed initialization of std::string to nullptr (Eric Bickle) https://github.com/nodejs/node-addon-api/pull/228\n[9c4d321b57] - Implement data manipulation methods for dataview (Jinho Bang) https://github.com/nodejs/node-addon-api/pull/218\n[5a39fdca6f] - n-api: throw RangeError napi_create_typedarray() (Jinho Bang) https://github.com/nodejs/node-addon-api/pull/216\n[1376377202] - Make IsObject() allow functions (Jinho Bang) https://github.com/nodejs/node-addon-api/pull/217\n[673b59d319] - src: Initial implementation of DataView class (Jinho Bang) https://github.com/nodejs/node-addon-api/pull/205\n[0a899bf1c5] - doc: update indication of latest version (Michael Dawson) https://github.com/nodejs/node-addon-api/pull/211\n[17c74e5a5e] - n-api: RangeError in napi_create_dataview() (Jinho Bang) https://github.com/nodejs/node-addon-api/pull/214\n[4058a29989] - n-api: fix memory leak in napi_async_destroy() (Jinho Bang) https://github.com/nodejs/node-addon-api/pull/213"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CONTRIBUTING.html#source-changes",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/CONTRIBUTING.html#source-changes",
    "title": "3327 Research",
    "section": "Source changes",
    "text": "Source changes\nnode-addon-api is meant to be a thin convenience wrapper around N-API. With this in mind, contributions of any new APIs that wrap around a core N-API API will be considered for merge. However, changes that wrap existing node-addon-api APIs are encouraged to instead be provided as an ecosystem module. The node-addon-api team is happy to link to a curated set of modules that build on top of node-addon-api if they have broad usefulness to the community and promote a recommended idiom or pattern.\n\nRationale\nThe N-API team considered a couple different approaches with regards to changes extending node-addon-api - Larger core module - Incorporate these helpers and patterns into node-addon-api - Extras package - Create a new package (strawman name ‘node-addon-api-extras’) that contain utility classes and methods that help promote good patterns and idioms while writing native addons with node-addon-api. - Ecosystem - Encourage creation of a module ecosystem around node-addon-api where folks can build on top of it.\n\nLarger Core\nThis is probably our simplest option in terms of immediate action needed. It would involve landing any open PRs against node-addon-api, and continuing to encourage folks to make PRs for utility helpers against the same repository.\nThe downside of the approach is the following: - Less coherency for our API set - More maintenance burden on the N-API WG core team.\n\n\nExtras Package\nThis involves us spinning up a new package which contains the utility classes and methods. This has the benefit of having a separate module where helpers which make it easier to implement certain patterns and idioms for native addons easier.\nThe downside of this approach is the following: - Potential for confusion - we’ll need to provide clear documentation to help the community understand where a particular contribution should be directed to (what belongs in node-addon-api vs node-addon-api-extras) - Need to define the level of support/API guarantees - Unclear if the maintenance burden on the N-API WG is reduced or not\n\n\nEcosystem\nThis doesn’t require a ton of up-front work from the N-API WG. Instead of accepting utility PRs into node-addon-api or creating and maintaining a new module, the WG will encourage the creation of an ecosystem of modules that build on top of node-addon-api, and provide some level of advertising for these modules (listing them out on the repository/wiki, using them in workshops/tutorials etc).\nThe downside of this approach is the following: - Potential for lack of visibility - evangelism and education is hard, and module authors might not find right patterns and instead implement things themselves - There might be greater friction for the N-API WG in evolving APIs since the ecosystem would have taken dependencies on the API shape of node-addon-api"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/buffer.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/buffer.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nNew\nAllocates a new Napi::Buffer object with a given length.\nstatic Napi::Buffer<T> Napi::Buffer::New(napi_env env, size_t length);\n\n[in] env: The environment in which to create the Napi::Buffer object.\n[in] length: The number of T elements to allocate.\n\nReturns a new Napi::Buffer object.\n\n\nNew\nWraps the provided external data into a new Napi::Buffer object.\nThe Napi::Buffer object does not assume ownership for the data and expects it to be valid for the lifetime of the object. Since the Napi::Buffer is subject to garbage collection this overload is only suitable for data which is static and never needs to be freed.\nstatic Napi::Buffer<T> Napi::Buffer::New(napi_env env, T* data, size_t length);\n\n[in] env: The environment in which to create the Napi::Buffer object.\n[in] data: The pointer to the external data to expose.\n[in] length: The number of T elements in the external data.\n\nReturns a new Napi::Buffer object.\n\n\nNew\nWraps the provided external data into a new Napi::Buffer object.\nThe Napi::Buffer object does not assume ownership for the data and expects it to be valid for the lifetime of the object. The data can only be freed once the finalizeCallback is invoked to indicate that the Napi::Buffer has been released.\ntemplate <typename Finalizer>\nstatic Napi::Buffer<T> Napi::Buffer::New(napi_env env,\n                     T* data,\n                     size_t length,\n                     Finalizer finalizeCallback);\n\n[in] env: The environment in which to create the Napi::Buffer object.\n[in] data: The pointer to the external data to expose.\n[in] length: The number of T elements in the external data.\n[in] finalizeCallback: The function to be called when the Napi::Buffer is destroyed. It must implement operator(), accept a T* (which is the external data pointer), and return void.\n\nReturns a new Napi::Buffer object.\n\n\nNew\nWraps the provided external data into a new Napi::Buffer object.\nThe Napi::Buffer object does not assume ownership for the data and expects it to be valid for the lifetime of the object. The data can only be freed once the finalizeCallback is invoked to indicate that the Napi::Buffer has been released.\ntemplate <typename Finalizer, typename Hint>\nstatic Napi::Buffer<T> Napi::Buffer::New(napi_env env,\n                     T* data,\n                     size_t length,\n                     Finalizer finalizeCallback,\n                     Hint* finalizeHint);\n\n[in] env: The environment in which to create the Napi::Buffer object.\n[in] data: The pointer to the external data to expose.\n[in] length: The number of T elements in the external data.\n[in] finalizeCallback: The function to be called when the Napi::Buffer is destroyed. It must implement operator(), accept a T* (which is the external data pointer) and Hint*, and return void.\n[in] finalizeHint: The hint to be passed as the second parameter of the finalize callback.\n\nReturns a new Napi::Buffer object.\n\n\nCopy\nAllocates a new Napi::Buffer object and copies the provided external data into it.\nstatic Napi::Buffer<T> Napi::Buffer::Copy(napi_env env, const T* data, size_t length);\n\n[in] env: The environment in which to create the Napi::Buffer object.\n[in] data: The pointer to the external data to copy.\n[in] length: The number of T elements in the external data.\n\nReturns a new Napi::Buffer object containing a copy of the data.\n\n\nConstructor\nInitializes an empty instance of the Napi::Buffer class.\nNapi::Buffer::Buffer();\n\n\nConstructor\nInitializes the Napi::Buffer object using an existing Uint8Array.\nNapi::Buffer::Buffer(napi_env env, napi_value value);\n\n[in] env: The environment in which to create the Napi::Buffer object.\n[in] value: The Uint8Array reference to wrap.\n\n\n\nData\nT* Napi::Buffer::Data() const;\nReturns a pointer the external data.\n\n\nLength\nsize_t Napi::Buffer::Length() const;\nReturns the number of T elements in the external data."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/handle_scope.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/handle_scope.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nConstructor\nCreates a new handle scope on the stack.\nNapi::HandleScope::HandleScope(Napi::Env env);\n\n[in] env: The environment in which to construct the Napi::HandleScope object.\n\nReturns a new Napi::HandleScope\n\n\nConstructor\nCreates a new handle scope on the stack.\nNapi::HandleScope::HandleScope(Napi::Env env, Napi::HandleScope scope);\n\n[in] env: Napi::Env in which the scope passed in was created.\n[in] scope: pre-existing Napi::HandleScope.\n\nReturns a new Napi::HandleScope instance which wraps the napi_handle_scope handle passed in. This can be used to mix usage of the C N-API and node-addon-api.\noperator HandleScope::napi_handle_scope\noperator Napi::HandleScope::napi_handle_scope() const\nReturns the N-API napi_handle_scope wrapped by the Napi::EscapableHandleScope object. This can be used to mix usage of the C N-API and node-addon-api by allowing the class to be used be converted to a napi_handle_scope.\n\n\nDestructor\nNapi::HandleScope::~HandleScope();\nDeletes the Napi::HandleScope instance and allows any objects/handles created in the scope to be collected by the garbage collector. There is no guarantee as to when the gargbage collector will do this.\n\n\nEnv\nNapi::Env Napi::HandleScope::Env() const;\nReturns the Napi::Env associated with the Napi::HandleScope."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/typed_array.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/typed_array.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nConstructor\nInitializes an empty instance of the Napi::TypedArray class.\nNapi::TypedArray::TypedArray();\n\n\nConstructor\nInitializes a wrapper instance of an existing Napi::TypedArray instance.\nNapi::TypedArray::TypedArray(napi_env env, napi_value value);\n\n[in] env: The environment in which to create the Napi::TypedArray instance.\n[in] value: The Napi::TypedArray reference to wrap.\n\n\n\nTypedArrayType\nnapi_typedarray_type Napi::TypedArray::TypedArrayType() const;\nReturns the type of this instance.\n\n\nArrayBuffer\nNapi::ArrayBuffer Napi::TypedArray::ArrayBuffer() const;\nReturns the backing array buffer.\n\n\nElementSize\nuint8_t Napi::TypedArray::ElementSize() const;\nReturns the size of one element, in bytes.\n\n\nElementLength\nsize_t Napi::TypedArray::ElementLength() const;\nReturns the number of elements.\n\n\nByteOffset\nsize_t Napi::TypedArray::ByteOffset() const;\nReturns the offset into the Napi::ArrayBuffer where the array starts, in bytes.\n\n\nByteLength\nsize_t Napi::TypedArray::ByteLength() const;\nReturns the length of the array, in bytes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/reference.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/reference.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nFactory Method\nstatic Napi::Reference<T> Napi::Reference::New(const T& value, uint32_t initialRefcount = 0);\n\n[in] value: The value which is to be referenced.\n[in] initialRefcount: The initial reference count.\n\n\n\nEmpty Constructor\nNapi::Reference::Reference();\nCreates a new empty Napi::Reference instance.\n\n\nConstructor\nNapi::Reference::Reference(napi_env env, napi_value value);\n\n[in] env: The napi_env environment in which to construct the Napi::Reference object.\n[in] value: The N-API primitive value to be held by the Napi::Reference.\n\n\n\nEnv\nNapi::Env Napi::Reference::Env() const;\nReturns the Napi::Env value in which the Napi::Reference was instantiated.\n\n\nIsEmpty\nbool Napi::Reference::IsEmpty() const;\nDetermines whether the value held by the Napi::Reference is empty.\n\n\nValue\nT Napi::Reference::Value() const;\nReturns the value held by the Napi::Reference.\n\n\nRef\nuint32_t Napi::Reference::Ref();\nIncrements the reference count for the Napi::Reference and returns the resulting reference count. Throws an error if the increment fails.\n\n\nUnref\nuint32_t Napi::Reference::Unref();\nDecrements the reference count for the Napi::Reference and returns the resulting reference count. Throws an error if the decrement fails.\n\n\nReset (Empty)\nvoid Napi::Reference::Reset();\nSets the value held by the Napi::Reference to be empty.\n\n\nReset\nvoid Napi::Reference::Reset(const T& value, uint32_t refcount = 0);\n\n[in] value: The value which is to be referenced.\n[in] initialRefcount: The initial reference count.\n\nSets the value held by the Napi::Reference.\n\n\nSuppressDestruct\nvoid Napi::Reference::SuppressDestruct();\nCall this method on a Napi::Reference that is declared as static data to prevent its destructor, running at program shutdown time, from attempting to reset the reference when the environment is no longer valid."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/basic_types.html#value",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/basic_types.html#value",
    "title": "3327 Research",
    "section": "Value",
    "text": "Value\nNapi::Value is the base class of Node Addon API’s fundamental object type hierarchy. It represents a JavaScript value of an unknown type. It is a thin wrapper around the N-API datatype napi_value. Methods on this class can be used to check the JavaScript type of the underlying N-API napi_value and also to convert to C++ types.\n\nConstructor\nNapi::Value::Value();\nUsed to create a Node Addon API Napi::Value that represents an empty value.\nNapi::Value::Value(napi_env env, napi_value value);\n\n[in] env - The napi_env environment in which to construct the Napi::Value object.\n[in] value - The underlying JavaScript value that the Napi::Value instance represents.\n\nReturns a Node.js Addon API Napi::Value that represents the napi_value passed in.\n\n\nOperators\n\noperator napi_value\nNapi::Value::operator napi_value() const;\nReturns the underlying N-API napi_value. If the instance is empty, this returns nullptr.\n\n\noperator ==\nbool Napi::Value::operator ==(const Value& other) const;\nReturns true if this value strictly equals another value, or false otherwise.\n\n\noperator !=\nbool Napi::Value::operator !=(const Value& other) const;\nReturns false if this value strictly equals another value, or true otherwise.\n\n\n\nMethods\n\nFrom\ntemplate <typename T>\nstatic Napi::Value Napi::Value::From(napi_env env, const T& value);\n\n[in] env - The napi_env environment in which to construct the Napi::Value object.\n[in] value - The C++ type to represent in JavaScript.\n\nReturns a Napi::Value representing the input C++ type in JavaScript.\nThis method is used to convert from a C++ type to a JavaScript value. Here, value may be any of: - bool - returns a Napi::Boolean. - Any integer type - returns a Napi::Number. - Any floating point type - returns a Napi::Number. - const char* (encoded using UTF-8, null-terminated) - returns a Napi::String. - const char16_t* (encoded using UTF-16-LE, null-terminated) - returns a Napi::String. - std::string (encoded using UTF-8) - returns a Napi::String. - std::u16string - returns a Napi::String. - napi::Value - returns a Napi::Value. - napi_value - returns a Napi::Value.\n\n\nAs\ntemplate <typename T> T Napi::Value::As() const;\nReturns the Napi::Value cast to a desired C++ type.\nUse this when the actual type is known or assumed.\nNote: This conversion does NOT coerce the type. Calling any methods inappropriate for the actual value type will throw Napi::Error.\n\n\nStrictEquals\nbool Napi::Value::StrictEquals(const Value& other) const;\n\n[in] other - The value to compare against.\n\nReturns true if the other Napi::Value is strictly equal to this one.\n\n\nEnv\nNapi::Env Napi::Value::Env() const;\nReturns the environment that the value is associated with. See Napi::Env for more details about environments.\n\n\nIsEmpty\nbool Napi::Value::IsEmpty() const;\nReturns true if the value is uninitialized.\nAn empty value is invalid, and most attempts to perform an operation on an empty value will result in an exception. An empty value is distinct from JavaScript null or undefined, which are valid values.\nWhen C++ exceptions are disabled at compile time, a method with a Napi::Value return type may return an empty value to indicate a pending exception. If C++ exceptions are not being used, callers should check the result of Env::IsExceptionPending before attempting to use the value.\n\n\nType\nnapi_valuetype Napi::Value::Type() const;\nReturns the underlying N-API napi_valuetype of the value.\n\n\nIsUndefined\nbool Napi::Value::IsUndefined() const;\nReturns true if the underlying value is a JavaScript undefined or false otherwise.\n\n\nIsNull\nbool Napi::Value::IsNull() const;\nReturns true if the underlying value is a JavaScript null or false otherwise.\n\n\nIsBoolean\nbool Napi::Value::IsBoolean() const;\nReturns true if the underlying value is a JavaScript true or JavaScript false, or false if the value is not a Napi::Boolean value in JavaScript.\n\n\nIsNumber\nbool Napi::Value::IsNumber() const;\nReturns true if the underlying value is a JavaScript Napi::Number or false otherwise.\n\n\nIsString\nbool Napi::Value::IsString() const;\nReturns true if the underlying value is a JavaScript Napi::String or false otherwise.\n\n\nIsSymbol\nbool Napi::Value::IsSymbol() const;\nReturns true if the underlying value is a JavaScript Napi::Symbol or false otherwise.\n\n\nIsArray\nbool Napi::Value::IsArray() const;\nReturns true if the underlying value is a JavaScript Napi::Array or false otherwise.\n\n\nIsArrayBuffer\nbool Napi::Value::IsArrayBuffer() const;\nReturns true if the underlying value is a JavaScript Napi::ArrayBuffer or false otherwise.\n\n\nIsTypedArray\nbool Napi::Value::IsTypedArray() const;\nReturns true if the underlying value is a JavaScript Napi::TypedArray or false otherwise.\n\n\nIsObject\nbool Napi::Value::IsObject() const;\nReturns true if the underlying value is a JavaScript Napi::Object or false otherwise.\n\n\nIsFunction\nbool Napi::Value::IsFunction() const;\nReturns true if the underlying value is a JavaScript Napi::Function or false otherwise.\n\n\nIsPromise\nbool Napi::Value::IsPromise() const;\nReturns true if the underlying value is a JavaScript Napi::Promise or false otherwise.\n\n\nIsDataView\nbool Napi::Value::IsDataView() const;\nReturns true if the underlying value is a JavaScript Napi::DataView or false otherwise.\n\n\nIsBuffer\nbool Napi::Value::IsBuffer() const;\nReturns true if the underlying value is a Node.js Napi::Buffer or false otherwise.\n\n\nIsExternal\nbool Napi::Value::IsExternal() const;\nReturns true if the underlying value is a N-API external object or false otherwise.\n\n\nIsDate\nbool Napi::Value::IsDate() const;\nReturns true if the underlying value is a JavaScript Date or false otherwise.\n\n\nToBoolean\nNapi::Boolean Napi::Value::ToBoolean() const;\nReturns a Napi::Boolean representing the Napi::Value.\nThis is a wrapper around napi_coerce_to_boolean. This will throw a JavaScript exception if the coercion fails. If C++ exceptions are not being used, callers should check the result of Env::IsExceptionPending before attempting to use the returned value.\n\n\nToNumber\nNapi::Number Napi::Value::ToNumber() const;\nReturns a Napi::Number representing the Napi::Value.\nNote: This can cause script code to be executed according to JavaScript semantics. This is a wrapper around napi_coerce_to_number. This will throw a JavaScript exception if the coercion fails. If C++ exceptions are not being used, callers should check the result of Env::IsExceptionPending before attempting to use the returned value.\n\n\nToString\nNapi::String Napi::Value::ToString() const;\nReturns a Napi::String representing the Napi::Value.\nNote that this can cause script code to be executed according to JavaScript semantics. This is a wrapper around napi_coerce_to_string. This will throw a JavaScript exception if the coercion fails. If C++ exceptions are not being used, callers should check the result of Env::IsExceptionPending before attempting to use the returned value.\n\n\nToObject\nNapi::Object Napi::Value::ToObject() const;\nReturns a Napi::Object representing the Napi::Value.\nThis is a wrapper around napi_coerce_to_object. This will throw a JavaScript exception if the coercion fails. If C++ exceptions are not being used, callers should check the result of Env::IsExceptionPending before attempting to use the returned value."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/basic_types.html#name",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/basic_types.html#name",
    "title": "3327 Research",
    "section": "Name",
    "text": "Name\nNames are JavaScript values that can be used as a property name. There are two specialized types of names supported in Node.js Addon API Napi::String and Napi::Symbol.\n\nMethods\n\nConstructor\nNapi::Name::Name();\nReturns an empty Napi::Name.\nNapi::Name::Name(napi_env env, napi_value value);\n\n[in] env - The environment in which to create the array.\n[in] value - The primitive to wrap.\n\nReturns a Napi::Name created from the JavaScript primitive.\nNote: The value is not coerced to a string."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/basic_types.html#array",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/basic_types.html#array",
    "title": "3327 Research",
    "section": "Array",
    "text": "Array\nArrays are native representations of JavaScript Arrays. Napi::Array is a wrapper around napi_value representing a JavaScript Array.\nNapi::TypedArray and Napi::ArrayBuffer correspond to JavaScript data types such as Int32Array and ArrayBuffer, respectively, that can be used for transferring large amounts of data from JavaScript to the native side. An example illustrating the use of a JavaScript-provided ArrayBuffer in native code is available here.\n\nConstructor\nNapi::Array::Array();\nReturns an empty array.\nIf an error occurs, a Napi::Error will be thrown. If C++ exceptions are not being used, callers should check the result of Env::IsExceptionPending before attempting to use the returned value.\nNapi::Array::Array(napi_env env, napi_value value);\n\n[in] env - The environment in which to create the array.\n[in] value - The primitive to wrap.\n\nReturns a Napi::Array wrapping a napi_value.\nIf an error occurs, a Napi::Error will get thrown. If C++ exceptions are not being used, callers should check the result of Env::IsExceptionPending before attempting to use the returned value.\n\n\nMethods\n\nNew\nstatic Napi::Array Napi::Array::New(napi_env env);\n\n[in] env - The environment in which to create the array.\n\nReturns a new Napi::Array.\nIf an error occurs, a Napi::Error will get thrown. If C++ exceptions are not being used, callers should check the result of Env::IsExceptionPending before attempting to use the returned value.\n\n\nNew\nstatic Napi::Array Napi::Array::New(napi_env env, size_t length);\n\n[in] env - The environment in which to create the array.\n[in] length - The length of the array.\n\nReturns a new Napi::Array with the given length.\nIf an error occurs, a Napi::Error will get thrown. If C++ exceptions are not being used, callers should check the result of Env::IsExceptionPending before attempting to use the returned value.\n\n\nLength\nuint32_t Napi::Array::Length() const;\nReturns the length of the array.\nNote: This can execute JavaScript code implicitly according to JavaScript semantics. If an error occurs, a Napi::Error will get thrown. If C++ exceptions are not being used, callers should check the result of Env::IsExceptionPending before attempting to use the returned value."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/threadsafe_function.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/threadsafe_function.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nConstructor\nCreates a new empty instance of Napi::ThreadSafeFunction.\nNapi::Function::ThreadSafeFunction();\n\n\nConstructor\nCreates a new instance of the Napi::ThreadSafeFunction object.\nNapi::ThreadSafeFunction::ThreadSafeFunction(napi_threadsafe_function tsfn);\n\ntsfn: The napi_threadsafe_function which is a handle for an existing thread-safe function.\n\nReturns a non-empty Napi::ThreadSafeFunction instance. When using this constructor, only use the Blocking(void*) / NonBlocking(void*) overloads; the Callback and templated data* overloads should not be used. See below for additional details.\n\n\nNew\nCreates a new instance of the Napi::ThreadSafeFunction object. The New function has several overloads for the various optional parameters: skip the optional parameter for that specific overload.\nNew(napi_env env,\n    const Function& callback,\n    const Object& resource,\n    ResourceString resourceName,\n    size_t maxQueueSize,\n    size_t initialThreadCount,\n    ContextType* context,\n    Finalizer finalizeCallback,\n    FinalizerDataType* data);\n\nenv: The napi_env environment in which to construct the Napi::ThreadSafeFunction object.\ncallback: The Function to call from another thread.\n[optional] resource: An object associated with the async work that will be passed to possible async_hooks init hooks.\nresourceName: A JavaScript string to provide an identifier for the kind of resource that is being provided for diagnostic information exposed by the async_hooks API.\nmaxQueueSize: Maximum size of the queue. 0 for no limit.\ninitialThreadCount: The initial number of threads, including the main thread, which will be making use of this function.\n[optional] context: Data to attach to the resulting ThreadSafeFunction.\n[optional] finalizeCallback: Function to call when the ThreadSafeFunction is being destroyed. This callback will be invoked on the main thread when the thread-safe function is about to be destroyed. It receives the context and the finalize data given during construction (if given), and provides an opportunity for cleaning up after the threads e.g. by calling uv_thread_join(). It is important that, aside from the main loop thread, there be no threads left using the thread-safe function after the finalize callback completes. Must implement void operator()(Env env, DataType* data,   Context* hint), skipping data or hint if they are not provided. Can be retreived via GetContext().\n[optional] data: Data to be passed to finalizeCallback.\n\nReturns a non-empty Napi::ThreadSafeFunction instance.\n\n\nAcquire\nAdd a thread to this thread-safe function object, indicating that a new thread will start making use of the thread-safe function.\nnapi_status Napi::ThreadSafeFunction::Acquire()\nReturns one of: - napi_ok: The thread has successfully acquired the thread-safe function for its use. - napi_closing: The thread-safe function has been marked as closing via a previous call to Abort().\n\n\nRelease\nIndicate that an existing thread will stop making use of the thread-safe function. A thread should call this API when it stops making use of this thread-safe function. Using any thread-safe APIs after having called this API has undefined results in the current thread, as it may have been destroyed.\nnapi_status Napi::ThreadSafeFunction::Release()\nReturns one of: - napi_ok: The thread-safe function has been successfully released. - napi_invalid_arg: The thread-safe function’s thread-count is zero. - napi_generic_failure: A generic error occurred when attemping to release the thread-safe function.\n\n\nAbort\n“Abort” the thread-safe function. This will cause all subsequent APIs associated with the thread-safe function except Release() to return napi_closing even before its reference count reaches zero. In particular, BlockingCall and NonBlockingCall() will return napi_closing, thus informing the threads that it is no longer possible to make asynchronous calls to the thread-safe function. This can be used as a criterion for terminating the thread. Upon receiving a return value of napi_closing from a thread-safe function call a thread must make no further use of the thread-safe function because it is no longer guaranteed to be allocated.\nnapi_status Napi::ThreadSafeFunction::Abort()\nReturns one of: - napi_ok: The thread-safe function has been successfully aborted. - napi_invalid_arg: The thread-safe function’s thread-count is zero. - napi_generic_failure: A generic error occurred when attemping to abort the thread-safe function.\n\n\nBlockingCall / NonBlockingCall\nCalls the Javascript function in either a blocking or non-blocking fashion. - BlockingCall(): the API blocks until space becomes available in the queue. Will never block if the thread-safe function was created with a maximum queue size of 0. - NonBlockingCall(): will return napi_queue_full if the queue was full, preventing data from being successfully added to the queue.\nThere are several overloaded implementations of BlockingCall() and NonBlockingCall() for use with optional parameters: skip the optional parameter for that specific overload.\nThese specific function overloads should only be used on a ThreadSafeFunction created via ThreadSafeFunction::New.\nnapi_status Napi::ThreadSafeFunction::BlockingCall(DataType* data, Callback callback) const\n\nnapi_status Napi::ThreadSafeFunction::NonBlockingCall(DataType* data, Callback callback) const\n\n[optional] data: Data to pass to callback.\n[optional] callback: C++ function that is invoked on the main thread. The callback receives the ThreadSafeFunction’s JavaScript callback function to call as an Napi::Function in its parameters and the DataType* data pointer (if provided). Must implement void operator()(Napi::Env env, Function   jsCallback, DataType* data), skipping data if not provided. It is not necessary to call into JavaScript via MakeCallback() because N-API runs callback in a context appropriate for callbacks.\n\nThese specific function overloads should only be used on a ThreadSafeFunction created via ThreadSafeFunction(napi_threadsafe_function).\nnapi_status Napi::ThreadSafeFunction::BlockingCall(void* data) const\n\nnapi_status Napi::ThreadSafeFunction::NonBlockingCall(void* data) const\n\ndata: Data to pass to call_js_cb specified when creating the thread-safe function via napi_create_threadsafe_function.\n\nReturns one of: - napi_ok: The call was successfully added to the queue. - napi_queue_full: The queue was full when trying to call in a non-blocking method. - napi_closing: The thread-safe function is aborted and cannot accept more calls. - napi_invalid_arg: The thread-safe function is closed. - napi_generic_failure: A generic error occurred when attemping to add to the queue."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/threadsafe_function.html#example",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/threadsafe_function.html#example",
    "title": "3327 Research",
    "section": "Example",
    "text": "Example\n#include <chrono>\n#include <thread>\n#include <napi.h>\n\nusing namespace Napi;\n\nstd::thread nativeThread;\nThreadSafeFunction tsfn;\n\nValue Start( const CallbackInfo& info )\n{\n  Napi::Env env = info.Env();\n\n  if ( info.Length() < 2 )\n  {\n    throw TypeError::New( env, \"Expected two arguments\" );\n  }\n  else if ( !info[0].IsFunction() )\n  {\n    throw TypeError::New( env, \"Expected first arg to be function\" );\n  }\n  else if ( !info[1].IsNumber() )\n  {\n    throw TypeError::New( env, \"Expected second arg to be number\" );\n  }\n\n  int count = info[1].As<Number>().Int32Value();\n\n  // Create a ThreadSafeFunction\n  tsfn = ThreadSafeFunction::New(\n      env,\n      info[0].As<Function>(),  // JavaScript function called asynchronously\n      \"Resource Name\",         // Name\n      0,                       // Unlimited queue\n      1,                       // Only one thread will use this initially\n      []( Napi::Env ) {        // Finalizer used to clean threads up\n        nativeThread.join();\n      } );\n\n  // Create a native thread\n  nativeThread = std::thread( [count] {\n    auto callback = []( Napi::Env env, Function jsCallback, int* value ) {\n      // Transform native data into JS data, passing it to the provided \n      // `jsCallback` -- the TSFN's JavaScript function.\n      jsCallback.Call( {Number::New( env, *value )} );\n      \n      // We're finished with the data.\n      delete value;\n    };\n\n    for ( int i = 0; i < count; i++ )\n    {\n      // Create new data\n      int* value = new int( clock() );\n\n      // Perform a blocking call\n      napi_status status = tsfn.BlockingCall( value, callback );\n      if ( status != napi_ok )\n      {\n        // Handle error\n        break;\n      }\n\n      std::this_thread::sleep_for( std::chrono::seconds( 1 ) );\n    }\n\n    // Release the thread-safe function\n    tsfn.Release();\n  } );\n\n  return Boolean::New(env, true);\n}\n\nNapi::Object Init( Napi::Env env, Object exports )\n{\n  exports.Set( \"start\", Function::New( env, Start ) );\n  return exports;\n}\n\nNODE_API_MODULE( clock, Init )\nThe above code can be used from JavaScript as follows:\nconst { start } = require('bindings')('clock');\n\nstart(function () {\n    console.log(\"JavaScript callback called with arguments\", Array.from(arguments));\n}, 5);\nWhen executed, the output will show the value of clock() five times at one second intervals:\nJavaScript callback called with arguments [ 84745 ]\nJavaScript callback called with arguments [ 103211 ]\nJavaScript callback called with arguments [ 104516 ]\nJavaScript callback called with arguments [ 105104 ]\nJavaScript callback called with arguments [ 105691 ]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/error_handling.html#handling-errors-with-c-exceptions",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/error_handling.html#handling-errors-with-c-exceptions",
    "title": "3327 Research",
    "section": "Handling Errors With C++ Exceptions",
    "text": "Handling Errors With C++ Exceptions\nWhen C++ exceptions are enabled try/catch can be used to catch exceptions thrown from calls to JavaScript and then they can either be handled or rethrown before returning from a native method.\nIf a node-addon-api call fails without executing any JavaScript code (for example due to an invalid argument), then node-addon-api automatically converts and throws the error as a C++ exception of type Napi::Error.\nIf a JavaScript function called by C++ code via node-addon-api throws a JavaScript exception, then node-addon-api automatically converts and throws it as a C++ exception of type Napi:Error on return from the JavaScript code to the native method.\nIf a C++ exception of type Napi::Error escapes from a N-API C++ callback, then the N-API wrapper automatically converts and throws it as a JavaScript exception.\nOn return from a native method, node-addon-api will automatically convert a pending C++ exception to a JavaScript exception.\nWhen C++ exceptions are enabled try/catch can be used to catch exceptions thrown from calls to JavaScript and then they can either be handled or rethrown before returning from a native method."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/error_handling.html#examples-with-c-exceptions-enabled",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/error_handling.html#examples-with-c-exceptions-enabled",
    "title": "3327 Research",
    "section": "Examples with C++ exceptions enabled",
    "text": "Examples with C++ exceptions enabled\n\nThrowing a C++ exception\nEnv env = ...\nthrow Napi::Error::New(env, \"Example exception\");\n// other C++ statements\n// ...\nThe statements following the throw statement will not be executed. The exception will bubble up as a C++ exception of type Napi::Error, until it is either caught while still in C++, or else automatically propagated as a JavaScript exception when returning to JavaScript.\n\n\nPropagating a N-API C++ exception\nNapi::Function jsFunctionThatThrows = someObj.As<Napi::Function>();\nNapi::Value result = jsFunctionThatThrows({ arg1, arg2 });\n// other C++ statements\n// ...\nThe C++ statements following the call to the JavaScript function will not be executed. The exception will bubble up as a C++ exception of type Napi::Error, until it is either caught while still in C++, or else automatically propagated as a JavaScript exception when returning to JavaScript.\n\n\nHandling a N-API C++ exception\nNapi::Function jsFunctionThatThrows = someObj.As<Napi::Function>();\nNapi::Value result;\ntry {\n    result = jsFunctionThatThrows({ arg1, arg2 });\n} catch (const Error& e) {\n    cerr << \"Caught JavaScript exception: \" + e.what();\n}\nSince the exception was caught here, it will not be propagated as a JavaScript exception."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/error_handling.html#handling-errors-without-c-exceptions",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/error_handling.html#handling-errors-without-c-exceptions",
    "title": "3327 Research",
    "section": "Handling Errors Without C++ Exceptions",
    "text": "Handling Errors Without C++ Exceptions\nIf C++ exceptions are disabled (for more info see: Setup), then the Napi::Error class does not extend std::exception. This means that any calls to node-addon-api function do not throw a C++ exceptions. Instead, it raises pending JavaScript exceptions and returns an empty Napi::Value. The calling code should check env.IsExceptionPending() before attempting to use a returned value, and may use methods on the Napi::Env class to check for, get, and clear a pending JavaScript exception (for more info see: Env). If the pending exception is not cleared, it will be thrown when the native code returns to JavaScript."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/error_handling.html#examples-with-c-exceptions-disabled",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/error_handling.html#examples-with-c-exceptions-disabled",
    "title": "3327 Research",
    "section": "Examples with C++ exceptions disabled",
    "text": "Examples with C++ exceptions disabled\n\nThrowing a JS exception\nNapi::Env env = ...\nNapi::Error::New(env, \"Example exception\").ThrowAsJavaScriptException();\nreturn;\nAfter throwing a JavaScript exception, the code should generally return immediately from the native callback, after performing any necessary cleanup.\n\n\nPropagating a N-API JS exception\nNapi::Env env = ...\nNapi::Function jsFunctionThatThrows = someObj.As<Napi::Function>();\nNapi::Value result = jsFunctionThatThrows({ arg1, arg2 });\nif (env.IsExceptionPending()) {\n    Error e = env.GetAndClearPendingException();\n    return e.Value();\n}\nIf env.IsExceptionPending() returns true a JavaScript exception is pending. To let the exception propagate, the code should generally return immediately from the native callback, after performing any necessary cleanup.\n\n\nHandling a N-API JS exception\nNapi::Env env = ...\nNapi::Function jsFunctionThatThrows = someObj.As<Napi::Function>();\nNapi::Value result = jsFunctionThatThrows({ arg1, arg2 });\nif (env.IsExceptionPending()) {\n    Napi::Error e = env.GetAndClearPendingException();\n    cerr << \"Caught JavaScript exception: \" + e.Message();\n}\nSince the exception was cleared here, it will not be propagated as a JavaScript exception after the native callback returns."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/error_handling.html#calling-n-api-directly-from-a-node-addon-api-addon",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/error_handling.html#calling-n-api-directly-from-a-node-addon-api-addon",
    "title": "3327 Research",
    "section": "Calling N-API directly from a node-addon-api addon",
    "text": "Calling N-API directly from a node-addon-api addon\nnode-addon-api provides macros for throwing errors in response to non-OK napi_status results when calling N-API functions from within a native addon. These macros are defined differently depending on whether C++ exceptions are enabled or not, but are available for use in either case.\n\nNAPI_THROW(e, ...)\nThis macro accepts a Napi::Error, throws it, and returns the value given as the last parameter. If C++ exceptions are enabled (by defining NAPI_CPP_EXCEPTIONS during the build), the return value will be ignored.\n\n\nNAPI_THROW_IF_FAILED(env, status, ...)\nThis macro accepts a Napi::Env and a napi_status. It constructs an error from the napi_status, throws it, and returns the value given as the last parameter. If C++ exceptions are enabled (by defining NAPI_CPP_EXCEPTIONS during the build), the return value will be ignored.\n\n\nNAPI_THROW_IF_FAILED_VOID(env, status)\nThis macro accepts a Napi::Env and a napi_status. It constructs an error from the napi_status, throws it, and returns.\n\n\nNAPI_FATAL_IF_FAILED(status, location, message)\nThis macro accepts a napi_status, a C string indicating the location where the error occurred, and a second C string for the message to display."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/callbackinfo.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/callbackinfo.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nConstructor\nNapi::CallbackInfo::CallbackInfo(napi_env env, napi_callback_info info);\n\n[in] env: The napi_env environment in which to construct the Napi::CallbackInfo object.\n[in] info: The napi_callback_info data structure from which to construct the Napi::CallbackInfo object.\n\n\n\nEnv\nNapi::Env Napi::CallbackInfo::Env() const;\nReturns the Env object in which the request is being made.\n\n\nNewTarget\nNapi::Value Napi::CallbackInfo::NewTarget() const;\nReturns the new.target value of the constructor call. If the function that was invoked (and for which the Napi::NCallbackInfo was passed) is not a constructor call, a call to IsEmpty() on the returned value returns true.\n\n\nIsConstructCall\nbool Napi::CallbackInfo::IsConstructCall() const;\nReturns a bool indicating if the function that was invoked (and for which the Napi::CallbackInfo was passed) is a constructor call.\n\n\nLength\nsize_t Napi::CallbackInfo::Length() const;\nReturns the number of arguments passed in the Napi::CallbackInfo object.\n\n\noperator []\nconst Napi::Value operator [](size_t index) const;\n\n[in] index: The zero-based index of the requested argument.\n\nReturns a Napi::Value object containing the requested argument.\n\n\nThis\nNapi::Value Napi::CallbackInfo::This() const;\nReturns the JavaScript this value for the call\n\n\nData\nvoid* Napi::CallbackInfo::Data() const;\nReturns the data pointer for the callback.\n\n\nSetData\nvoid Napi::CallbackInfo::SetData(void* data);\n\n[in] data: The new data pointer to associate with this Napi::CallbackInfo object.\n\nReturns void.\n\n\nNot documented here\nNapi::CallbackInfo::~CallbackInfo();\n// Disallow copying to prevent multiple free of _dynamicArgs\nNapi::CallbackInfo::CallbackInfo(CallbackInfo const &) = delete;\nvoid Napi::CallbackInfo::operator=(CallbackInfo const &) = delete;"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/setup.html#prerequisites",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/setup.html#prerequisites",
    "title": "3327 Research",
    "section": "Prerequisites",
    "text": "Prerequisites\nBefore starting to use N-API you need to assure you have the following prerequisites:\n\nNode.JS see: Installing Node.js\nNode.js native addon build tool\n\nnode-gyp"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/setup.html#installation-and-usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/setup.html#installation-and-usage",
    "title": "3327 Research",
    "section": "Installation and usage",
    "text": "Installation and usage\nTo use N-API in a native module:\n\nAdd a dependency on this package to package.json:\n\n  \"dependencies\": {\n    \"node-addon-api\": \"*\",\n  }\n\nReference this package’s include directory and gyp file in binding.gyp:\n\n  'include_dirs': [\"<!@(node -p \\\"require('node-addon-api').include\\\")\"],\n  'dependencies': [\"<!(node -p \\\"require('node-addon-api').gyp\\\")\"],\n\nDecide whether the package will enable C++ exceptions in the N-API wrapper. The base ABI-stable C APIs do not throw or handle C++ exceptions, but the N-API C++ wrapper classes may optionally integrate C++ and JavaScript exception-handling. To enable that capability, C++ exceptions must be enabled in binding.gyp:\n\n  'cflags!': [ '-fno-exceptions' ],\n  'cflags_cc!': [ '-fno-exceptions' ],\n  'xcode_settings': {\n    'GCC_ENABLE_CPP_EXCEPTIONS': 'YES',\n    'CLANG_CXX_LIBRARY': 'libc++',\n    'MACOSX_DEPLOYMENT_TARGET': '10.7',\n  },\n  'msvs_settings': {\n    'VCCLCompilerTool': { 'ExceptionHandling': 1 },\n  },\nAlternatively, disable use of C++ exceptions in N-API:\n  'defines': [ 'NAPI_DISABLE_CPP_EXCEPTIONS' ],\n\nIf you would like your native addon to support OSX, please also add the following settings in the binding.gyp file:\n\n['OS==\"mac\"', {\n    'cflags+': ['-fvisibility=hidden'],\n    'xcode_settings': {\n      'GCC_SYMBOLS_PRIVATE_EXTERN': 'YES', # -fvisibility=hidden\n    }\n}]\n\nInclude napi.h in the native module code. To ensure only ABI-stable APIs are used, DO NOT include node.h, nan.h, or v8.h.\n\n#include \"napi.h\"\nAt build time, the N-API back-compat library code will be used only when the targeted node version does not have N-API built-in.\nThe preprocessor directive NODE_ADDON_API_DISABLE_DEPRECATED can be defined at compile time before including napi.h to skip the definition of deprecated APIs."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/generator.html#what-is-generator",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/generator.html#what-is-generator",
    "title": "3327 Research",
    "section": "What is generator",
    "text": "What is generator\ngenerator-napi-module is a module to quickly generate a skeleton module using N-API, the new API for Native addons. This module automatically sets up your gyp file to use node-addon-api, the C++ wrappers for N-API and generates a wrapper JS module. Optionally, it can even configure the generated project to use TypeScript instead."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/generator.html#generator-napi-module-reference",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/generator.html#generator-napi-module-reference",
    "title": "3327 Research",
    "section": "generator-napi-module reference",
    "text": "generator-napi-module reference\n\nInstallation and usage"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/checker-tool.html#to-use-the-checker-tool",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/checker-tool.html#to-use-the-checker-tool",
    "title": "3327 Research",
    "section": "To use the checker tool:",
    "text": "To use the checker tool:\n\nInstall the application with npm install.\nIf the application does not depend on node-addon-api, copy the checker tool into the application’s directory.\nIf the application does not depend on node-addon-api, run the checker tool from the application’s directory:\nnode ./check-napi.js\nOtherwise, the checker tool can be run from the application’s node_modules/ subdirectory:\nnode ./node_modules/node-addon-api/tools/check-napi.js\n\nThe tool accepts the root directory from which to start checking for Node.js native addons as a single optional command line parameter. If ommitted it will start checking from the current directory (.)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/date.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/date.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nConstructor\nCreates a new empty instance of a Napi::Date object.\nNapi::Date::Date();\nCreates a new non-empty instance of a Napi::Date object.\nNapi::Date::Date(napi_env env, napi_value value);\n\n[in] env: The environment in which to construct the Napi::Date object.\n[in] value: The napi_value which is a handle for a JavaScript Date.\n\n\n\nNew\nCreates a new instance of a Napi::Date object.\nstatic Napi::Date Napi::Date::New(Napi::Env env, double value);\n\n[in] env: The environment in which to construct the Napi::Date object.\n[in] value: The time value the JavaScript Date will contain represented as the number of milliseconds since 1 January 1970 00:00:00 UTC.\n\nReturns a new instance of Napi::Date object.\n\n\nValueOf\ndouble Napi::Date::ValueOf() const;\nReturns the time value as double primitive represented as the number of milliseconds since 1 January 1970 00:00:00 UTC."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/date.html#operators",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/date.html#operators",
    "title": "3327 Research",
    "section": "Operators",
    "text": "Operators\n\noperator double\nConverts a Napi::Date value to a double primitive.\nNapi::Date::operator double() const;\n\n\nExample\nThe following shows an example of casting a Napi::Date value to a double primitive.\ndouble operatorVal = Napi::Date::New(Env(), 0); // Napi::Date to double\n// or\nauto instanceVal = info[0].As<Napi::Date>().ValueOf();"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_worker.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_worker.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nEnv\nRequests the environment in which the async worker has been initially created.\nNapi::Env Napi::AsyncWorker::Env() const;\nReturns the environment in which the async worker has been created.\n\n\nQueue\nRequests that the work be queued for execution.\nvoid Napi::AsyncWorker::Queue();\n\n\nCancel\nCancels queued work if it has not yet been started. If it has already started executing, it cannot be cancelled. If cancelled successfully neither OnOK nor OnError will be called.\nvoid Napi::AsyncWorker::Cancel();\n\n\nReceiver\nNapi::ObjectReference& Napi::AsyncWorker::Receiver();\nReturns the persistent object reference of the receiver object set when the async worker was created.\n\n\nCallback\nNapi::FunctionReference& Napi::AsyncWorker::Callback();\nReturns the persistent function reference of the callback set when the async worker was created. The returned function reference will receive the results of the computation that happened in the Napi::AsyncWorker::Execute method, unless the default implementation of Napi::AsyncWorker::OnOK or Napi::AsyncWorker::OnError is overridden.\n\n\nSuppressDestruct\nvoid Napi::AsyncWorker::SuppressDestruct();\nPrevents the destruction of the Napi::AsyncWorker instance upon completion of the Napi::AsyncWorker::OnOK callback.\n\n\nSetError\nSets the error message for the error that happened during the execution. Setting an error message will cause the Napi::AsyncWorker::OnError method to be invoked instead of Napi::AsyncWorker::OnOK once the Napi::AsyncWorker::Execute method completes.\nvoid Napi::AsyncWorker::SetError(const std::string& error);\n\n[in] error: The reference to the string that represent the message of the error.\n\n\n\nExecute\nThis method is used to execute some tasks outside of the event loop on a libuv worker thread. Subclasses must implement this method and the method is run on a thread other than that running the main event loop. As the method is not running on the main event loop, it must avoid calling any methods from node-addon-api or running any code that might invoke JavaScript. Instead, once this method is complete any interaction through node-addon-api with JavaScript should be implemented in the Napi::AsyncWorker::OnOK method and Napi::AsyncWorker::OnError which run on the main thread and are invoked when the Napi::AsyncWorker::Execute method completes.\nvirtual void Napi::AsyncWorker::Execute() = 0;\n\n\nOnOK\nThis method is invoked when the computation in the Execute method ends. The default implementation runs the Callback optionally provided when the AsyncWorker class was created. The Callback will by default receive no arguments. The arguments to the Callback can be provided by overriding the GetResult() method.\nvirtual void Napi::AsyncWorker::OnOK();\n\n\nGetResult\nThis method returns the arguments passed to the Callback invoked by the default OnOK() implementation. The default implementation returns an empty vector, providing no arguments to the Callback.\nvirtual std::vector<napi_value> Napi::AsyncWorker::GetResult(Napi::Env env);\n\n\nOnError\nThis method is invoked after Napi::AsyncWorker::Execute completes if an error occurs while Napi::AsyncWorker::Execute is running and C++ exceptions are enabled or if an error was set through a call to Napi::AsyncWorker::SetError. The default implementation calls the Callback provided when the Napi::AsyncWorker class was created, passing in the error as the first parameter.\nvirtual void Napi::AsyncWorker::OnError(const Napi::Error& e);\n\n\nDestroy\nThis method is invoked when the instance must be deallocated. If SuppressDestruct() was not called then this method will be called after either OnError() or OnOK() complete. The default implementation of this method causes the instance to delete itself using the delete operator. The method is provided so as to ensure that instances allocated by means other than the new operator can be deallocated upon work completion.\nvirtual void Napi::AsyncWorker::Destroy();\n\n\nConstructor\nCreates a new Napi::AsyncWorker.\nexplicit Napi::AsyncWorker(const Napi::Function& callback);\n\n[in] callback: The function which will be called when an asynchronous operations ends. The given function is called from the main event loop thread.\n\nReturns a Napi::AsyncWorker instance which can later be queued for execution by calling Queue.\n\n\nConstructor\nCreates a new Napi::AsyncWorker.\nexplicit Napi::AsyncWorker(const Napi::Function& callback, const char* resource_name);\n\n[in] callback: The function which will be called when an asynchronous operations ends. The given function is called from the main event loop thread.\n[in] resource_name: Null-terminated string that represents the identifier for the kind of resource that is being provided for diagnostic information exposed by the async_hooks API.\n\nReturns a Napi::AsyncWorker instance which can later be queued for execution by calling Napi::AsyncWork::Queue.\n\n\nConstructor\nCreates a new Napi::AsyncWorker.\nexplicit Napi::AsyncWorker(const Napi::Function& callback, const char* resource_name, const Napi::Object& resource);\n\n[in] callback: The function which will be called when an asynchronous operations ends. The given function is called from the main event loop thread.\n[in] resource_name: Null-terminated string that represents the identifier for the kind of resource that is being provided for diagnostic information exposed by the async_hooks API.\n[in] resource: Object associated with the asynchronous operation that will be passed to possible async_hooks.\n\nReturns a Napi::AsyncWorker instance which can later be queued for execution by calling Napi::AsyncWork::Queue.\n\n\nConstructor\nCreates a new Napi::AsyncWorker.\nexplicit Napi::AsyncWorker(const Napi::Object& receiver, const Napi::Function& callback);\n\n[in] receiver: The this object passed to the called function.\n[in] callback: The function which will be called when an asynchronous operations ends. The given function is called from the main event loop thread.\n\nReturns a Napi::AsyncWorker instance which can later be queued for execution by calling Napi::AsyncWork::Queue.\n\n\nConstructor\nCreates a new Napi::AsyncWorker.\nexplicit Napi::AsyncWorker(const Napi::Object& receiver, const Napi::Function& callback, const char* resource_name);\n\n[in] receiver: The this object passed to the called function.\n[in] callback: The function which will be called when an asynchronous operations ends. The given function is called from the main event loop thread.\n[in] resource_name: Null-terminated string that represents the identifier for the kind of resource that is being provided for diagnostic information exposed by the async_hooks API.\n\nReturns a Napi::AsyncWork instance which can later be queued for execution by calling Napi::AsyncWork::Queue.\n\n\nConstructor\nCreates a new Napi::AsyncWorker.\nexplicit Napi::AsyncWorker(const Napi::Object& receiver, const Napi::Function& callback, const char* resource_name, const Napi::Object& resource);\n\n[in] receiver: The this object passed to the called function.\n[in] callback: The function which will be called when an asynchronous operations ends. The given function is called from the main event loop thread.\n[in] resource_name: Null-terminated string that represents the identifier for the kind of resource that is being provided for diagnostic information exposed by the async_hooks API.\n[in] resource: Object associated with the asynchronous operation that will be passed to possible async_hooks.\n\nReturns a Napi::AsyncWork instance which can later be queued for execution by calling Napi::AsyncWork::Queue.\n\n\nConstructor\nCreates a new Napi::AsyncWorker.\nexplicit Napi::AsyncWorker(Napi::Env env);\n\n[in] env: The environment in which to create the Napi::AsyncWorker.\n\nReturns an Napi::AsyncWorker instance which can later be queued for execution by calling Napi::AsyncWorker::Queue.\n\n\nConstructor\nCreates a new Napi::AsyncWorker.\nexplicit Napi::AsyncWorker(Napi::Env env, const char* resource_name);\n\n[in] env: The environment in which to create the Napi::AsyncWorker.\n[in] resource_name: Null-terminated string that represents the identifier for the kind of resource that is being provided for diagnostic information exposed by the async_hooks API.\n\nReturns a Napi::AsyncWorker instance which can later be queued for execution by calling Napi::AsyncWorker::Queue.\n\n\nConstructor\nCreates a new Napi::AsyncWorker.\nexplicit Napi::AsyncWorker(Napi::Env env, const char* resource_name, const Napi::Object& resource);\n\n[in] env: The environment in which to create the Napi::AsyncWorker.\n[in] resource_name: Null-terminated string that represents the identifier for the kind of resource that is being provided for diagnostic information exposed by the async_hooks API.\n[in] resource: Object associated with the asynchronous operation that will be passed to possible async_hooks.\n\nReturns a Napi::AsyncWorker instance which can later be queued for execution by calling Napi::AsyncWorker::Queue.\n\n\nDestructor\nDeletes the created work object that is used to execute logic asynchronously.\nvirtual Napi::AsyncWorker::~AsyncWorker();"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_worker.html#operator",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_worker.html#operator",
    "title": "3327 Research",
    "section": "Operator",
    "text": "Operator\nNapi::AsyncWorker::operator napi_async_work() const;\nReturns the N-API napi_async_work wrapped by the Napi::AsyncWorker object. This can be used to mix usage of the C N-API and node-addon-api."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_worker.html#example",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_worker.html#example",
    "title": "3327 Research",
    "section": "Example",
    "text": "Example\nThe first step to use the Napi::AsyncWorker class is to create a new class that inherits from it and implement the Napi::AsyncWorker::Execute abstract method. Typically input to your worker will be saved within class’ fields generally passed in through its constructor.\nWhen the Napi::AsyncWorker::Execute method completes without errors the Napi::AsyncWorker::OnOK function callback will be invoked. In this function the results of the computation will be reassembled and returned back to the initial JavaScript context.\nNapi::AsyncWorker ensures that all the code in the Napi::AsyncWorker::Execute function runs in the background out of the event loop thread and at the end the Napi::AsyncWorker::OnOK or Napi::AsyncWorker::OnError function will be called and are executed as part of the event loop.\nThe code below shows a basic example of Napi::AsyncWorker the implementation:\n#include<napi.h>\n\n#include <chrono>\n#include <thread>\n\nuse namespace Napi;\n\nclass EchoWorker : public AsyncWorker {\n    public:\n        EchoWorker(Function& callback, std::string& echo)\n        : AsyncWorker(callback), echo(echo) {}\n\n        ~EchoWorker() {}\n    // This code will be executed on the worker thread\n    void Execute() {\n        // Need to simulate cpu heavy task\n        std::this_thread::sleep_for(std::chrono::seconds(1));\n    }\n\n    void OnOK() {\n        HandleScope scope(Env());\n        Callback().Call({Env().Null(), String::New(Env(), echo)});\n    }\n\n    private:\n        std::string echo;\n};\nThe EchoWorker‘s contructor calls the base class’ constructor to pass in the callback that the Napi::AsyncWorker base class will store persistently. When the work on the Napi::AsyncWorker::Execute method is done the Napi::AsyncWorker::OnOk method is called and the results return back to JavaScript invoking the stored callback with its associated environment.\nThe following code shows an example of how to create and use an Napi::AsyncWorker.\n#include<napi.h>\n\n// Include EchoWorker class\n// ..\n\nuse namespace Napi;\n\nValue Echo(const CallbackInfo& info) {\n    // You need to validate the arguments here.\n    Function cb = info[1].As<Function>();\n    std::string in = info[0].As<String>();\n    EchoWorker* wk = new EchoWorker(cb, in);\n    wk->Queue();\n    return info.Env().Undefined();\nUsing the implementation of a Napi::AsyncWorker is straight forward. You only need to create a new instance and pass to its constructor the callback you want to execute when your asynchronous task ends and other data you need for your computation. Once created the only other action you have to do is to call the Napi::AsyncWorker::Queue method that will queue the created worker for execution."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_progress_worker.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_progress_worker.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\nNapi::AsyncWorker provides detailed descriptions for most methods.\n\nExecute\nThis method is used to execute some tasks outside of the event loop on a libuv worker thread. Subclasses must implement this method and the method is run on a thread other than that running the main event loop. As the method is not running on the main event loop, it must avoid calling any methods from node-addon-api or running any code that might invoke JavaScript. Instead, once this method is complete any interaction through node-addon-api with JavaScript should be implemented in the Napi::AsyncProgressWorker::OnOK method and/or Napi::AsyncProgressWorker::OnError which run on the main thread and are invoked when the Napi::AsyncProgressWorker::Execute method completes.\nvirtual void Napi::AsyncProgressWorker::Execute(const ExecutionProgress& progress) = 0;\n\n\nOnOK\nThis method is invoked when the computation in the Execute method ends. The default implementation runs the Callback optionally provided when the AsyncProgressWorker class was created. The Callback will by default receive no arguments. Arguments to the callback can be provided by overriding the GetResult() method.\nvirtual void Napi::AsyncProgressWorker::OnOK();\n\n\nOnProgress\nThis method is invoked when the computation in the Napi::AsyncProgressWorker::ExecutionProcess::Send method was called during worker thread execution.\nvirtual void Napi::AsyncProgressWorker::OnProgress(const T* data, size_t count)\n\n\nConstructor\nCreates a new Napi::AsyncProgressWorker.\nexplicit Napi::AsyncProgressWorker(const Napi::Function& callback);\n\n[in] callback: The function which will be called when an asynchronous operations ends. The given function is called from the main event loop thread.\n\nReturns a Napi::AsyncProgressWorker instance which can later be queued for execution by calling Napi::AsyncWork::Queue.\n\n\nConstructor\nCreates a new Napi::AsyncProgressWorker.\nexplicit Napi::AsyncProgressWorker(const Napi::Function& callback, const char* resource_name);\n\n[in] callback: The function which will be called when an asynchronous operations ends. The given function is called from the main event loop thread.\n[in] resource_name: Null-terminated string that represents the identifier for the kind of resource that is being provided for diagnostic information exposed by the async_hooks API.\n\nReturns a Napi::AsyncProgressWorker instance which can later be queued for execution by calling Napi::AsyncWork::Queue.\n\n\nConstructor\nCreates a new Napi::AsyncProgressWorker.\nexplicit Napi::AsyncProgressWorker(const Napi::Function& callback, const char* resource_name, const Napi::Object& resource);\n\n[in] callback: The function which will be called when an asynchronous operations ends. The given function is called from the main event loop thread.\n[in] resource_name: Null-terminated string that represents the identifier for the kind of resource that is being provided for diagnostic information exposed by the async_hooks API.\n[in] resource: Object associated with the asynchronous operation that will be passed to possible async_hooks.\n\nReturns a Napi::AsyncProgressWorker instance which can later be queued for execution by calling Napi::AsyncWork::Queue.\n\n\nConstructor\nCreates a new Napi::AsyncProgressWorker.\nexplicit Napi::AsyncProgressWorker(const Napi::Object& receiver, const Napi::Function& callback);\n\n[in] receiver: The this object passed to the called function.\n[in] callback: The function which will be called when an asynchronous operations ends. The given function is called from the main event loop thread.\n\nReturns a Napi::AsyncProgressWorker instance which can later be queued for execution by calling Napi::AsyncWork::Queue.\n\n\nConstructor\nCreates a new Napi::AsyncProgressWorker.\nexplicit Napi::AsyncProgressWorker(const Napi::Object& receiver, const Napi::Function& callback, const char* resource_name);\n\n[in] receiver: The this object passed to the called function.\n[in] callback: The function which will be called when an asynchronous operations ends. The given function is called from the main event loop thread.\n[in] resource_name: Null-terminated string that represents the identifier for the kind of resource that is being provided for diagnostic information exposed by the async_hooks API.\n\nReturns a Napi::AsyncWork instance which can later be queued for execution by calling Napi::AsyncWork::Queue.\n\n\nConstructor\nCreates a new Napi::AsyncProgressWorker.\nexplicit Napi::AsyncProgressWorker(const Napi::Object& receiver, const Napi::Function& callback, const char* resource_name, const Napi::Object& resource);\n\n[in] receiver: The this object to be passed to the called function.\n[in] callback: The function which will be called when an asynchronous operations ends. The given function is called from the main event loop thread.\n[in] resource_name: Null-terminated string that represents the identifier for the kind of resource that is being provided for diagnostic information exposed by the async_hooks API.\n[in] resource: Object associated with the asynchronous operation that will be passed to possible async_hooks.\n\nReturns a Napi::AsyncWork instance which can later be queued for execution by calling Napi::AsyncWork::Queue.\n\n\nConstructor\nCreates a new Napi::AsyncProgressWorker.\nexplicit Napi::AsyncProgressWorker(Napi::Env env);\n\n[in] env: The environment in which to create the Napi::AsyncProgressWorker.\n\nReturns an Napi::AsyncProgressWorker instance which can later be queued for execution by calling Napi::AsyncProgressWorker::Queue.\nAvailable with NAPI_VERSION equal to or greater than 5.\n\n\nConstructor\nCreates a new Napi::AsyncProgressWorker.\nexplicit Napi::AsyncProgressWorker(Napi::Env env, const char* resource_name);\n\n[in] env: The environment in which to create the Napi::AsyncProgressWorker.\n[in] resource_name: Null-terminated string that represents the identifier for the kind of resource that is being provided for diagnostic information exposed by the async_hooks API.\n\nReturns a Napi::AsyncProgressWorker instance which can later be queued for execution by calling Napi::AsyncProgressWorker::Queue.\nAvailable with NAPI_VERSION equal to or greater than 5.\n\n\nConstructor\nCreates a new Napi::AsyncProgressWorker.\nexplicit Napi::AsyncProgressWorker(Napi::Env env, const char* resource_name, const Napi::Object& resource);\n\n[in] env: The environment in which to create the Napi::AsyncProgressWorker.\n[in] resource_name: Null-terminated string that represents the identifier for the kind of resource that is being provided for diagnostic information exposed by the async_hooks API.\n[in] resource: Object associated with the asynchronous operation that will be passed to possible async_hooks.\n\nReturns a Napi::AsyncProgressWorker instance which can later be queued for execution by calling Napi::AsyncProgressWorker::Queue.\nAvailable with NAPI_VERSION equal to or greater than 5.\n\n\nDestructor\nDeletes the created work object that is used to execute logic asynchronously and release the internal Napi::ThreadSafeFunction, which will be aborted to prevent unexpected upcoming thread safe calls.\nvirtual Napi::AsyncProgressWorker::~AsyncProgressWorker();"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_progress_worker.html#methods-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_progress_worker.html#methods-1",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nSend\nNapi::AsyncProgressWorker::ExecutionProcess::Send takes two arguments, a pointer to a generic type of data, and a size_t to indicate how many items the pointer is pointing to.\nThe data pointed to will be copied to internal slots of Napi::AsyncProgressWorker so after the call to Napi::AsyncProgressWorker::ExecutionProcess::Send the data can be safely released.\nNote that Napi::AsyncProgressWorker::ExecutionProcess::Send merely guarantees eventual invocation of Napi::AsyncProgressWorker::OnProgress, which means multiple send might be coalesced into single invocation of Napi::AsyncProgressWorker::OnProgress with latest data.\nvoid Napi::AsyncProgressWorker::ExecutionProcess::Send(const T* data, size_t count) const;"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_progress_worker.html#example",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_progress_worker.html#example",
    "title": "3327 Research",
    "section": "Example",
    "text": "Example\nThe first step to use the Napi::AsyncProgressWorker class is to create a new class that inherits from it and implement the Napi::AsyncProgressWorker::Execute abstract method. Typically input to the worker will be saved within the class’ fields generally passed in through its constructor.\nDuring the worker thread execution, the first argument of Napi::AsyncProgressWorker::Execute can be used to report the progress of the execution.\nWhen the Napi::AsyncProgressWorker::Execute method completes without errors the Napi::AsyncProgressWorker::OnOK function callback will be invoked. In this function the results of the computation will be reassembled and returned back to the initial JavaScript context.\nNapi::AsyncProgressWorker ensures that all the code in the Napi::AsyncProgressWorker::Execute function runs in the background out of the event loop thread and at the end the Napi::AsyncProgressWorker::OnOK or Napi::AsyncProgressWorker::OnError function will be called and are executed as part of the event loop.\nThe code below shows a basic example of the Napi::AsyncProgressWorker implementation:\n#include<napi.h>\n\n#include <chrono>\n#include <thread>\n\nuse namespace Napi;\n\nclass EchoWorker : public AsyncProgressWorker<uint32_t> {\n    public:\n        EchoWorker(Function& callback, std::string& echo)\n        : AsyncProgressWorker(callback), echo(echo) {}\n\n        ~EchoWorker() {}\n    // This code will be executed on the worker thread\n    void Execute(const ExecutionProgress& progress) {\n        // Need to simulate cpu heavy task\n        for (uint32_t i = 0; i < 100; ++i) {\n          progress.Send(&i, 1)\n          std::this_thread::sleep_for(std::chrono::seconds(1));\n        }\n    }\n\n    void OnOK() {\n        HandleScope scope(Env());\n        Callback().Call({Env().Null(), String::New(Env(), echo)});\n    }\n\n    void OnProgress(const uint32_t* data, size_t /* count */) {\n        HandleScope scope(Env());\n        Callback().Call({Env().Null(), Env().Null(), Number::New(Env(), *data)});\n    }\n\n    private:\n        std::string echo;\n};\nThe EchoWorker‘s constructor calls the base class’ constructor to pass in the callback that the Napi::AsyncProgressWorker base class will store persistently. When the work on the Napi::AsyncProgressWorker::Execute method is done the Napi::AsyncProgressWorker::OnOk method is called and the results are return back to JavaScript when the stored callback is invoked with its associated environment.\nThe following code shows an example of how to create and use an Napi::AsyncProgressWorker\n#include <napi.h>\n\n// Include EchoWorker class\n// ..\n\nuse namespace Napi;\n\nValue Echo(const CallbackInfo& info) {\n    // We need to validate the arguments here\n    Function cb = info[1].As<Function>();\n    std::string in = info[0].As<String>();\n    EchoWorker* wk = new EchoWorker(cb, in);\n    wk->Queue();\n    return info.Env().Undefined();\n}\nThe implementation of a Napi::AsyncProgressWorker can be used by creating a new instance and passing to its constructor the callback to execute when the asynchronous task ends and other data needed for the computation. Once created, the only other action needed is to call the Napi::AsyncProgressWorker::Queue method that will queue the created worker for execution."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/property_descriptor.html#example",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/property_descriptor.html#example",
    "title": "3327 Research",
    "section": "Example",
    "text": "Example\n#include <napi.h>\n\nusing namespace Napi;\n\nValue TestGetter(const CallbackInfo& info) {\n   return Boolean::New(info.Env(), testValue);\n}\n\nvoid TestSetter(const CallbackInfo& info) {\n   testValue = info[0].As<Boolean>();\n}\n\nValue TestFunction(const CallbackInfo& info) {\n   return Boolean::New(info.Env(), true);\n}\n\nVoid Init(Env env) {\n  // Create an object.\n  Object obj = Object::New(env);\n\n  // Accessor\n  PropertyDescriptor pd1 = PropertyDescriptor::Accessor(env,\n                                                        obj,\n                                                        \"pd1\",\n                                                        TestGetter);\n  PropertyDescriptor pd2 = PropertyDescriptor::Accessor(env,\n                                                        obj,\n                                                        \"pd2\",\n                                                        TestGetter,\n                                                        TestSetter);\n  // Function\n  PropertyDescriptor pd3 = PropertyDescriptor::Function(env,\n                                                        \"function\",\n                                                        TestFunction);\n  // Value\n  Boolean true_bool = Boolean::New(env, true);\n  PropertyDescriptor pd4 =\n      PropertyDescriptor::Value(\"boolean value\",\n                                Napi::Boolean::New(env, true),\n                                napi_writable);\n\n  // Assign properties to the object.\n  obj.DefineProperties({pd1, pd2, pd3, pd4});\n}"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/property_descriptor.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/property_descriptor.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nConstructor\nNapi::PropertyDescriptor::PropertyDescriptor (napi_property_descriptor desc);\n\n[in] desc: A PropertyDescriptor that is needed in order to create another PropertyDescriptor.\n\n\n\nAccessor\nstatic Napi::PropertyDescriptor Napi::PropertyDescriptor::Accessor (___ name,\n                Getter getter,\n                napi_property_attributes attributes = napi_default,\n                void *data = nullptr);\n\n[in] name: The name used for the getter function.\n[in] getter: A getter function.\n[in] attributes: Potential attributes for the getter function.\n[in] data: A pointer to data of any type, default is a null pointer.\n\nReturns a PropertyDescriptor that contains a function.\nThe name of the property can be any of the following types: - const char* - const std::string & - napi_value value - Napi::Name\nThis signature is deprecated. It will result in a memory leak if used.\nstatic Napi::PropertyDescriptor Napi::PropertyDescriptor::Accessor (\n                Napi::Env env,\n                Napi::Object object,\n                ___ name,\n                Getter getter,\n                napi_property_attributes attributes = napi_default,\n                void *data = nullptr);\n\n[in] env: The environemnt in which to create this accessor.\n[in] object: The object on which the accessor will be defined.\n[in] name: The name used for the getter function.\n[in] getter: A getter function.\n[in] attributes: Potential attributes for the getter function.\n[in] data: A pointer to data of any type, default is a null pointer.\n\nReturns a Napi::PropertyDescriptor that contains a Getter accessor.\nThe name of the property can be any of the following types: - const char* - const std::string & - Napi::Name\nstatic Napi::PropertyDescriptor Napi::PropertyDescriptor::Accessor (___ name,\n                Getter getter,\n                Setter setter,\n                napi_property_attributes attributes = napi_default,\n                void *data = nullptr);\n\n[in] name: The name of the getter and setter function.\n[in] getter: The getter function.\n[in] setter: The setter function.\n[in] attributes: Potential attributes for the getter function.\n[in] data: A pointer to data of any type, default is a null pointer.\n\nReturns a Napi::PropertyDescriptor that contains a Getter and Setter function.\nThe name of the property can be any of the following types: - const char* - const std::string & - napi_value value - Napi::Name\nThis signature is deprecated. It will result in a memory leak if used.\nstatic Napi::PropertyDescriptor Napi::PropertyDescriptor::Accessor (\n                Napi::Env env,\n                Napi::Object object,\n                ___ name,\n                Getter getter,\n                Setter setter,\n                napi_property_attributes attributes = napi_default,\n                void *data = nullptr);\n\n[in] env: The environemnt in which to create this accessor.\n[in] object: The object on which the accessor will be defined.\n[in] name: The name of the getter and setter function.\n[in] getter: The getter function.\n[in] setter: The setter function.\n[in] attributes: Potential attributes for the getter function.\n[in] data: A pointer to data of any type, default is a null pointer.\n\nReturns a Napi::PropertyDescriptor that contains a Getter and Setter function.\nThe name of the property can be any of the following types: - const char* - const std::string & - Napi::Name\n\n\nFunction\nstatic Napi::PropertyDescriptor Napi::PropertyDescriptor::Function (___ name,\n                Callable cb,\n                napi_property_attributes attributes = napi_default,\n                    void *data = nullptr);\n\n[in] name: The name of the Callable function.\n[in] cb: The function\n[in] attributes: Potential attributes for the getter function.\n[in] data: A pointer to data of any type, default is a null pointer.\n\nReturns a Napi::PropertyDescriptor that contains a callable Napi::Function.\nThe name of the property can be any of the following types: - const char* - const std::string & - napi_value value - Napi::Name\nThis signature is deprecated. It will result in a memory leak if used.\nstatic Napi::PropertyDescriptor Napi::PropertyDescriptor::Function (\n                Napi::Env env,\n                ___ name,\n                Callable cb,\n                napi_property_attributes attributes = napi_default,\n                    void *data = nullptr);\n\n[in] env: The environment in which to create this accessor.\n[in] name: The name of the Callable function.\n[in] cb: The function\n[in] attributes: Potential attributes for the getter function.\n[in] data: A pointer to data of any type, default is a null pointer.\n\nReturns a Napi::PropertyDescriptor that contains a callable Napi::Function.\nThe name of the property can be any of the following types: - const char* - const std::string & - Napi::Name\n\n\nValue\nstatic Napi::PropertyDescriptor Napi::PropertyDescriptor::Value (___ name,\n                napi_value value,\n                napi_property_attributes attributes = napi_default);\nThe name of the property can be any of the following types: - const char* - const std::string & - napi_value value - Napi::Name"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/property_descriptor.html#related-information",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/property_descriptor.html#related-information",
    "title": "3327 Research",
    "section": "Related Information",
    "text": "Related Information\n\nnapi_property_attributes\nnapi_property_attributes are flags used to indicate to JavaScript certain permissions that the property is meant to have. The following are the flag options: - napi_default, - napi_writable, - napi_enumerable, - napi_configurable For more information on the flags and on napi_property_attributes, please read the documentation here."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/function.html#example",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/function.html#example",
    "title": "3327 Research",
    "section": "Example",
    "text": "Example\n#include <napi.h>\n\nusing namespace Napi;\n\nValue Fn(const CallbackInfo& info) {\n  Env env = info.Env();\n  // ...\n  return String::New(env, \"Hello World\");\n}\n\nObject Init(Env env, Object exports) {\n  exports.Set(String::New(env, \"fn\"), Function::New(env, Fn));\n}\n\nNODE_API_MODULE(NODE_GYP_MODULE_NAME, Init)\nThe above code can be used from JavaScript as follows:\nconst addon = require('./addon');\naddon.fn();\nWith the Napi::Function class it is possible to call a JavaScript function object from a native add-on with two different methods: Call and MakeCallback. The API of these two methods is very similar, but they are used in different contexts. The MakeCallback method is used to call from native code back into JavaScript after returning from an asynchronous operation and in general in situations which don’t have an existing JavaScript function on the stack. The Call method is used when there is already a JavaScript function on the stack (for example when running a native method called from JavaScript)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/function.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/function.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nConstructor\nCreates a new empty instance of Napi::Function.\nNapi::Function::Function();\n\n\nConstructor\nCreates a new instance of the Napi::Function object.\nNapi::Function::Function(napi_env env, napi_value value);\n\n[in] env: The napi_env environment in which to construct the Napi::Function object.\n[in] value: The napi_value which is a handle for a JavaScript function.\n\nReturns a non-empty Napi::Function instance.\n\n\nNew\nCreates an instance of a Napi::Function object.\ntemplate <typename Callable>\nstatic Napi::Function Napi::Function::New(napi_env env, Callable cb, const char* utf8name = nullptr, void* data = nullptr);\n\n[in] env: The napi_env environment in which to construct the Napi::Function object.\n[in] cb: Object that implements Callable.\n[in] utf8name: Null-terminated string to be used as the name of the function.\n[in] data: User-provided data context. This will be passed back into the function when invoked later.\n\nReturns an instance of a Napi::Function object.\n\n\nNew\ntemplate <typename Callable>\nstatic Napi::Function Napi::Function::New(napi_env env, Callable cb, const std::string& utf8name, void* data = nullptr);\n\n[in] env: The napi_env environment in which to construct the Napi::Function object.\n[in] cb: Object that implements Callable.\n[in] utf8name: String to be used as the name of the function.\n[in] data: User-provided data context. This will be passed back into the function when invoked later.\n\nReturns an instance of a Napi::Function object.\n\n\nNew\nCreates a new JavaScript value from one that represents the constructor for the object.\nNapi::Object Napi::Function::New(const std::initializer_list<napi_value>& args) const;\n\n[in] args: Initializer list of JavaScript values as napi_value representing the arguments of the contructor function.\n\nReturns a new JavaScript object.\n\n\nNew\nCreates a new JavaScript value from one that represents the constructor for the object.\nNapi::Object Napi::Function::New(const std::vector<napi_value>& args) const;\n\n[in] args: Vector of JavaScript values as napi_value representing the arguments of the constructor function.\n\nReturns a new JavaScript object.\n\n\nNew\nCreates a new JavaScript value from one that represents the constructor for the object.\nNapi::Object Napi::Function::New(size_t argc, const napi_value* args) const;\n\n[in] argc: The number of the arguments passed to the contructor function.\n[in] args: Array of JavaScript values as napi_value representing the arguments of the constructor function.\n\nReturns a new JavaScript object.\n\n\nCall\nCalls a Javascript function from a native add-on.\nNapi::Value Napi::Function::Call(const std::initializer_list<napi_value>& args) const;\n\n[in] args: Initializer list of JavaScript values as napi_value representing the arguments of the function.\n\nReturns a Napi::Value representing the JavaScript value returned by the function.\n\n\nCall\nCalls a JavaScript function from a native add-on.\nNapi::Value Napi::Function::Call(const std::vector<napi_value>& args) const;\n\n[in] args: Vector of JavaScript values as napi_value representing the arguments of the function.\n\nReturns a Napi::Value representing the JavaScript value returned by the function.\n\n\nCall\nCalls a Javascript function from a native add-on.\nNapi::Value Napi::Function::Call(size_t argc, const napi_value* args) const;\n\n[in] argc: The number of the arguments passed to the function.\n[in] args: Array of JavaScript values as napi_value representing the arguments of the function.\n\nReturns a Napi::Value representing the JavaScript value returned by the function.\n\n\nCall\nCalls a Javascript function from a native add-on.\nNapi::Value Napi::Function::Call(napi_value recv, const std::initializer_list<napi_value>& args) const;\n\n[in] recv: The this object passed to the called function.\n[in] args: Initializer list of JavaScript values as napi_value representing the arguments of the function.\n\nReturns a Napi::Value representing the JavaScript value returned by the function.\n\n\nCall\nCalls a Javascript function from a native add-on.\nNapi::Value Napi::Function::Call(napi_value recv, const std::vector<napi_value>& args) const;\n\n[in] recv: The this object passed to the called function.\n[in] args: Vector of JavaScript values as napi_value representing the arguments of the function.\n\nReturns a Napi::Value representing the JavaScript value returned by the function.\n\n\nCall\nCalls a Javascript function from a native add-on.\nNapi::Value Napi::Function::Call(napi_value recv, size_t argc, const napi_value* args) const;\n\n[in] recv: The this object passed to the called function.\n[in] argc: The number of the arguments passed to the function.\n[in] args: Array of JavaScript values as napi_value representing the arguments of the function.\n\nReturns a Napi::Value representing the JavaScript value returned by the function.\n\n\nMakeCallback\nCalls a Javascript function from a native add-on after an asynchronous operation.\nNapi::Value Napi::Function::MakeCallback(napi_value recv, const std::initializer_list<napi_value>& args, napi_async_context context = nullptr) const;\n\n[in] recv: The this object passed to the called function.\n[in] args: Initializer list of JavaScript values as napi_value representing the arguments of the function.\n[in] context: Context for the async operation that is invoking the callback. This should normally be a value previously obtained from Napi::AsyncContext. However nullptr is also allowed, which indicates the current async context (if any) is to be used for the callback.\n\nReturns a Napi::Value representing the JavaScript value returned by the function.\n\n\nMakeCallback\nCalls a Javascript function from a native add-on after an asynchronous operation.\nNapi::Value Napi::Function::MakeCallback(napi_value recv, const std::vector<napi_value>& args, napi_async_context context = nullptr) const;\n\n[in] recv: The this object passed to the called function.\n[in] args: List of JavaScript values as napi_value representing the arguments of the function.\n[in] context: Context for the async operation that is invoking the callback. This should normally be a value previously obtained from Napi::AsyncContext. However nullptr is also allowed, which indicates the current async context (if any) is to be used for the callback.\n\nReturns a Napi::Value representing the JavaScript value returned by the function.\n\n\nMakeCallback\nCalls a Javascript function from a native add-on after an asynchronous operation.\nNapi::Value Napi::Function::MakeCallback(napi_value recv, size_t argc, const napi_value* args, napi_async_context context = nullptr) const;\n\n[in] recv: The this object passed to the called function.\n[in] argc: The number of the arguments passed to the function.\n[in] args: Array of JavaScript values as napi_value representing the arguments of the function.\n[in] context: Context for the async operation that is invoking the callback. This should normally be a value previously obtained from Napi::AsyncContext. However nullptr is also allowed, which indicates the current async context (if any) is to be used for the callback.\n\nReturns a Napi::Value representing the JavaScript value returned by the function."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/function.html#operator",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/function.html#operator",
    "title": "3327 Research",
    "section": "Operator",
    "text": "Operator\nNapi::Value Napi::Function::operator ()(const std::initializer_list<napi_value>& args) const;\n\n[in] args: Initializer list of JavaScript values as napi_value.\n\nReturns a Napi::Value representing the JavaScript value returned by the function."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/node-gyp.html#node-gyp-reference",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/node-gyp.html#node-gyp-reference",
    "title": "3327 Research",
    "section": "node-gyp reference",
    "text": "node-gyp reference\n\nInstallation\nHow to use\nThe binding.gyp file\nCommands\nCommand options\nConfiguration\n\nSometimes finding the right settings for binding.gyp is not easy so to accomplish at most complicated task please refer to:\n\nGYP documentation\nnode-gyp wiki"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/string.html#constructor",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/string.html#constructor",
    "title": "3327 Research",
    "section": "Constructor",
    "text": "Constructor\nNapi::String::String();\nReturns a new empty Napi::String instance.\nIf an error occurs, a Napi::Error will get thrown. If C++ exceptions are not being used, callers should check the result of Env::IsExceptionPending before attempting to use the returned value.\nNapi::String::String(napi_env env, napi_value value); ///< Wraps a N-API value primitive.\n\n[in] env - The environment in which to create the string.\n[in] value - The primitive to wrap.\n\nReturns a Napi::String wrapping a napi_value.\nIf an error occurs, a Napi::Error will get thrown. If C++ exceptions are not being used, callers should check the result of Env::IsExceptionPending before attempting to use the returned value."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/string.html#operators",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/string.html#operators",
    "title": "3327 Research",
    "section": "Operators",
    "text": "Operators\n\noperator std::string\nNapi::String::operator std::string() const;\nReturns a UTF-8 encoded C++ string.\n\n\noperator std::u16string\nNapi::String::operator std::u16string() const;\nReturns a UTF-16 encoded C++ string."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/string.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/string.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nNew\nNapi::String::New();\nReturns a new empty Napi::String.\n\n\nNew\nNapi::String::New(napi_env env, const std::string& value);\nNapi::String::New(napi_env env, const std::u16::string& value);\nNapi::String::New(napi_env env, const char* value);\nNapi::String::New(napi_env env, const char16_t* value);\nNapi::String::New(napi_env env, const char* value, size_t length);\nNapi::String::New(napi_env env, const char16_t* value, size_t length);\n\n[in] env: The napi_env environment in which to construct the Napi::Value object.\n[in] value: The C++ primitive from which to instantiate the Napi::Value. value may be any of:\n\nstd::string& - represents an ANSI string.\nstd::u16string& - represents a UTF16-LE string.\nconst char* - represents a UTF8 string.\nconst char16_t* - represents a UTF16-LE string.\n\n[in] length: The length of the string (not necessarily null-terminated) in code units.\n\nReturns a new Napi::String that represents the passed in C++ string.\nIf an error occurs, a Napi::Error will get thrown. If C++ exceptions are not being used, callers should check the result of Env::IsExceptionPending before attempting to use the returned value.\n\n\nUtf8Value\nstd::string Napi::String::Utf8Value() const;\nReturns a UTF-8 encoded C++ string.\n\n\nUtf16Value\nstd::u16string Napi::String::Utf16Value() const;\nReturns a UTF-16 encoded C++ string."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/value.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/value.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nEmpty Constructor\nNapi::Value::Value();\nCreates a new empty Napi::Value instance.\n\n\nConstructor\nNapi::Value::Value(napi_env env, napi_value value);\n\n[in] env: The napi_env environment in which to construct the Napi::Value object.\n[in] value: The C++ primitive from which to instantiate the Napi::Value. value may be any of:\n\nbool\nAny integer type\nAny floating point type\nconst char* (encoded using UTF-8, null-terminated)\nconst char16_t* (encoded using UTF-16-LE, null-terminated)\nstd::string (encoded using UTF-8)\nstd::u16string\nNapi::Value\nnapi_value\n\n\n\n\nFrom\ntemplate <typename T> static Napi::Value Napi::Value::From(napi_env env, const T& value);\n\n[in] env: The napi_env environment in which to create the Napi::Value object.\n[in] value: The N-API primitive value from which to create the Napi::Value object.\n\nReturns a Napi::Value object from an N-API primitive value.\n\n\noperator napi_value\noperator napi_value() const;\nReturns this Value’s N-API value primitive.\nReturns nullptr if this Napi::Value is empty.\n\n\noperator ==\n\nbool Napi::Value::operator ==(const Napi::Value& other) const;\n\n[in] other: The Napi::Value object to be compared.\n\nReturns a bool indicating if this Napi::Value strictly equals another Napi::Value.\n\n\noperator !=\nbool Napi::Value::operator !=(const Napi::Value& other) const;\n\n[in] other: The Napi::Value object to be compared.\n\nReturns a bool indicating if this Napi::Value does not strictly equal another Napi::Value.\n\n\nStrictEquals\nbool Napi::Value::StrictEquals(const Napi::Value& other) const;\n\n[in] other: The Napi::Value object to be compared.\n\nReturns a bool indicating if this Napi::Value strictly equals another Napi::Value.\n\n\nEnv\nNapi::Env Napi::Value::Env() const;\nReturns the Napi::Env environment this value is associated with.\n\n\nIsEmpty\nbool Napi::Value::IsEmpty() const;\nReturns a bool indicating if this Napi::Value is empty (uninitialized).\nAn empty Napi::Value is invalid, and most attempts to perform an operation on an empty Value will result in an exception. Note an empty Napi::Value is distinct from JavaScript null or undefined, which are valid values.\nWhen C++ exceptions are disabled at compile time, a method with a Napi::Value return type may return an empty Value to indicate a pending exception. So when not using C++ exceptions, callers should check whether this Napi::Value is empty before attempting to use it.\n\n\nType\nnapi_valuetype Napi::Value::Type() const;\nReturns the napi_valuetype type of the Napi::Value.\n\n\nIsUndefined\nbool Napi::Value::IsUndefined() const;\nReturns a bool indicating if this Napi::Value is an undefined JavaScript value.\n\n\nIsNull\nbool Napi::Value::IsNull() const;\nReturns a bool indicating if this Napi::Value is a null JavaScript value.\n\n\nIsBoolean\nbool Napi::Value::IsBoolean() const;\nReturns a bool indicating if this Napi::Value is a JavaScript boolean.\n\n\nIsNumber\nbool Napi::Value::IsNumber() const;\nReturns a bool indicating if this Napi::Value is a JavaScript number.\n\n\nIsString\nbool Napi::Value::IsString() const;\nReturns a bool indicating if this Napi::Value is a JavaScript string.\n\n\nIsSymbol\nbool Napi::Value::IsSymbol() const;\nReturns a bool indicating if this Napi::Value is a JavaScript symbol.\n\n\nIsArray\nbool Napi::Value::IsArray() const;\nReturns a bool indicating if this Napi::Value is a JavaScript array.\n\n\nIsArrayBuffer\nbool Napi::Value::IsArrayBuffer() const;\nReturns a bool indicating if this Napi::Value is a JavaScript array buffer.\n\n\nIsTypedArray\nbool Napi::Value::IsTypedArray() const;\nReturns a bool indicating if this Napi::Value is a JavaScript typed array.\n\n\nIsObject\nbool Napi::Value::IsObject() const;\nReturns a bool indicating if this Napi::Value is JavaScript object.\n\n\nIsFunction\nbool Napi::Value::IsFunction() const;\nReturns a bool indicating if this Napi::Value is a JavaScript function.\n\n\nIsBuffer\nbool Napi::Value::IsBuffer() const;\nReturns a bool indicating if this Napi::Value is a Node buffer.\n\n\nIsDate\nbool Napi::Value::IsDate() const;\nReturns a bool indicating if this Napi::Value is a JavaScript date.\n\n\nAs\ntemplate <typename T> T Napi::Value::As() const;\nCasts to another type of Napi::Value, when the actual type is known or assumed.\nThis conversion does not coerce the type. Calling any methods inappropriate for the actual value type will throw Napi::Error.\n\n\nToBoolean\nNapi::Boolean Napi::Value::ToBoolean() const;\nReturns the Napi::Value coerced to a JavaScript boolean.\n\n\nToNumber\nNapi::Number Napi::Value::ToNumber() const;\nReturns the Napi::Value coerced to a JavaScript number.\n\n\nToString\nNapi::String Napi::Value::ToString() const;\nReturns the Napi::Value coerced to a JavaScript string.\n\n\nToObject\nNapi::Object Napi::Value::ToObject() const;\nReturns the Napi::Value coerced to a JavaScript object."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/external.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/external.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nNew\ntemplate <typename T>\nstatic Napi::External Napi::External::New(napi_env env, T* data);\n\n[in] env: The napi_env environment in which to construct the Napi::External object.\n[in] data: The arbitrary C++ data to be held by the Napi::External object.\n\nReturns the created Napi::External<T> object.\n\n\nNew\ntemplate <typename T>\nstatic Napi::External Napi::External::New(napi_env env,\n                    T* data,\n                    Finalizer finalizeCallback);\n\n[in] env: The napi_env environment in which to construct the Napi::External object.\n[in] data: The arbitrary C++ data to be held by the Napi::External object.\n[in] finalizeCallback: A function called when the Napi::External object is released by the garbage collector accepting a T* and returning void.\n\nReturns the created Napi::External<T> object.\n\n\nNew\ntemplate <typename T>\nstatic Napi::External Napi::External::New(napi_env env,\n                    T* data,\n                    Finalizer finalizeCallback,\n                    Hint* finalizeHint);\n\n[in] env: The napi_env environment in which to construct the Napi::External object.\n[in] data: The arbitrary C++ data to be held by the Napi::External object.\n[in] finalizeCallback: A function called when the Napi::External object is released by the garbage collector accepting T* and Hint* parameters and returning void.\n[in] finalizeHint: A hint value passed to the finalizeCallback function.\n\nReturns the created Napi::External<T> object.\n\n\nData\nT* Napi::External::Data() const;\nReturns a pointer to the arbitrary C++ data held by the Napi::External object."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/type_error.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/type_error.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nNew\nCreates a new instance of the Napi::TypeError object.\nNapi::TypeError::New(Napi:Env env, const char* message);\n\n[in] Env: The environment in which to construct the Napi::TypeError object.\n[in] message: Null-terminated string to be used as the message for the Napi::TypeError.\n\nReturns an instance of a Napi::TypeError object.\n\n\nNew\nCreates a new instance of a Napi::TypeError object.\nNapi::TypeError::New(Napi:Env env, const std::string& message);\n\n[in] Env: The environment in which to construct the Napi::TypeError object.\n[in] message: Reference string to be used as the message for the Napi::TypeError.\n\nReturns an instance of a Napi::TypeError object.\n\n\nConstructor\nCreates a new empty instance of a Napi::TypeError.\nNapi::TypeError::TypeError();\n\n\nConstructor\nInitializes a Napi::TypeError instance from an existing JavaScript error object.\nNapi::TypeError::TypeError(napi_env env, napi_value value);\n\n[in] Env: The environment in which to construct the Napi::TypeError object.\n[in] value: The Napi::Error reference to wrap.\n\nReturns an instance of a Napi::TypeError object."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/dataview.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/dataview.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nNew\nAllocates a new Napi::DataView instance with a given Napi::ArrayBuffer.\nstatic Napi::DataView Napi::DataView::New(napi_env env, Napi::ArrayBuffer arrayBuffer);\n\n[in] env: The environment in which to create the Napi::DataView instance.\n[in] arrayBuffer : Napi::ArrayBuffer underlying the Napi::DataView.\n\nReturns a new Napi::DataView instance.\n\n\nNew\nAllocates a new Napi::DataView instance with a given Napi::ArrayBuffer.\nstatic Napi::DataView Napi::DataView::New(napi_env env, Napi::ArrayBuffer arrayBuffer, size_t byteOffset);\n\n[in] env: The environment in which to create the Napi::DataView instance.\n[in] arrayBuffer : Napi::ArrayBuffer underlying the Napi::DataView.\n[in] byteOffset : The byte offset within the Napi::ArrayBuffer from which to start projecting the Napi::DataView.\n\nReturns a new Napi::DataView instance.\n\n\nNew\nAllocates a new Napi::DataView instance with a given Napi::ArrayBuffer.\nstatic Napi::DataView Napi::DataView::New(napi_env env, Napi::ArrayBuffer arrayBuffer, size_t byteOffset, size_t byteLength);\n\n[in] env: The environment in which to create the Napi::DataView instance.\n[in] arrayBuffer : Napi::ArrayBuffer underlying the Napi::DataView.\n[in] byteOffset : The byte offset within the Napi::ArrayBuffer from which to start projecting the Napi::DataView.\n[in] byteLength : Number of elements in the Napi::DataView.\n\nReturns a new Napi::DataView instance.\n\n\nConstructor\nInitializes an empty instance of the Napi::DataView class.\nNapi::DataView();\n\n\nConstructor\nInitializes a wrapper instance of an existing Napi::DataView instance.\nNapi::DataView(napi_env env, napi_value value);\n\n[in] env: The environment in which to create the Napi::DataView instance.\n[in] value: The Napi::DataView reference to wrap.\n\n\n\nArrayBuffer\nNapi::ArrayBuffer Napi::DataView::ArrayBuffer() const;\nReturns the backing array buffer.\n\n\nByteOffset\nsize_t Napi::DataView::ByteOffset() const;\nReturns the offset into the Napi::DataView where the array starts, in bytes.\n\n\nByteLength\nsize_t Napi::DataView::ByteLength() const;\nReturns the length of the array, in bytes.\n\n\nGetFloat32\nfloat Napi::DataView::GetFloat32(size_t byteOffset) const;\n\n[in] byteOffset: The offset, in byte, from the start of the view where to read the data.\n\nReturns a signed 32-bit float (float) at the specified byte offset from the start of the Napi::DataView.\n\n\nGetFloat64\ndouble Napi::DataView::GetFloat64(size_t byteOffset) const;\n\n[in] byteOffset: The offset, in byte, from the start of the view where to read the data.\n\nReturns a signed 64-bit float (double) at the specified byte offset from the start of the Napi::DataView.\n\n\nGetInt8\nint8_t Napi::DataView::GetInt8(size_t byteOffset) const;\n\n[in] byteOffset: The offset, in byte, from the start of the view where to read the data.\n\nReturns a signed 8-bit integer (byte) at the specified byte offset from the start of the Napi::DataView.\n\n\nGetInt16\nint16_t Napi::DataView::GetInt16(size_t byteOffset) const;\n\n[in] byteOffset: The offset, in byte, from the start of the view where to read the data.\n\nReturns a signed 16-bit integer (short) at the specified byte offset from the start of the Napi::DataView.\n\n\nGetInt32\nint32_t Napi::DataView::GetInt32(size_t byteOffset) const;\n\n[in] byteOffset: The offset, in byte, from the start of the view where to read the data.\n\nReturns a signed 32-bit integer (long) at the specified byte offset from the start of the Napi::DataView.\n\n\nGetUint8\nuint8_t Napi::DataView::GetUint8(size_t byteOffset) const;\n\n[in] byteOffset: The offset, in byte, from the start of the view where to read the data.\n\nReturns a unsigned 8-bit integer (unsigned byte) at the specified byte offset from the start of the Napi::DataView.\n\n\nGetUint16\nuint16_t Napi::DataView::GetUint16(size_t byteOffset) const;\n\n[in] byteOffset: The offset, in byte, from the start of the view where to read the data.\n\nReturns a unsigned 16-bit integer (unsigned short) at the specified byte offset from the start of the Napi::DataView.\n\n\nGetUint32\nuint32_t Napi::DataView::GetUint32(size_t byteOffset) const;\n\n[in] byteOffset: The offset, in byte, from the start of the view where to read the data.\n\nReturns a unsigned 32-bit integer (unsigned long) at the specified byte offset from the start of the Napi::DataView.\n\n\nSetFloat32\nvoid Napi::DataView::SetFloat32(size_t byteOffset, float value) const;\n\n[in] byteOffset: The offset, in byte, from the start of the view where to read the data.\n[in] value: The value to set.\n\n\n\nSetFloat64\nvoid Napi::DataView::SetFloat64(size_t byteOffset, double value) const;\n\n[in] byteOffset: The offset, in byte, from the start of the view where to read the data.\n[in] value: The value to set.\n\n\n\nSetInt8\nvoid Napi::DataView::SetInt8(size_t byteOffset, int8_t value) const;\n\n[in] byteOffset: The offset, in byte, from the start of the view where to read the data.\n[in] value: The value to set.\n\n\n\nSetInt16\nvoid Napi::DataView::SetInt16(size_t byteOffset, int16_t value) const;\n\n[in] byteOffset: The offset, in byte, from the start of the view where to read the data.\n[in] value: The value to set.\n\n\n\nSetInt32\nvoid Napi::DataView::SetInt32(size_t byteOffset, int32_t value) const;\n\n[in] byteOffset: The offset, in byte, from the start of the view where to read the data.\n[in] value: The value to set.\n\n\n\nSetUint8\nvoid Napi::DataView::SetUint8(size_t byteOffset, uint8_t value) const;\n\n[in] byteOffset: The offset, in byte, from the start of the view where to read the data.\n[in] value: The value to set.\n\n\n\nSetUint16\nvoid Napi::DataView::SetUint16(size_t byteOffset, uint16_t value) const;\n\n[in] byteOffset: The offset, in byte, from the start of the view where to read the data.\n[in] value: The value to set.\n\n\n\nSetUint32\nvoid Napi::DataView::SetUint32(size_t byteOffset, uint32_t value) const;\n\n[in] byteOffset: The offset, in byte, from the start of the view where to read the data.\n[in] value: The value to set."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/error.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/error.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nNew\nCreates empty instance of an Napi::Error object for the specified environment.\nNapi::Error::New(Napi::Env env);\n\n[in] env: The environment in which to construct the Napi::Error object.\n\nReturns an instance of Napi::Error object.\n\n\nNew\nCreates instance of an Napi::Error object.\nNapi::Error::New(Napi::Env env, const char* message);\n\n[in] env: The environment in which to construct the Napi::Error object.\n[in] message: Null-terminated string to be used as the message for the Napi::Error.\n\nReturns instance of an Napi::Error object.\n\n\nNew\nCreates instance of an Napi::Error object\nNapi::Error::New(Napi::Env env, const std::string& message);\n\n[in] env: The environment in which to construct the Napi::Error object.\n[in] message: Reference string to be used as the message for the Napi::Error.\n\nReturns instance of an Napi::Error object.\n\n\nFatal\nIn case of an unrecoverable error in a native module, a fatal error can be thrown to immediately terminate the process.\nstatic NAPI_NO_RETURN void Napi::Error::Fatal(const char* location, const char* message);\nThe function call does not return, the process will be terminated.\n\n\nConstructor\nCreates empty instance of an Napi::Error.\nNapi::Error::Error();\nReturns an instance of Napi::Error object.\n\n\nConstructor\nInitializes an Napi::Error instance from an existing JavaScript error object.\nNapi::Error::Error(napi_env env, napi_value value);\n\n[in] env: The environment in which to construct the error object.\n[in] value: The Napi::Error reference to wrap.\n\nReturns instance of an Napi::Error object.\n\n\nMessage\nstd::string& Napi::Error::Message() const NAPI_NOEXCEPT;\nReturns the reference to the string that represent the message of the error.\n\n\nThrowAsJavaScriptException\nThrow the error as JavaScript exception.\nvoid Napi::Error::ThrowAsJavaScriptException() const;\nThrows the error as a JavaScript exception.\n\n\nwhat\nconst char* Napi::Error::what() const NAPI_NOEXCEPT override;\nReturns a pointer to a null-terminated string that is used to identify the exception. This method can be used only if the exception mechanism is enabled."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/escapable_handle_scope.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/escapable_handle_scope.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nConstructor\nCreates a new escapable handle scope.\nNapi::EscapableHandleScope Napi::EscapableHandleScope::New(Napi:Env env);\n\n[in] Env: The environment in which to construct the Napi::EscapableHandleScope object.\n\nReturns a new Napi::EscapableHandleScope\n\n\nConstructor\nCreates a new escapable handle scope.\nNapi::EscapableHandleScope Napi::EscapableHandleScope::New(napi_env env, napi_handle_scope scope);\n\n[in] env: napi_env in which the scope passed in was created.\n[in] scope: pre-existing napi_handle_scope.\n\nReturns a new Napi::EscapableHandleScope instance which wraps the napi_escapable_handle_scope handle passed in. This can be used to mix usage of the C N-API and node-addon-api.\noperator EscapableHandleScope::napi_escapable_handle_scope\noperator Napi::EscapableHandleScope::napi_escapable_handle_scope() const\nReturns the N-API napi_escapable_handle_scope wrapped by the Napi::EscapableHandleScope object. This can be used to mix usage of the C N-API and node-addon-api by allowing the class to be used be converted to a napi_escapable_handle_scope.\n\n\nDestructor\nNapi::EscapableHandleScope::~EscapableHandleScope();\nDeletes the Napi::EscapableHandleScope instance and allows any objects/handles created in the scope to be collected by the garbage collector. There is no guarantee as to when the gargbage collector will do this.\n\n\nEscape\nnapi::Value Napi::EscapableHandleScope::Escape(napi_value escapee);\n\n[in] escapee: Napi::Value or napi_env to promote to the outer scope\n\nReturns Napi::Value which can be used in the outer scope. This method can be called at most once on a given Napi::EscapableHandleScope. If it is called more than once an exception will be thrown.\n\n\nEnv\nNapi::Env Napi::EscapableHandleScope::Env() const;\nReturns the Napi::Env associated with the Napi::EscapableHandleScope."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/env.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/env.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nConstructor\nNapi::Env::Env(napi_env env);\n\n[in] env: The napi_env environment from which to construct the Napi::Env object.\n\n\n\nnapi_env\noperator napi_env() const;\nReturns the napi_env opaque data structure representing the environment.\n\n\nGlobal\nNapi::Object Napi::Env::Global() const;\nReturns the Napi::Object representing the environment’s JavaScript Global Object.\n\n\nUndefined\nNapi::Value Napi::Env::Undefined() const;\nReturns the Napi::Value representing the environment’s JavaScript Undefined Object.\n\n\nNull\nNapi::Value Napi::Env::Null() const;\nReturns the Napi::Value representing the environment’s JavaScript Null Object.\n\n\nIsExceptionPending\nbool Napi::Env::IsExceptionPending() const;\nReturns a bool indicating if an exception is pending in the environment.\n\n\nGetAndClearPendingException\nNapi::Error Napi::Env::GetAndClearPendingException();\nReturns an Napi::Error object representing the environment’s pending exception, if any."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/object.html#example",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/object.html#example",
    "title": "3327 Research",
    "section": "Example",
    "text": "Example\n#include <napi.h>\n\nusing namespace Napi;\n\nVoid Init(Env env) {\n\n  // Create a new instance\n  Object obj = Object::New(env);\n\n  // Assign values to properties\n  obj.Set(\"hello\", \"world\");\n  obj.Set(uint32_t(42), \"The Answer to Life, the Universe, and Everything\");\n  obj.Set(\"Douglas Adams\", true);\n\n  // Get properties\n  Value val1 = obj.Get(\"hello\");\n  Value val2 = obj.Get(uint32_t(42));\n  Value val3 = obj.Get(\"Douglas Adams\");\n\n  // Test if objects have properties.\n  bool obj1 = obj.Has(\"hello\"); // true\n  bool obj2 = obj.Has(\"world\"); // false\n\n}"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/object.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/object.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nEmpty Constructor\nNapi::Object::Object();\nCreates a new empty Object instance.\n\n\nConstructor\nNapi::Object::Object(napi_env env, napi_value value);\n\n[in] env: The napi_env environment in which to construct the Value object.\n[in] value: The C++ primitive from which to instantiate the Value. value may be any of:\n\nbool\nAny integer type\nAny floating point type\nconst char* (encoded using UTF-8, null-terminated)\nconst char16_t* (encoded using UTF-16-LE, null-terminated)\nstd::string (encoded using UTF-8)\nstd::u16string\nNapi::Value\nnapi_value\n\n\nCreates a non-empty Napi::Object instance.\n\n\nNew()\nNapi::Object Napi::Object::New(napi_env env);\n\n[in] env: The napi_env environment in which to construct the Napi::Value object.\n\nCreates a new Napi::Object value.\n\n\nSet()\nvoid Napi::Object::Set (____ key, ____ value);\n\n[in] key: The name for the property being assigned.\n[in] value: The value being assigned to the property.\n\nAdd a property with the specified key with the specified value to the object.\nThe key can be any of the following types: - napi_value - Napi::Value - const char* - const std::string& - uint32_t\nWhile the value must be any of the following types: - napi_value - Napi::Value - const char* - std::string& - bool - double\n\n\nGet()\nNapi::Value Napi::Object::Get(____ key);\n\n[in] key: The name of the property to return the value for.\n\nReturns the Napi::Value associated with the key property. Returns the value undefined if the key does not exist.\nThe key can be any of the following types: - napi_value - Napi::Value - const char * - const std::string & - uint32_t\n\n\nHas()\nbool Napi::Object::Has (____ key) const;\n\n[in] key: The name of the property to check.\n\nReturns a bool that is true if the object has a property named key and false otherwise.\n\n\nInstanceOf()\nbool Napi::Object::InstanceOf (const Function& constructor) const\n\n[in] constructor: The constructor Napi::Function of the value that is being compared with the object.\n\nReturns a bool that is true if the Napi::Object is an instance created by the constructor and false otherwise.\nNote: This is equivalent to the JavaScript instanceof operator.\n\n\nAddFinalizer()\ntemplate <typename Finalizer, typename T>\ninline void AddFinalizer(Finalizer finalizeCallback, T* data);\n\n[in] finalizeCallback: The function to call when the object is garbage-collected.\n[in] data: The data to associate with the object.\n\nAssociates data with the object, calling finalizeCallback when the object is garbage-collected. finalizeCallback has the signature\nvoid finalizeCallback(Napi::Env env, T* data);\nwhere data is the pointer that was passed into the call to AddFinalizer().\n\n\nAddFinalizer()\ntemplate <typename Finalizer, typename T, typename Hint>\ninline void AddFinalizer(Finalizer finalizeCallback,\n                         T* data,\n                         Hint* finalizeHint);\n\n[in] data: The data to associate with the object.\n[in] finalizeCallback: The function to call when the object is garbage-collected.\n\nAssociates data with the object, calling finalizeCallback when the object is garbage-collected. An additional hint may be given. It will also be passed to finalizeCallback, which has the signature\nvoid finalizeCallback(Napi::Env env, T* data, Hint* hint);\nwhere data and hint are the pointers that were passed into the call to AddFinalizer().\n\n\nDefineProperty()\nvoid Napi::Object::DefineProperty (const Napi::PropertyDescriptor& property);\n\n[in] property: A Napi::PropertyDescriptor.\n\nDefine a property on the object.\n\n\nDefineProperties()\nvoid Napi::Object::DefineProperties (____ properties)\n\n[in] properties: A list of Napi::PropertyDescriptor. Can be one of the following types:\n\nconst std::initializer_list&\nconst std::vector&\n\n\nDefines properties on the object.\n\n\nOperator\nNapi::PropertyLValue<std::string> Napi::Object::operator[] (const char* utf8name);\n\n[in] utf8name: UTF-8 encoded null-terminated property name.\n\nReturns a Napi::PropertyLValue as the named property or sets the named property.\nNapi::PropertyLValue<std::string> Napi::Object::operator[] (const std::string& utf8name);\n\n[in] utf8name: UTF-8 encoded property name.\n\nReturns a Napi::PropertyLValue as the named property or sets the named property.\nNapi::PropertyLValue<uint32_t> Napi::Object::operator[] (uint32_t index);\n\n[in] index: Element index.\n\nReturns a Napi::PropertyLValue or sets an indexed property or array element.\nNapi::Value Napi::Object::operator[] (const char* utf8name) const;\n\n[in] utf8name: UTF-8 encoded null-terminated property name.\n\nReturns the named property as a Napi::Value.\nNapi::Value Napi::Object::operator[] (const std::string& utf8name) const;\n\n[in] utf8name: UTF-8 encoded property name.\n\nReturns the named property as a Napi::Value.\nNapi::Value Napi::Object::operator[] (uint32_t index) const;\n\n[in] index: Element index.\n\nReturns an indexed property or array element as a Napi::Value."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/function_reference.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/function_reference.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nWeak\nCreates a “weak” reference to the value, in that the initial reference count is set to 0.\nstatic Napi::FunctionReference Napi::Weak(const Napi::Function& value);\n\n[in] value: The value which is to be referenced.\n\nReturns the newly created reference.\n\n\nPersistent\nCreates a “persistent” reference to the value, in that the initial reference count is set to 1.\nstatic Napi::FunctionReference Napi::Persistent(const Napi::Function& value);\n\n[in] value: The value which is to be referenced.\n\nReturns the newly created reference.\n\n\nConstructor\nCreates a new empty instance of Napi::FunctionReference.\nNapi::FunctionReference::FunctionReference();\n\n\nConstructor\nCreates a new instance of the Napi::FunctionReference.\nNapi::FunctionReference::FunctionReference(napi_env env, napi_ref ref);\n\n[in] env: The environment in which to construct the Napi::FunctionReference object.\n[in] ref: The N-API reference to be held by the Napi::FunctionReference.\n\nReturns a newly created Napi::FunctionReference object.\n\n\nNew\nConstructs a new instance by calling the constructor held by this reference.\nNapi::Object Napi::FunctionReference::New(const std::initializer_list<napi_value>& args) const;\n\n[in] args: Initializer list of JavaScript values as napi_value representing the arguments of the contructor function.\n\nReturns a new JavaScript object.\n\n\nNew\nConstructs a new instance by calling the constructor held by this reference.\nNapi::Object Napi::FunctionReference::New(const std::vector<napi_value>& args) const;\n\n[in] args: Vector of JavaScript values as napi_value representing the arguments of the constructor function.\n\nReturns a new JavaScript object.\n\n\nCall\nCalls a referenced Javascript function from a native add-on.\nNapi::Value Napi::FunctionReference::Call(const std::initializer_list<napi_value>& args) const;\n\n[in] args: Initializer list of JavaScript values as napi_value representing the arguments of the referenced function.\n\nReturns a Napi::Value representing the JavaScript object returned by the referenced function.\n\n\nCall\nCalls a referenced JavaScript function from a native add-on.\nNapi::Value Napi::FunctionReference::Call(const std::vector<napi_value>& args) const;\n\n[in] args: Vector of JavaScript values as napi_value representing the arguments of the referenced function.\n\nReturns a Napi::Value representing the JavaScript object returned by the referenced function.\n\n\nCall\nCalls a referenced JavaScript function from a native add-on.\nNapi::Value Napi::FunctionReference::Call(napi_value recv, const std::initializer_list<napi_value>& args) const;\n\n[in] recv: The this object passed to the referenced function when it’s called.\n[in] args: Initializer list of JavaScript values as napi_value representing the arguments of the referenced function.\n\nReturns a Napi::Value representing the JavaScript object returned by the referenced function.\n\n\nCall\nCalls a referenced JavaScript function from a native add-on.\nNapi::Value Napi::FunctionReference::Call(napi_value recv, const std::vector<napi_value>& args) const;\n\n[in] recv: The this object passed to the referenced function when it’s called.\n[in] args: Vector of JavaScript values as napi_value representing the arguments of the referenced function.\n\nReturns a Napi::Value representing the JavaScript object returned by the referenced function.\n\n\nCall\nCalls a referenced JavaScript function from a native add-on.\nNapi::Value Napi::FunctionReference::Call(napi_value recv, size_t argc, const napi_value* args) const;\n\n[in] recv: The this object passed to the referenced function when it’s called.\n[in] argc: The number of arguments passed to the referenced function.\n[in] args: Array of JavaScript values as napi_value representing the arguments of the referenced function.\n\nReturns a Napi::Value representing the JavaScript object returned by the referenced function.\n\n\nMakeCallback\nCalls a referenced JavaScript function from a native add-on after an asynchronous operation.\nNapi::Value Napi::FunctionReference::MakeCallback(napi_value recv, const std::initializer_list<napi_value>& args, napi_async_context = nullptr) const;\n\n[in] recv: The this object passed to the referenced function when it’s called.\n[in] args: Initializer list of JavaScript values as napi_value representing the arguments of the referenced function.\n[in] context: Context for the async operation that is invoking the callback. This should normally be a value previously obtained from Napi::AsyncContext. However nullptr is also allowed, which indicates the current async context (if any) is to be used for the callback.\n\nReturns a Napi::Value representing the JavaScript object returned by the referenced function.\n\n\nMakeCallback\nCalls a referenced JavaScript function from a native add-on after an asynchronous operation.\nNapi::Value Napi::FunctionReference::MakeCallback(napi_value recv, const std::vector<napi_value>& args, napi_async_context context = nullptr) const;\n\n[in] recv: The this object passed to the referenced function when it’s called.\n[in] args: Vector of JavaScript values as napi_value representing the arguments of the referenced function.\n[in] context: Context for the async operation that is invoking the callback. This should normally be a value previously obtained from Napi::AsyncContext. However nullptr is also allowed, which indicates the current async context (if any) is to be used for the callback.\n\nReturns a Napi::Value representing the JavaScript object returned by the referenced function.\n\n\nMakeCallback\nCalls a referenced JavaScript function from a native add-on after an asynchronous operation.\nNapi::Value Napi::FunctionReference::MakeCallback(napi_value recv, size_t argc, const napi_value* args, napi_async_context context = nullptr) const;\n\n[in] recv: The this object passed to the referenced function when it’s called.\n[in] argc: The number of arguments passed to the referenced function.\n[in] args: Array of JavaScript values as napi_value representing the arguments of the referenced function.\n[in] context: Context for the async operation that is invoking the callback. This should normally be a value previously obtained from Napi::AsyncContext. However nullptr is also allowed, which indicates the current async context (if any) is to be used for the callback.\n\nReturns a Napi::Value representing the JavaScript object returned by the referenced function."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/function_reference.html#operator",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/function_reference.html#operator",
    "title": "3327 Research",
    "section": "Operator",
    "text": "Operator\nNapi::Value operator ()(const std::initializer_list<napi_value>& args) const;\n\n[in] args: Initializer list of reference to JavaScript values as napi_value\n\nReturns a Napi::Value representing the JavaScript value returned by the referenced function."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/typed_array_of.html#typedefs",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/typed_array_of.html#typedefs",
    "title": "3327 Research",
    "section": "Typedefs",
    "text": "Typedefs\nThe common JavaScript TypedArray types are pre-defined for each of use:\ntypedef Napi::TypedArrayOf<int8_t> Int8Array;\ntypedef Napi::TypedArrayOf<uint8_t> Uint8Array;\ntypedef Napi::TypedArrayOf<int16_t> Int16Array;\ntypedef Napi::TypedArrayOf<uint16_t> Uint16Array;\ntypedef Napi::TypedArrayOf<int32_t> Int32Array;\ntypedef Napi::TypedArrayOf<uint32_t> Uint32Array;\ntypedef Napi::TypedArrayOf<float> Float32Array;\ntypedef Napi::TypedArrayOf<double> Float64Array;\nThe one exception is the Uint8ClampedArray which requires explicit initialization:\nUint8Array::New(env, length, napi_uint8_clamped_array)\nNote that while it’s possible to create a “clamped” array the clamping behavior is only applied in JavaScript."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/typed_array_of.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/typed_array_of.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nNew\nAllocates a new Napi::TypedArray instance with a given length. The underlying Napi::ArrayBuffer is allocated automatically to the desired number of elements.\nThe array type parameter can normally be omitted (because it is inferred from the template parameter T), except when creating a “clamped” array.\nstatic Napi::TypedArrayOf Napi::TypedArrayOf::New(napi_env env,\n                        size_t elementLength,\n                        napi_typedarray_type type);\n\n[in] env: The environment in which to create the Napi::TypedArrayOf instance.\n[in] elementLength: The length to be allocated, in elements.\n[in] type: The type of array to allocate (optional).\n\nReturns a new Napi::TypedArrayOf instance.\n\n\nNew\nWraps the provided Napi::ArrayBuffer into a new Napi::TypedArray instance.\nThe array type parameter can normally be omitted (because it is inferred from the template parameter T), except when creating a “clamped” array.\nstatic Napi::TypedArrayOf Napi::TypedArrayOf::New(napi_env env,\n                        size_t elementLength,\n                        Napi::ArrayBuffer arrayBuffer,\n                        size_t bufferOffset,\n                        napi_typedarray_type type);\n\n[in] env: The environment in which to create the Napi::TypedArrayOf instance.\n[in] elementLength: The length to array, in elements.\n[in] arrayBuffer: The backing Napi::ArrayBuffer instance.\n[in] bufferOffset: The offset into the Napi::ArrayBuffer where the array starts, in bytes.\n[in] type: The type of array to allocate (optional).\n\nReturns a new Napi::TypedArrayOf instance.\n\n\nConstructor\nInitializes an empty instance of the Napi::TypedArrayOf class.\nNapi::TypedArrayOf::TypedArrayOf();\n\n\nConstructor\nInitializes a wrapper instance of an existing Napi::TypedArrayOf object.\nNapi::TypedArrayOf::TypedArrayOf(napi_env env, napi_value value);\n\n[in] env: The environment in which to create the Napi::TypedArrayOf object.\n[in] value: The Napi::TypedArrayOf reference to wrap.\n\n\n\noperator []\nT& Napi::TypedArrayOf::operator [](size_t index);\n\n`[in] index: The element index into the array.\n\nReturns the element found at the given index.\n\n\noperator []\nconst T& Napi::TypedArrayOf::operator [](size_t index) const;\n\n`[in] index: The element index into the array.\n\nReturns the element found at the given index.\n\n\nData\nT* Napi::TypedArrayOf::Data() const;\nReturns a pointer into the backing Napi::ArrayBuffer which is offset to point to the start of the array.\n\n\nData\nconst T* Napi::TypedArrayOf::Data() const\nReturns a pointer into the backing Napi::ArrayBuffer which is offset to point to the start of the array."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/callback_scope.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/callback_scope.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nConstructor\nCreates a new callback scope on the stack.\nNapi::CallbackScope::CallbackScope(napi_env env, napi_callback_scope scope);\n\n[in] env: The environment in which to create the Napi::CallbackScope.\n[in] scope: The pre-existing napi_callback_scope or Napi::CallbackScope.\n\n\n\nConstructor\nCreates a new callback scope on the stack.\nNapi::CallbackScope::CallbackScope(napi_env env, napi_async_context context);\n\n[in] env: The environment in which to create the Napi::CallbackScope.\n[in] async_context: The pre-existing napi_async_context or Napi::AsyncContext.\n\n\n\nDestructor\nDeletes the instance of Napi::CallbackScope object.\nvirtual Napi::CallbackScope::~CallbackScope();\n\n\nEnv\nNapi::Env Napi::CallbackScope::Env() const;\nReturns the Napi::Env associated with the Napi::CallbackScope."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/callback_scope.html#operator",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/callback_scope.html#operator",
    "title": "3327 Research",
    "section": "Operator",
    "text": "Operator\nNapi::CallbackScope::operator napi_callback_scope() const;\nReturns the N-API napi_callback_scope wrapped by the Napi::CallbackScope object. This can be used to mix usage of the C N-API and node-addon-api."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/range_error.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/range_error.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nNew\nCreates a new instance of a Napi::RangeError object.\nNapi::RangeError::New(Napi::Env env, const char* message);\n\n[in] Env: The environment in which to construct the Napi::RangeError object.\n[in] message: Null-terminated string to be used as the message for the Napi::RangeError.\n\nReturns an instance of a Napi::RangeError object.\n\n\nNew\nCreates a new instance of a Napi::RangeError object.\nNapi::RangeError::New(Napi::Env env, const std::string& message);\n\n[in] Env: The environment in which to construct the Napi::RangeError object.\n[in] message: Reference string to be used as the message for the Napi::RangeError.\n\nReturns an instance of a Napi::RangeError object.\n\n\nConstructor\nCreates a new empty instance of a Napi::RangeError.\nNapi::RangeError::RangeError();\n\n\nConstructor\nInitializes a Napi::RangeError instance from an existing Javascript error object.\nNapi::RangeError::RangeError(napi_env env, napi_value value);\n\n[in] Env: The environment in which to construct the Napi::RangeError object.\n[in] value: The Napi::Error reference to wrap.\n\nReturns an instance of a Napi::RangeError object."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/prebuild_tools.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/prebuild_tools.html",
    "title": "3327 Research",
    "section": "",
    "text": "Prebuild tools\nThe distribution of a native add-on is just as important as its implementation. In order to install a native add-on it’s important to have all the necessary dependencies installed and well configured (see the setup section). The end-user will need to compile the add-on when they will do an npm install and in some cases this could create problems. To avoid the compilation process it’s possible to ditribute the native add-on in pre-built form for different platform and architectures. The prebuild tools help to create and distrubute the pre-built form of a native add-on.\nThe following list report known tools that are compatible with N-API:\n\nnode-pre-gyp\nprebuild\nprebuildify"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_operations.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_operations.html",
    "title": "3327 Research",
    "section": "",
    "text": "Asynchronous operations\nNode.js native add-ons often need to execute long running tasks and to avoid blocking the event loop they have to run them asynchronously from the event loop. In the Node.js model of execution the event loop thread represents the thread where JavaScript code is executing. The Node.js guidance is to avoid blocking other work queued on the event loop thread. Therefore, we need to do this work on another thread.\nAll this means that native add-ons need to leverage async helpers from libuv as part of their implementation. This allows them to schedule work to be executed asynchronously so that their methods can return in advance of the work being completed.\nNode Addon API provides an interface to support functions that cover the most common asynchronous use cases. There is an abstract classes to implement asynchronous operations:\n\nNapi::AsyncWorker\n\nThese class helps manage asynchronous operations through an abstraction of the concept of moving data between the event loop and worker threads.\nAlso, the above class may not be appropriate for every scenario. When using any other asynchronous mechanism, the following API is necessary to ensure an asynchronous operation is properly tracked by the runtime:\n\nAsyncContext\nCallbackScope"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/cmake-js.html#quick-start",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/cmake-js.html#quick-start",
    "title": "3327 Research",
    "section": "Quick Start",
    "text": "Quick Start\n\nInstall CMake\nCMake.js requires that CMake be installed. Installers for a variety of platforms can be found on the CMake website.\n\n\nInstall CMake.js\nFor developers, CMake.js is typically installed as a global package:\nnpm install -g cmake-js\ncmake-js --help\n\nFor users of your native addon, CMake.js should be configured as a dependency in your package.json as described in the CMake.js documentation.\n\n\n\nCMakeLists.txt\nYour project will require a CMakeLists.txt file. The CMake.js README file shows what’s necessary.\n\n\nNAPI_VERSION\nWhen building N-API addons, it’s crucial to specify the N-API version your code is designed to work with. With CMake.js, this information is specified in the CMakeLists.txt file:\nadd_definitions(-DNAPI_VERSION=3)\nSince N-API is ABI-stable, your N-API addon will work, without recompilation, with the N-API version you specify in NAPI_VERSION and all subsequent N-API versions.\nIn the absence of a need for features available only in a specific N-API version, version 3 is a good choice as it is the version of N-API that was active when N-API left experimental status.\n\n\nNAPI_EXPERIMENTAL\nThe following line in the CMakeLists.txt file will enable N-API experimental features if your code requires them:\nadd_definitions(-DNAPI_EXPERIMENTAL)\n\n\nnode-addon-api\nIf your N-API native add-on uses the optional node-addon-api C++ wrapper, the CMakeLists.txt file requires additional configuration information as described on the CMake.js README file."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/cmake-js.html#example",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/cmake-js.html#example",
    "title": "3327 Research",
    "section": "Example",
    "text": "Example\nA working example of an N-API native addon built using CMake.js can be found on the node-addon-examples repository."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/cmake-js.html#cmake-reference",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/cmake-js.html#cmake-reference",
    "title": "3327 Research",
    "section": "CMake Reference",
    "text": "CMake Reference\n\nInstallation\nHow to use\nUsing N-API and node-addon-api\nTutorials\nUse case in the works - ArrayFire.js\n\nSometimes finding the right settings is not easy so to accomplish at most complicated task please refer to:\n\nCMake documentation\nCMake.js wiki"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/memory_management.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/memory_management.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nAdjustExternalMemory\nThe function AdjustExternalMemory adjusts the amount of registered external memory used to give the JavaScript engine an indication of the amount of externally allocated memory that is kept alive by JavaScript objects. The JavaScript engine uses this to decide when to perform global garbage collections. Registering externally allocated memory will trigger global garbage collections more often than it would otherwise in an attempt to garbage collect the JavaScript objects that keep the externally allocated memory alive.\nstatic int64_t Napi::MemoryManagement::AdjustExternalMemory(Napi::Env env, int64_t change_in_bytes);\n\n[in] env: The environment in which the API is invoked under.\n[in] change_in_bytes: The change in externally allocated memory that is kept alive by JavaScript objects expressed in bytes.\n\nReturns the adjusted memory value."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/creating_a_release.html#prerequisites",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/creating_a_release.html#prerequisites",
    "title": "3327 Research",
    "section": "Prerequisites",
    "text": "Prerequisites\nBefore to start creating a new release check if you have installed the following tools:\n\nChangelog maker\n\nIf not please follow the instruction reported in the tool’s documentation to install it."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/creating_a_release.html#publish-new-release",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/creating_a_release.html#publish-new-release",
    "title": "3327 Research",
    "section": "Publish new release",
    "text": "Publish new release\nThese are the steps to follow to create a new release:\n\nOpen an issue in the node-addon-api repo documenting the intent to create a new release. Give people some time to comment or suggest PRs that should land first.\nValidate all tests pass by running npm test on master.\nUpdate the version in package.json appropriately.\nUpdate the README.md to show the new version as the latest.\nGenerate the changelog for the new version using changelog maker tool. From the route folder of the repo launch the following command:\n> changelog-maker\nUse the output generated by changelog maker to pdate the CHANGELOG.md following the style used in publishing the previous release.\nAdd any new contributors to the “contributors” section in the package.json\nValidate all tests pass by running npm test on master.\nUse CI to validate tests pass for latest 11, 10, 8, 6 releases (note there are still some issues on SmartOS and Windows in the testing).\nDo a clean checkout of node-addon-api.\nLogin and then run npm publish.\nCreate a release in Github (look at existing releases for an example).\nValidate that you can run npm install node-addon-api successfully and that the correct version is installed.\nComment on the issue opened in the first step that the release has been created and close the issue.\nTweet that the release has been created."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/object_wrap.html#example",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/object_wrap.html#example",
    "title": "3327 Research",
    "section": "Example",
    "text": "Example\n#include <napi.h>\n\nclass Example : public Napi::ObjectWrap<Example> {\n  public:\n    static Napi::Object Init(Napi::Env env, Napi::Object exports);\n    Example(const Napi::CallbackInfo &info);\n\n  private:\n    static Napi::FunctionReference constructor;\n    double _value;\n    Napi::Value GetValue(const Napi::CallbackInfo &info);\n    Napi::Value SetValue(const Napi::CallbackInfo &info);\n};\n\nNapi::Object Example::Init(Napi::Env env, Napi::Object exports) {\n    // This method is used to hook the accessor and method callbacks\n    Napi::Function func = DefineClass(env, \"Example\", {\n        InstanceMethod(\"GetValue\", &Example::GetValue),\n        InstanceMethod(\"SetValue\", &Example::SetValue)\n    });\n\n    // Create a peristent reference to the class constructor. This will allow\n    // a function called on a class prototype and a function\n    // called on instance of a class to be distinguished from each other.\n    constructor = Napi::Persistent(func);\n    // Call the SuppressDestruct() method on the static data prevent the calling\n    // to this destructor to reset the reference when the environment is no longer\n    // available.\n    constructor.SuppressDestruct();\n    exports.Set(\"Example\", func);\n    return exports;\n}\n\nExample::Example(const Napi::CallbackInfo &info) : Napi::ObjectWrap<Example>(info) {\n    Napi::Env env = info.Env();\n    // ...\n    Napi::Number value = info[0].As<Napi::Number>();\n    this->_value = value.DoubleValue();\n}\n\nNapi::FunctionReference Example::constructor;\n\nNapi::Value Example::GetValue(const Napi::CallbackInfo &info){\n    Napi::Env env = info.Env();\n    return Napi::Number::New(env, this->_value);\n}\n\nNapi::Value Example::SetValue(const Napi::CallbackInfo &info){\n    Napi::Env env = info.Env();\n    // ...\n    Napi::Number value = info[0].As<Napi::Number>();\n    this->_value = value.DoubleValue();\n    return this->GetValue(info);\n}\n\n// Initialize native add-on\nNapi::Object Init (Napi::Env env, Napi::Object exports) {\n    Example::Init(env, exports);\n    return exports;\n}\n\n// Register and initialize native add-on\nNODE_API_MODULE(NODE_GYP_MODULE_NAME, Init)\nThe above code can be used from JavaScript as follows:\n'use strict'\n\nconst { Example } = require('bindings')('addon')\n\nconst example = new Example(11)\nconsole.log(example.GetValue())\n// It prints 11\nexample.SetValue(19)\nconsole.log(example.GetValue());\n// It prints 19\nAt initialization time, the Napi::ObjectWrap::DefineClass() method must be used to hook up the accessor and method callbacks. It takes a list of property descriptors, which can be constructed via the various static methods on the base class.\nWhen JavaScript code invokes the constructor, the constructor callback will create a new C++ instance and “wrap” it into the newly created JavaScript object.\nWhen JavaScript code invokes a method or a property accessor on the class the corresponding C++ callback function will be executed.\nFor a wrapped object it could be difficult to distinguish between a function called on a class prototype and a function called on instance of a class. Therefore it is good practice to save a persistent reference to the class constructor. This allows the two cases to be distinguished from each other by checking the this object against the class constructor."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/object_wrap.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/object_wrap.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nConstructor\nCreates a new instance of a JavaScript object that wraps native instance.\nNapi::ObjectWrap(const Napi::CallbackInfo& callbackInfo);\n\n[in] callbackInfo: The object representing the components of the JavaScript request being made.\n\n\n\nUnwrap\nRetrieves a native instance wrapped in a JavaScript object.\nstatic T* Napi::ObjectWrap::Unwrap(Napi::Object wrapper);\n\n[in] wrapper: The JavaScript object that wraps the native instance.\n\nReturns a native instace wrapped in a JavaScript object. Given the Napi:Object, this allows a method to get a pointer to the wrapped C++ object and then reference fields, call methods, etc. within that class. In many cases calling Unwrap is not required, as methods can use the this field for ObjectWrap when running in a method on a class that extends ObjectWrap.\n\n\nDefineClass\nDefnines a JavaScript class with constructor, static and instance properties and methods.\nstatic Napi::Function Napi::ObjectWrap::DefineClass(Napi::Env env,\n                                const char* utf8name,\n                                const std::initializer_list<PropertyDescriptor>& properties,\n                                void* data = nullptr);\n\n[in] env: The environment in which to construct a JavaScript class.\n[in] utf8name: Null-terminated string that represents the name of the JavaScript constructor function.\n[in] properties: Initializer list of class property descriptor describing static and instance properties and methods of the class. See: Class property and descriptor.\n[in] data: User-provided data passed to the constructor callback as data property of the Napi::CallbackInfo.\n\nReturns a Napi::Function representing the constructor function for the class.\n\n\nDefineClass\nDefnines a JavaScript class with constructor, static and instance properties and methods.\nstatic Napi::Function Napi::ObjectWrap::DefineClass(Napi::Env env,\n                            const char* utf8name,\n                            const std::vector<PropertyDescriptor>& properties,\n                            void* data = nullptr);\n\n[in] env: The environment in which to construct a JavaScript class.\n[in] utf8name: Null-terminated string that represents the name of the JavaScript constructor function.\n[in] properties: Vector of class property descriptor describing static and instance properties and methods of the class. See: Class property and descriptor.\n[in] data: User-provided data passed to the constructor callback as data property of the Napi::CallbackInfo.\n\nReturns a Napi::Function representing the constructor function for the class.\n\n\nFinalize\nProvides an opportunity to run cleanup code that requires access to the Napi::Env before the wrapped native object instance is freed. Override to implement.\nvirtual void Finalize(Napi::Env env);\n\n[in] env: Napi::Env.\n\n\n\nStaticMethod\nCreates property descriptor that represents a static method of a JavaScript class.\nstatic Napi::PropertyDescriptor Napi::ObjectWrap::StaticMethod(const char* utf8name,\n                                       StaticVoidMethodCallback method,\n                                       napi_property_attributes attributes = napi_default,\n                                       void* data = nullptr);\n\n[in] utf8name: Null-terminated string that represents the name of a static method for the class.\n[in] method: The native function that represents a static method of a JavaScript class.\n[in] attributes: The attributes associated with a particular property. One or more of napi_property_attributes.\n[in] data: User-provided data passed into method when it is invoked.\n\nReturns Napi::PropertyDescriptor object that represents the static method of a JavaScript class.\n\n\nStaticMethod\nCreates property descriptor that represents a static method of a JavaScript class.\nstatic Napi::PropertyDescriptor Napi::ObjectWrap::StaticMethod(const char* utf8name,\n                                       StaticMethodCallback method,\n                                       napi_property_attributes attributes = napi_default,\n                                       void* data = nullptr);\n\n[in] utf8name: Null-terminated string that represents the name of a static method for the class.\n[in] method: The native function that represents a static method of a JavaScript class.\n[in] attributes: The attributes associated with a particular property. One or more of napi_property_attributes.\n[in] data: User-provided data passed into method when it is invoked.\n\nReturns Napi::PropertyDescriptor object that represents a static method of a JavaScript class.\n\n\nStaticMethod\nCreates property descriptor that represents a static method of a JavaScript class.\nstatic Napi::PropertyDescriptor Napi::ObjectWrap::StaticMethod(Symbol name,\n                                       StaticVoidMethodCallback method,\n                                       napi_property_attributes attributes = napi_default,\n                                       void* data = nullptr);\n\n[in] name: Napi:Symbol that represents the name of a static method for the class.\n[in] method: The native function that represents a static method of a JavaScript class.\n[in] attributes: The attributes associated with a particular property. One or more of napi_property_attributes.\n[in] data: User-provided data passed into method when it is invoked.\n\nReturns Napi::PropertyDescriptor object that represents the static method of a JavaScript class.\n\n\nStaticMethod\nCreates property descriptor that represents a static method of a JavaScript class.\nstatic Napi::PropertyDescriptor Napi::ObjectWrap::StaticMethod(Symbol name,\n                                       StaticMethodCallback method,\n                                       napi_property_attributes attributes = napi_default,\n                                       void* data = nullptr);\nmethod for the class. - [in] name: Napi:Symbol that represents the name of a static. - [in] method: The native function that represents a static method of a JavaScript class. - [in] attributes: The attributes associated with a particular property. One or more of napi_property_attributes. - [in] data: User-provided data passed into method when it is invoked.\nReturns Napi::PropertyDescriptor object that represents a static method of a JavaScript class.\n\n\nStaticAccessor\nCreates property descriptor that represents a static accessor property of a JavaScript class.\nstatic Napi::PropertyDescriptor Napi::ObjectWrap::StaticAccessor(const char* utf8name,\n                                         StaticGetterCallback getter,\n                                         StaticSetterCallback setter,\n                                         napi_property_attributes attributes = napi_default,\n                                         void* data = nullptr);\n\n[in] utf8name: Null-terminated string that represents the name of a static accessor property for the class.\n[in] getter: The native function to call when a get access to the property of a JavaScript class is performed.\n[in] setter: The native function to call when a set access to the property of a JavaScript class is performed.\n[in] attributes: The attributes associated with a particular property. One or more of napi_property_attributes.\n[in] data: User-provided data passed into getter or setter when is invoked.\n\nReturns Napi::PropertyDescriptor object that represents a static accessor property of a JavaScript class.\n\n\nStaticAccessor\nCreates property descriptor that represents a static accessor property of a JavaScript class.\nstatic Napi::PropertyDescriptor Napi::ObjectWrap::StaticAccessor(Symbol name,\n                                         StaticGetterCallback getter,\n                                         StaticSetterCallback setter,\n                                         napi_property_attributes attributes = napi_default,\n                                         void* data = nullptr);\n\n[in] name: Napi:Symbol that represents the name of a static accessor.\n[in] getter: The native function to call when a get access to the property of a JavaScript class is performed.\n[in] setter: The native function to call when a set access to the property of a JavaScript class is performed.\n[in] attributes: The attributes associated with a particular property. One or more of napi_property_attributes.\n[in] data: User-provided data passed into getter or setter when is invoked.\n\nReturns Napi::PropertyDescriptor object that represents a static accessor property of a JavaScript class.\n\n\nInstanceMethod\nCreates property descriptor that represents an instance method of a JavaScript class.\nstatic Napi::PropertyDescriptor Napi::ObjectWrap::InstanceMethod(const char* utf8name,\n                                         InstanceVoidMethodCallback method,\n                                         napi_property_attributes attributes = napi_default,\n                                         void* data = nullptr);\n\n[in] utf8name: Null-terminated string that represents the name of an instance method for the class.\n[in] method: The native function that represents an instance method of a JavaScript class.\n[in] attributes: The attributes associated with a particular property. One or more of napi_property_attributes.\n[in] data: User-provided data passed into method when it is invoked.\n\nReturns Napi::PropertyDescriptor object that represents an instance method of a JavaScript class.\n\n\nInstanceMethod\nCreates property descriptor that represents an instance method of a JavaScript class.\nstatic Napi::PropertyDescriptor Napi::ObjectWrap::InstanceMethod(const char* utf8name,\n                                         InstanceMethodCallback method,\n                                         napi_property_attributes attributes = napi_default,\n                                         void* data = nullptr);\n\n[in] utf8name: Null-terminated string that represents the name of an instance method for the class.\n[in] method: The native function that represents an instance method of a JavaScript class.\n[in] attributes: The attributes associated with a particular property. One or more of napi_property_attributes.\n[in] data: User-provided data passed into method when it is invoked.\n\nReturns Napi::PropertyDescriptor object that represents an instance method of a JavaScript class.\n\n\nInstanceMethod\nCreates property descriptor that represents an instance method of a JavaScript class.\nstatic Napi::PropertyDescriptor Napi::ObjectWrap::InstanceMethod(Napi::Symbol name,\n                                         InstanceVoidMethodCallback method,\n                                         napi_property_attributes attributes = napi_default,\n                                         void* data = nullptr);\n\n[in] name: The Napi::Symbol object whose value is used to identify the instance method for the class.\n[in] method: The native function that represents an instance method of a JavaScript class.\n[in] attributes: The attributes associated with a particular property. One or more of napi_property_attributes.\n[in] data: User-provided data passed into method when it is invoked.\n\nReturns Napi::PropertyDescriptor object that represents an instance method of a JavaScript class.\n\n\nInstanceMethod\nCreates property descriptor that represents an instance method of a JavaScript class.\nstatic Napi::PropertyDescriptor Napi::ObjectWrap::InstanceMethod(Napi::Symbol name,\n                                         InstanceMethodCallback method,\n                                         napi_property_attributes attributes = napi_default,\n                                         void* data = nullptr);\n\n[in] name: The Napi::Symbol object whose value is used to identify the instance method for the class.\n[in] method: The native function that represents an instance method of a JavaScript class.\n[in] attributes: The attributes associated with a particular property. One or more of napi_property_attributes.\n[in] data: User-provided data passed into method when it is invoked.\n\nReturns Napi::PropertyDescriptor object that represents an instance method of a JavaScript class.\n\n\nInstanceAccessor\nCreates property descriptor that represents an instance accessor property of a JavaScript class.\nstatic Napi::PropertyDescriptor Napi::ObjectWrap::InstanceAccessor(const char* utf8name,\n                                           InstanceGetterCallback getter,\n                                           InstanceSetterCallback setter,\n                                           napi_property_attributes attributes = napi_default,\n                                           void* data = nullptr);\n\n[in] utf8name: Null-terminated string that represents the name of an instance accessor property for the class.\n[in] getter: The native function to call when a get access to the property of a JavaScript class is performed.\n[in] setter: The native function to call when a set access to the property of a JavaScript class is performed.\n[in] attributes: The attributes associated with the particular property. One or more of napi_property_attributes.\n[in] data: User-provided data passed into getter or setter when this is invoked.\n\nReturns Napi::PropertyDescriptor object that represents an instance accessor property of a JavaScript class.\n\n\nInstanceAccessor\nCreates property descriptor that represents an instance accessor property of a JavaScript class.\nstatic Napi::PropertyDescriptor Napi::ObjectWrap::InstanceAccessor(Symbol name,\n                                           InstanceGetterCallback getter,\n                                           InstanceSetterCallback setter,\n                                           napi_property_attributes attributes = napi_default,\n                                           void* data = nullptr);\n\n[in] name: The Napi::Symbol object whose value is used to identify the instance accessor.\n[in] getter: The native function to call when a get access to the property of a JavaScript class is performed.\n[in] setter: The native function to call when a set access to the property of a JavaScript class is performed.\n[in] attributes: The attributes associated with the particular property. One or more of napi_property_attributes.\n[in] data: User-provided data passed into getter or setter when this is invoked.\n\nReturns Napi::PropertyDescriptor object that represents an instance accessor property of a JavaScript class.\n\n\nStaticValue\nCreates property descriptor that represents an static value property of a JavaScript class.\nstatic Napi::PropertyDescriptor Napi::ObjectWrap::StaticValue(const char* utf8name,\n                                      Napi::Value value,\n                                      napi_property_attributes attributes = napi_default);\n\n[in] utf8name: Null-terminated string that represents the name of the static property.\n[in] value: The value that’s retrieved by a get access of the property.\n[in] attributes: The attributes to be associated with the property in addition to the napi_static attribute. One or more of napi_property_attributes.\n\nReturns Napi::PropertyDescriptor object that represents an static value property of a JavaScript class\n\n\nStaticValue\nCreates property descriptor that represents an static value property of a JavaScript class.\nstatic Napi::PropertyDescriptor Napi::ObjectWrap::StaticValue(Symbol name,\n                                      Napi::Value value,\n                                      napi_property_attributes attributes = napi_default);\n\n[in] name: The Napi::Symbol object whose value is used to identify the name of the static property.\n[in] value: The value that’s retrieved by a get access of the property.\n[in] attributes: The attributes to be associated with the property in addition to the napi_static attribute. One or more of napi_property_attributes.\n\nReturns Napi::PropertyDescriptor object that represents an static value property of a JavaScript class\n\n\nInstanceValue\nCreates property descriptor that represents an instance value property of a JavaScript class.\nstatic Napi::PropertyDescriptor Napi::ObjectWrap::InstanceValue(const char* utf8name,\n                                        Napi::Value value,\n                                        napi_property_attributes attributes = napi_default);\n\n[in] utf8name: Null-terminated string that represents the name of the property.\n[in] value: The value that’s retrieved by a get access of the property.\n[in] attributes: The attributes to be associated with the property. One or more of napi_property_attributes.\n\nReturns Napi::PropertyDescriptor object that represents an instance value property of a JavaScript class.\n\n\nInstanceValue\nCreates property descriptor that represents an instance value property of a JavaScript class.\nstatic Napi::PropertyDescriptor Napi::ObjectWrap::InstanceValue(Symbol name,\n                                        Napi::Value value,\n                                        napi_property_attributes attributes = napi_default);\n\n[in] name: The Napi::Symbol object whose value is used to identify the name of the property.\n[in] value: The value that’s retrieved by a get access of the property.\n[in] attributes: The attributes to be associated with the property. One or more of napi_property_attributes.\n\nReturns Napi::PropertyDescriptor object that represents an instance value"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/conversion-tool.html#to-use-the-conversion-script",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/conversion-tool.html#to-use-the-conversion-script",
    "title": "3327 Research",
    "section": "To use the conversion script:",
    "text": "To use the conversion script:\n\nGo to your module directory\n\ncd [module_path]\n\nInstall node-addon-api module\n\nnpm install node-addon-api\n\nRun node-addon-api conversion script\n\nnode ./node_modules/node-addon-api/tools/conversion.js ./\n\nWhile this script makes conversion easier, it still cannot fully convert the module. The next step is to try to build the module and complete the remaining conversions necessary to allow it to compile and pass all of the module’s tests."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/symbol.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/symbol.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nConstructor\nInstantiates a new Napi::Symbol value.\nNapi::Symbol::Symbol();\nReturns a new empty Napi::Symbol.\n\n\nNew\nNapi::Symbol::New(napi_env env, const std::string& description);\nNapi::Symbol::New(napi_env env, const char* description);\nNapi::Symbol::New(napi_env env, Napi::String description);\nNapi::Symbol::New(napi_env env, napi_value description);\n\n[in] env: The napi_env environment in which to construct the Napi::Symbol object.\n[in] value: The C++ primitive which represents the description hint for the Napi::Symbol. description may be any of:\n\nstd::string& - ANSI string description.\nconst char* - represents a UTF8 string description.\nString - Node addon API String description.\nnapi_value - N-API napi_value description.\n\n\nIf an error occurs, a Napi::Error will get thrown. If C++ exceptions are not being used, callers should check the result of Napi::Env::IsExceptionPending before attempting to use the returned value.\n\n\nUtf8Value\nstatic Napi::Symbol Napi::Symbol::WellKnown(napi_env env, const std::string& name);\n\n[in] env: The napi_env environment in which to construct the Napi::Symbol object.\n[in] name: The C++ string representing the Napi::Symbol to retrieve.\n\nReturns a Napi::Symbol representing a well-known Symbol from the Symbol registry."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/array_buffer.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/array_buffer.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nNew\nAllocates a new Napi::ArrayBuffer instance with a given length.\nstatic Napi::ArrayBuffer Napi::ArrayBuffer::New(napi_env env, size_t byteLength);\n\n[in] env: The environment in which to create the Napi::ArrayBuffer instance.\n[in] byteLength: The length to be allocated, in bytes.\n\nReturns a new Napi::ArrayBuffer instance.\n\n\nNew\nWraps the provided external data into a new Napi::ArrayBuffer instance.\nThe Napi::ArrayBuffer instance does not assume ownership for the data and expects it to be valid for the lifetime of the instance. Since the Napi::ArrayBuffer is subject to garbage collection this overload is only suitable for data which is static and never needs to be freed.\nstatic Napi::ArrayBuffer Napi::ArrayBuffer::New(napi_env env, void* externalData, size_t byteLength);\n\n[in] env: The environment in which to create the Napi::ArrayBuffer instance.\n[in] externalData: The pointer to the external data to wrap.\n[in] byteLength: The length of the externalData, in bytes.\n\nReturns a new Napi::ArrayBuffer instance.\n\n\nNew\nWraps the provided external data into a new Napi::ArrayBuffer instance.\nThe Napi::ArrayBuffer instance does not assume ownership for the data and expects it to be valid for the lifetime of the instance. The data can only be freed once the finalizeCallback is invoked to indicate that the Napi::ArrayBuffer has been released.\ntemplate <typename Finalizer>\nstatic Napi::ArrayBuffer Napi::ArrayBuffer::New(napi_env env,\n                       void* externalData,\n                       size_t byteLength,\n                       Finalizer finalizeCallback);\n\n[in] env: The environment in which to create the Napi::ArrayBuffer instance.\n[in] externalData: The pointer to the external data to wrap.\n[in] byteLength: The length of the externalData, in bytes.\n[in] finalizeCallback: A function to be called when the Napi::ArrayBuffer is destroyed. It must implement operator(), accept a void* (which is the externalData pointer), and return void.\n\nReturns a new Napi::ArrayBuffer instance.\n\n\nNew\nWraps the provided external data into a new Napi::ArrayBuffer instance.\nThe Napi::ArrayBuffer instance does not assume ownership for the data and expects it to be valid for the lifetime of the instance. The data can only be freed once the finalizeCallback is invoked to indicate that the Napi::ArrayBuffer has been released.\ntemplate <typename Finalizer, typename Hint>\nstatic Napi::ArrayBuffer Napi::ArrayBuffer::New(napi_env env,\n                       void* externalData,\n                       size_t byteLength,\n                       Finalizer finalizeCallback,\n                       Hint* finalizeHint);\n\n[in] env: The environment in which to create the Napi::ArrayBuffer instance.\n[in] externalData: The pointer to the external data to wrap.\n[in] byteLength: The length of the externalData, in bytes.\n[in] finalizeCallback: The function to be called when the Napi::ArrayBuffer is destroyed. It must implement operator(), accept a void* (which is the externalData pointer) and Hint*, and return void.\n[in] finalizeHint: The hint to be passed as the second parameter of the finalize callback.\n\nReturns a new Napi::ArrayBuffer instance.\n\n\nConstructor\nInitializes an empty instance of the Napi::ArrayBuffer class.\nNapi::ArrayBuffer::ArrayBuffer();\n\n\nConstructor\nInitializes a wrapper instance of an existing Napi::ArrayBuffer object.\nNapi::ArrayBuffer::ArrayBuffer(napi_env env, napi_value value);\n\n[in] env: The environment in which to create the Napi::ArrayBuffer instance.\n[in] value: The Napi::ArrayBuffer reference to wrap.\n\n\n\nByteLength\nsize_t Napi::ArrayBuffer::ByteLength() const;\nReturns the length of the wrapped data, in bytes.\n\n\nData\nvoid* Napi::ArrayBuffer::Data() const;\nReturns a pointer the wrapped data."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/working_with_javascript_values.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/working_with_javascript_values.html",
    "title": "3327 Research",
    "section": "",
    "text": "Working with JavaScript Values\nnode-addon-api provides a set of classes that allow to create and manage JavaScript object:\n\nFunction\n\nFunctionReference\n\nObjectWrap\n\nClassPropertyDescriptor\n\nBuffer\nArrayBuffer\nTypedArray\n\nTypedArrayOf\n\nDataView"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/bigint.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/bigint.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nNew\nstatic Napi::BigInt Napi::BigInt::New(Napi::Env env, int64_t value);\n\n[in] env: The environment in which to construct the Napi::BigInt object.\n[in] value: The value the JavaScript BigInt will contain\n\nThese APIs convert the C int64_t and uint64_t types to the JavaScript BigInt type.\nstatic Napi::BigInt Napi::BigInt::New(Napi::Env env,\n                  int sign_bit,\n                  size_t word_count,\n                  const uint64_t* words);\n\n[in] env: The environment in which to construct the Napi::BigInt object.\n[in] sign_bit: Determines if the resulting BigInt will be positive or negative.\n[in] word_count: The length of the words array.\n[in] words: An array of uint64_t little-endian 64-bit words.\n\nThis API converts an array of unsigned 64-bit words into a single BigInt value.\nThe resulting BigInt is calculated as: (–1)sign_bit (words[0] × (264)0 + words[1] × (264)1 + …)\nReturns a new JavaScript BigInt.\n\n\nConstructor\nNapi::BigInt();\nReturns a new empty JavaScript Napi::BigInt.\n\n\nInt64Value\nint64_t Napi::BitInt::Int64Value(bool* lossless) const;\n\n[out] lossless: Indicates whether the BigInt value was converted losslessly.\n\nReturns the C int64_t primitive equivalent of the given JavaScript BigInt. If needed it will truncate the value, setting lossless to false.\n\n\nUint64Value\nuint64_t Napi::BigInt::Uint64Value(bool* lossless) const;\n\n[out] lossless: Indicates whether the BigInt value was converted losslessly.\n\nReturns the C uint64_t primitive equivalent of the given JavaScript BigInt. If needed it will truncate the value, setting lossless to false.\n\n\nWordCount\nsize_t Napi::BigInt::WordCount() const;\nReturns the number of words needed to store this BigInt value.\n\n\nToWords\nvoid Napi::BigInt::ToWords(size_t* word_count, int* sign_bit, uint64_t* words);\n\n[out] sign_bit: Integer representing if the JavaScript BigInt is positive or negative.\n[in/out] word_count: Must be initialized to the length of the words array. Upon return, it will be set to the actual number of words that would be needed to store this BigInt.\n[out] words: Pointer to a pre-allocated 64-bit word array.\n\nReturns a single BigInt value into a sign bit, 64-bit little-endian array, and the number of elements in the array."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/version_management.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/version_management.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nGetNapiVersion\nRetrieves the highest N-API version supported by Node.js runtime.\nstatic uint32_t Napi::VersionManagement::GetNapiVersion(Env env);\n\n[in] env: The environment in which the API is invoked under.\n\nReturns the highest N-API version supported by Node.js runtime.\n\n\nGetNodeVersion\nRetrives information about Node.js version present on the system. All the information is stored in the napi_node_version structrue that is defined as shown below:\ntypedef struct {\n  uint32_t major;\n  uint32_t minor;\n  uint32_t patch;\n  const char* release;\n} napi_node_version;\nstatic const napi_node_version* Napi::VersionManagement::GetNodeVersion(Env env);\n\n[in] env: The environment in which the API is invoked under.\n\nReturns the structure a pointer to the structure napi_node_version populated by the version information of Node.js runtime."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/promises.html#promisedeferred-methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/promises.html#promisedeferred-methods",
    "title": "3327 Research",
    "section": "Promise::Deferred Methods",
    "text": "Promise::Deferred Methods\n\nFactory Method\nstatic Napi::Promise::Deferred Napi::Promise::Deferred::New(napi_env env);\n\n[in] env: The napi_env environment in which to create the Napi::Promise::Deferred object.\n\n\n\nConstructor\nNapi::Promise::Deferred(napi_env env);\n\n[in] env: The napi_env environment in which to construct the Napi::Promise::Deferred object.\n\n\n\nEnv\nNapi::Env Napi::Promise::Deferred::Env() const;\nReturns the Env environment this Napi::Promise::Deferred object is associated with.\n\n\nPromise\nNapi::Promise Napi::Promise::Deferred::Promise() const;\nReturns the Napi::Promise object held by the Napi::Promise::Deferred object.\n\n\nResolve\nvoid Napi::Promise::Deferred::Resolve(napi_value value) const;\nResolves the Napi::Promise object held by the Napi::Promise::Deferred object.\n\n[in] value: The N-API primitive value with which to resolve the Napi::Promise.\n\n\n\nReject\nvoid Napi::Promise::Deferred::Reject(napi_value value) const;\nRejects the Promise object held by the Napi::Promise::Deferred object.\n\n[in] value: The N-API primitive value with which to reject the Napi::Promise."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_context.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_context.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nConstructor\nCreates a new Napi::AsyncContext.\nexplicit Napi::AsyncContext::AsyncContext(napi_env env, const char* resource_name);\n\n[in] env: The environment in which to create the Napi::AsyncContext.\n[in] resource_name: Null-terminated strings that represents the identifier for the kind of resource that is being provided for diagnostic information exposed by the async_hooks API.\n\n\n\nConstructor\nCreates a new Napi::AsyncContext.\nexplicit Napi::AsyncContext::AsyncContext(napi_env env, const char* resource_name, const Napi::Object& resource);\n\n[in] env: The environment in which to create the Napi::AsyncContext.\n[in] resource_name: Null-terminated strings that represents the identifier for the kind of resource that is being provided for diagnostic information exposed by the async_hooks API.\n[in] resource: Object associated with the asynchronous operation that will be passed to possible async_hooks.\n\n\n\nDestructor\nThe Napi::AsyncContext to be destroyed.\nvirtual Napi::AsyncContext::~AsyncContext();\n\n\nEnv\nRequests the environment in which the async context has been initially created.\nNapi::Env Env() const;\nReturns the Napi::Env environment in which the async context has been created."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_context.html#operator",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_context.html#operator",
    "title": "3327 Research",
    "section": "Operator",
    "text": "Operator\nNapi::AsyncContext::operator napi_async_context() const;\nReturns the N-API napi_async_context wrapped by the Napi::AsyncContext object. This can be used to mix usage of the C N-API and node-addon-api."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_context.html#example",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/async_context.html#example",
    "title": "3327 Research",
    "section": "Example",
    "text": "Example\n#include \"napi.h\"\n\nvoid MakeCallbackWithAsyncContext(const Napi::CallbackInfo& info) {\n  Napi::Function callback = info[0].As<Napi::Function>();\n  Napi::Object resource = info[1].As<Napi::Object>();\n\n  // Creat a new async context instance.\n  Napi::AsyncContext context(info.Env(), \"async_context_test\", resource);\n\n  // Invoke the callback with the async context instance.\n  callback.MakeCallback(Napi::Object::New(info.Env()),\n      std::initializer_list<napi_value>{}, context);\n\n  // The async context instance is automatically destroyed here because it's\n  // block-scope like `Napi::HandleScope`.\n}"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/boolean.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/boolean.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nConstructor\nCreates a new empty instance of an Napi::Boolean object.\nNapi::Boolean::Boolean();\nReturns a new empty Napi::Boolean object.\n\n\nContructor\nCreates a new instance of the Napi::Boolean object.\nNapi::Boolean(napi_env env, napi_value value);\n\n[in] env: The napi_env environment in which to construct the Napi::Boolean object.\n[in] value: The napi_value which is a handle for a JavaScript Boolean.\n\nReturns a non-empty Napi::Boolean object.\n\n\nNew\nInitializes a new instance of the Napi::Boolean object.\nNapi::Boolean Napi::Boolean::New(napi_env env, bool value);\n\n[in] env: The napi_env environment in which to construct the Napi::Boolean object.\n[in] value: The primitive boolean value (true or false).\n\nReturns a new instance of the Napi::Boolean object.\n\n\nValue\nConverts a Napi::Boolean value to a boolean primitive.\nbool Napi::Boolean::Value() const;\nReturns the boolean primitive type of the corresponding Napi::Boolean object."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/boolean.html#operators",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/boolean.html#operators",
    "title": "3327 Research",
    "section": "Operators",
    "text": "Operators\n\noperator bool\nConverts a Napi::Boolean value to a boolean primitive.\nNapi::Boolean::operator bool() const;\nReturns the boolean primitive type of the corresponding Napi::Boolean object."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/object_lifetime_management.html#making-handle-lifespan-shorter-than-that-of-the-native-method",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/object_lifetime_management.html#making-handle-lifespan-shorter-than-that-of-the-native-method",
    "title": "3327 Research",
    "section": "Making handle lifespan shorter than that of the native method",
    "text": "Making handle lifespan shorter than that of the native method\nIt is often necessary to make the lifespan of handles shorter than the lifespan of a native method. For example, consider a native method that has a loop which creates a number of values and does something with each of the values, one at a time:\nfor (int i = 0; i < LOOP_MAX; i++) {\n  std::string name = std::string(\"inner-scope\") + std::to_string(i);\n  Napi::Value newValue = Napi::String::New(info.Env(), name.c_str());\n  // do something with newValue\n};\nThis would result in a large number of handles being created, consuming substantial resources. In addition, even though the native code could only use the most recently created value, all of the previously created values would also be kept alive since they all share the same scope.\nTo handle this case, node-addon-api provides the ability to establish a new ‘scope’ to which newly created handles will be associated. Once those handles are no longer required, the scope can be deleted and any handles associated with the scope are invalidated. The Napi::HandleScope and Napi::EscapableHandleScope classes are provided by node-addon-api for creating additional scopes.\nnode-addon-api only supports a single nested hierarchy of scopes. There is only one active scope at any time, and all new handles will be associated with that scope while it is active. Scopes must be deleted in the reverse order from which they are opened. In addition, all scopes created within a native method must be deleted before returning from that method. Since Napi::HandleScopes are typically stack allocated the compiler will take care of deletion, however, care must be taken to create the scope in the right place such that you achieve the desired lifetime.\nTaking the earlier example, creating a Napi::HandleScope in the innner loop would ensure that at most a single new value is held alive throughout the execution of the loop:\nfor (int i = 0; i < LOOP_MAX; i++) {\n  Napi::HandleScope scope(info.Env());\n  std::string name = std::string(\"inner-scope\") + std::to_string(i);\n  Napi::Value newValue = Napi::String::New(info.Env(), name.c_str());\n  // do something with neValue\n};\nWhen nesting scopes, there are cases where a handle from an inner scope needs to live beyond the lifespan of that scope. node-addon-api provides the Napi::EscapableHandleScope with the Escape method in order to support this case. An escapable scope allows one object to be ‘promoted’ so that it ‘escapes’ the current scope and the lifespan of the handle changes from the current scope to that of the outer scope. The Escape method can only be called once for a given Napi::EscapableHandleScope."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/object_reference.html#example",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/object_reference.html#example",
    "title": "3327 Research",
    "section": "Example",
    "text": "Example\n#include <napi.h>\n\nusing namescape Napi;\n\nvoid Init(Env env) {\n\n    // Create an empty ObjectReference that has an initial reference count of 2.\n    ObjectReference obj_ref = Reference<Object>::New(Object::New(env), 2);\n\n    // Set a couple of different properties on the reference.\n    obj_ref.Set(\"hello\", String::New(env, \"world\"));\n    obj_ref.Set(42, \"The Answer to Life, the Universe, and Everything\");\n\n    // Get the properties using the keys.\n    Value val1 = obj_ref.Get(\"hello\");\n    Value val2 = obj_ref.Get(42);\n}"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/object_reference.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/object_reference.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nInitialization\nstatic Napi::ObjectReference Napi::ObjectReference::New(const Napi::Object& value, uint32_t initialRefcount = 0);\n\n[in] value: The Napi::Object which is to be referenced.\n[in] initialRefcount: The initial reference count.\n\nReturns the newly created reference.\nstatic Napi::ObjectReference Napi::Weak(const Napi::Object& value);\nCreates a “weak” reference to the value, in that the initial count of number of references is set to 0.\n\n[in] value: The value which is to be referenced.\n\nReturns the newly created reference.\nstatic Napi::ObjectReference Napi::Persistent(const Napi::Object& value);\nCreates a “persistent” reference to the value, in that the initial count of number of references is set to 1.\n\n[in] value: The value which is to be referenced.\n\nReturns the newly created reference.\n\n\nEmpty Constructor\nNapi::ObjectReference::ObjectReference();\nReturns a new empty Napi::ObjectReference instance.\n\n\nConstructor\nNapi::ObjectReference::ObjectReference(napi_env env, napi_value value);\n\n[in] env: The napi_env environment in which to construct the Napi::ObjectReference object.\n[in] value: The N-API primitive value to be held by the Napi::ObjectReference.\n\nReturns the newly created reference.\n\n\nSet\nvoid Napi::ObjectReference::Set(___ key, ___ value);\n\n[in] key: The name for the property being assigned.\n[in] value: The value being assigned to the property.\n\nThe key can be any of the following types: - const char* - const std::string - uint32_t\nThe value can be any of the following types: - napi_value - Napi::Value - const char* - bool - double\n\n\nGet\nNapi::Value Napi::ObjectReference::Get(___ key);\n\n[in] key: The name of the property to return the value for.\n\nReturns the Napi::Value associated with the key property. Returns NULL if no such key exists.\nThe key can be any of the following types: - const char* - const std::string - uint32_t"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/class_property_descriptor.html#example",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/class_property_descriptor.html#example",
    "title": "3327 Research",
    "section": "Example",
    "text": "Example\n#include <napi.h>\n\nclass Example : public Napi::ObjectWrap<Example> {\n  public:\n    static Napi::Object Init(Napi::Env env, Napi::Object exports);\n    Example(const Napi::CallbackInfo &info);\n\n  private:\n    static Napi::FunctionReference constructor;\n    double _value;\n    Napi::Value GetValue(const Napi::CallbackInfo &info);\n    void SetValue(const Napi::CallbackInfo &info, const Napi::Value &value);\n};\n\nNapi::Object Example::Init(Napi::Env env, Napi::Object exports) {\n    Napi::Function func = DefineClass(env, \"Example\", {\n        // Register a class instance accessor with getter and setter functions.\n        InstanceAccessor(\"value\", &Example::GetValue, &Example::SetValue),\n        // We can also register a readonly accessor by passing nullptr as the setter.\n        InstanceAccessor(\"readOnlyProp\", &Example::GetValue, nullptr)\n    });\n\n    constructor = Napi::Persistent(func);\n    constructor.SuppressDestruct();\n    exports.Set(\"Example\", func);\n\n    return exports;\n}\n\nExample::Example(const Napi::CallbackInfo &info) : Napi::ObjectWrap<Example>(info) {\n    Napi::Env env = info.Env();\n    // ...\n    Napi::Number value = info[0].As<Napi::Number>();\n    this->_value = value.DoubleValue();\n}\n\nNapi::FunctionReference Example::constructor;\n\nNapi::Value Example::GetValue(const Napi::CallbackInfo &info) {\n    Napi::Env env = info.Env();\n    return Napi::Number::New(env, this->_value);\n}\n\nvoid Example::SetValue(const Napi::CallbackInfo &info, const Napi::Value &value) {\n    Napi::Env env = info.Env();\n    // ...\n    Napi::Number arg = value.As<Napi::Number>();\n    this->_value = arg.DoubleValue();\n}\n\n// Initialize native add-on\nNapi::Object Init (Napi::Env env, Napi::Object exports) {\n    Example::Init(env, exports);\n    return exports;\n}\n\n// Register and initialize native add-on\nNODE_API_MODULE(NODE_GYP_MODULE_NAME, Init)\nThe above code can be used from JavaScript as follows:\n'use strict';\n\nconst { Example } = require('bindings')('addon');\n\nconst example = new Example(11);\nconsole.log(example.value);\n// It prints 11\nexample.value = 19;\nconsole.log(example.value);\n// It prints 19\nexample.readOnlyProp = 500;\nconsole.log(example.readOnlyProp);\n// Unchanged. It prints 19"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/class_property_descriptor.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/class_property_descriptor.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nConstructor\nCreates new instance of Napi::ClassPropertyDescriptor descriptor object.\nNapi::ClassPropertyDescriptor(napi_property_descriptor desc) : _desc(desc) {}\n\n[in] desc: The napi_property_descriptor\n\nReturns new instance of Napi::ClassPropertyDescriptor that is used as property descriptor inside the Napi::ObjectWrap<T> class.\n\n\nOperator\noperator napi_property_descriptor&() { return _desc; }\nReturns the original N-API napi_property_descriptor wrapped inside the Napi::ClassPropertyDescriptor\noperator const napi_property_descriptor&() const { return _desc; }\nReturns the original N-API napi_property_descriptor wrapped inside the Napi::ClassPropertyDescriptor"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/number.html#methods",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/number.html#methods",
    "title": "3327 Research",
    "section": "Methods",
    "text": "Methods\n\nConstructor\nCreates a new empty instance of a Napi::Number object.\nNapi::Number();\nReturns a new empty Napi::Number object.\n\n\nContructor\nCreates a new instance of a Napi::Number object.\nNapi::Number(napi_env env, napi_value value);\n\n[in] env: The napi_env environment in which to construct the Napi::Number object.\n[in] value: The JavaScript value holding a number.\n\nReturns a non-empty Napi::Number object.\n### New\nCreates a new instance of a Napi::Number object.\nNapi::Number Napi::Number::New(napi_env env, double value);\n\n[in] env: The napi_env environment in which to construct the Napi::Number object.\n[in] value: The C++ primitive from which to instantiate the Napi::Number.\n\nCreates a new instance of a Napi::Number object.\n\n\nInt32Value\nConverts a Napi::Number value to a int32_t primitive type.\nNapi::Number::Int32Value() const;\nReturns the int32_t primitive type of the corresponding Napi::Number object.\n\n\nUint32Value\nConverts a Napi::Number value to a uint32_t primitive type.\nNapi::Number::Uint32Value() const;\nReturns the uint32_t primitive type of the corresponding Napi::Number object.\n\n\nInt64Value\nConverts a Napi::Number value to a int64_t primitive type.\nNapi::Number::Int64Value() const;\nReturns the int64_t primitive type of the corresponding Napi::Number object.\n\n\nFloatValue\nConverts a Napi::Number value to a float primitive type.\nNapi::Number::FloatValue() const;\nReturns the float primitive type of the corresponding Napi::Number object.\n\n\nDoubleValue\nConverts a Napi::Number value to a double primitive type.\nNapi::Number::DoubleValue() const;\nReturns the double primitive type of the corresponding Napi::Number object."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/number.html#operators",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-addon-api/doc/number.html#operators",
    "title": "3327 Research",
    "section": "Operators",
    "text": "Operators\nThe Napi::Number class contains a set of operators to easily cast JavaScript Number object to one of the following primitive types:\n\nint32_t\nuint32_t\nint64_t\nfloat\ndouble\n\n\noperator int32_t\nConverts a Napi::Number value to a int32_t primitive.\nNapi::Number::operator int32_t() const;\nReturns the int32_t primitive type of the corresponding Napi::Number object.\n\n\noperator uint32_t\nConverts a Napi::Number value to a uint32_t primitive type.\nNapi::Number::operator uint32_t() const;\nReturns the uint32_t primitive type of the corresponding Napi::Number object.\n\n\noperator int64_t\nConverts a Napi::Number value to a int64_t primitive type.\nNapi::Number::operator int64_t() const;\nReturns the int64_t primitive type of the corresponding Napi::Number object.\n\n\noperator float\nConverts a Napi::Number value to a float primitive type.\nNapi::Number::operator float() const;\nReturns the float primitive type of the corresponding Napi::Number object.\n\n\noperator double\nConverts a Napi::Number value to a double primitive type.\nNapi::Number::operator double() const;\nReturns the double primitive type of the corresponding Napi::Number object.\n\n\nExample\nThe following shows an example of casting a number to an uint32_t value.\nuint32_t operatorVal = Napi::Number::New(Env(), 10.0); // Number to unsigned 32 bit integer\n// or\nauto instanceVal = info[0].As<Napi::Number>().Uint32Value();"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ms/license.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ms/license.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright (c) 2016 Zeit, Inc.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ms/readme.html#examples",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ms/readme.html#examples",
    "title": "3327 Research",
    "section": "Examples",
    "text": "Examples\nms('2 days')  // 172800000\nms('1d')      // 86400000\nms('10h')     // 36000000\nms('2.5 hrs') // 9000000\nms('2h')      // 7200000\nms('1m')      // 60000\nms('5s')      // 5000\nms('1y')      // 31557600000\nms('100')     // 100\nms('-3 days') // -259200000\nms('-1h')     // -3600000\nms('-200')    // -200\n\nConvert from Milliseconds\nms(60000)             // \"1m\"\nms(2 * 60000)         // \"2m\"\nms(-3 * 60000)        // \"-3m\"\nms(ms('10 hours'))    // \"10h\"\n\n\nTime Format Written-Out\nms(60000, { long: true })             // \"1 minute\"\nms(2 * 60000, { long: true })         // \"2 minutes\"\nms(-3 * 60000, { long: true })        // \"-3 minutes\"\nms(ms('10 hours'), { long: true })    // \"10 hours\""
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ms/readme.html#features",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ms/readme.html#features",
    "title": "3327 Research",
    "section": "Features",
    "text": "Features\n\nWorks both in Node.js and in the browser\nIf a number is supplied to ms, a string with a unit is returned\nIf a string that contains the number is supplied, it returns it as a number (e.g.: it returns 100 for '100')\nIf you pass a string with a number and a valid unit, the number of equivalent milliseconds is returned"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ms/readme.html#related-packages",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ms/readme.html#related-packages",
    "title": "3327 Research",
    "section": "Related Packages",
    "text": "Related Packages\n\nms.macro - Run ms as a macro at build-time."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ms/readme.html#caught-a-bug",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ms/readme.html#caught-a-bug",
    "title": "3327 Research",
    "section": "Caught a Bug?",
    "text": "Caught a Bug?\n\nFork this repository to your own GitHub account and then clone it to your local device\nLink the package to the global module directory: npm link\nWithin the module you want to test your local development instance of ms, just link it to the dependencies: npm link ms. Instead of the default one from npm, Node.js will now use your clone of ms!\n\nAs always, you can run the tests using: npm test"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/call-bind/CHANGELOG.html#v1.0.2---2021-01-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/call-bind/CHANGELOG.html#v1.0.2---2021-01-11",
    "title": "3327 Research",
    "section": "v1.0.2 - 2021-01-11",
    "text": "v1.0.2 - 2021-01-11\n\nCommits\n\n[Fix] properly include the receiver in the bound length dbae7bc"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/call-bind/CHANGELOG.html#v1.0.1---2021-01-08",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/call-bind/CHANGELOG.html#v1.0.1---2021-01-08",
    "title": "3327 Research",
    "section": "v1.0.1 - 2021-01-08",
    "text": "v1.0.1 - 2021-01-08\n\nCommits\n\n[Tests] migrate tests to Github Actions b6db284\n[meta] do not publish github action workflow files ec7fe46\n[Fix] preserve original function’s length when possible adbceaa\n[Tests] gather coverage data on every job d69e23c\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, tape 2fd3586\n[Deps] update get-intrinsic f23e931\n[Deps] update get-intrinsic 72d9f44\n[meta] fix FUNDING.yml e723573\n[eslint] ignore coverage output 15e76d2\n[meta] add Automatic Rebase and Require Allow Edits workflows 8fa4dab"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/call-bind/CHANGELOG.html#v1.0.0---2020-10-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/call-bind/CHANGELOG.html#v1.0.0---2020-10-30",
    "title": "3327 Research",
    "section": "v1.0.0 - 2020-10-30",
    "text": "v1.0.0 - 2020-10-30\n\nCommits\n\nInitial commit 306cf98\nTests e10d0bb\nImplementation 43852ed\nnpm init 408f860\n[meta] add Automatic Rebase and Require Allow Edits workflows fb349b2\n[meta] add auto-changelog c4001fc\n[meta] add “funding”; create FUNDING.yml d4d6d29\n[Tests] add npm run lint dedfb98\nOnly apps should have lockfiles 54ac776\n[meta] add safe-publish-latest 9ea8e43"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#unreleased",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#unreleased",
    "title": "3327 Research",
    "section": "Unreleased",
    "text": "Unreleased"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "16.0.0 (2022-02-02)",
    "text": "16.0.0 (2022-02-02)\n\nAdded\n\nBreaking: Backtick support 🎉 (template literals). If you had values containing the backtick character, please quote those values with either single or double quotes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "15.0.1 (2022-02-02)",
    "text": "15.0.1 (2022-02-02)\n\nChanged\n\nProperly parse empty single or double quoted values 🐞 (#614)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "15.0.0 (2022-01-31)",
    "text": "15.0.0 (2022-01-31)\nv15.0.0 is a major new release with some important breaking changes.\n\nAdded\n\nBreaking: Multiline parsing support (just works. no need for the flag.)\n\n\n\nChanged\n\nBreaking: # marks the beginning of a comment (UNLESS the value is wrapped in quotes. Please update your .env files to wrap in quotes any values containing #. For example: SECRET_HASH=\"something-with-a-#-hash\").\n\n..Understandably, (as some teams have noted) this is tedious to do across the entire team. To make it less tedious, we recommend using dotenv cli going forward. It’s an optional plugin that will keep your .env files in sync between machines, environments, or team members.\n\n\nRemoved\n\nBreaking: Remove multiline option (just works out of the box now. no need for the flag.)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "14.3.2 (2022-01-25)",
    "text": "14.3.2 (2022-01-25)\n\nChanged\n\nPreserve backwards compatibility on values containing # 🐞 (#603)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "14.3.1 (2022-01-25)",
    "text": "14.3.1 (2022-01-25)\n\nChanged\n\nPreserve backwards compatibility on exports by re-introducing the prior in-place exports 🐞 (#606)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "14.3.0 (2022-01-24)",
    "text": "14.3.0 (2022-01-24)\n\nAdded\n\nAdd multiline option 🎉 (#486)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "14.2.0 (2022-01-17)",
    "text": "14.2.0 (2022-01-17)\n\nAdded\n\nAdd dotenv_config_override cli option\nAdd DOTENV_CONFIG_OVERRIDE command line env option"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "14.1.1 (2022-01-17)",
    "text": "14.1.1 (2022-01-17)\n\nAdded\n\nAdd React gotcha to FAQ on README"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "14.1.0 (2022-01-17)",
    "text": "14.1.0 (2022-01-17)\n\nAdded\n\nAdd override option 🎉 (#595)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "14.0.1 (2022-01-16)",
    "text": "14.0.1 (2022-01-16)\n\nAdded\n\nLog error on failure to load .env file (#594)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "14.0.0 (2022-01-16)",
    "text": "14.0.0 (2022-01-16)\n\nAdded\n\nBreaking: Support inline comments for the parser 🎉 (#568)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "13.0.1 (2022-01-16)",
    "text": "13.0.1 (2022-01-16)\n\nChanged\n\nHide comments and newlines from debug output (#404)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "13.0.0 (2022-01-16)",
    "text": "13.0.0 (2022-01-16)\n\nAdded\n\nBreaking: Add type file for config.js (#539)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "12.0.4 (2022-01-16)",
    "text": "12.0.4 (2022-01-16)\n\nChanged\n\nREADME updates\nMinor order adjustment to package json format"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "12.0.3 (2022-01-15)",
    "text": "12.0.3 (2022-01-15)\n\nChanged\n\nSimplified jsdoc for consistency across editors"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "12.0.2 (2022-01-15)",
    "text": "12.0.2 (2022-01-15)\n\nChanged\n\nImprove embedded jsdoc type documentation"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "12.0.1 (2022-01-15)",
    "text": "12.0.1 (2022-01-15)\n\nChanged\n\nREADME updates and clarifications"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "12.0.0 (2022-01-15)",
    "text": "12.0.0 (2022-01-15)\n\nRemoved\n\nBreaking: drop support for Flow static type checker (#584)\n\n\n\nChanged\n\nMove types/index.d.ts to lib/main.d.ts (#585)\nTypescript cleanup (#587)\nExplicit typescript inclusion in package.json (#566)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "11.0.0 (2022-01-11)",
    "text": "11.0.0 (2022-01-11)\n\nChanged\n\nBreaking: drop support for Node v10 (#558)\nPatch debug option (#550)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "10.0.0 (2021-05-20)",
    "text": "10.0.0 (2021-05-20)\n\nAdded\n\nAdd generic support to parse function\nAllow for import “dotenv/config.js”\nAdd support to resolve home directory in path via ~"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "9.0.2 (2021-05-10)",
    "text": "9.0.2 (2021-05-10)\n\nChanged\n\nSupport windows newlines with debug mode"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "9.0.1 (2021-05-08)",
    "text": "9.0.1 (2021-05-08)\n\nChanged\n\nUpdates to README"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "9.0.0 (2021-05-05)",
    "text": "9.0.0 (2021-05-05)\n\nChanged\n\nBreaking: drop support for Node v8"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-23",
    "title": "3327 Research",
    "section": "8.6.0 (2021-05-05)",
    "text": "8.6.0 (2021-05-05)\n\nAdded\n\ndefine package.json in exports"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-24",
    "title": "3327 Research",
    "section": "8.5.1 (2021-05-05)",
    "text": "8.5.1 (2021-05-05)\n\nChanged\n\nupdated dev dependencies via npm audit"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-25",
    "title": "3327 Research",
    "section": "8.5.0 (2021-05-05)",
    "text": "8.5.0 (2021-05-05)\n\nAdded\n\nallow for import \"dotenv/config\""
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-26",
    "title": "3327 Research",
    "section": "8.4.0 (2021-05-05)",
    "text": "8.4.0 (2021-05-05)\n\nChanged\n\npoint to exact types file to work with VS Code"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-27",
    "title": "3327 Research",
    "section": "8.3.0 (2021-05-05)",
    "text": "8.3.0 (2021-05-05)\n\nChanged\n\nBreaking: drop support for Node v8 (mistake to be released as minor bump. later bumped to 9.0.0. see above.)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-28",
    "title": "3327 Research",
    "section": "8.2.0 (2019-10-16)",
    "text": "8.2.0 (2019-10-16)\n\nAdded\n\nTypeScript types"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-29",
    "title": "3327 Research",
    "section": "8.1.0 (2019-08-18)",
    "text": "8.1.0 (2019-08-18)\n\nChanged\n\nBreaking: drop support for Node v6 (#392)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-31",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-31",
    "title": "3327 Research",
    "section": "7.0.0 - 2019-03-12",
    "text": "7.0.0 - 2019-03-12\n\nFixed\n\nFix removing unbalanced quotes (#376)\n\n\n\nRemoved\n\nRemoved load alias for config for consistency throughout code and documentation."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-32",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-32",
    "title": "3327 Research",
    "section": "6.2.0 - 2018-12-03",
    "text": "6.2.0 - 2018-12-03\n\nAdded\n\nSupport preload configuration via environment variables (#351)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-33",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-33",
    "title": "3327 Research",
    "section": "6.1.0 - 2018-10-08",
    "text": "6.1.0 - 2018-10-08\n\nAdded\n\ndebug option for config and parse methods will turn on logging"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-34",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-34",
    "title": "3327 Research",
    "section": "6.0.0 - 2018-06-02",
    "text": "6.0.0 - 2018-06-02\n\nChanged\n\nBreaking: drop support for Node v4 (#304)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-35",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-35",
    "title": "3327 Research",
    "section": "5.0.0 - 2018-01-29",
    "text": "5.0.0 - 2018-01-29\n\nAdded\n\nTesting against Node v8 and v9\nDocumentation on trim behavior of values\nDocumentation on how to use with import\n\n\n\nChanged\n\nBreaking: default path is now path.resolve(process.cwd(), '.env')\nBreaking: does not write over keys already in process.env if the key has a falsy value\nusing const and let instead of var\n\n\n\nRemoved\n\nTesting against Node v7"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-36",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-36",
    "title": "3327 Research",
    "section": "4.0.0 - 2016-12-23",
    "text": "4.0.0 - 2016-12-23\n\nChanged\n\nReturn Object with parsed content or error instead of false (#165).\n\n\n\nRemoved\n\nverbose option removed in favor of returning result."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-37",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-37",
    "title": "3327 Research",
    "section": "3.0.0 - 2016-12-20",
    "text": "3.0.0 - 2016-12-20\n\nAdded\n\nverbose option will log any error messages. Off by default.\nparses email addresses correctly\nallow importing config method directly in ES6\n\n\n\nChanged\n\nSuppress error messages by default (#154)\nIgnoring more files for NPM to make package download smaller\n\n\n\nFixed\n\nFalse positive test due to case-sensitive variable (#124)\n\n\n\nRemoved\n\nsilent option removed in favor of verbose"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-38",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-38",
    "title": "3327 Research",
    "section": "2.0.0 - 2016-01-20",
    "text": "2.0.0 - 2016-01-20\n\nAdded\n\nCHANGELOG to “make it easier for users and contributors to see precisely what notable changes have been made between each release”. Linked to from README\nLICENSE to be more explicit about what was defined in package.json. Linked to from README\nTesting nodejs v4 on travis-ci\nadded examples of how to use dotenv in different ways\nreturn parsed object on success rather than boolean true\n\n\n\nChanged\n\nREADME has shorter description not referencing ruby gem since we don’t have or want feature parity\n\n\n\nRemoved\n\nVariable expansion and escaping so environment variables are encouraged to be fully orthogonal"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-39",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-39",
    "title": "3327 Research",
    "section": "1.2.0 - 2015-06-20",
    "text": "1.2.0 - 2015-06-20\n\nAdded\n\nPreload hook to require dotenv without including it in your code\n\n\n\nChanged\n\nclarified license to be “BSD-2-Clause” in package.json\n\n\n\nFixed\n\nretain spaces in string vars"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-40",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-40",
    "title": "3327 Research",
    "section": "1.1.0 - 2015-03-31",
    "text": "1.1.0 - 2015-03-31\n\nAdded\n\nSilent option to silence console.log when .env missing"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-41",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/dotenv/CHANGELOG.html#section-41",
    "title": "3327 Research",
    "section": "1.0.0 - 2015-03-13",
    "text": "1.0.0 - 2015-03-13\n\nRemoved\n\nsupport for multiple .env files. should always use one .env file for the current environment"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/escape-string-regexp/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/escape-string-regexp/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install --save escape-string-regexp"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/escape-string-regexp/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/escape-string-regexp/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst escapeStringRegexp = require('escape-string-regexp');\n\nconst escapedString = escapeStringRegexp('how much $ for a unicorn?');\n//=> 'how much \\$ for a unicorn\\?'\n\nnew RegExp(escapedString);"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/escape-string-regexp/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/escape-string-regexp/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/create-require/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/create-require/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "1.1.0 (2020-11-21)",
    "text": "1.1.0 (2020-11-21)\n\nFeatures\n\nfallback to process.cwd() if no filename provided either (ae5e0d6)\n\n\n\n1.0.2 (2020-06-12)\n\n\nBug Fixes\n\nuse fake path if filename is directory (c8e0983)\n\n\n\n1.0.1 (2020-06-06)\n\n\nBug Fixes\n\ntypes: specify types field (2c06464)\n\n\n\n0.0.1 (2020-05-04)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-tostringtag/CHANGELOG.html#v1.0.0---2021-08-05",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-tostringtag/CHANGELOG.html#v1.0.0---2021-08-05",
    "title": "3327 Research",
    "section": "v1.0.0 - 2021-08-05",
    "text": "v1.0.0 - 2021-08-05\n\nCommits\n\nTests 6b6f573\nInitial commit 2f8190e\n[meta] do not publish github action workflow files 6e08cc4\nreadme 94bed6c\nnpm init be67840\nImplementation c4914ec\n[meta] use auto-changelog 4aaf768\nOnly apps should have lockfiles bc4d99e\n[meta] add safe-publish-latest 6523c05"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-json-comments/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-json-comments/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install --save strip-json-comments"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-json-comments/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-json-comments/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst json = '{/*rainbows*/\"unicorn\":\"cake\"}';\n\nJSON.parse(stripJsonComments(json));\n//=> {unicorn: 'cake'}"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-json-comments/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-json-comments/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nstripJsonComments(input, options)\n\ninput\nType: string\nAccepts a string with JSON and returns a string without comments.\n\n\noptions\n\nwhitespace\nType: boolean\nDefault: true\nReplace comments with whitespace instead of stripping them entirely."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-json-comments/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-json-comments/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nstrip-json-comments-cli - CLI for this module\nstrip-css-comments - Strip comments from CSS"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-json-comments/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-json-comments/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-util/node_modules/bn.js/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-util/node_modules/bn.js/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "5.2.0 / 2021-02-23",
    "text": "5.2.0 / 2021-02-23\n\nfix: Buffer not using global in browser (#260)\nFix LE constructor for HEX (#265)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-util/node_modules/bn.js/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-util/node_modules/bn.js/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "5.1.3 / 2020-08-14",
    "text": "5.1.3 / 2020-08-14\n\nAdd support for defined but not implemented Symbol.for (#252)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-util/node_modules/bn.js/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-util/node_modules/bn.js/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "5.1.2 / 2020-05-20",
    "text": "5.1.2 / 2020-05-20\n\nFix BN v5/v4 interoperability issue (#249)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-util/node_modules/bn.js/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-util/node_modules/bn.js/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "5.1.1 / 2019-12-24",
    "text": "5.1.1 / 2019-12-24\n\nTemporary workaround for BN#_move (#236)\nAdd eslintrc instead config in package.json (#237)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-util/node_modules/bn.js/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-util/node_modules/bn.js/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "5.1.0 / 2019-12-23",
    "text": "5.1.0 / 2019-12-23\n\nBenchmark for BigInt (#226)\nAdd documentation for max/min (#232)\nUpdate BN#inspect for Symbols (#225)\nImprove performance of toArrayLike (#222)\ntemporary disable jumboMulTo in BN#mulTo (#221)\noptimize toBitArray function (#212)\nfix iaddn sign issue (#216)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-util/node_modules/bn.js/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-util/node_modules/bn.js/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "5.0.0 / 2019-07-04",
    "text": "5.0.0 / 2019-07-04\n\ntravis: update node versions (#205)\nRefactor buffer constructor (#200)\nlib: fix for negative numbers: imuln, modrn, idivn (#185)\nbn: fix Red#imod (#178)\ncheck unexpected high bits for invalid characters (#173)\ndocument support very large integers (#158)\nonly define toBuffer if Buffer is defined (#172)\nlib: better validation of string input (#151)\ntests: reject decimal input in constructor (#91)\nbn: make .strip() an internal method (#105)\nlib: deprecate .modn() introduce .modrn() (#112 #129 #130)\nbn: don’t accept invalid characters (#141)\npackage: use files insteadof .npmignore (#152)\nbn: improve allocation speed for buffers (#167)\ntoJSON to default to interoperable hex (length % 2) (#164)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethers/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethers/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/type-fest/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/type-fest/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install type-fest\nRequires TypeScript >=3.4"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/type-fest/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/type-fest/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nimport {Except} from 'type-fest';\n\ntype Foo = {\n    unicorn: string;\n    rainbow: boolean;\n};\n\ntype FooWithoutRainbow = Except<Foo, 'rainbow'>;\n//=> {unicorn: string}"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/type-fest/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/type-fest/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\nClick the type names for complete docs.\n\nBasic\n\nPrimitive - Matches any primitive value.\nClass - Matches a class constructor.\nTypedArray - Matches any typed array, like Uint8Array or Float64Array.\nJsonObject - Matches a JSON object.\nJsonArray - Matches a JSON array.\nJsonValue - Matches any valid JSON value.\nObservableLike - Matches a value that is like an Observable.\n\n\n\nUtilities\n\nExcept - Create a type from an object type without certain keys. This is a stricter version of Omit.\nMutable - Create a type that strips readonly from all or some of an object’s keys. The inverse of Readonly<T>.\nMerge - Merge two types into a new type. Keys of the second type overrides keys of the first type.\nMergeExclusive - Create a type that has mutually exclusive keys.\nRequireAtLeastOne - Create a type that requires at least one of the given keys.\nRequireExactlyOne - Create a type that requires exactly a single key of the given keys and disallows more.\nPartialDeep - Create a deeply optional version of another type. Use Partial<T> if you only need one level deep.\nReadonlyDeep - Create a deeply immutable version of an object/Map/Set/Array type. Use Readonly<T> if you only need one level deep.\nLiteralUnion - Create a union type by combining primitive types and literal types without sacrificing auto-completion in IDEs for the literal type part of the union. Workaround for Microsoft/TypeScript#29729.\nPromisable - Create a type that represents either the value or the value wrapped in PromiseLike.\nOpaque - Create an opaque type.\nSetOptional - Create a type that makes the given keys optional.\nSetRequired - Create a type that makes the given keys required.\nValueOf - Create a union of the given object’s values, and optionally specify which keys to get the values from.\nPromiseValue - Returns the type that is wrapped inside a Promise.\nAsyncReturnType - Unwrap the return type of a function that returns a Promise.\nConditionalKeys - Extract keys from a shape where values extend the given Condition type.\nConditionalPick - Like Pick except it selects properties from a shape where the values extend the given Condition type.\nConditionalExcept - Like Omit except it removes properties from a shape where the values extend the given Condition type.\nUnionToIntersection - Convert a union type to an intersection type.\nStringified - Create a type with the keys of the given type changed to string type.\nFixedLengthArray - Create a type that represents an array of the given type and length.\nIterableElement - Get the element type of an Iterable/AsyncIterable. For example, an array or a generator.\nEntry - Create a type that represents the type of an entry of a collection.\nEntries - Create a type that represents the type of the entries of a collection.\nSetReturnType - Create a function type with a return type of your choice and the same parameters as the given function type.\nAsyncify - Create an async version of the given function type.\n\n\n\nTemplate literal types\nNote: These require TypeScript 4.1 or newer.\n\nCamelCase – Convert a string literal to camel-case (fooBar).\nKebabCase – Convert a string literal to kebab-case (foo-bar).\nPascalCase – Converts a string literal to pascal-case (FooBar)\nSnakeCase – Convert a string literal to snake-case (foo_bar).\nDelimiterCase – Convert a string literal to a custom string delimiter casing.\nGet - Get a deeply-nested property from an object using a key path, like Lodash’s .get() function.\n\n\n\nMiscellaneous\n\nPackageJson - Type for npm’s package.json file.\nTsConfigJson - Type for TypeScript’s tsconfig.json file (TypeScript 3.7)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/type-fest/readme.html#declined-types",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/type-fest/readme.html#declined-types",
    "title": "3327 Research",
    "section": "Declined types",
    "text": "Declined types\nIf we decline a type addition, we will make sure to document the better solution here.\n\nDiff and Spread - The PR author didn’t provide any real-world use-cases and the PR went stale. If you think this type is useful, provide some real-world use-cases and we might reconsider.\nDictionary - You only save a few characters (Dictionary<number> vs Record<string, number>) from Record, which is more flexible and well-known. Also, you shouldn’t use an object as a dictionary. We have Map in JavaScript now.\nSubType - The type is powerful, but lacks good use-cases and is prone to misuse.\nExtractProperties and ExtractMethods - The types violate the single responsibility principle. Instead, refine your types into more granular type hierarchies."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/type-fest/readme.html#tips",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/type-fest/readme.html#tips",
    "title": "3327 Research",
    "section": "Tips",
    "text": "Tips\n\nBuilt-in types\nThere are many advanced types most users don’t know about.\n\nPartial<T> - Make all properties in T optional.\n\n\nExample\n\nPlayground\n  interface NodeConfig {\n          appName: string;\n          port: number;\n  }\n\n  class NodeAppBuilder {\n          private configuration: NodeConfig = {\n                  appName: 'NodeApp',\n                  port: 3000\n          };\n\n          private updateConfig<Key extends keyof NodeConfig>(key: Key, value: NodeConfig[Key]) {\n                  this.configuration[key] = value;\n          }\n\n          config(config: Partial<NodeConfig>) {\n                  type NodeConfigKey = keyof NodeConfig;\n\n                  for (const key of Object.keys(config) as NodeConfigKey[]) {\n                          const updateValue = config[key];\n\n                          if (updateValue === undefined) {\n                                  continue;\n                          }\n\n                          this.updateConfig(key, updateValue);\n                  }\n\n                  return this;\n          }\n  }\n\n  // `Partial<NodeConfig>`` allows us to provide only a part of the\n  // NodeConfig interface.\n  new NodeAppBuilder().config({appName: 'ToDoApp'});\n\nRequired<T> - Make all properties in T required.\n\n\nExample\n\nPlayground\n  interface ContactForm {\n          email?: string;\n          message?: string;\n  }\n\n  function submitContactForm(formData: Required<ContactForm>) {\n          // Send the form data to the server.\n  }\n\n  submitContactForm({\n          email: 'ex@mple.com',\n          message: 'Hi! Could you tell me more about…',\n  });\n\n  // TypeScript error: missing property 'message'\n  submitContactForm({\n          email: 'ex@mple.com',\n  });\n\nReadonly<T> - Make all properties in T readonly.\n\n\nExample\n\nPlayground\n  enum LogLevel {\n          Off,\n          Debug,\n          Error,\n          Fatal\n  };\n\n  interface LoggerConfig {\n          name: string;\n          level: LogLevel;\n  }\n\n  class Logger {\n          config: Readonly<LoggerConfig>;\n\n          constructor({name, level}: LoggerConfig) {\n                  this.config = {name, level};\n                  Object.freeze(this.config);\n          }\n  }\n\n  const config: LoggerConfig = {\n      name: 'MyApp',\n      level: LogLevel.Debug\n  };\n\n  const logger = new Logger(config);\n\n  // TypeScript Error: cannot assign to read-only property.\n  logger.config.level = LogLevel.Error;\n\n  // We are able to edit config variable as we please.\n  config.level = LogLevel.Error;\n\nPick<T, K> - From T, pick a set of properties whose keys are in the union K.\n\n\nExample\n\nPlayground\n  interface Article {\n          title: string;\n          thumbnail: string;\n          content: string;\n  }\n\n  // Creates new type out of the `Article` interface composed\n  // from the Articles' two properties: `title` and `thumbnail`.\n  // `ArticlePreview = {title: string; thumbnail: string}`\n  type ArticlePreview = Pick<Article, 'title' | 'thumbnail'>;\n\n  // Render a list of articles using only title and description.\n  function renderArticlePreviews(previews: ArticlePreview[]): HTMLElement {\n          const articles = document.createElement('div');\n\n          for (const preview of previews) {\n                  // Append preview to the articles.\n          }\n\n          return articles;\n  }\n\n  const articles = renderArticlePreviews([\n          {\n              title: 'TypeScript tutorial!',\n              thumbnail: '/assets/ts.jpg'\n          }\n  ]);\n\nRecord<K, T> - Construct a type with a set of properties K of type T.\n\n\nExample\n\nPlayground\n  // Positions of employees in our company.\n  type MemberPosition = 'intern' | 'developer' | 'tech-lead';\n\n  // Interface describing properties of a single employee.\n  interface Employee {\n          firstName: string;\n          lastName: string;\n          yearsOfExperience: number;\n  }\n\n  // Create an object that has all possible `MemberPosition` values set as keys.\n  // Those keys will store a collection of Employees of the same position.\n  const team: Record<MemberPosition, Employee[]> = {\n          intern: [],\n          developer: [],\n          'tech-lead': [],\n  };\n\n  // Our team has decided to help John with his dream of becoming Software Developer.\n  team.intern.push({\n      firstName: 'John',\n      lastName: 'Doe',\n      yearsOfExperience: 0\n  });\n\n  // `Record` forces you to initialize all of the property keys.\n  // TypeScript Error: \"tech-lead\" property is missing\n  const teamEmpty: Record<MemberPosition, null> = {\n          intern: null,\n          developer: null,\n  };\n\nExclude<T, U> - Exclude from T those types that are assignable to U.\n\n\nExample\n\nPlayground\n  interface ServerConfig {\n      port: null | string | number;\n  }\n\n  type RequestHandler = (request: Request, response: Response) => void;\n\n  // Exclude `null` type from `null | string | number`.\n  // In case the port is equal to `null`, we will use default value.\n  function getPortValue(port: Exclude<ServerConfig['port'], null>): number {\n      if (typeof port === 'string') {\n          return parseInt(port, 10);\n      }\n\n      return port;\n  }\n\n  function startServer(handler: RequestHandler, config: ServerConfig): void {\n      const server = require('http').createServer(handler);\n\n      const port = config.port === null ? 3000 : getPortValue(config.port);\n      server.listen(port);\n  }\n\nExtract<T, U> - Extract from T those types that are assignable to U.\n\n\nExample\n\nPlayground\n  declare function uniqueId(): number;\n\n  const ID = Symbol('ID');\n\n  interface Person {\n      [ID]: number;\n      name: string;\n      age: number;\n  }\n\n  // Allows changing the person data as long as the property key is of string type.\n  function changePersonData<\n      Obj extends Person,\n      Key extends Extract<keyof Person, string>,\n      Value extends Obj[Key]\n  > (obj: Obj, key: Key, value: Value): void {\n      obj[key] = value;\n  }\n\n  // Tiny Andrew was born.\n  const andrew = {\n      [ID]: uniqueId(),\n      name: 'Andrew',\n      age: 0,\n  };\n\n  // Cool, we're fine with that.\n  changePersonData(andrew, 'name', 'Pony');\n\n  // Goverment didn't like the fact that you wanted to change your identity.\n  changePersonData(andrew, ID, uniqueId());\n\nNonNullable<T> - Exclude null and undefined from T.\n\n\nExample\n\nWorks with strictNullChecks set to true. (Read more here)\nPlayground\n  type PortNumber = string | number | null;\n\n  /** Part of a class definition that is used to build a server */\n  class ServerBuilder {\n          portNumber!: NonNullable<PortNumber>;\n\n          port(this: ServerBuilder, port: PortNumber): ServerBuilder {\n                  if (port == null) {\n                          this.portNumber = 8000;\n                  } else {\n                          this.portNumber = port;\n                  }\n\n                  return this;\n          }\n  }\n\n  const serverBuilder = new ServerBuilder();\n\n  serverBuilder\n          .port('8000')   // portNumber = '8000'\n          .port(null)     // portNumber =  8000\n          .port(3000);    // portNumber =  3000\n\n  // TypeScript error\n  serverBuilder.portNumber = null;\n\nParameters<T> - Obtain the parameters of a function type in a tuple.\n\n\nExample\n\nPlayground\n  function shuffle(input: any[]): void {\n      // Mutate array randomly changing its' elements indexes.\n  }\n\n  function callNTimes<Fn extends (...args: any[]) => any> (func: Fn, callCount: number) {\n      // Type that represents the type of the received function parameters.\n      type FunctionParameters = Parameters<Fn>;\n\n      return function (...args: FunctionParameters) {\n          for (let i = 0; i < callCount; i++) {\n              func(...args);\n          }\n      }\n  }\n\n  const shuffleTwice = callNTimes(shuffle, 2);\n\nConstructorParameters<T> - Obtain the parameters of a constructor function type in a tuple.\n\n\nExample\n\nPlayground\n  class ArticleModel {\n      title: string;\n      content?: string;\n\n      constructor(title: string) {\n          this.title = title;\n      }\n  }\n\n  class InstanceCache<T extends (new (...args: any[]) => any)> {\n      private ClassConstructor: T;\n      private cache: Map<string, InstanceType<T>> = new Map();\n\n      constructor (ctr: T) {\n          this.ClassConstructor = ctr;\n      }\n\n      getInstance (...args: ConstructorParameters<T>): InstanceType<T> {\n          const hash = this.calculateArgumentsHash(...args);\n\n          const existingInstance = this.cache.get(hash);\n          if (existingInstance !== undefined) {\n              return existingInstance;\n          }\n\n          return new this.ClassConstructor(...args);\n      }\n\n      private calculateArgumentsHash(...args: any[]): string {\n          // Calculate hash.\n          return 'hash';\n      }\n  }\n\n  const articleCache = new InstanceCache(ArticleModel);\n  const amazonArticle = articleCache.getInstance('Amazon forests burining!');\n\nReturnType<T> – Obtain the return type of a function type.\n\n\nExample\n\nPlayground\n  /** Provides every element of the iterable `iter` into the `callback` function and stores the results in an array. */\n  function mapIter<\n          Elem,\n          Func extends (elem: Elem) => any,\n          Ret extends ReturnType<Func>\n  >(iter: Iterable<Elem>, callback: Func): Ret[] {\n          const mapped: Ret[] = [];\n\n          for (const elem of iter) {\n                  mapped.push(callback(elem));\n          }\n\n          return mapped;\n  }\n\n  const setObject: Set<string> = new Set();\n  const mapObject: Map<number, string> = new Map();\n\n  mapIter(setObject, (value: string) => value.indexOf('Foo')); // number[]\n\n  mapIter(mapObject, ([key, value]: [number, string]) => {\n          return key % 2 === 0 ? value : 'Odd';\n  }); // string[]\n\nInstanceType<T> – Obtain the instance type of a constructor function type.\n\n\nExample\n\nPlayground\n  class IdleService {\n          doNothing (): void {}\n  }\n\n  class News {\n          title: string;\n          content: string;\n\n          constructor(title: string, content: string) {\n                  this.title = title;\n                  this.content = content;\n          }\n  }\n\n  const instanceCounter: Map<Function, number> = new Map();\n\n  interface Constructor {\n          new(...args: any[]): any;\n  }\n\n  // Keep track how many instances of `Constr` constructor have been created.\n  function getInstance<\n          Constr extends Constructor,\n          Args extends ConstructorParameters<Constr>\n  >(constructor: Constr, ...args: Args): InstanceType<Constr> {\n          let count = instanceCounter.get(constructor) || 0;\n\n          const instance = new constructor(...args);\n\n          instanceCounter.set(constructor, count + 1);\n\n          console.log(`Created ${count + 1} instances of ${Constr.name} class`);\n\n          return instance;\n  }\n\n\n  const idleService = getInstance(IdleService);\n  // Will log: `Created 1 instances of IdleService class`\n  const newsEntry = getInstance(News, 'New ECMAScript proposals!', 'Last month...');\n  // Will log: `Created 1 instances of News class`\n\nOmit<T, K> – Constructs a type by picking all properties from T and then removing K.\n\n\nExample\n\nPlayground\n  interface Animal {\n          imageUrl: string;\n          species: string;\n          images: string[];\n          paragraphs: string[];\n  }\n\n  // Creates new type with all properties of the `Animal` interface\n  // except 'images' and 'paragraphs' properties. We can use this\n  // type to render small hover tooltip for a wiki entry list.\n  type AnimalShortInfo = Omit<Animal, 'images' | 'paragraphs'>;\n\n  function renderAnimalHoverInfo (animals: AnimalShortInfo[]): HTMLElement {\n          const container =  document.createElement('div');\n          // Internal implementation.\n          return container;\n  }\n\nUppercase<S extends string> - Transforms every character in a string into uppercase.\n\n\nExample\n\n  type T = Uppercase<'hello'>;  // 'HELLO'\n\n  type T2 = Uppercase<'foo' | 'bar'>;  // 'FOO' | 'BAR'\n\n  type T3<S extends string> = Uppercase<`aB${S}`>;\n  type T4 = T30<'xYz'>;  // 'ABXYZ'\n\n  type T5 = Uppercase<string>;  // string\n  type T6 = Uppercase<any>;  // any\n  type T7 = Uppercase<never>;  // never\n  type T8 = Uppercase<42>;  // Error, type 'number' does not satisfy the constraint 'string'\n\nLowercase<S extends string> - Transforms every character in a string into lowercase.\n\n\nExample\n\n  type T = Lowercase<'HELLO'>;  // 'hello'\n\n  type T2 = Lowercase<'FOO' | 'BAR'>;  // 'foo' | 'bar'\n\n  type T3<S extends string> = Lowercase<`aB${S}`>;\n  type T4 = T32<'xYz'>;  // 'abxyz'\n\n  type T5 = Lowercase<string>;  // string\n  type T6 = Lowercase<any>;  // any\n  type T7 = Lowercase<never>;  // never\n  type T8 = Lowercase<42>;  // Error, type 'number' does not satisfy the constraint 'string'\n\nCapitalize<S extends string> - Transforms the first character in a string into uppercase.\n\n\nExample\n\n  type T = Capitalize<'hello'>;  // 'Hello'\n\n  type T2 = Capitalize<'foo' | 'bar'>;  // 'Foo' | 'Bar'\n\n  type T3<S extends string> = Capitalize<`aB${S}`>;\n  type T4 = T32<'xYz'>;  // 'ABxYz'\n\n  type T5 = Capitalize<string>;  // string\n  type T6 = Capitalize<any>;  // any\n  type T7 = Capitalize<never>;  // never\n  type T8 = Capitalize<42>;  // Error, type 'number' does not satisfy the constraint 'string'\n\nUncapitalize<S extends string> - Transforms the first character in a string into lowercase.\n\n\nExample\n\n  type T = Uncapitalize<'Hello'>;  // 'hello'\n\n  type T2 = Uncapitalize<'Foo' | 'Bar'>;  // 'foo' | 'bar'\n\n  type T3<S extends string> = Uncapitalize<`AB${S}`>;\n  type T4 = T30<'xYz'>;  // 'aBxYz'\n\n  type T5 = Uncapitalize<string>;  // string\n  type T6 = Uncapitalize<any>;  // any\n  type T7 = Uncapitalize<never>;  // never\n  type T8 = Uncapitalize<42>;  // Error, type 'number' does not satisfy the constraint 'string'\n\n\nYou can find some examples in the TypeScript docs."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/type-fest/readme.html#maintainers",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/type-fest/readme.html#maintainers",
    "title": "3327 Research",
    "section": "Maintainers",
    "text": "Maintainers\n\nSindre Sorhus\nJarek Radosz\nDimitri Benin\nPelle Wessman"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/type-fest/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/type-fest/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\n(MIT OR CC0-1.0)\n\n\n<b>\n    <a href=\"https://tidelift.com/subscription/pkg/npm-type-fest?utm_source=npm-type-fest&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n</b>\n<br>\n<sub>\n    Tidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n</sub>"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "[3.0.2] (2019-09-27)",
    "text": "[3.0.2] (2019-09-27)\n\nFixed\n\nImprove tracking of executable subcommands.\n\n\n\nChanged\n\nupdate development dependencies"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "3.0.1 (2019-08-30)",
    "text": "3.0.1 (2019-08-30)\n\nAdded\n\n.name and .usage to README (#1010)\nTable of Contents to README (#1010)\nTypeScript definition for executableFile in CommandOptions (#1028)\n\n\n\nChanged\n\nconsistently use const rather than var in README (#1026)\n\n\n\nFixed\n\nhelp for sub commands with custom executableFile (#1018)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/CHANGELOG.html#example-breaking-changes",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/CHANGELOG.html#example-breaking-changes",
    "title": "3327 Research",
    "section": "Example Breaking Changes",
    "text": "Example Breaking Changes\nThe custom event for a negated option like --no-foo is option:no-foo (previously option:foo).\nprogram\n  .option('--no-foo')\n  .on('option:no-foo', () => {\n    console.log('removing foo');\n  });\nWhen using TypeScript, adding a command does not allow an explicit undefined for an unwanted executable description (e.g for a command with an action handler).\nprogram\n  .command('action1', undefined, { noHelp: true }) // No longer valid\n  .command('action2', { noHelp: true }) // Correct"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#installation",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#installation",
    "title": "3327 Research",
    "section": "Installation",
    "text": "Installation\nnpm install commander"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#declaring-program-variable",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#declaring-program-variable",
    "title": "3327 Research",
    "section": "Declaring program variable",
    "text": "Declaring program variable\nCommander exports a global object which is convenient for quick programs. This is used in the examples in this README for brevity.\nconst program = require('commander');\nprogram.version('0.0.1');\nFor larger programs which may use commander in multiple ways, including unit testing, it is better to create a local Command object to use.\nconst commander = require('commander');\nconst program = new commander.Command();\nprogram.version('0.0.1');"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#options",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#options",
    "title": "3327 Research",
    "section": "Options",
    "text": "Options\nOptions are defined with the .option() method, also serving as documentation for the options. Each option can have a short flag (single character) and a long name, separated by a comma or space.\nThe options can be accessed as properties on the Command object. Multi-word options such as “–template-engine” are camel-cased, becoming program.templateEngine etc. Multiple short flags may be combined as a single arg, for example -abc is equivalent to -a -b -c.\n\nCommon option types, boolean and value\nThe two most used option types are a boolean flag, and an option which takes a value (declared using angle brackets). Both are undefined unless specified on command line.\nconst program = require('commander');\n\nprogram\n  .option('-d, --debug', 'output extra debugging')\n  .option('-s, --small', 'small pizza size')\n  .option('-p, --pizza-type <type>', 'flavour of pizza');\n\nprogram.parse(process.argv);\n\nif (program.debug) console.log(program.opts());\nconsole.log('pizza details:');\nif (program.small) console.log('- small pizza size');\nif (program.pizzaType) console.log(`- ${program.pizzaType}`);\n$ pizza-options -d\n{ debug: true, small: undefined, pizzaType: undefined }\npizza details:\n$ pizza-options -p\nerror: option '-p, --pizza-type <type>' argument missing\n$ pizza-options -ds -p vegetarian\n{ debug: true, small: true, pizzaType: 'vegetarian' }\npizza details:\n- small pizza size\n- vegetarian\n$ pizza-options --pizza-type=cheese\npizza details:\n- cheese\nprogram.parse(arguments) processes the arguments, leaving any args not consumed by the options as the program.args array.\n\n\nDefault option value\nYou can specify a default value for an option which takes a value.\nconst program = require('commander');\n\nprogram\n  .option('-c, --cheese <type>', 'add the specified type of cheese', 'blue');\n\nprogram.parse(process.argv);\n\nconsole.log(`cheese: ${program.cheese}`);\n$ pizza-options\ncheese: blue\n$ pizza-options --cheese stilton\ncheese: stilton\n\n\nOther option types, negatable boolean and flag|value\nYou can specify a boolean option long name with a leading no- to set the option value to false when used. Defined alone this also makes the option true by default.\nIf you define --foo first, adding --no-foo does not change the default value from what it would otherwise be. You can specify a default boolean value for a boolean flag and it can be overridden on command line.\nconst program = require('commander');\n\nprogram\n  .option('--no-sauce', 'Remove sauce')\n  .option('--cheese <flavour>', 'cheese flavour', 'mozzarella')\n  .option('--no-cheese', 'plain with no cheese')\n  .parse(process.argv);\n\nconst sauceStr = program.sauce ? 'sauce' : 'no sauce';\nconst cheeseStr = (program.cheese === false) ? 'no cheese' : `${program.cheese} cheese`;\nconsole.log(`You ordered a pizza with ${sauceStr} and ${cheeseStr}`);\n$ pizza-options\nYou ordered a pizza with sauce and mozzarella cheese\n$ pizza-options --sauce\nerror: unknown option '--sauce'\n$ pizza-options --cheese=blue\nYou ordered a pizza with sauce and blue cheese\n$ pizza-options --no-sauce --no-cheese\nYou ordered a pizza with no sauce and no cheese\nYou can specify an option which functions as a flag but may also take a value (declared using square brackets).\nconst program = require('commander');\n\nprogram\n  .option('-c, --cheese [type]', 'Add cheese with optional type');\n\nprogram.parse(process.argv);\n\nif (program.cheese === undefined) console.log('no cheese');\nelse if (program.cheese === true) console.log('add cheese');\nelse console.log(`add cheese type ${program.cheese}`);\n$ pizza-options\nno cheese\n$ pizza-options --cheese\nadd cheese\n$ pizza-options --cheese mozzarella\nadd cheese type mozzarella\n\n\nCustom option processing\nYou may specify a function to do custom processing of option values. The callback function receives two parameters, the user specified value and the previous value for the option. It returns the new value for the option.\nThis allows you to coerce the option value to the desired type, or accumulate values, or do entirely custom processing.\nYou can optionally specify the default/starting value for the option after the function.\nconst program = require('commander');\n\nfunction myParseInt(value, dummyPrevious) {\n  // parseInt takes a string and an optional radix\n  return parseInt(value);\n}\n\nfunction increaseVerbosity(dummyValue, previous) {\n  return previous + 1;\n}\n\nfunction collect(value, previous) {\n  return previous.concat([value]);\n}\n\nfunction commaSeparatedList(value, dummyPrevious) {\n  return value.split(',');\n}\n\nprogram\n  .option('-f, --float <number>', 'float argument', parseFloat)\n  .option('-i, --integer <number>', 'integer argument', myParseInt)\n  .option('-v, --verbose', 'verbosity that can be increased', increaseVerbosity, 0)\n  .option('-c, --collect <value>', 'repeatable value', collect, [])\n  .option('-l, --list <items>', 'comma separated list', commaSeparatedList)\n;\n\nprogram.parse(process.argv);\n\nif (program.float !== undefined) console.log(`float: ${program.float}`);\nif (program.integer !== undefined) console.log(`integer: ${program.integer}`);\nif (program.verbose > 0) console.log(`verbosity: ${program.verbose}`);\nif (program.collect.length > 0) console.log(program.collect);\nif (program.list !== undefined) console.log(program.list);\n$ custom -f 1e2\nfloat: 100\n$ custom --integer 2\ninteger: 2\n$ custom -v -v -v\nverbose: 3\n$ custom -c a -c b -c c\n[ 'a', 'b', 'c' ]\n$ custom --list x,y,z\n[ 'x', 'y', 'z' ]\n\n\nVersion option\nThe optional version method adds handling for displaying the command version. The default option flags are -V and --version, and when present the command prints the version number and exits.\nprogram.version('0.0.1');\n$ ./examples/pizza -V\n0.0.1\nYou may change the flags and description by passing additional parameters to the version method, using the same syntax for flags as the option method. The version flags can be named anything, but a long name is required.\nprogram.version('0.0.1', '-v, --vers', 'output the current version');"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#commands",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#commands",
    "title": "3327 Research",
    "section": "Commands",
    "text": "Commands\nYou can specify (sub)commands for your top-level command using .command. There are two ways these can be implemented: using an action handler attached to the command, or as a separate executable file (described in more detail later). In the first parameter to .command you specify the command name and any command arguments. The arguments may be <required> or [optional], and the last argument may also be variadic....\nFor example:\n// Command implemented using action handler (description is supplied separately to `.command`)\n// Returns new command for configuring.\nprogram\n  .command('clone <source> [destination]')\n  .description('clone a repository into a newly created directory')\n  .action((source, destination) => {\n    console.log('clone command called');\n  });\n\n// Command implemented using separate executable file (description is second parameter to `.command`)\n// Returns top-level command for adding more commands.\nprogram\n  .command('start <service>', 'start named service')\n  .command('stop [service]', 'stop named service, or all if no name supplied');\n\nSpecify the argument syntax\nYou use .arguments to specify the arguments for the top-level command, and for subcommands they are included in the .command call. Angled brackets (e.g. <required>) indicate required input. Square brackets (e.g. [optional]) indicate optional input.\nconst program = require('commander');\n\nprogram\n  .version('0.1.0')\n  .arguments('<cmd> [env]')\n  .action(function (cmd, env) {\n    cmdValue = cmd;\n    envValue = env;\n  });\n\nprogram.parse(process.argv);\n\nif (typeof cmdValue === 'undefined') {\n  console.error('no command given!');\n  process.exit(1);\n}\nconsole.log('command:', cmdValue);\nconsole.log('environment:', envValue || \"no environment given\");\nThe last argument of a command can be variadic, and only the last argument. To make an argument variadic you append ... to the argument name. For example:\nconst program = require('commander');\n\nprogram\n  .version('0.1.0')\n  .command('rmdir <dir> [otherDirs...]')\n  .action(function (dir, otherDirs) {\n    console.log('rmdir %s', dir);\n    if (otherDirs) {\n      otherDirs.forEach(function (oDir) {\n        console.log('rmdir %s', oDir);\n      });\n    }\n  });\n\nprogram.parse(process.argv);\nThe variadic argument is passed to the action handler as an array. (And this also applies to program.args.)\n\n\nAction handler (sub)commands\nYou can add options to a command that uses an action handler. The action handler gets passed a parameter for each argument you declared, and one additional argument which is the command object itself. This command argument has the values for the command-specific options added as properties.\nconst program = require('commander');\n\nprogram\n  .command('rm <dir>')\n  .option('-r, --recursive', 'Remove recursively')\n  .action(function (dir, cmdObj) {\n    console.log('remove ' + dir + (cmdObj.recursive ? ' recursively' : ''))\n  })\n\nprogram.parse(process.argv)\nA command’s options on the command line are validated when the command is used. Any unknown options will be reported as an error. However, if an action-based command does not define an action, then the options are not validated.\nConfiguration options can be passed with the call to .command(). Specifying true for opts.noHelp will remove the command from the generated help output.\n\n\nGit-style executable (sub)commands\nWhen .command() is invoked with a description argument, this tells commander that you’re going to use separate executables for sub-commands, much like git(1) and other popular tools. Commander will search the executables in the directory of the entry script (like ./examples/pm) with the name program-subcommand, like pm-install, pm-search. You can specify a custom name with the executableFile configuration option.\nYou handle the options for an executable (sub)command in the executable, and don’t declare them at the top-level.\n// file: ./examples/pm\nconst program = require('commander');\n\nprogram\n  .version('0.1.0')\n  .command('install [name]', 'install one or more packages')\n  .command('search [query]', 'search with optional query')\n  .command('update', 'update installed packages', {executableFile: 'myUpdateSubCommand'})\n  .command('list', 'list packages installed', {isDefault: true})\n  .parse(process.argv);\nConfiguration options can be passed with the call to .command(). Specifying true for opts.noHelp will remove the command from the generated help output. Specifying true for opts.isDefault will run the subcommand if no other subcommand is specified. Specifying a name with executableFile will override the default constructed name.\nIf the program is designed to be installed globally, make sure the executables have proper modes, like 755."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#automated-help",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#automated-help",
    "title": "3327 Research",
    "section": "Automated –help",
    "text": "Automated –help\nThe help information is auto-generated based on the information commander already knows about your program, so the following --help info is for free:\n$ ./examples/pizza --help\nUsage: pizza [options]\n\nAn application for pizzas ordering\n\nOptions:\n  -V, --version        output the version number\n  -p, --peppers        Add peppers\n  -P, --pineapple      Add pineapple\n  -b, --bbq            Add bbq sauce\n  -c, --cheese <type>  Add the specified type of cheese (default: \"marble\")\n  -C, --no-cheese      You do not want any cheese\n  -h, --help           output usage information\n\nCustom help\nYou can display arbitrary -h, --help information by listening for “–help”. Commander will automatically exit once you are done so that the remainder of your program does not execute causing undesired behaviors, for example in the following executable “stuff” will not output when --help is used.\n#!/usr/bin/env node\n\nconst program = require('commander');\n\nprogram\n  .version('0.1.0')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('')\n  console.log('Examples:');\n  console.log('  $ custom-help --help');\n  console.log('  $ custom-help -h');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\nYields the following help output when node script-name.js -h or node script-name.js --help are run:\nUsage: custom-help [options]\n\nOptions:\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n  $ custom-help --help\n  $ custom-help -h\n\n\n.usage and .name\nThese allow you to customise the usage description in the first line of the help. The name is otherwise deduced from the (full) program arguments. Given:\nprogram\n  .name(\"my-command\")\n  .usage(\"[global options] command\")\nThe help will start with:\nUsage: my-command [global options] command\n\n\n.outputHelp(cb)\nOutput help information without exiting. Optional callback cb allows post-processing of help text before it is displayed.\nIf you want to display help by default (e.g. if no command was provided), you can use something like:\nconst program = require('commander');\nconst colors = require('colors');\n\nprogram\n  .version('0.1.0')\n  .command('getstream [url]', 'get stream URL')\n  .parse(process.argv);\n\nif (!process.argv.slice(2).length) {\n  program.outputHelp(make_red);\n}\n\nfunction make_red(txt) {\n  return colors.red(txt); //display the help text in red on the console\n}\n\n\n.helpOption(flags, description)\nOverride the default help flags and description.\nprogram\n  .helpOption('-e, --HELP', 'read more information');\n\n\n.help(cb)\nOutput help information and exit immediately. Optional callback cb allows post-processing of help text before it is displayed."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#custom-event-listeners",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#custom-event-listeners",
    "title": "3327 Research",
    "section": "Custom event listeners",
    "text": "Custom event listeners\nYou can execute custom actions by listening to command and option events.\nprogram.on('option:verbose', function () {\n  process.env.VERBOSE = this.verbose;\n});\n\n// error on unknown commands\nprogram.on('command:*', function () {\n  console.error('Invalid command: %s\\nSee --help for a list of available commands.', program.args.join(' '));\n  process.exit(1);\n});"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#bits-and-pieces",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#bits-and-pieces",
    "title": "3327 Research",
    "section": "Bits and pieces",
    "text": "Bits and pieces\n\nTypeScript\nThe Commander package includes its TypeScript Definition file, but also requires the node types which you need to install yourself. e.g.\nnpm install commander\nnpm install --save-dev @types/node\nIf you use ts-node and git-style sub-commands written as .ts files, you need to call your program through node to get the sub-commands called correctly. e.g.\nnode -r ts-node/register pm.ts\n\n\nNode options such as --harmony\nYou can enable --harmony option in two ways:\n\nUse #! /usr/bin/env node --harmony in the sub-commands scripts. (Note Windows does not support this pattern.)\nUse the --harmony option when call the command, like node --harmony examples/pm publish. The --harmony option will be preserved when spawning sub-command process.\n\n\n\nNode debugging\nIf you are using the node inspector for debugging git-style executable (sub)commands using node -inspect et al, the inspector port is incremented by 1 for the spawned subcommand."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#examples",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#examples",
    "title": "3327 Research",
    "section": "Examples",
    "text": "Examples\nconst program = require('commander');\n\nprogram\n  .version('0.1.0')\n  .option('-C, --chdir <path>', 'change the working directory')\n  .option('-c, --config <path>', 'set config path. defaults to ./deploy.conf')\n  .option('-T, --no-tests', 'ignore test hook');\n\nprogram\n  .command('setup [env]')\n  .description('run setup commands for all envs')\n  .option(\"-s, --setup_mode [mode]\", \"Which setup mode to use\")\n  .action(function(env, options){\n    const mode = options.setup_mode || \"normal\";\n    env = env || 'all';\n    console.log('setup for %s env(s) with %s mode', env, mode);\n  });\n\nprogram\n  .command('exec <cmd>')\n  .alias('ex')\n  .description('execute the given remote cmd')\n  .option(\"-e, --exec_mode <mode>\", \"Which exec mode to use\")\n  .action(function(cmd, options){\n    console.log('exec \"%s\" using %s mode', cmd, options.exec_mode);\n  }).on('--help', function() {\n    console.log('');\n    console.log('Examples:');\n    console.log('');\n    console.log('  $ deploy exec sequential');\n    console.log('  $ deploy exec async');\n  });\n\nprogram\n  .command('*')\n  .action(function(env){\n    console.log('deploying \"%s\"', env);\n  });\n\nprogram.parse(process.argv);\nMore Demos can be found in the examples directory."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#support",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/commander/Readme.html#support",
    "title": "3327 Research",
    "section": "Support",
    "text": "Support\nProfessionally supported commander is now available\nTidelift gives software development teams a single source for purchasing and maintaining their software, with professional grade assurances from the experts who know it best, while seamlessly integrating with existing tools."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-directory/README.html#how-to-use",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-directory/README.html#how-to-use",
    "title": "3327 Research",
    "section": "How To Use",
    "text": "How To Use\n\nInstallation (via npm)\n$ npm install require-directory\n\n\nUsage\nA common pattern in node.js is to include an index file which creates a hash of the files in its current directory. Given a directory structure like so:\n\napp.js\nroutes/\n\nindex.js\nhome.js\nauth/\n\nlogin.js\nlogout.js\nregister.js\n\n\n\nroutes/index.js uses require-directory to build the hash (rather than doing so manually) like so:\nvar requireDirectory = require('require-directory');\nmodule.exports = requireDirectory(module);\napp.js references routes/index.js like any other module, but it now has a hash/tree of the exports from the ./routes/ directory:\nvar routes = require('./routes');\n\n// snip\n\napp.get('/', routes.home);\napp.get('/register', routes.auth.register);\napp.get('/login', routes.auth.login);\napp.get('/logout', routes.auth.logout);\nThe routes variable above is the equivalent of this:\nvar routes = {\n  home: require('routes/home.js'),\n  auth: {\n    login: require('routes/auth/login.js'),\n    logout: require('routes/auth/logout.js'),\n    register: require('routes/auth/register.js')\n  }\n};\nNote that routes.index will be undefined as you would hope.\n\n\nSpecifying Another Directory\nYou can specify which directory you want to build a tree of (if it isn’t the current directory for whatever reason) by passing it as the second parameter. Not specifying the path (requireDirectory(module)) is the equivelant of requireDirectory(module, __dirname):\nvar requireDirectory = require('require-directory');\nmodule.exports = requireDirectory(module, './some/subdirectory');\nFor example, in the example in the Usage section we could have avoided creating routes/index.js and instead changed the first lines of app.js to:\nvar requireDirectory = require('require-directory');\nvar routes = requireDirectory(module, './routes');"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-directory/README.html#options",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-directory/README.html#options",
    "title": "3327 Research",
    "section": "Options",
    "text": "Options\nYou can pass an options hash to require-directory as the 2nd parameter (or 3rd if you’re passing the path to another directory as the 2nd parameter already). Here are the available options:\n\nWhitelisting\nWhitelisting (either via RegExp or function) allows you to specify that only certain files be loaded.\nvar requireDirectory = require('require-directory'),\n  whitelist = /onlyinclude.js$/,\n  hash = requireDirectory(module, {include: whitelist});\nvar requireDirectory = require('require-directory'),\n  check = function(path){\n    if(/onlyinclude.js$/.test(path)){\n      return true; // don't include\n    }else{\n      return false; // go ahead and include\n    }\n  },\n  hash = requireDirectory(module, {include: check});\n\n\nBlacklisting\nBlacklisting (either via RegExp or function) allows you to specify that all but certain files should be loaded.\nvar requireDirectory = require('require-directory'),\n  blacklist = /dontinclude\\.js$/,\n  hash = requireDirectory(module, {exclude: blacklist});\nvar requireDirectory = require('require-directory'),\n  check = function(path){\n    if(/dontinclude\\.js$/.test(path)){\n      return false; // don't include\n    }else{\n      return true; // go ahead and include\n    }\n  },\n  hash = requireDirectory(module, {exclude: check});\n\n\nVisiting Objects As They’re Loaded\nrequire-directory takes a function as the visit option that will be called for each module that is added to module.exports.\nvar requireDirectory = require('require-directory'),\n  visitor = function(obj) {\n    console.log(obj); // will be called for every module that is loaded\n  },\n  hash = requireDirectory(module, {visit: visitor});\nThe visitor can also transform the objects by returning a value:\nvar requireDirectory = require('require-directory'),\n  visitor = function(obj) {\n    return obj(new Date());\n  },\n  hash = requireDirectory(module, {visit: visitor});\n\n\nRenaming Keys\nvar requireDirectory = require('require-directory'),\n  renamer = function(name) {\n    return name.toUpperCase();\n  },\n  hash = requireDirectory(module, {rename: renamer});\n\n\nNo Recursion\nvar requireDirectory = require('require-directory'),\n  hash = requireDirectory(module, {recurse: false});"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-directory/README.html#run-unit-tests",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-directory/README.html#run-unit-tests",
    "title": "3327 Research",
    "section": "Run Unit Tests",
    "text": "Run Unit Tests\n$ npm run lint\n$ npm test"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-directory/README.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-directory/README.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT License"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-directory/README.html#author",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-directory/README.html#author",
    "title": "3327 Research",
    "section": "Author",
    "text": "Author\nTroy Goode (troygoode@gmail.com)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/depd/History.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/depd/History.html",
    "title": "3327 Research",
    "section": "",
    "text": "2.0.0 / 2018-10-26\n\nDrop support for Node.js 0.6\nReplace internal eval usage with Function constructor\nUse instance methods on process to check for listeners\n\n\n\n1.1.2 / 2018-01-11\n\nperf: remove argument reassignment\nSupport Node.js 0.6 to 9.x\n\n\n\n1.1.1 / 2017-07-27\n\nRemove unnecessary Buffer loading\nSupport Node.js 0.6 to 8.x\n\n\n\n1.1.0 / 2015-09-14\n\nEnable strict mode in more places\nSupport io.js 3.x\nSupport io.js 2.x\nSupport web browser loading\n\nRequires bundler like Browserify or webpack\n\n\n\n\n1.0.1 / 2015-04-07\n\nFix TypeErrors when under 'use strict' code\nFix useless type name on auto-generated messages\nSupport io.js 1.x\nSupport Node.js 0.12\n\n\n\n1.0.0 / 2014-09-17\n\nNo changes\n\n\n\n0.4.5 / 2014-09-09\n\nImprove call speed to functions using the function wrapper\nSupport Node.js 0.6\n\n\n\n0.4.4 / 2014-07-27\n\nWork-around v8 generating empty stack traces\n\n\n\n0.4.3 / 2014-07-26\n\nFix exception when global Error.stackTraceLimit is too low\n\n\n\n0.4.2 / 2014-07-19\n\nCorrect call site for wrapped functions and properties\n\n\n\n0.4.1 / 2014-07-19\n\nImprove automatic message generation for function properties\n\n\n\n0.4.0 / 2014-07-19\n\nAdd TRACE_DEPRECATION environment variable\nRemove non-standard grey color from color output\nSupport --no-deprecation argument\nSupport --trace-deprecation argument\nSupport deprecate.property(fn, prop, message)\n\n\n\n0.3.0 / 2014-06-16\n\nAdd NO_DEPRECATION environment variable\n\n\n\n0.2.0 / 2014-06-15\n\nAdd deprecate.property(obj, prop, message)\nRemove supports-color dependency for node.js 0.8\n\n\n\n0.1.0 / 2014-06-15\n\nAdd deprecate.function(fn, message)\nAdd process.on('deprecation', fn) emitter\nAutomatically generate message when omitted from deprecate()\n\n\n\n0.0.1 / 2014-06-15\n\nFix warning for dynamic calls at singe call site\n\n\n\n0.0.0 / 2014-06-15\n\nInitial implementation"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/depd/Readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/depd/Readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\nThis module is installed directly using npm:\n$ npm install depd\nThis module can also be bundled with systems like Browserify or webpack, though by default this module will alter it’s API to no longer display or track deprecations."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/depd/Readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/depd/Readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nvar deprecate = require('depd')('my-module')\nThis library allows you to display deprecation messages to your users. This library goes above and beyond with deprecation warnings by introspection of the call stack (but only the bits that it is interested in).\nInstead of just warning on the first invocation of a deprecated function and never again, this module will warn on the first invocation of a deprecated function per unique call site, making it ideal to alert users of all deprecated uses across the code base, rather than just whatever happens to execute first.\nThe deprecation warnings from this module also include the file and line information for the call into the module that the deprecated function was in.\nNOTE this library has a similar interface to the debug module, and this module uses the calling file to get the boundary for the call stacks, so you should always create a new deprecate object in each file and not within some central file.\n\ndepd(namespace)\nCreate a new deprecate function that uses the given namespace name in the messages and will display the call site prior to the stack entering the file this function was called from. It is highly suggested you use the name of your module as the namespace.\n\n\ndeprecate(message)\nCall this function from deprecated code to display a deprecation message. This message will appear once per unique caller site. Caller site is the first call site in the stack in a different file from the caller of this function.\nIf the message is omitted, a message is generated for you based on the site of the deprecate() call and will display the name of the function called, similar to the name displayed in a stack trace.\n\n\ndeprecate.function(fn, message)\nCall this function to wrap a given function in a deprecation message on any call to the function. An optional message can be supplied to provide a custom message.\n\n\ndeprecate.property(obj, prop, message)\nCall this function to wrap a given property on object in a deprecation message on any accessing or setting of the property. An optional message can be supplied to provide a custom message.\nThe method must be called on the object where the property belongs (not inherited from the prototype).\nIf the property is a data descriptor, it will be converted to an accessor descriptor in order to display the deprecation message.\n\n\nprocess.on(‘deprecation’, fn)\nThis module will allow easy capturing of deprecation errors by emitting the errors as the type “deprecation” on the global process. If there are no listeners for this type, the errors are written to STDERR as normal, but if there are any listeners, nothing will be written to STDERR and instead only emitted. From there, you can write the errors in a different format or to a logging source.\nThe error represents the deprecation and is emitted only once with the same rules as writing to STDERR. The error has the following properties:\n\nmessage - This is the message given by the library\nname - This is always 'DeprecationError'\nnamespace - This is the namespace the deprecation came from\nstack - This is the stack of the call to the deprecated thing\n\nExample error.stack output:\nDeprecationError: my-cool-module deprecated oldfunction\n    at Object.<anonymous> ([eval]-wrapper:6:22)\n    at Module._compile (module.js:456:26)\n    at evalScript (node.js:532:25)\n    at startup (node.js:80:7)\n    at node.js:902:3\n\n\nprocess.env.NO_DEPRECATION\nAs a user of modules that are deprecated, the environment variable NO_DEPRECATION is provided as a quick solution to silencing deprecation warnings from being output. The format of this is similar to that of DEBUG:\n$ NO_DEPRECATION=my-module,othermod node app.js\nThis will suppress deprecations from being output for “my-module” and “othermod”. The value is a list of comma-separated namespaces. To suppress every warning across all namespaces, use the value * for a namespace.\nProviding the argument --no-deprecation to the node executable will suppress all deprecations (only available in Node.js 0.8 or higher).\nNOTE This will not suppress the deperecations given to any “deprecation” event listeners, just the output to STDERR.\n\n\nprocess.env.TRACE_DEPRECATION\nAs a user of modules that are deprecated, the environment variable TRACE_DEPRECATION is provided as a solution to getting more detailed location information in deprecation warnings by including the entire stack trace. The format of this is the same as NO_DEPRECATION:\n$ TRACE_DEPRECATION=my-module,othermod node app.js\nThis will include stack traces for deprecations being output for “my-module” and “othermod”. The value is a list of comma-separated namespaces. To trace every warning across all namespaces, use the value * for a namespace.\nProviding the argument --trace-deprecation to the node executable will trace all deprecations (only available in Node.js 0.8 or higher).\nNOTE This will not trace the deperecations silenced by NO_DEPRECATION."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/depd/Readme.html#display",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/depd/Readme.html#display",
    "title": "3327 Research",
    "section": "Display",
    "text": "Display\n\n\n\nmessage\n\n\nWhen a user calls a function in your library that you mark deprecated, they will see the following written to STDERR (in the given colors, similar colors and layout to the debug module):\nbright cyan    bright yellow\n|              |          reset       cyan\n|              |          |           |\n▼              ▼          ▼           ▼\nmy-cool-module deprecated oldfunction [eval]-wrapper:6:22\n▲              ▲          ▲           ▲\n|              |          |           |\nnamespace      |          |           location of mycoolmod.oldfunction() call\n               |          deprecation message\n               the word \"deprecated\"\nIf the user redirects their STDERR to a file or somewhere that does not support colors, they see (similar layout to the debug module):\nSun, 15 Jun 2014 05:21:37 GMT my-cool-module deprecated oldfunction at [eval]-wrapper:6:22\n▲                             ▲              ▲          ▲              ▲\n|                             |              |          |              |\ntimestamp of message          namespace      |          |             location of mycoolmod.oldfunction() call\n                                             |          deprecation message\n                                             the word \"deprecated\""
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/depd/Readme.html#examples",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/depd/Readme.html#examples",
    "title": "3327 Research",
    "section": "Examples",
    "text": "Examples\n\nDeprecating all calls to a function\nThis will display a deprecated message about “oldfunction” being deprecated from “my-module” on STDERR.\nvar deprecate = require('depd')('my-cool-module')\n\n// message automatically derived from function name\n// Object.oldfunction\nexports.oldfunction = deprecate.function(function oldfunction () {\n  // all calls to function are deprecated\n})\n\n// specific message\nexports.oldfunction = deprecate.function(function () {\n  // all calls to function are deprecated\n}, 'oldfunction')\n\n\nConditionally deprecating a function call\nThis will display a deprecated message about “weirdfunction” being deprecated from “my-module” on STDERR when called with less than 2 arguments.\nvar deprecate = require('depd')('my-cool-module')\n\nexports.weirdfunction = function () {\n  if (arguments.length < 2) {\n    // calls with 0 or 1 args are deprecated\n    deprecate('weirdfunction args < 2')\n  }\n}\nWhen calling deprecate as a function, the warning is counted per call site within your own module, so you can display different deprecations depending on different situations and the users will still get all the warnings:\nvar deprecate = require('depd')('my-cool-module')\n\nexports.weirdfunction = function () {\n  if (arguments.length < 2) {\n    // calls with 0 or 1 args are deprecated\n    deprecate('weirdfunction args < 2')\n  } else if (typeof arguments[0] !== 'string') {\n    // calls with non-string first argument are deprecated\n    deprecate('weirdfunction non-string first arg')\n  }\n}\n\n\nDeprecating property access\nThis will display a deprecated message about “oldprop” being deprecated from “my-module” on STDERR when accessed. A deprecation will be displayed when setting the value and when getting the value.\nvar deprecate = require('depd')('my-cool-module')\n\nexports.oldprop = 'something'\n\n// message automatically derives from property name\ndeprecate.property(exports, 'oldprop')\n\n// explicit message\ndeprecate.property(exports, 'oldprop', 'oldprop >= 0.10')"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/depd/Readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/depd/Readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v2.0.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v2.0.0",
    "title": "3327 Research",
    "section": "v2.0.0",
    "text": "v2.0.0\nBreaking changes:\n\nDrop support for Node.js end-of-life versions: 0.10, 0.12, 4, 5, 7, and 9\nTeam Foundation Server will now be detected as Azure Pipelines. The constant ci.TFS no longer exists - use ci.AZURE_PIPELINES instead\nRemove deprecated ci.TDDIUM constant - use ci.SOLANDO instead\n\nNew features:\n\nfeat: support Azure Pipelines (#23)\nfeat: support Netlify CI (#26)\nfeat: support Bitbucket pipelines PR detection (#27)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.6.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.6.0",
    "title": "3327 Research",
    "section": "v1.6.0",
    "text": "v1.6.0\n\nfeat: add Sail CI support\nfeat: add Buddy support\nfeat: add Bitrise support\nfeat: detect Jenkins PRs\nfeat: detect Drone PRs"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.5.1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.5.1",
    "title": "3327 Research",
    "section": "v1.5.1",
    "text": "v1.5.1\n\nfix: use full path to vendors.json"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.5.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.5.0",
    "title": "3327 Research",
    "section": "v1.5.0",
    "text": "v1.5.0\n\nfeat: add dsari detection (#15)\nfeat: add ci.isPR (#16)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.4.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.4.0",
    "title": "3327 Research",
    "section": "v1.4.0",
    "text": "v1.4.0\n\nfeat: add Cirrus CI detection (#13)\nfeat: add Shippable CI detection (#14)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.3.1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.3.1",
    "title": "3327 Research",
    "section": "v1.3.1",
    "text": "v1.3.1\n\nchore: reduce npm package size by not including .github folder content (#11)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.3.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.3.0",
    "title": "3327 Research",
    "section": "v1.3.0",
    "text": "v1.3.0\n\nfeat: add support for Strider CD\nchore: deprecate vendor constant TDDIUM in favor of SOLANO\ndocs: add missing vendor constant to docs"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.2.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.2.0",
    "title": "3327 Research",
    "section": "v1.2.0",
    "text": "v1.2.0\n\nfeat: detect solano-ci (#9)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.1.3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.1.3",
    "title": "3327 Research",
    "section": "v1.1.3",
    "text": "v1.1.3\n\nfix: fix spelling of Hunson in ci.name"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.1.2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.1.2",
    "title": "3327 Research",
    "section": "v1.1.2",
    "text": "v1.1.2\n\nfix: no more false positive matches for Jenkins"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.1.1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.1.1",
    "title": "3327 Research",
    "section": "v1.1.1",
    "text": "v1.1.1\n\ndocs: sort lists of CI servers in README.md\ndocs: add missing AWS CodeBuild to the docs"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.1.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.1.0",
    "title": "3327 Research",
    "section": "v1.1.0",
    "text": "v1.1.0\n\nfeat: add AWS CodeBuild to CI detection (#2)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.0.1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.0.1",
    "title": "3327 Research",
    "section": "v1.0.1",
    "text": "v1.0.1\n\nchore: reduce npm package size by using an .npmignore file (#3)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.0.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ci-info/CHANGELOG.html#v1.0.0",
    "title": "3327 Research",
    "section": "v1.0.0",
    "text": "v1.0.0\n\nInitial release"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-fetch/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-fetch/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright (c) 2016 David Frank\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "1.3.1 / 2016-10-25",
    "text": "1.3.1 / 2016-10-25\n\nAdded\n\ngraceful-fs added as an optionalDependencies. Thanks ryanzim!"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "1.3.0 / 2016-06-09",
    "text": "1.3.0 / 2016-06-09\n\nAdded\n\nfilter option to pre-filter and not walk directories."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "1.2.0 / 2016-04-16",
    "text": "1.2.0 / 2016-04-16\n\nadded support for custom fs implementation. Useful for https://github.com/tschaub/mock-fs"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "1.1.3 / 2015-12-23",
    "text": "1.1.3 / 2015-12-23\n\nbugfix: if readdir error, got hung up. See: https://github.com/jprichardson/node-klaw/issues/1"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "1.1.2 / 2015-11-12",
    "text": "1.1.2 / 2015-11-12\n\nassert that param dir is a string"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "1.1.1 / 2015-10-25",
    "text": "1.1.1 / 2015-10-25\n\nbug fix, options not being passed"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "1.1.0 / 2015-10-25",
    "text": "1.1.0 / 2015-10-25\n\nadded queueMethod and pathSorter to options to affect searching strategy."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "1.0.0 / 2015-10-25",
    "text": "1.0.0 / 2015-10-25\n\nremoved unused filter param\nbugfix: always set streamOptions to objectMode\nsimplified, converted from push mode (streams 1) to proper pull mode (streams 3)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/klaw/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "0.1.0 / 2015-10-25",
    "text": "0.1.0 / 2015-10-25\n\ninitial release"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/balanced-match/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/balanced-match/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "(MIT)\nCopyright (c) 2013 Julian Gruber <julian@juliangruber.com>\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-exists/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-exists/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install --save path-exists"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-exists/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-exists/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\n// foo.js\nconst pathExists = require('path-exists');\n\npathExists('foo.js').then(exists => {\n    console.log(exists);\n    //=> true\n});"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-exists/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-exists/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\npathExists(path)\nReturns a promise for a boolean of whether the path exists.\n\n\npathExists.sync(path)\nReturns a boolean of whether the path exists."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-exists/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-exists/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\npath-exists-cli - CLI for this module"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-exists/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/path-exists/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright © 2013-present Rod Vagg and Contributors.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "6.3.0 - 2020-04-11",
    "text": "6.3.0 - 2020-04-11\n\nChanged\n\nUpgrade devDependency dependency-check from ^3.3.0 to ^4.1.0 (9193656) (@vweevers)\n\n\n\nAdded\n\nSupport running test suite on a levelup db, as well as skipping start and end tests (for multileveldown) (#364) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "6.2.3 - 2020-04-03",
    "text": "6.2.3 - 2020-04-03\n\nChanged\n\nUpgrade airtap devDependency from ^2.0.0 to ^3.0.0 (#360) (@vweevers)\n\n\n\nFixed\n\nAdd buffer and immediate for browsers (#355, #362, #363) (@Raynos, @hugomrdias, @vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "6.2.2 - 2019-10-21",
    "text": "6.2.2 - 2019-10-21\n\nAdded\n\nAdd more range tests (#353) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "6.2.1 - 2019-10-01",
    "text": "6.2.1 - 2019-10-01\n\nFixed\n\nFix manifest-test to open & close its db (#352) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "6.2.0 - 2019-09-30",
    "text": "6.2.0 - 2019-09-30\n\nChanged\n\nUpgrade hallmark devDependency from ^1.0.0 to ^2.0.0 (#349) (@vweevers)\nUpgrade standard devDependency from ^13.0.1 to ^14.0.0 (#348) (@vweevers)\n\n\n\nAdded\n\nAdd manifest (Level/community#83) (#351) (@vweevers)\nDocument mandatory methods (#350) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "6.1.1 - 2019-08-18",
    "text": "6.1.1 - 2019-08-18\n\nFixed\n\nRemove process.emitWarning because it breaks AppVeyor builds (8e963c3) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "6.1.0 - 2019-08-18",
    "text": "6.1.0 - 2019-08-18\n\nChanged\n\nUpgrade hallmark devDependency from ^0.1.0 to ^1.0.0 (#343) (@vweevers)\nUpgrade standard devDependency from ^12.0.0 to ^13.0.1 (#341) (@vweevers)\n\n\n\nAdded\n\nAdd clear() method to delete all entries or a range (#310) (@vweevers).\n\nHistorical Note The clear() method is experimental and optional for the time being. Please see the README for details."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "6.0.3 - 2019-04-26",
    "text": "6.0.3 - 2019-04-26\n\nChanged\n\nUpgrade nyc devDependency from ^13.2.0 to ^14.0.0 (#334) (@vweevers)\n\n\n\nFixed\n\nFix and test asynchronicity of empty batch (#337) (@vweevers)\nFix Level badge (8993257) (@vweevers)\nRemove link to dead website (c0abe28) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "6.0.2 - 2019-03-30",
    "text": "6.0.2 - 2019-03-30\n\nChanged\n\nUpgrade sinon devDependency from ^6.0.0 to ^7.2.4 (#330) (@ralphtheninja)\nUpgrade nyc devDependency from ^12.0.2 to ^13.2.0 (#327) (@vweevers)\nUpgrade airtap devDependency from 0.1.0 to ^2.0.0 (#323) (@vweevers)\nApply common project tweaks (#324, #325) (@vweevers)\n\n\n\nFixed\n\nFix subtests by adding t.plan() (#329) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "6.0.1 - 2018-12-27",
    "text": "6.0.1 - 2018-12-27\n\nChanged\n\nUpgrade hallmark devDependency from 0.0.2 to 0.1.0 (#316) (@vweevers)\nSplit v6 upgrade guide into sections for consumers and implementors (@vweevers)\n\n\n\nFixed\n\nRemove range tests that assumed zero-length strings or Buffers meant “not defined” (#319) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "6.0.0 - 2018-10-20",
    "text": "6.0.0 - 2018-10-20\nIf you are upgrading, please consult the Upgrade Guide.\n\nChanged\n\nUpgrade airtap devDependency from 0.0.5 to 0.1.0 (#229, #231, #245, 029f56a, #252) (@vweevers, @ralphtheninja)\nUpgrade sinon devDependency from ^5.0.0 to ^6.0.0 (#232) (@ralphtheninja)\nUpgrade standard devDependency from ^11.0.0 to ^12.0.0 (#303) (@ralphtheninja)\nReject nullish values (#277) (@vweevers)\nMake default _serializeKey and _serializeValue identity functions (#277) (@vweevers)\nDon’t coerce keys to strings to check if they’re empty, instead check arrays explicitly (#277) (@vweevers)\nMake db property mandatory and public on iterator and chained batch (#257, #309) (@vweevers)\nAlign AbstractChainedBatch#_clear with _put and _del (#257) (@vweevers)\nAdd AbstractChainedBatch#_write with options (#257) (@vweevers)\nUse level-concat-iterator instead of collectEntries (#246) (@ralphtheninja)\nDocument API and test suite (#251, #290, #295, #296, #305) (@vweevers)\nExport test suite as a single function (#271, #293, #297) (@vweevers, @ralphtheninja)\nUse factory function to create db instances in test suite (#258, #268, #282) (@ralphtheninja, @vweevers)\nIsolate snapshot tests so that they can be skipped (#239, #274) (@vweevers, @ralphtheninja)\nIsolate openAdvanced tests so that they can be skipped (#271) (@vweevers)\nRename abstract/ to test/ (#253) (@vweevers)\nRefactor internal test methods to have the same signature (test, testCommon) (#268, #275) (@ralphtheninja)\nPrefer exports.* over module.exports.* (#276) (@ralphtheninja)\nTweak copyright years for less maintenance (0b2949a) (@ralphtheninja)\n\n\n\nAdded\n\nAdd iterator#seek() (#237, #302, #307) (@vweevers, @ralphtheninja)\nAdd nyc and coveralls devDependencies for code coverage (#253) (@vweevers)\nAdd setUp and tearDown to all sub tests (#279, #289) (@ralphtheninja)\nAdd test for implementations that cannot support snapshots (#239) (@vweevers)\nAdd hallmark devDependency for Markdown style and contributors (#312) (@vweevers)\n\n\n\nRemoved\n\nRemove location (#258) (@ralphtheninja)\nRemove lastLocation, cleanup, rimraf (#249) (@vweevers)\nRemove IE10 from Sauce Labs test matrix (#312) (@vweevers)\nRemove node 9 from Travis (0b52395) (@ralphtheninja)\nRemove tests that assumed support of boolean and NaN keys (#277) (@vweevers)\nRemove range tests that assumed null meant “not defined” (#277) (@vweevers)\nRemove sync test from test/put-test.js (#300) (@ralphtheninja)\nRemove empty errorValues() test (#273) (@ralphtheninja)\nRemove default testCommon parameter (#264, #271) (@vweevers)\nRemove contributors from package.json (542f350) (@ralphtheninja)\nRemove copyright headers from code (a36c04f) (@ralphtheninja)\n\n\n\nFixed\n\nMake sure all t.throw tests check error messages correctly (#286) (@ralphtheninja)\nCheck options objects properly for null (#257, #288) (@ralphtheninja, @vweevers)\nSerialize range options same as keys (#277) (@vweevers)\nAllow nullish and empty range options (#277) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "5.0.0 - 2018-05-22",
    "text": "5.0.0 - 2018-05-22\n\nChanged\n\nUpgrade sinon to ^5.0.0 (@ralphtheninja)\nTweak README (@ralphtheninja)\nReplace const with var to support IE10 (@vweevers)\n\n\n\nAdded\n\nAdd node 10 to Travis (@ralphtheninja)\nAdd airtap for browser tests (@vweevers)\n\n\n\nRemoved\n\nRemove node 4, 5 and 7 from Travis (@ralphtheninja)\nRemove TypeScript tests (@vweevers)\nRemove TypeScript typings (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "4.0.3 - 2018-02-21",
    "text": "4.0.3 - 2018-02-21\n\nChanged\n\nUpgrade ts-node to ^5.0.0 (@zixia)\nUpgrade standard to ^11.0.0 (@ralphtheninja)\n\n\n\nFixed\n\nRemove invalid TypeScript from Batch (@Tapppi)\nAdd JSDoc to incorrectly inferred TypeScript types (@Tapppi)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "4.0.2 - 2018-02-09",
    "text": "4.0.2 - 2018-02-09\n\nFixed\n\nFix iterator#next to return this (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "4.0.1 - 2018-02-09",
    "text": "4.0.1 - 2018-02-09\n\nAdded\n\nRun test suite in TypeScript in addition to Node.js (@vweevers)\nAdd TypeScript smoke test (@vweevers)\nAdd TypeScript readme section with stability badge (@vweevers)\n\n\n\nRemoved\n\nRemove obsolete parameters from tests (@vweevers)\n\n\n\nFixed\n\nUpdate TypeScript typings for v4 (@vweevers)\nUse ES6 classes in tests to please TypeScript (@vweevers)\nDefine default methods on prototype to please TypeScript (@vweevers)\n\nHistorical Note This was released as a patch because it only changed tests and TypeScript typings (which are marked experimental and don’t follow semver)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "4.0.0 - 2018-01-20",
    "text": "4.0.0 - 2018-01-20\n\nChanged\n\nIgnore empty range options in AbstractLevelDOWN#_setupIteratorOptions (@ralphtheninja)\nMake testCommon.js the default value for testCommon parameter (@ralphtheninja)\nUse Buffer.isBuffer() instead of AbstractLevelDOWN#isBuffer (@ralphtheninja)\nCleanup iterator tests (#161) (@ralphtheninja)\nPass test function as a parameter instead of setting local global (@ralphtheninja)\nAssert batch type is 'put' or 'del' (@vweevers)\nAssert batch array elements are objects (@vweevers)\n\n\n\nAdded\n\nAdd standard for linting (#150) (@ralphtheninja)\nTest that callbacks are called asynchronously (@vweevers)\nTest serialization extensibility (@vweevers)\nAdd @vweevers to contributors (@ralphtheninja)\nAdd upgrade guide in UPGRADING.md (@ralphtheninja)\nAdd node 9 to Travis (@ralphtheninja)\n\n\n\nRemoved\n\nRemove isLevelDOWN function and corresponding tests (@ralphtheninja)\nRemove AbstractLevelDOWN#approximateSize method and corresponding tests (@ralphtheninja)\nRemove testBuffer in abstract/put-get-del-test.js (@ralphtheninja)\nRemove object value test in abstract/put-test.js (@vweevers)\nRemove serialize buffer tests (@vweevers)\nRemove serialize object tests (@vweevers)\nRemove BufferType parameter in abstract/put-get-del-test.js, use Buffer (@ralphtheninja)\n\n\n\nFixed\n\nEnsure stores are closed properly (fixes problems on Windows) (@ralphtheninja)\nCall back errors on next tick to avoid zalgo (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "3.0.0 - 2017-11-04",
    "text": "3.0.0 - 2017-11-04\n\nAdded\n\nAdd node version badge (@vweevers)\n\n\n\nRemoved\n\nDrop support for 0.12. Cause for new major version! (@vweevers)\n\n\n\nFixed\n\nFix errors in index.d.ts (@sandersn)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "2.7.2 - 2017-10-11",
    "text": "2.7.2 - 2017-10-11\n\nChanged\n\nUpdate README with new style (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "2.7.1 - 2017-09-30",
    "text": "2.7.1 - 2017-09-30\n\nChanged\n\nRefactor typings as ES2015 module (@MeirionHughes)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "2.7.0 - 2017-09-12",
    "text": "2.7.0 - 2017-09-12\n\nAdded\n\nAdd TypeScript definitions in index.d.ts (@MeirionHughes)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "2.6.3 - 2017-09-05",
    "text": "2.6.3 - 2017-09-05\n\nChanged\n\nUpgrade dependencies (@ralphtheninja)\nConvert nullish values to empty strings (@bigeasy)\nUse t.equal(a, b) instead of t.ok(a === b) (@bigeasy)\nRelax tests for serializing object in abstract/chained-batch-test.js (@ralphtheninja)\n\n\n\nAdded\n\nAdd GreenKeeper (@ralphtheninja)\nTest key/value serialization (@bigeasy)\nTest undefined value serializing to empty string (@ralphtheninja)\n\n\n\nFixed\n\nDocument .status property (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "2.6.2 - 2017-07-30",
    "text": "2.6.2 - 2017-07-30\n\nChanged\n\nUpgrade dependencies and float devDependencies (@ralphtheninja)\nUpdate copyright years (@ralphtheninja)\nUpdate node versions on Travis (@ralphtheninja)\n\n\n\nAdded\n\nTest serialization extensibility (@juliangruber)\n\n\n\nFixed\n\nFix put test on object serialization (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "2.6.1 - 2016-09-12",
    "text": "2.6.1 - 2016-09-12\n\nFixed\n\nFix null case in default value serializer (fixes problems in 2.6.0) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-23",
    "title": "3327 Research",
    "section": "2.6.0 - 2016-03-10",
    "text": "2.6.0 - 2016-03-10\n\nChanged\n\nUse proto delegation to patch methods on db (@deanlandolt)\nAllow serialization functions to return buffers (@deanlandolt)\n\n\n\nAdded\n\nAdd collectBatchOps function to buffer _put and _del inputs in abstract/chained-batch-test.js (@deanlandolt)\n\n\n\nRemoved\n\nRemove unnecessary initialization hackery in abstract/chained-batch-test.js (@deanlandolt)\n\nHistorical Note This release was a breaking change. See @juliangruber’s comment for more information."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-24",
    "title": "3327 Research",
    "section": "2.5.0 - 2016-05-01",
    "text": "2.5.0 - 2016-05-01\n\nChanged\n\nUpgrade dependencies and add more node versions to Travis (@ralphtheninja)\n\n\n\nAdded\n\nAdd dependency badge to README (@ralphtheninja)\nAdd AbstractLevelDOWN#_serializeKey (@juliangruber)\nAdd AbstractLevelDOWN#_serializeValue (@juliangruber)\nAdd AbstractChainedBatch#_serializeKey (@juliangruber)\nAdd AbstractChainedBatch#_serializeValue (@juliangruber)\nTest _serialize with object and buffer (@juliangruber)\n\n\n\nRemoved\n\nRemove stringification of keys and values (@juliangruber)\nRemove .toBuffer (@juliangruber)\n\n\n\nFixed\n\nUpdate memdown url (@ralphtheninja)\nAbstractLevelDOWN#._checkKey does not take three parameters (@ralphtheninja)\nOnly show build status for the master branch (@watson)\nFix minor typos in README (@timkuijsten)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-25",
    "title": "3327 Research",
    "section": "2.4.1 - 2015-08-29",
    "text": "2.4.1 - 2015-08-29\n\nFixed\n\nRemove use of const (@nolanlawson)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-26",
    "title": "3327 Research",
    "section": "2.4.0 - 2015-05-19",
    "text": "2.4.0 - 2015-05-19\n\nAdded\n\nAdd .status property to AbstractLevelDOWN (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-27",
    "title": "3327 Research",
    "section": "2.3.1 - 2015-05-18",
    "text": "2.3.1 - 2015-05-18\n\nAdded\n\nLink to level/community (@ralphtheninja)\n\n\n\nRemoved\n\nExtract Contributors section from README into level/community (@ralphtheninja)\n\n\n\nFixed\n\nDocument isLevelDown function (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-28",
    "title": "3327 Research",
    "section": "2.3.0 - 2015-05-18",
    "text": "2.3.0 - 2015-05-18\n\nChanged\n\nUse t.equal(a, b) instead of t.ok(a === b) (@juliangruber)\nExport API from index.js (@ralphtheninja)\n\n\n\nAdded\n\nImport isLevelDOWN function to is-leveldown.js (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-29",
    "title": "3327 Research",
    "section": "2.2.2 - 2015-05-13",
    "text": "2.2.2 - 2015-05-13\n\nFixed\n\nRevert changes to location in 2.2.1 (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-30",
    "title": "3327 Research",
    "section": "2.2.1 - 2015-05-12",
    "text": "2.2.1 - 2015-05-12\n\nFixed\n\nCopy paste error gave wrong test description (@ralphtheninja)\nt.throws() is different for tape (@ralphtheninja)\nAssert location is not an empty string (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-31",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-31",
    "title": "3327 Research",
    "section": "2.2.0 - 2015-05-10",
    "text": "2.2.0 - 2015-05-10\n\nAdded\n\nTest { sync: true } option in abstract/put-test.js (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-32",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-32",
    "title": "3327 Research",
    "section": "2.1.4 - 2015-04-28",
    "text": "2.1.4 - 2015-04-28\n\nFixed\n\nUse t.equal() with tape (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-33",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-33",
    "title": "3327 Research",
    "section": "2.1.3 - 2015-04-28",
    "text": "2.1.3 - 2015-04-28\n\nChanged\n\nChange from tap to tape (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-34",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-34",
    "title": "3327 Research",
    "section": "2.1.2 - 2015-04-27",
    "text": "2.1.2 - 2015-04-27\n\nChanged\n\nConvert buffer to string so we can compare (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-35",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-35",
    "title": "3327 Research",
    "section": "2.1.1 - 2015-04-27",
    "text": "2.1.1 - 2015-04-27\n\nChanged\n\nUpdate logo and copyright (@ralphtheninja)\n\n\n\nAdded\n\nAdd @ralphtheninja to contributors (@ralphtheninja)\nAdd 0.12 and iojs to Travis (@ralphtheninja)\n\n\n\nFixed\n\nInclude .nonErrorValues() test in abstract/put-get-del-test.js (@hden)\nrvagg/node-abstract-leveldown moved to level/abstract-leveldown (@ralphtheninja)\nFix Travis for 0.8 (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-36",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-36",
    "title": "3327 Research",
    "section": "2.1.0 - 2014-11-09",
    "text": "2.1.0 - 2014-11-09\n\nChanged\n\nUse setTimeout instead of process.nextTick (@bigeasy)\n\n\n\nAdded\n\nAdd @watson to contributors (@rvagg)\n\n\n\nFixed\n\nDon’t fail if no value is returned by ._get (@watson)\nUse error test function when testing for errors (@watson)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-37",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-37",
    "title": "3327 Research",
    "section": "2.0.3 - 2014-10-02",
    "text": "2.0.3 - 2014-10-02\nNo change."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-38",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-38",
    "title": "3327 Research",
    "section": "2.0.2 - 2014-10-02",
    "text": "2.0.2 - 2014-10-02\n\nAdded\n\nTest atomic batch operations (@calvinmetcalf)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-39",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-39",
    "title": "3327 Research",
    "section": "2.0.1 - 2014-09-01",
    "text": "2.0.1 - 2014-09-01\n\nChanged\n\nSet default values for options to .open, .get, .put, .del and .batch (@watson)\nUpdate pattern for setting default options for the iterator (@watson)\nAllow boolean options to be falsy/truthy (@watson)\n\n\n\nRemoved\n\nRemove default options that are too LevelDOWN specific (@watson)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-40",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-40",
    "title": "3327 Research",
    "section": "2.0.0 - 2014-08-26",
    "text": "2.0.0 - 2014-08-26\n\nChanged\n\nSwitch to allowing writes of empty values, null, undefined, '', [] and empty buffer (@juliangruber)\nRename AbstractLevelDOWN#_checkKeyValue to AbstractLevelDOWN#_checkKey (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-41",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-41",
    "title": "3327 Research",
    "section": "1.0.0 - 2014-08-24",
    "text": "1.0.0 - 2014-08-24\n\nChanged\n\nEnsure Boolean iterator options are Boolean (@watson)\n\n\n\nAdded\n\nTest that an error is thrown when location isn’t a string (@calvinmetcalf)\nTest opening and closing the store (@calvinmetcalf)\nTest iterator with limit set to 0 (@watson)\nAdd more tests to abstract/batch-test.js (@calvinmetcalf)\nSet default values of iterator options (@watson)\nAccount for batch options that are null (@calvinmetcalf)\n\n\n\nRemoved\n\nRemove options.start hackery (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-42",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-42",
    "title": "3327 Research",
    "section": "0.12.4 - 2014-08-20",
    "text": "0.12.4 - 2014-08-20\n\nChanged\n\nChange license to plain MIT (@andrewrk)\n\n\n\nAdded\n\nTest that simple-iterator returns buffers (@kesla)\nTest implicit snapshots (@kesla)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-43",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-43",
    "title": "3327 Research",
    "section": "0.12.3 - 2014-06-27",
    "text": "0.12.3 - 2014-06-27\n\nChanged\n\nUpgrade xtend dependency (@andrewrk)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-44",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-44",
    "title": "3327 Research",
    "section": "0.12.2 - 2014-04-26",
    "text": "0.12.2 - 2014-04-26\n\nChanged\n\nHave isTypedArray check for existence of ArrayBuffer and Uint8Array constructors before usage (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-45",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-45",
    "title": "3327 Research",
    "section": "0.12.1 - 2014-04-26",
    "text": "0.12.1 - 2014-04-26\n\nChanged\n\nSet default BufferType in abstract/put-get-del-test.js to Buffer instead of ArrayBuffer (@maxogden)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-46",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-46",
    "title": "3327 Research",
    "section": "0.12.0 - 2014-03-12",
    "text": "0.12.0 - 2014-03-12\n\nChanged\n\nRevert to pure Buffer and remove usage of Uint16Array (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-47",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-47",
    "title": "3327 Research",
    "section": "0.11.4 - 2014-03-11",
    "text": "0.11.4 - 2014-03-11\n\nRemoved\n\nRemove duplicate call to t.end() (@maxogden)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-48",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-48",
    "title": "3327 Research",
    "section": "0.11.3 - 2014-01-26",
    "text": "0.11.3 - 2014-01-26\n\nChanged\n\nLoosen the buffer type check (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-49",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-49",
    "title": "3327 Research",
    "section": "0.11.2 - 2013-12-05",
    "text": "0.11.2 - 2013-12-05\n\nAdded\n\nAdd npm badges (@rvagg)\n\n\n\nFixed\n\nFix iterator tests in test.js (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-50",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-50",
    "title": "3327 Research",
    "section": "0.11.1 - 2013-11-15",
    "text": "0.11.1 - 2013-11-15\n\nChanged\n\nAdjust abstract/approximate-size-test.js to account for snappy compression (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-51",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-51",
    "title": "3327 Research",
    "section": "0.11.0 - 2013-10-14",
    "text": "0.11.0 - 2013-10-14\n\nAdded\n\nNormalize iterator() options with AbstractLevelDOWN#_setupIteratorOptions (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-52",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-52",
    "title": "3327 Research",
    "section": "0.10.2 - 2013-09-06",
    "text": "0.10.2 - 2013-09-06\n\nChanged\n\nRefactor duplicated versions of isTypedArray into abstract/util.js (@rvagg)\nRefactor duplicated versions of 'NotFound' checks into abstract/util.js, fixed too-strict version in get-test.js (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-53",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-53",
    "title": "3327 Research",
    "section": "0.10.1 - 2013-08-29",
    "text": "0.10.1 - 2013-08-29\n\nChanged\n\nRelax check for Not Found error message to be case insensitive in get-test.js (@rvagg)\n\n\n\nAdded\n\nAdd @substack to contributors (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-54",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-54",
    "title": "3327 Research",
    "section": "0.10.0 - 2013-08-19",
    "text": "0.10.0 - 2013-08-19\n\nAdded\n\nTest gt, gte, lt and lte ranges (@dominictarr)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-55",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-55",
    "title": "3327 Research",
    "section": "0.9.0 - 2013-08-11",
    "text": "0.9.0 - 2013-08-11\n\nChanged\n\nMake AbstractChainedBatch extensible (@kesla)\nExport AbstractChainedBatch from abstract-leveldown.js (@kesla)\n\n\n\nAdded\n\nTest simultaneous get’s (@kesla)\nTest AbstractChainedBatch extensibility (@kesla)\n\n\n\nFixed\n\nFix broken test assertion in abstract/get-test.js (@rvagg)\nFix tests that weren’t running properly (@kesla)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-56",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-56",
    "title": "3327 Research",
    "section": "0.8.2 - 2013-08-02",
    "text": "0.8.2 - 2013-08-02\nNo changes. Merely published changes made in 0.8.1."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-57",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-57",
    "title": "3327 Research",
    "section": "0.8.1 - 2013-08-02",
    "text": "0.8.1 - 2013-08-02\n\nChanged\n\nRemove use of const in testCommon.js (@rvagg)\n\nHistorical Note The version in package.json was changed from 0.7.4 to 0.8.1. The 0.8.1 tag exists but this version was never published to npm."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-58",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-58",
    "title": "3327 Research",
    "section": "0.8.0 - 2013-08-02",
    "text": "0.8.0 - 2013-08-02\n\nChanged\n\nUse process.browser check instead of process.title == 'browser' (@rvagg)\n\n\n\nAdded\n\nAdd BufferType parameter to abstract/put-get-del-test.js for bops support (@rvagg)\nAdd isTypedArray function which checks ArrayBuffer or Uint8Array for bops support (@rvagg)\n\n\n\nFixed\n\nFix cleanup function not calling back when browserified (@rvagg)\n\nHistorical Note It seems the version in package.json was never changed to 0.8.0 in the git history, even though the 0.8.0 tag exists. Most likely package.json was modified locally during npm publish but was never committed."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-59",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-59",
    "title": "3327 Research",
    "section": "0.7.4 - 2013-08-02",
    "text": "0.7.4 - 2013-08-02\n\nFixed\n\nFix problems related to browserify and rimraf (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-60",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-60",
    "title": "3327 Research",
    "section": "0.7.3 - 2013-07-26",
    "text": "0.7.3 - 2013-07-26\n\nAdded\n\nAdd @pgte to contributors (@rvagg)\nTest iterator with limit set to -1 (@kesla)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-61",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-61",
    "title": "3327 Research",
    "section": "0.7.2 - 2013-07-08",
    "text": "0.7.2 - 2013-07-08\n\nChanged\n\nFreeze chained batch state after .write() has been called (@rvagg)\nMake NotFound error case insensitive (@rvagg)\nUse self rather than binding functions to this (@juliangruber)\n\n\n\nAdded\n\nAdd AbstractChainedBatch#_checkWritten (@rvagg)\nTest delete on non-existent key (@rvagg)\nTest iterator with start after database end (@juliangruber)\n\n\n\nFixed\n\nDon’t coerce values to strings in browser (@maxogden)\nMake tests work in node and browser (@maxogden)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-62",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-62",
    "title": "3327 Research",
    "section": "0.7.1 - 2013-05-15",
    "text": "0.7.1 - 2013-05-15\n\nChanged\n\nAdjust tests to be browserable (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-63",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-63",
    "title": "3327 Research",
    "section": "0.7.0 - 2013-05-14",
    "text": "0.7.0 - 2013-05-14\n\nAdded\n\nAdd AbstractChainedBatch#clear (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-64",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-64",
    "title": "3327 Research",
    "section": "0.6.1 - 2013-05-14",
    "text": "0.6.1 - 2013-05-14\n\nChanged\n\nMake AbstractIterator call back with an error instead of throwing on nexting and ending (@mcollina)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-65",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-65",
    "title": "3327 Research",
    "section": "0.6.0 - 2013-05-14",
    "text": "0.6.0 - 2013-05-14\n\nChanged\n\nSplit t.deepEqual() into multiple t.equal() in abstract/iterator-test.js (@rvagg)\nMake AbstractIterator call back with an error instead of throwing on nexting and ending (@mcollina)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-66",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-66",
    "title": "3327 Research",
    "section": "0.5.0 - 2013-05-14",
    "text": "0.5.0 - 2013-05-14\n\nChanged\n\nMake iterator.end(cb) and iterator.next(cb) call back with an error instead of throwing (@mcollina)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-67",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-67",
    "title": "3327 Research",
    "section": "0.4.0 - 2013-05-14",
    "text": "0.4.0 - 2013-05-14\n\nChanged\n\nMove AbstractIterator from abstract-leveldown.js to abstract-iterator.js (@rvagg)\n\n\n\nAdded\n\nAdd AbstractChainedBatch (@rvagg)\nAdd AbstractLevelDOWN#_chainedBatch (@rvagg)\nAdd abstract/batch-test.js and abstract/chained-batch-test.js (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-68",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-68",
    "title": "3327 Research",
    "section": "0.4.0-1 - 2013-05-14",
    "text": "0.4.0-1 - 2013-05-14\n\nAdded\n\nAdd @No9 and @mcollina to contributors (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-69",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-69",
    "title": "3327 Research",
    "section": "0.3.0 - 2013-05-04",
    "text": "0.3.0 - 2013-05-04\n\nChanged\n\nUse this._checkKeyValue() instead of local function (@rvagg)\nUse this._isBuffer() instead of Buffer.isBuffer() (@rvagg)\n\n\n\nAdded\n\nRestore test for opening the database without options (@rvagg)\nAdd AbstractLevelDOWN#_isBuffer so it can be overridden (@rvagg)\nAdd AbstractLevelDOWN#_checkKeyValue so it can be overridden (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-70",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-70",
    "title": "3327 Research",
    "section": "0.2.3 - 2013-05-04",
    "text": "0.2.3 - 2013-05-04\n\nRemoved\n\nRemove test for opening the database without options (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-71",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-71",
    "title": "3327 Research",
    "section": "0.2.2 - 2013-05-04",
    "text": "0.2.2 - 2013-05-04\n\nChanged\n\nSplit .open() tests into .open() and .openAdvanced() (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-72",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-72",
    "title": "3327 Research",
    "section": "0.2.1 - 2013-05-04",
    "text": "0.2.1 - 2013-05-04\n\nChanged\n\nConvert values to string in abstract/put-get-del-test.js if Buffer is undefined (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-73",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-73",
    "title": "3327 Research",
    "section": "0.2.0 - 2013-05-04",
    "text": "0.2.0 - 2013-05-04\n\nChanged\n\nConvert values to string in abstract/get-test.js if Buffer is undefined (@rvagg)\nDon’t stringify keys and values in abstract/iterator-test.js (@maxogden)\n\n\n\nAdded\n\nAdd process.browser check for start and end keys in browser (@maxogden)\nAdd levelup contributors (@rvagg)\n\n\n\nFixed\n\nFix tape compatibility issues (@maxogden)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-74",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-74",
    "title": "3327 Research",
    "section": "0.1.0 - 2013-04-23",
    "text": "0.1.0 - 2013-04-23\n\nAdded\n\nImport abstract tests from leveldown (@maxogden)\n\n\n\nFixed\n\nClarify README (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-75",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-75",
    "title": "3327 Research",
    "section": "0.0.2 - 2013-03-18",
    "text": "0.0.2 - 2013-03-18\n\nChanged\n\nExport checkKeyValue (@rvagg)\n\n\n\nAdded\n\nAdd node 0.10 to Travis (@rvagg)\nAdd Buffer.isBuffer() checks to keys and values (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-76",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-76",
    "title": "3327 Research",
    "section": "0.0.1 - 2013-03-18",
    "text": "0.0.1 - 2013-03-18\n\nAdded\n\nAdd checkKeyValue function for more complete error checking (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-77",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CHANGELOG.html#section-77",
    "title": "3327 Research",
    "section": "0.0.0 - 2013-03-15",
    "text": "0.0.0 - 2013-03-15\nFirst release. :seedling:"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CONTRIBUTORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/CONTRIBUTORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "Contributors\n\n\n\nName\nGitHub\nSocial\n\n\n\n\nRod Vagg\n@rvagg\n@rvagg@twitter\n\n\nVincent Weevers\n@vweevers\n@vweevers@twitter\n\n\nLars-Magnus Skog\n@ralphtheninja\n@ralph@social.weho.st\n\n\nJulian Gruber\n@juliangruber\n@juliangruber@twitter\n\n\nDavid Björklund\n@kesla\n@david_bjorklund@twitter\n\n\nMax Ogden\n@maxogden\n@maxogden@twitter\n\n\nThomas Watson Steen\n\n\n\n\nAlan Gutierrez\n@bigeasy\n@bigeasy@twitter\n\n\nDean Landolt\n@deanlandolt\n\n\n\nCalvin Metcalf\n@calvinmetcalf\n\n\n\nMeirion Hughes\n@MeirionHughes\n\n\n\nMatteo Collina\n@mcollina\n@matteocollina@twitter\n\n\nAndrew Kelley\n@andrewrk\n\n\n\nTapani Moilanen\n@Tapppi\n\n\n\nDominic Tarr\n@dominictarr\n@dominictarr@twitter\n\n\nHao-kang Den\n\n\n\n\nHugo Dias\n\n\n\n\nJake Verbaten\n@Raynos\n@raynos@twitter\n\n\nKyle Robinson Young\n@shama\n@shamakry@twitter\n\n\nNathan Shively-Sanders\n@sandersn\n\n\n\nNolan Lawson\n@nolanlawson\n@nolan@toot.cafe\n\n\nTim Kuijsten\n@timkuijsten\n@timkuijsten@mastodon.social\n\n\nTim Oxley\n@timoxley\n@secoif@twitter"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/UPGRADING.html#table-of-contents",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/UPGRADING.html#table-of-contents",
    "title": "3327 Research",
    "section": "Table of Contents",
    "text": "Table of Contents\n\n\nClick to expand\n\n\nv6\nv5\nv4\nv3"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/UPGRADING.html#v6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/UPGRADING.html#v6",
    "title": "3327 Research",
    "section": "v6",
    "text": "v6\nThis release brings a major refactoring of the test suite, decouples abstract-leveldown from disk-based implementations and solves long-standing issues around serialization and type support. Because the changes are substantial, this guide has two sections:\n\nChanges to public API - for consumers of any implementation.\nChanges to private API - intended for implementors.\n\n\nChanges to public API\n\nNullish values are rejected\nIn addition to rejecting null and undefined as keys, abstract-leveldown now also rejects these types as values, due to preexisting significance in streams and iterators.\nBefore this, the behavior of these types depended on a large number of factors: _serializeValue and type support of the underlying storage, whether get(), iterator() or a stream was used to retrieve values, the keys and asBuffer options of iterator() and finally, which encoding was selected.\n\n\nRange options are serialized\nPreviously, range options like lt were passed through as-is, unlike keys.\n\n\nThe rules for range options have been relaxed\nBecause null, undefined, zero-length strings and zero-length buffers are significant types in encodings like bytewise and charwise, they became valid as range options. In fact, any type is now valid. This means db.iterator({ gt: undefined }) is not the same as db.iterator({}).\nFurthermore, abstract-leveldown makes no assumptions about the meaning of these types. Range tests that assumed null meant “not defined” have been removed.\n\n\nZero-length array keys are rejected\nThough this was already the case because _checkKey stringified its input before checking the length, that behavior has been replaced with an explicit Array.isArray() check and a new error message.\n\n\nNo longer assumes support of boolean and NaN keys\nA test that asserted boolean and NaN keys were valid has been removed.\n\n\nBrowser support\nIE10 has been dropped.\n\n\n\nChanges to private API\n\nlocation was removed\nAbstractLevelDOWN is no longer associated with a location. It’s up to the implementation to handle it if it’s required.\nIf your implementation has a location and you previously did:\nfunction YourDOWN (location) {\n  AbstractLevelDOWN.call(this, location)\n}\nYou must now do:\nfunction YourDOWN (location) {\n  this.location = location\n  AbstractLevelDOWN.call(this)\n}\nBe sure to include appropriate type checks. If you relied on the default AbstractLevelDOWN behavior that would be:\nif (typeof location !== 'string') {\n  throw new Error('constructor requires a location string argument')\n}\n\n\nAbstract test suite has moved to a single entry point\nInstead of including test files individually, you can and should include the test suite with one require() statement. If you previously did:\nconst test = require('tape')\nconst testCommon = require('abstract-leveldown/testCommon')\nconst YourDOWN = require('.')\n\nrequire('abstract-leveldown/abstract/get-test').all(YourDOWN, test, testCommon)\nrequire('abstract-leveldown/abstract/put-test').all(YourDOWN, test, testCommon)\n\n// etc\nYou must now do:\nconst test = require('tape')\nconst suite = require('abstract-leveldown/test')\nconst YourDOWN = require('.')\n\nsuite({\n  test: test,\n  factory: function () {\n    return new YourDOWN()\n  }\n})\nThe input to the test suite is a new form of testCommon. Should you need to reuse testCommon for your own (additional) tests, use the included utility to create a testCommon with defaults:\nconst test = require('tape')\nconst suite = require('abstract-leveldown/test')\nconst YourDOWN = require('.')\n\nconst testCommon = suite.common({\n  test: test,\n  factory: function () {\n    return new YourDOWN()\n  }\n})\n\nsuite(testCommon)\nAs part of removing location, the abstract tests no longer use testCommon.location(). Instead an implementation must implement factory() which must return a unique and isolated database instance. This allows implementations to pass options to their constructor.\nThe testCommon.cleanup method has been removed. Because factory() returns a unique database instance, cleanup should no longer be necessary. The testCommon.lastLocation method has also been removed as there is no remaining use of it in abstract tests.\nPreviously, implementations using the default testCommon had to include rimraf in their devDependencies and browser-based implementations had to exclude rimraf from browserify builds. This is no longer the case.\nIf your implementation is disk-based we recommend using tempy (or similar) to create unique temporary directories. Together with factory() your setup could now look something like:\nconst test = require('tape')\nconst tempy = require('tempy')\nconst suite = require('abstract-leveldown/test')\nconst YourDOWN = require('.')\n\nsuite({\n  test: test,\n  factory: function () {\n    return new YourDOWN(tempy.directory())\n  }\n})\n\n\nThe collectEntries utility has moved\nThe testCommon.collectEntries method has moved to the npm package level-concat-iterator. If your (additional) tests depend on collectEntries and you previously did:\ntestCommon.collectEntries(iterator, function (err, entries) {})\nYou must now do:\nconst concat = require('level-concat-iterator')\nconcat(iterator, function (err, entries) {})\n\n\nSetup and teardown became noops\nBecause cleanup is no longer necessary, the testCommon.setUp and testCommon.tearDown methods are now noops by default. If you do need to perform (a)synchronous work before or after each test, setUp and tearDown can be overridden:\nsuite({\n  // ..\n  setUp: function (t) {\n    t.end()\n  },\n  tearDown: function (t) {\n    t.end()\n  }\n})\n\n\nOptional tests have been separated\nIf your implementation does not support snapshots or other optional features, the relevant tests may be skipped. For example:\nsuite({\n  // ..\n  snapshots: false\n})\nPlease see the README for a list of options. Note that some of these have replaced process.browser checks.\n\n\nIterator must have a db reference\nThe db argument of the AbstractIterator constructor became mandatory, as well as a public db property on the instance. Its existence is not new; the test suite now asserts that your implementation also has it.\n\n\nSeeking became part of official API\nIf your implementation previously defined the public iterator.seek(target), it must now define the private iterator._seek(target). The new public API is equal to the reference implementation of leveldown except for two differences:\n\nThe target argument is not type checked, this is up to the implementation.\nThe target argument is passed through db._serializeKey.\n\nPlease see the README for details.\n\n\nChained batch has been refactored\n\nThe default _clear method is no longer a noop; instead it clears the operations queued by _put and/or _del\nThe _write method now takes an options object as its first argument\nThe db argument of the AbstractChainedBatch constructor became mandatory, as well as a public db property on the instance, which was previously named _db.\n\n\n\nDefault _serializeKey and _serializeValue became identity functions\nThey return whatever is given. Previously they were opinionated and mostly geared towards string- and Buffer-based storages. Implementations that didn’t already define their own serialization should now do so, according to the types that they support. Please refer to the README for recommended behavior."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/UPGRADING.html#v5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/UPGRADING.html#v5",
    "title": "3327 Research",
    "section": "v5",
    "text": "v5\nDropped support for node 4. No other breaking changes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/UPGRADING.html#v4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/UPGRADING.html#v4",
    "title": "3327 Research",
    "section": "v4",
    "text": "v4\n\ndefault testCommon parameter\nThe testCommon parameter will now default to abstract-leveldown/testCommon.js. You can omit this parameter, unless your implementation needs a custom version.\nIf your code today looks something like:\nconst test = require('tape')\nconst testCommon = require('abstract-leveldown/testCommon')\nconst leveldown = require('./your-leveldown')\nconst abstract = require('abstract-leveldown/abstract/get-test')\n\nabstract.all(leveldown, test, testCommon)\nYou can simplify it to:\nconst test = require('tape')\nconst leveldown = require('./your-leveldown')\nconst abstract = require('abstract-leveldown/abstract/get-test')\n\nabstract.all(leveldown, test)\n\n\ntestBuffer parameter removed\nThe abstract/put-get-del-test.js previously took a custom testBuffer parameter. After an analysis of various implementations we came to the conclusion that the parameter has no use.\nIf your implementation is using this abstract test, change from:\nconst test = require('tape')\nconst testCommon = require('abstract-leveldown/testCommon')\nconst leveldown = require('./your-leveldown')\nconst fs = require('fs')\nconst path = require('path')\nconst testBuffer = fs.readFileSync(path.join(__dirname, 'data/testdata.bin'))\nconst abstract = require('abstract-leveldown/abstract/put-get-del-test')\n\nabstract.all(leveldown, test, testBuffer, testCommon)\nto:\nconst test = require('tape')\nconst testCommon = require('abstract-leveldown/testCommon')\nconst leveldown = require('./your-leveldown')\nconst abstract = require('abstract-leveldown/abstract/put-get-del-test')\n\nabstract.all(leveldown, test, testCommon)\nor if testCommon is also redundant, to:\nconst test = require('tape')\nconst leveldown = require('./your-leveldown')\nconst abstract = require('abstract-leveldown/abstract/put-get-del-test')\n\nabstract.all(leveldown, test)\n\n\n.approximateSize method removed\nThe .approximateSize method has been removed from the public API. It is heavily related to LevelDB and more often than not, other stores lack the native primitives to implement this. If you did implement the internal _approximateSize method, that is now dead code. To preserve the method in your public API, rename it to approximateSize and also take care of the initialization code. Look to leveldown for inspiration.\nAlso, the corresponding abstract tests have been removed, so your implementation can no longer require abstract/approximate-size-test.\n\n\n._isBuffer method removed\nBecause Buffer is available in all environments nowadays, there is no need for alternatives like typed arrays. It is preferred to use Buffer and Buffer.isBuffer() directly.\n\n\nisLevelDOWN function removed\nThis was a legacy function.\n\n\nranges-test.js renamed\nWe have refactored a lot of the tests. Specifically the iterator tests were split in two and in that process we renamed ranges-test.js to iterator-range-test.js.\nIf your implementation is using these tests then change from:\nconst abstract = require('abstract-leveldown/abstract/ranges-test')\nto:\nconst abstract = require('abstract-leveldown/abstract/iterator-range-test')"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/UPGRADING.html#v3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/abstract-leveldown/UPGRADING.html#v3",
    "title": "3327 Research",
    "section": "v3",
    "text": "v3\nNo changes to the API. New major version because support for node 0.12 was dropped."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/prr/LICENSE.html#copyright-c-2014-rod-vagg",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/prr/LICENSE.html#copyright-c-2014-rod-vagg",
    "title": "3327 Research",
    "section": "Copyright (c) 2014 Rod Vagg",
    "text": "Copyright (c) 2014 Rod Vagg\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/resolve/readme.html#resolveid-opts-cb",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/resolve/readme.html#resolveid-opts-cb",
    "title": "3327 Research",
    "section": "resolve(id, opts={}, cb)",
    "text": "resolve(id, opts={}, cb)\nAsynchronously resolve the module path string id into cb(err, res [, pkg]), where pkg (if defined) is the data from package.json.\noptions are:\n\nopts.basedir - directory to begin resolving from\nopts.package - package.json data applicable to the module being loaded\nopts.extensions - array of file extensions to search in order\nopts.readFile - how to read files asynchronously\nopts.isFile - function to asynchronously test whether a file exists\nopts.isDirectory - function to asynchronously test whether a directory exists\nopts.realpath - function to asynchronously resolve a potential symlink to its real path\nopts.packageFilter(pkg, pkgfile, dir) - transform the parsed package.json contents before looking at the “main” field\n\npkg - package data\npkgfile - path to package.json\ndir - directory for package.json\n\nopts.pathFilter(pkg, path, relativePath) - transform a path within a package\n\npkg - package data\npath - the path being resolved\nrelativePath - the path relative from the package.json location\nreturns - a relative path that will be joined from the package.json location\n\nopts.paths - require.paths array to use if nothing is found on the normal node_modules recursive walk (probably don’t use this)\nFor advanced users, paths can also be a opts.paths(request, start, opts) function\n\nrequest - the import specifier being resolved\nstart - lookup path\ngetNodeModulesDirs - a thunk (no-argument function) that returns the paths using standard node_modules resolution\nopts - the resolution options\n\nopts.packageIterator(request, start, opts) - return the list of candidate paths where the packages sources may be found (probably don’t use this)\n\nrequest - the import specifier being resolved\nstart - lookup path\ngetPackageCandidates - a thunk (no-argument function) that returns the paths using standard node_modules resolution\nopts - the resolution options\n\nopts.moduleDirectory - directory (or directories) in which to recursively look for modules. default: \"node_modules\"\nopts.preserveSymlinks - if true, doesn’t resolve basedir to real path before resolving. This is the way Node resolves dependencies when executed with the –preserve-symlinks flag. Note: this property is currently true by default but it will be changed to false in the next major version because Node’s resolution algorithm does not preserve symlinks by default.\n\ndefault opts values:\n{\n    paths: [],\n    basedir: __dirname,\n    extensions: ['.js'],\n    readFile: fs.readFile,\n    isFile: function isFile(file, cb) {\n        fs.stat(file, function (err, stat) {\n            if (!err) {\n                return cb(null, stat.isFile() || stat.isFIFO());\n            }\n            if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n            return cb(err);\n        });\n    },\n    isDirectory: function isDirectory(dir, cb) {\n        fs.stat(dir, function (err, stat) {\n            if (!err) {\n                return cb(null, stat.isDirectory());\n            }\n            if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n            return cb(err);\n        });\n    },\n    realpath: function realpath(file, cb) {\n       var realpath = typeof fs.realpath.native === 'function' ? fs.realpath.native : fs.realpath;\n       realpath(file, function (realPathErr, realPath) {\n           if (realPathErr && realPathErr.code !== 'ENOENT') cb(realPathErr);\n           else cb(null, realPathErr ? file : realPath);\n       });\n   },\n    moduleDirectory: 'node_modules',\n    preserveSymlinks: true\n}"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/resolve/readme.html#resolve.syncid-opts",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/resolve/readme.html#resolve.syncid-opts",
    "title": "3327 Research",
    "section": "resolve.sync(id, opts)",
    "text": "resolve.sync(id, opts)\nSynchronously resolve the module path string id, returning the result and throwing an error when id can’t be resolved.\noptions are:\n\nopts.basedir - directory to begin resolving from\nopts.extensions - array of file extensions to search in order\nopts.readFile - how to read files synchronously\nopts.isFile - function to synchronously test whether a file exists\nopts.isDirectory - function to synchronously test whether a directory exists\nopts.realpathSync - function to synchronously resolve a potential symlink to its real path\nopts.packageFilter(pkg, dir) - transform the parsed package.json contents before looking at the “main” field\n\npkg - package data\ndir - directory for package.json (Note: the second argument will change to “pkgfile” in v2)\n\nopts.pathFilter(pkg, path, relativePath) - transform a path within a package\n\npkg - package data\npath - the path being resolved\nrelativePath - the path relative from the package.json location\nreturns - a relative path that will be joined from the package.json location\n\nopts.paths - require.paths array to use if nothing is found on the normal node_modules recursive walk (probably don’t use this)\nFor advanced users, paths can also be a opts.paths(request, start, opts) function\n\nrequest - the import specifier being resolved\nstart - lookup path\ngetNodeModulesDirs - a thunk (no-argument function) that returns the paths using standard node_modules resolution\nopts - the resolution options\n\nopts.packageIterator(request, start, opts) - return the list of candidate paths where the packages sources may be found (probably don’t use this)\n\nrequest - the import specifier being resolved\nstart - lookup path\ngetPackageCandidates - a thunk (no-argument function) that returns the paths using standard node_modules resolution\nopts - the resolution options\n\nopts.moduleDirectory - directory (or directories) in which to recursively look for modules. default: \"node_modules\"\nopts.preserveSymlinks - if true, doesn’t resolve basedir to real path before resolving. This is the way Node resolves dependencies when executed with the –preserve-symlinks flag. Note: this property is currently true by default but it will be changed to false in the next major version because Node’s resolution algorithm does not preserve symlinks by default.\n\ndefault opts values:\n{\n    paths: [],\n    basedir: __dirname,\n    extensions: ['.js'],\n    readFileSync: fs.readFileSync,\n    isFile: function isFile(file) {\n        try {\n            var stat = fs.statSync(file);\n        } catch (e) {\n            if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n            throw e;\n        }\n        return stat.isFile() || stat.isFIFO();\n    },\n    isDirectory: function isDirectory(dir) {\n        try {\n            var stat = fs.statSync(dir);\n        } catch (e) {\n            if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n            throw e;\n        }\n        return stat.isDirectory();\n    },\n    realpathSync: function realpathSync(file) {\n        try {\n            var realpath = typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\n            return realpath(file);\n        } catch (realPathErr) {\n            if (realPathErr.code !== 'ENOENT') {\n                throw realPathErr;\n            }\n        }\n        return file;\n    },\n    moduleDirectory: 'node_modules',\n    preserveSymlinks: true\n}"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/resolve/readme.html#resolve.iscorepkg",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/resolve/readme.html#resolve.iscorepkg",
    "title": "3327 Research",
    "section": "resolve.isCore(pkg)",
    "text": "resolve.isCore(pkg)\nReturn whether a package is in core."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bytes/History.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bytes/History.html",
    "title": "3327 Research",
    "section": "",
    "text": "3.1.2 / 2022-01-27\n\nFix return value for un-parsable strings\n\n\n\n3.1.1 / 2021-11-15\n\nFix “thousandsSeparator” incorrecting formatting fractional part\n\n\n\n3.1.0 / 2019-01-22\n\nAdd petabyte (pb) support\n\n\n\n3.0.0 / 2017-08-31\n\nChange “kB” to “KB” in format output\nRemove support for Node.js 0.6\nRemove support for ComponentJS\n\n\n\n2.5.0 / 2017-03-24\n\nAdd option “unit”\n\n\n\n2.4.0 / 2016-06-01\n\nAdd option “unitSeparator”\n\n\n\n2.3.0 / 2016-02-15\n\nDrop partial bytes on all parsed units\nFix non-finite numbers to .format to return null\nFix parsing byte string that looks like hex\nperf: hoist regular expressions\n\n\n\n2.2.0 / 2015-11-13\n\nadd option “decimalPlaces”\nadd option “fixedDecimals”\n\n\n\n2.1.0 / 2015-05-21\n\nadd .format export\nadd .parse export\n\n\n\n2.0.2 / 2015-05-20\n\nremove map recreation\nremove unnecessary object construction\n\n\n\n2.0.1 / 2015-05-07\n\nfix browserify require\nremove node.extend dependency\n\n\n\n2.0.0 / 2015-04-12\n\nadd option “case”\nadd option “thousandsSeparator”\nreturn “null” on invalid parse input\nsupport proper round-trip: bytes(bytes(num)) === num\nunits no longer case sensitive when parsing\n\n\n\n1.0.0 / 2014-05-05\n\nadd negative support. fixes #6\n\n\n\n0.3.0 / 2014-03-19\n\nadded terabyte support\n\n\n\n0.2.1 / 2013-04-01\n\nadd .component\n\n\n\n0.2.0 / 2012-10-28\n\nbytes(200).should.eql(‘200b’)\n\n\n\n0.1.0 / 2012-07-04\n\nadd bytes to string conversion [yields]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bytes/Readme.html#installation",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bytes/Readme.html#installation",
    "title": "3327 Research",
    "section": "Installation",
    "text": "Installation\nThis is a Node.js module available through the npm registry. Installation is done using the npm install command:\n$ npm install bytes"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bytes/Readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bytes/Readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nvar bytes = require('bytes');\n\nbytes(number｜string value, [options]): number｜string｜null\nDefault export function. Delegates to either bytes.format or bytes.parse based on the type of value.\nArguments\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\nvalue\nnumber｜string\nNumber value to format or string value to parse\n\n\noptions\nObject\nConversion options for format\n\n\n\nReturns\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\nresults\nstring｜number｜null\nReturn null upon error. Numeric value in bytes, or string value otherwise.\n\n\n\nExample\nbytes(1024);\n// output: '1KB'\n\nbytes('1KB');\n// output: 1024\n\n\nbytes.format(number value, [options]): string｜null\nFormat the given value in bytes into a string. If the value is negative, it is kept as such. If it is a float, it is rounded.\nArguments\n\n\n\nName\nType\nDescription\n\n\n\n\nvalue\nnumber\nValue in bytes\n\n\noptions\nObject\nConversion options\n\n\n\nOptions\n\n\n\n\n\n\n\n\nProperty\nType\nDescription\n\n\n\n\ndecimalPlaces\nnumber｜null\nMaximum number of decimal places to include in output. Default value to 2.\n\n\nfixedDecimals\nboolean｜null\nWhether to always display the maximum number of decimal places. Default value to false\n\n\nthousandsSeparator\nstring｜null\nExample of values: ' ', ',' and '.'… Default value to ''.\n\n\nunit\nstring｜null\nThe unit in which the result will be returned (B/KB/MB/GB/TB). Default value to '' (which means auto detect).\n\n\nunitSeparator\nstring｜null\nSeparator to use between number and unit. Default value to ''.\n\n\n\nReturns\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\nresults\nstring｜null\nReturn null upon error. String value otherwise.\n\n\n\nExample\nbytes.format(1024);\n// output: '1KB'\n\nbytes.format(1000);\n// output: '1000B'\n\nbytes.format(1000, {thousandsSeparator: ' '});\n// output: '1 000B'\n\nbytes.format(1024 * 1.7, {decimalPlaces: 0});\n// output: '2KB'\n\nbytes.format(1024, {unitSeparator: ' '});\n// output: '1 KB'\n\n\nbytes.parse(string｜number value): number｜null\nParse the string value into an integer in bytes. If no unit is given, or value is a number, it is assumed the value is in bytes.\nSupported units and abbreviations are as follows and are case-insensitive:\n\nb for bytes\nkb for kilobytes\nmb for megabytes\ngb for gigabytes\ntb for terabytes\npb for petabytes\n\nThe units are in powers of two, not ten. This means 1kb = 1024b according to this parser.\nArguments\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\nvalue\nstring｜number\nString to parse, or number in bytes.\n\n\n\nReturns\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\nresults\nnumber｜null\nReturn null upon error. Value in bytes otherwise.\n\n\n\nExample\nbytes.parse('1KB');\n// output: 1024\n\nbytes.parse('1024');\n// output: 1024\n\nbytes.parse(1024);\n// output: 1024"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bytes/Readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bytes/Readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright © 2012-present Contributors.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "4.4.0 - 2020-04-11",
    "text": "4.4.0 - 2020-04-11\n\nChanged\n\nIncrease abstract-leveldown parity (#692) (@vweevers):\n\nAdd db property to chained batch\nRemove type checks that are also performed by abstract-leveldown\n\nUpgrade dependency-check devDependency from ^3.3.0 to ^4.1.0 (71a6aa3) (@vweevers)\nUpgrade airtap devDependency from ^2.0.0 to ^3.0.0 (#687) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "4.3.2 - 2019-10-04",
    "text": "4.3.2 - 2019-10-04\n\nChanged\n\nUpgrade deferred-leveldown from ~5.2.1 to ~5.3.0 (#682) (@vweevers). This fixes the manifest added in 4.3.0.\n\n\n\nAdded\n\nTest manifest integration with deferred-leveldown (#681) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "4.3.1 - 2019-10-03",
    "text": "4.3.1 - 2019-10-03\n\nFixed\n\nFix floating promise in constructor (#680) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "4.3.0 - 2019-09-30",
    "text": "4.3.0 - 2019-09-30\n\nChanged\n\nRewrite buster tests as tape tests (#674) (@vweevers)\nCreate test suite (#677) (@vweevers)\n\n\n\nAdded\n\nAdd manifest (Level/community#83) (#678) (@vweevers)\nAdd type property for reachdown (Level/community#82) (#678) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "4.2.0 - 2019-09-08",
    "text": "4.2.0 - 2019-09-08\n\nChanged\n\nUpgrade deferred-leveldown from ~5.1.0 to ~5.2.0 (#669) (@vweevers)\nUpgrade hallmark devDependency from ^0.1.0 to ^2.0.0 (#664, #672) (@vweevers)\nUpgrade standard devDependency from ^12.0.0 to ^14.1.0 (#663, cd3af83) (@vweevers)\nUpgrade memdown devDependency from ^4.0.0 to ^5.0.0 (#668) (@vweevers)\n\n\n\nAdded\n\nAdd clear() method to delete all entries or a range (#669) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "4.1.0 - 2019-06-28",
    "text": "4.1.0 - 2019-06-28\n\nChanged\n\nUpgrade deferred-leveldown from ~5.0.0 to ~5.1.0 (#657) (@vweevers)\nUpgrade delayed devDependency from ^1.0.1 to ^2.0.0 (#659) (@vweevers)\n\n\n\nAdded\n\nTest seek() integration (#661) (@vweevers) *\nSupport options passed to open() (#660, #662) (@achingbrain, @vweevers)\n\n* Historical Note Many thanks to @MeirionHughes for adding seek() support to memdown, encoding-down, deferred-leveldown and subleveldown. At the time of writing, all but subleveldown have been released. Go forth and seek!"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "4.0.2 - 2019-06-08",
    "text": "4.0.2 - 2019-06-08\n\nChanged\n\nReplace async devDependency with async-each and run-* (#654) (d9ff554) (@vweevers)\nUpgrade nyc devDependency from ^13.1.0 to ^14.0.0 (#649) (4f8b141) (@vweevers)\n\n\n\nAdded\n\nDocument need of Promise polyfill for IE (a2e7a49) (@vweevers)\n\n\n\nRemoved\n\nRemove unused test-10k-times.sh (#651) (6a033f1) (@MadsAndreasenTechPeople)\nRemove outdated Support section from README.md (956eb0b) (@vweevers)\nRemove references to old wiki in favor of Level/awesome (f534fde) (@vweevers)\n\n\n\nFixed\n\nFix Level badge (1a2199f) (@vweevers)\nRemove link to dead website (c8ccb6c) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "4.0.1 - 2019-03-30",
    "text": "4.0.1 - 2019-03-30\n\nChanged\n\nUpgrade dependencies of benchmarks (#637) (@morolt)\nUpgrade memdown devDependency from ^3.0.0 to ^4.0.0 (#646) (@vweevers)\nUpgrade bl devDependency from ^2.0.0 to ^3.0.0 (#643) (@vweevers)\nUpgrade airtap devDependency from 0.1.0 to ^2.0.0 (#631) (@vweevers)\nUpgrade encoding-down devDependency from ^5.0.0 to ^6.0.0 (#629) (@vweevers)\nApply common project tweaks (#634, #635, b83add5) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "4.0.0 - 2018-12-22",
    "text": "4.0.0 - 2018-12-22\n\nChanged\n\nUpgrade nyc devDependency from ~12.0.2 to ~13.1.0 (@ralphtheninja)\nUpgrade deferred-leveldown dependency from ~4.0.0 to ~5.0.0 (@vweevers)\nUpgrade concat-stream devDependency from ~1.6.0 to ~2.0.0 (@ralphtheninja)\nUpgrade level-iterator-stream dependency from ~3.0.0 to ~4.0.0 (@ralphtheninja)\nReplace remark-cli with hallmark (#621) (@vweevers)\nUpgrade standard devDependency from ^11.0.0 to ^12.0.0 (@ralphtheninja)\nAdd .nyc_output/ to .npmignore (@ralphtheninja)\n\n\n\nRemoved\n\nRemove IE10 from airtap (#625) (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "3.1.1 - 2018-07-14",
    "text": "3.1.1 - 2018-07-14\n\nChanged\n\nUpgrade airtap from 0.0.7 to 0.1.0 (@vweevers, @ralphtheninja)\nUpgrade level-iterator-stream from ~2.0.0 to ~3.0.0 (@ralphtheninja)\nPass options to batch.write() (@ralphtheninja)\n\n\n\nAdded\n\nAdd nyc and coveralls (@ralphtheninja)\n\n\n\nRemoved\n\nRemove node 9 (@ralphtheninja)\n\n\n\nFixed\n\nFix issue with airtap --local (@ralphtheninja)\nCall rs.destroy() without using .bind() (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "3.1.0 - 2018-06-22",
    "text": "3.1.0 - 2018-06-22\n\nChanged\n\nUpgrade airtap from 0.0.6 to 0.0.7 (@ralphtheninja)\nUpdate .npmignore (@ralphtheninja)\nTweak copyright year for less maintenance (@ralphtheninja)\n\n\n\nAdded\n\nExpose db.iterator() (@vweevers)\nAdd remark tooling (@vweevers)\n\n\n\nRemoved\n\nRemove contributors from package.json (@ralphtheninja)\nRemove copyright headers from code (@ralphtheninja)\nRemove LevelDB and Snappy credits (@vweevers)\n\n\n\nFixed\n\nReplace remark with remark-cli (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "3.0.1 - 2018-05-24",
    "text": "3.0.1 - 2018-05-24\n\nChanged\n\nUpgrade airtap to 0.0.6 (@ralphtheninja)\n\n\n\nRemoved\n\nRemove .jshintrc (@ralphtheninja)\nRemove brfs and use Buffer.from() in favor of fs.readFileSync() (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "3.0.0 - 2018-05-23",
    "text": "3.0.0 - 2018-05-23\n\nAdded\n\nAdd node 10 to Travis (@ralphtheninja)\nAdd browser support to test suite (@vweevers)\nAdd airtap for browser tests in Sauce Labs (@vweevers)\n\n\n\nChanged\n\nUpgrade memdown to ^3.0.0 (@vweevers)\nUpgrade encoding-down to ^5.0.0 (@ralphtheninja)\nUpgrade deferred-leveldown to ~4.0.0 (@ralphtheninja)\nUpgrade standard to ^11.0.0 (@ralphtheninja)\nUpgrade level-errors to ~2.0.0 (@ralphtheninja)\nUpgrade bl to ^2.0.0 (@ralphtheninja)\nREADME: tweak api sub sections (@ralphtheninja)\n\n\n\nFixed\n\nFix defunct keyEncoding in inject-encoding-test.js (@vweevers)\n\n\n\nRemoved\n\nRemove irrelevant leveldown-substitution-test.js (@ralphtheninja)\nRemove node 4 from Travis (@ralphtheninja)\nRemove batch operations defaulting to put (@vweevers)\nRemove compiler toolchain from Travis (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "2.0.2 - 2018-02-12",
    "text": "2.0.2 - 2018-02-12\n\nAdded\n\nAdd 9 to Travis (@ralphtheninja)\n\n\n\nChanged\n\nUpgrade browserify to 16.0.0 (@ralphtheninja)\nUpgrade leveldown to 3.0.0 (@ralphtheninja)\nUpgrade deferred-leveldown to 3.0.0 (@ralphtheninja)\nREADME: normalize readme style (@ralphtheninja)\nREADME: use markdown links instead of <a href></a> (@ralphtheninja)\nClarify ‘must provide db’ error message (@adityapurwa)\nUpdate copyright year to 2018 (@adityapurwa)\n\n\n\nRemoved\n\nRemove abstract-leveldown devDependency (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "2.0.1 - 2017-11-11",
    "text": "2.0.1 - 2017-11-11\n\nChanged\n\nREADME: clarify that options are specific to the underlying store (@ralphtheninja)\nUpgrade abstract-leveldown to 3.0.0 (@ralphtheninja)\nUpgrade encoding-down to 3.0.0 (@ralphtheninja)\n\n\n\nFixed\n\nRestore support for node 4 (@farskipper)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "2.0.0 - 2017-10-10",
    "text": "2.0.0 - 2017-10-10\n\nAdded\n\nAdd default export (@zixia)\nTest that key and value of queued operation is not serialized (@vweevers)\nTest JSON encoding with stream (@vweevers)\nAdd smoke test for levelup and leveldown without encoding-down (@vweevers)\n\n\n\nChanged\n\nUpgrade leveldown (@ralphtheninja)\nREADME: prefer ‘underlying store’ over database, backend etc (@vweevers)\nREADME: update badges (@ralphtheninja)\nREADME: unquote properties (@vweevers)\nREADME: clarify what excluding callback means (@vweevers)\nREADME: ‘arbitrary data object’ => ‘of any type’ (@vweevers)\nREADME: reduce ‘supported platforms’ section (@vweevers)\nREADME: rewrite intro and relationship with leveldown (@vweevers)\nREADME: cleanup (@vweevers)\nREADME: fix bad async code example (@ralphtheninja)\nUpgrade deferred-leveldown (@ralphtheninja)\n\n\n\nRemoved\n\nRemove unstable typings and Typescript tests (@MeirionHughes)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#rc3---2017-09-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#rc3---2017-09-15",
    "title": "3327 Research",
    "section": "2.0.0-rc3 - 2017-09-15",
    "text": "2.0.0-rc3 - 2017-09-15\n\nChanged\n\nRefactor typings, use abstract-leveldown types (@MeirionHughes)\nUpgrade leveldown (@MeirionHughes)\n\n\n\nFixed\n\nCorrect bad encoding options in tests (@MeirionHughes)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#rc2---2017-09-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#rc2---2017-09-11",
    "title": "3327 Research",
    "section": "2.0.0-rc2 - 2017-09-11",
    "text": "2.0.0-rc2 - 2017-09-11\n\nAdded\n\nREADME: add node version badge (@ralphtheninja)\nAdd Typescript definitions and testing (@MeirionHughes)\n\n\n\nChanged\n\nREADME: homogenize readme style (@vweevers)\nUpgrade level-errors (@ralphtheninja)\nOptimize Typescript tests (@vweevers)\n\n\n\nRemoved\n\nRemove 7 from Travis (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#rc1---2017-09-01",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#rc1---2017-09-01",
    "title": "3327 Research",
    "section": "2.0.0-rc1 - 2017-09-01",
    "text": "2.0.0-rc1 - 2017-09-01\n\nAdded\n\nAdd Promise to the API if callbacks are omitted (@juliangruber)\nAdd Greenkeeper badge (@ralphtheninja)\nAdd tests for maybeError() calling back synchronously if db is closed (@ralphtheninja)\n\n\n\nChanged\n\nUpgrade deferred-leveldown to 2.0.0 (@ralphtheninja)\nChange levelup constructor to take store as first parameter (@ralphtheninja)\nSwitch to use AbstractLevelDOWN#status (@ralphtheninja)\nUpgrade copyright year to 2017 (@ralphtheninja)\nRename lib/util.js to lib/promisify.js (@ralphtheninja)\n\n\n\nRemoved\n\nRemove approximateSize() (@ralphtheninja)\nRemove destroy() (@ralphtheninja)\nRemove repair() (@ralphtheninja)\nRemove getProperty() (@ralphtheninja)\nRemove .errorIfExists (@ralphtheninja)\nRemove .createIfMissing (@ralphtheninja)\nRemove .compression (@ralphtheninja)\nRemove .cacheSize (@ralphtheninja)\nRemove .sync (@ralphtheninja)\nRemove .fillCache (@ralphtheninja)\nRemove optional leveldown (@ralphtheninja)\nRemove unused options parameter from maybeError (@ralphtheninja)\nRemove browser field from package.json (@ralphtheninja)\nRemove 0.12 and 4 from Travis (@juliangruber)\nRemove unused isDefined from lib/util.js (@ralphtheninja)\nRemove encodings (@ralphtheninja)\nRemove dispatchError(), callback is always a function (@ralphtheninja)\n\n\n\nFixed\n\nFix problems with zalgo in maybeError() (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "1.3.9 - 2017-07-26",
    "text": "1.3.9 - 2017-07-26\n\nAdded\n\nAdd standard for linting (@ralphtheninja)\nAdd 8 to Travis (@ralphtheninja)\n\n\n\nChanged\n\nIgnore package-lock.json and yarn.lock (@ralphtheninja)\nREADME: make code examples adhere to standard (@ralphtheninja)\nUpgrade dependencies (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "1.3.8 - 2017-05-29",
    "text": "1.3.8 - 2017-05-29\n\nChanged\n\nRevert previous getLevelDOWN fix (@ralphtheninja)\nThrow more descriptive error if db factory is not a function (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "1.3.7 - 2017-05-24",
    "text": "1.3.7 - 2017-05-24\n\nFixed\n\nAvoid calling getLevelDOWN if not present (@diasdavid)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "1.3.6 - 2017-05-10",
    "text": "1.3.6 - 2017-05-10\n\nChanged\n\nPull LevelDOWN loader out to non browserified module (@kemitchell)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "1.3.5 - 2017-03-02",
    "text": "1.3.5 - 2017-03-02\n\nChanged\n\nExplicitly require leveldown/package.json (@PascalTemel)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "1.3.4 - 2017-03-02",
    "text": "1.3.4 - 2017-03-02\n\nAdded\n\nAdd 7 to Travis (@ralphtheninja)\n\n\n\nRemoved\n\nRemove 0.10 and 5 from Travis (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "1.3.3 - 2016-10-09",
    "text": "1.3.3 - 2016-10-09\n\nChanged\n\nREADME: fix typo (@jamesgrayling)\nREADME: fix typo (@danielravina)\nREADME: fix typo (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-23",
    "title": "3327 Research",
    "section": "1.3.2 - 2016-05-17",
    "text": "1.3.2 - 2016-05-17\n\nAdded\n\nAdd node 6 to Travis (@ralphtheninja)\n\n\n\nChanged\n\nUse sudo: false to run tests in containers on Travis (@ralphtheninja)\nUpdate package.json (@0x00A)\nREADME: fix typos (@pra85)\nREADME: changed build status ticker from png to svg (@montyanderson)\nREADME: link build badge to master branch (@a0viedo)\nUpdate copyright year to 2016 (@ralphtheninja)\nRename appromixate-size-test.js to approximate-size-test.js (@ralphtheninja)\n\n\n\nRemoved\n\nRemove non supported versions from Travis (@ralphtheninja)\n\n\n\nFixed\n\nEnsure Travis can compile in case no prebuilt binaries can be found (@ralphtheninja)\nFix deprecation test (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-24",
    "title": "3327 Research",
    "section": "1.3.1 - 2015-12-10",
    "text": "1.3.1 - 2015-12-10\n\nAdded\n\nAdd node 5 to travis (@ralphtheninja)\n\n\n\nChanged\n\nUpgrade outdated dependencies (@ralphtheninja)\nTest on latest node 2, node 3 (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-25",
    "title": "3327 Research",
    "section": "1.3.0 - 2015-11-12",
    "text": "1.3.0 - 2015-11-12\n\nChanged\n\nREADME: fixed small typo (Stephen Sawchuck)\nREADME: update url to Snappy (@hansott)\nREADME: add dependency badge (@ralphtheninja)\nTest on all major abi versions (@ralphtheninja)\nUpgrade outdated dependencies (@ralphtheninja)\nTrack and expose chained batch ops queue length (@kemitchell)\n\n\n\nFixed\n\nDev depend on tap to fix npm@3 warning (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-26",
    "title": "3327 Research",
    "section": "1.2.1 - 2015-06-10",
    "text": "1.2.1 - 2015-06-10\n\nChanged\n\nImprove error message when trying to require leveldown (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-27",
    "title": "3327 Research",
    "section": "1.2.0 - 2015-06-04",
    "text": "1.2.0 - 2015-06-04\n\nChanged\n\nLess restrictive version on leveldown (@ralphtheninja)\n\n\n\nFixed\n\nHandle errors in benchmarks (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-28",
    "title": "3327 Research",
    "section": "1.1.1 - 2015-05-29",
    "text": "1.1.1 - 2015-05-29\n\nAdded\n\nAdd link to level/community (@ralphtheninja)\n\n\n\nChanged\n\nUpgrade leveldown dependency (@juliangruber)\n\n\n\nRemoved\n\nRemove compression tests (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-29",
    "title": "3327 Research",
    "section": "1.1.0 - 2015-05-17",
    "text": "1.1.0 - 2015-05-17\n\nChanged\n\nBatch operation default to 'put' (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-30",
    "title": "3327 Research",
    "section": "1.0.0 - 2015-05-14",
    "text": "1.0.0 - 2015-05-14\n\nRemoved\n\nRemove return values from dispatchError() and readError(), they are used as voids (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-31",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-31",
    "title": "3327 Research",
    "section": "1.0.0-5 - 2015-05-07",
    "text": "1.0.0-5 - 2015-05-07\n\nChanged\n\nTarget multiple iojs versions, remove notifications (@ralphtheninja)\nDeprecate static functions destroy() and repair() (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-32",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-32",
    "title": "3327 Research",
    "section": "1.0.0-4 - 2015-05-06",
    "text": "1.0.0-4 - 2015-05-06\n\nChanged\n\nDeprecate .approximateSize() (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-33",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-33",
    "title": "3327 Research",
    "section": "1.0.0-3 - 2015-05-05",
    "text": "1.0.0-3 - 2015-05-05\n\nChanged\n\nReplace tap with tape + faucet (@ralphtheninja)\nRefactor read streams using level-iterator-stream and level-codec (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-34",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-34",
    "title": "3327 Research",
    "section": "1.0.0-2 - 2015-04-30",
    "text": "1.0.0-2 - 2015-04-30\n\nChanged\n\nRefactor ltgt encoding (@juliangruber)\n\n\n\nFixed\n\nFix readStream *AsBuffer options (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-35",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-35",
    "title": "3327 Research",
    "section": "1.0.0-1 - 2015-04-28",
    "text": "1.0.0-1 - 2015-04-28\n\nAdded\n\nAdd test for valueEncoding 'hex' for createReadStream (@braydonf)\n\n\n\nChanged\n\nUpgrade dependencies (@ralphtheninja)\n\n\n\nFixed\n\nFix valueEncoding bug by passing options without array (@braydonf)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-36",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-36",
    "title": "3327 Research",
    "section": "1.0.0-0 - 2015-04-28",
    "text": "1.0.0-0 - 2015-04-28\n\nAdded\n\nAdd @jcrugzz as contributor\nAdd 0.12 and iojs to Travis (@ralphtheninja)\n\n\n\nChanged\n\nSupport values to be null or undefined (@kesla)\nREADME: explain callback arguments to del (@bewest)\nREADME: update logo and copyright (@ralphtheninja)\nREADME: remove docs on createWriteStream() and add note on what happened to it (@jcrugzz)\nREADME: tweak explanation on why createWriteStream() was removed (@ralphtheninja)\nREADME: clean up old level-ws reference (@ralphtheninja)\nREADME: changed options for get to same as put (@RichardLitt)\nREADME: remove reference to write-stream and iterators (@ralphtheninja)\nExplicit devdep versions (@rvagg)\nUpdate Travis and package.json scripts (@jcrugzz)\nAdded errors to the available namespace when requiring levelup (@braydonf)\nExtract error codes into level-errors module (@ralphtheninja)\nUse level-codec (@juliangruber)\nRefactor iterators using new deferred-leveldown (@juliangruber)\n\n\n\nRemoved\n\nRemove 0.8 from Travis (@rvagg)\nRemove references to write-stream in tests (@jcrugzz)\nRemove references to write-stream (@jcrugzz)\nRemove fstream based tests (@jcrugzz)\nRemove copy as it requires write-stream (@jcrugzz)\nRemove unused dependencies (@ralphtheninja)\nRemove encoding option (@juliangruber)\nRemove leveled benchmarks (@juliangruber)\n\n\n\nFixed\n\nREADME: fix the leveldb link (@seriousManual)\nUse newer memdown store (@sorribas)\nCheck notFound on err (@doowb)\nFix benchmarks by installing leveldown@^0.10.4 (@juliangruber)\nFix stream-bench.js (@juliangruber)\nReplace rvagg/node- with level (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-37",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-37",
    "title": "3327 Research",
    "section": "0.19.1 - 2016-01-23",
    "text": "0.19.1 - 2016-01-23\n\nAdded\n\nAdd 0.12, 1.0, 1.8, 2, 3, 4, 5 to Travis (@ralphtheninja)\nAdd tape@4.x.x (@ralphtheninja)\n\n\n\nChanged\n\nUpgrade semver (@ralphtheninja)\nUpgrade tap (@ralphtheninja)\nUpdate compiler on Travis (@ralphtheninja)\nFix bustermove version (@ralphtheninja)\n\n\n\nRemoved\n\nRemove 0.8 from Travis (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-38",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-38",
    "title": "3327 Research",
    "section": "0.19.0 - 2014-08-26",
    "text": "0.19.0 - 2014-08-26\n\nAdded\n\nAdd suport for lt, lte, gt, and gte (@dominictarr)\nAdd isDefined to util (@dominictarr)\n\n\n\nChanged\n\nRefactor encodings and codec from util to separate file (@dominictarr)\nDecouple codec from levelup parts for allowing arbitrary encoding strategies (@dominictarr)\nDecouple read-stream from encoding and opening stuff (@dominictarr)\nKeep codec on the db as db._codec (@dominictarr)\nRefactor error checks (@dominictarr)\nREADME: document lt, lte, gt, and gte (@dominictarr)\nREADME: clarify ltgt (@dominictarr)\nREADME: unmention bops (@dominictarr)\nREADME: discourage the use of start and end a bit (@raboof)\nREADME: document what limit does in reverse mode (@raboof)\nREADME: use highest/lowest instead of largest/smallest (@raboof)\nBinary encoding in the browser (@calvinmetcalf)\nDocument code with comments (@dominictarr)\nMinor style fixes (@rvagg)\nMinor whitespace changes (@rvagg)\nUpdate nodeico badge (@rvagg)\n\n\n\nFixed\n\nFix license (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-39",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-39",
    "title": "3327 Research",
    "section": "0.18.6 - 2014-07-26",
    "text": "0.18.6 - 2014-07-26\n\nChanged\n\nChange from MIT +no-false-attribs License to plain MIT (@andrewrk)\nUpgrade bl dependency (@raynos)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-40",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-40",
    "title": "3327 Research",
    "section": "0.18.5 - 2014-06-26",
    "text": "0.18.5 - 2014-06-26\n\nFixed\n\nReplace concat-stream with bl, fixes #251 (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-41",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-41",
    "title": "3327 Research",
    "section": "0.18.4 - 2014-06-24",
    "text": "0.18.4 - 2014-06-24\n\nChanged\n\nReorder dependencies (@juliangruber)\nUpgrade dependencies (@rvagg)\n\n\n\nFixed\n\nFix race condition on read stream’s self._iterator (@nolanlawson)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-42",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-42",
    "title": "3327 Research",
    "section": "0.18.3 - 2014-04-26",
    "text": "0.18.3 - 2014-04-26\n\nChanged\n\nREADME: fix formatting (@rvagg)\nREADME: minor corrections (@guybrush)\nREADME: fix leveldown method wording (@juliangruber)\nREADME: clarify start, end and limit options in createReadStream docs (@maxogden)\n\n\n\nRemoved\n\nRemove bops and use Buffer instead (@nolanlawson)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-43",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-43",
    "title": "3327 Research",
    "section": "0.18.2 - 2013-11-26",
    "text": "0.18.2 - 2013-11-26\n\nAdded\n\nAdd DNT configuration (@rvagg)\n\n\n\nChanged\n\nUse readable-stream from user land across all node version (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-44",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-44",
    "title": "3327 Research",
    "section": "0.18.1 - 2013-11-20",
    "text": "0.18.1 - 2013-11-20\n\nChanged\n\nMake chained-batch obey global LevelUP object options (@mcavage)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-45",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-45",
    "title": "3327 Research",
    "section": "0.18.0 - 2013-11-18",
    "text": "0.18.0 - 2013-11-18\n\nChanged\n\nUpgrade to LevelDOWN@0.10.0 (and bops@0.1.0 and readable-stream@1.1.9) (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-46",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-46",
    "title": "3327 Research",
    "section": "0.17.0 - 2013-10-01",
    "text": "0.17.0 - 2013-10-01\n\nChanged\n\nUndo factory pattern, use plain prototypal object and expose full prototype (@rvagg)\nMove Batch object to batch.js and expose (@rvagg)\nUse new package, DeferredLevelDOWN to handle all deferred open logic (@rvagg)\nCode cleanup, update deps (xtend) (@rvagg, @juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-47",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-47",
    "title": "3327 Research",
    "section": "0.16.0 - 2013-09-10",
    "text": "0.16.0 - 2013-09-10\n\nAdded\n\nAdd notFound boolean property and status=404 property to NotFoundError (@rvagg)\n\n\n\nChanged\n\nUpgrade to errno@0.1.0 which aliases .type and .name properties (@rvagg)\nReadStream gracefully handles multiple destroy() calls (@mcollina)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-48",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-48",
    "title": "3327 Research",
    "section": "0.15.0 - 2013-08-26",
    "text": "0.15.0 - 2013-08-26\n\nAdded\n\nAdd @substack as contributor\n\n\n\nChanged\n\nNew ReadStream: upgrade to streams2, remove all state-management cruft, remove fstream support (@substack)\nUpgrade LevelDOWN dependency to ~0.8.0 with Iterator lt/lte/gt/gte support and NAN as a dependency (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-49",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-49",
    "title": "3327 Research",
    "section": "0.14.0 - 2013-08-19",
    "text": "0.14.0 - 2013-08-19\n\nChanged\n\nEncodings overhaul, allow custom encoders/decoders for keyEncoding or valueEncoding (@dominictarr)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-50",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-50",
    "title": "3327 Research",
    "section": "0.13.0 - 2013-08-11",
    "text": "0.13.0 - 2013-08-11\n\nChanged\n\nUpgrade LevelDOWN dependency version ~0.7.0 for Node 0.8->0.11 compatibility (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-51",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-51",
    "title": "3327 Research",
    "section": "0.12.0 - 2013-07-25",
    "text": "0.12.0 - 2013-07-25\n\nChanged\n\nUpgrade LevelDOWN dependency version ~0.6.2 (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-52",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-52",
    "title": "3327 Research",
    "section": "0.11.0 - 2013-07-17",
    "text": "0.11.0 - 2013-07-17\n\nAdded\n\nAdd @pgte as contributor\n\n\n\nChanged\n\nSwitch from direct Buffer access to bops for better browser compatibility (@juliangruber)\nWriteStream#end accepts data argument (@pgte)\n\n\n\nRemoved\n\nRemove all Function#bind calls for better browser compatibility (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-53",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-53",
    "title": "3327 Research",
    "section": "0.10.0 - 2013-06-14",
    "text": "0.10.0 - 2013-06-14\n\nChanged\n\nUpgrade to LevelDOWN@0.6.0 which upgrades to LevelDB@1.11.0, some important bugfixes: https://groups.google.com/forum/#!topic/leveldb/vS1JvmGlp4E (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-54",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-54",
    "title": "3327 Research",
    "section": "0.9.0 - 2013-05-21",
    "text": "0.9.0 - 2013-05-21\n\nChanged\n\nUse LevelDOWN@0.5.0, see https://github.com/level/leveldown/blob/master/CHANGELOG.md for details (@rvagg)\nRace-condition(ish) fixed in ReadStream–createReadStream() does not start immediately and therefore allowed put()s to happen before the stream starts (@dominictarr)\nReadStream doesn’t emit “ready” event (@dominictarr)\nAllow separate encodings per operation in db.batch() (@juliangruber)\nAllow separate encodings per write() in WriteStream (@juliangruber)\nWriteStream supports “type” option (“put” [default] or “del”) on constructor and individual write()s (@mcollina)\nExpose LevelDOWN (or LevelDOWN substitute) as db property on LevelUP instance (e.g. db.db.approximateSize()) (@rvagg)\nChained batch exposed from LevelDOWN, invoked with argument-less db.batch() (@juliangruber, @rvagg)\nSignificantly improve ReadStream performance by replacing .bind() and .apply() (@mcollina, @kesla)\nBetter Browserify support (@rvagg, @juliangruber, @maxogden, etc.)\nDeprecate secondary LevelDB-specific operations on LevelUP, prefer direct LevelDOWN access (approximateSize(), repair(), destroy(), getProperty()–new in LevelDOWN@0.5.0) (@rvagg)\n\n\n\nRemoved\n\nRemove “leveldown” from dependencies (see http://r.va.gg/2013/05/levelup-v0.9-some-major-changes.html) (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-55",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-55",
    "title": "3327 Research",
    "section": "0.8.0 - 2013-04-17",
    "text": "0.8.0 - 2013-04-17\n\nChanged\n\nMore comprehensive argument checking, will now report back directly or throw if there is a problem rather than on nextTick (@rvagg)\nExpose .options property on LevelUP instances. (@rvagg)\nFurther clarify ‘encoding’ -> ‘valueEncoding’ shift. db.options.valueEncoding is now authoritative even if user used ‘encoding’ on initialisation. (@rvagg)\nlevel package now published to npm that bundles LevelUP and LevelDOWN and exposes LevelUP directly; for planned shift to detaching LevelDOWN as a direct-dependency of LevelUP. (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-56",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-56",
    "title": "3327 Research",
    "section": "0.7.0 - 2013-04-08",
    "text": "0.7.0 - 2013-04-08\n\nAdded\n\nAdd windows support in LevelDOWN@0.2.0 (@rvagg)\nAdd ‘db’ option on constructor to replace LevelDOWN (@rvagg)\nAdd repair() and destroy() aliases for LevelDOWN implementations (@rvagg)\n\n\n\nChanged\n\nImproved ReadStream reverse=true start key handling (@kesla)\nReadStream empty start and end keys ignored rather than segfault (@kesla)\n‘encoding’ option now an alias for valueEncoding only, keyEncoding defaults to 'utf8' and must be changed explicitly (@rvagg)\n\n\n\nFixed\n\nFix early close emit in WriteStream (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-57",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-57",
    "title": "3327 Research",
    "section": "0.6.2 - 2013-03-04",
    "text": "0.6.2 - 2013-03-04\n\nChanged\n\nUse xtend package instead of internal util._extend (@ralphtheninja)\nInternal cleanup of callback argument detection (@ralphtheninja)\nMove deferred-open-operations into an internal this._db wrapper rather than make them call public .get()/.put() etc. for a second time (@dominictarr)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-58",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-58",
    "title": "3327 Research",
    "section": "0.6.1 - 2013-03-01",
    "text": "0.6.1 - 2013-03-01\n\nChanged\n\nInternal code cleanup and refactoring (@ralphtheninja)\n\n\n\nFixed\n\nFix multiple iterator.end() calls in ReadStreams throwing errors, destroy() called while read/next is in progress #82 #83 #84 (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-59",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-59",
    "title": "3327 Research",
    "section": "0.6.0 - 2013-02-25",
    "text": "0.6.0 - 2013-02-25\n\nChanged\n\nRename ReadStream, KeyStream and ValueStream to createReadStream, createKeyStream and createValueStream (@rvagg)\nComplete transition to LevelDOWN for the LevelDB binding. No native code left in LevelUP (@rvagg)\n\nLevelDOWN now keeps its own ChangeLog at: https://github.com/level/leveldown/blob/master/CHANGELOG.md\nLevelDB@1.9.0 and Snappy@1.1.0 are included in LevelDOWN@0.1.2"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#rc1---2013-02-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#rc1---2013-02-24",
    "title": "3327 Research",
    "section": "0.6.0-rc1 - 2013-02-24",
    "text": "0.6.0-rc1 - 2013-02-24\n\nChanged\n\nRefactor and simplify db state code (@ralphtheninja)\nExtract all binding code to leveldown project (@rvagg)\nDepend on leveldown@0.0.1 (@rvagg)\nSimplify callback signature by removing extra, undocumented properties from some callbacks (@rvagg, @dominictarr)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-60",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-60",
    "title": "3327 Research",
    "section": "0.5.4 - 2013-02-15",
    "text": "0.5.4 - 2013-02-15\n\nChanged\n\nMove encodingOpts from levelup.js to util.js (@ralphtheninja)\nAllow one next() at a time, improve end() handling (@rvagg)\nUse explicit namespaces in C++ (@rvagg)\n\n\n\nRemoved\n\nRemove CloseError (@ralphtheninja)\nRemove .useBatch in copy() (@ralphtheninja)\nEnsure iterator end and next don’t conflict (@rvagg)\n\n\n\nFixed\n\nFix put/batch bug in WriteStream#_process() (@ralphtheninja)\nFix memory leak, Persistent<Function> callback not Dispose()d for readStream() (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-61",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-61",
    "title": "3327 Research",
    "section": "0.5.3 - 2013-01-28",
    "text": "0.5.3 - 2013-01-28\n\nChanged\n\nDisable all sqlite3 benchmarks (@ralphtheninja)\nPut LevelUP() into closure (@ralphtheninja)\nSwap bufferstream dependency for simple-bufferstream (@rvagg)\nMake location a read-only property on db object (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-62",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-62",
    "title": "3327 Research",
    "section": "0.5.3-1 - 2013-02-05",
    "text": "0.5.3-1 - 2013-02-05\n\nChanged\n\nNon shrinkwrapped release @rvagg"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-63",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-63",
    "title": "3327 Research",
    "section": "0.5.2 - 2013-01-23",
    "text": "0.5.2 - 2013-01-23\n\nFixed\n\nFix incorrect scope in approximateSize function (@sandfox)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-64",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-64",
    "title": "3327 Research",
    "section": "0.5.1 - 2013-01-10",
    "text": "0.5.1 - 2013-01-10\n\nChanged\n\nVersion bump (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-65",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-65",
    "title": "3327 Research",
    "section": "0.5.0 - 2013-01-08",
    "text": "0.5.0 - 2013-01-08\n\nAdded\n\nAdd support for setting size of LRU-cache (@kesla)\n\n\n\nChanged\n\nUse util.inherits() from node core (@ralphtheninja)\nAdjust copyright & contributors (@rvagg)\n\n\n\nFixed\n\nIdempotent open and close, and emit _state as events (@dominictarr)\nCheck that UINT32_OPTION_VALUE is a Uint32 (@kesla)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-66",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-66",
    "title": "3327 Research",
    "section": "0.5.0-1 - 2013-01-09",
    "text": "0.5.0-1 - 2013-01-09\n\nAdded\n\n\nChanged\n\nChange createIfMissing option default to true (@rvagg)\nUse util._extend instead of local variant (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-67",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-67",
    "title": "3327 Research",
    "section": "0.4.4 - 2013-01-01",
    "text": "0.4.4 - 2013-01-01\n\nFixed\n\nSet .maxListeners to Infinity to prevent warnings when using deferred open (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-68",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-68",
    "title": "3327 Research",
    "section": "0.4.3 - 2012-12-30",
    "text": "0.4.3 - 2012-12-30\n\nAdded\n\nAdd @kesla to contributors list (@rvagg)\nAdd approximateSize() (@kesla)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-69",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-69",
    "title": "3327 Research",
    "section": "0.4.2 - 2012-12-30",
    "text": "0.4.2 - 2012-12-30\n\nAdded\n\nAdd @ralphtheninja to contributors list (@rvagg)\n\n\n\nFixed\n\nUse setImmediate instead of process.nextTick for node@0.9.5 compatibility (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-70",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-70",
    "title": "3327 Research",
    "section": "0.4.1 - 2012-12-19",
    "text": "0.4.1 - 2012-12-19\n\nRemoved\n\nRemove useBatch option on writeStream() @rvagg"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-71",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-71",
    "title": "3327 Research",
    "section": "0.4.0 - 2012-12-17",
    "text": "0.4.0 - 2012-12-17\n\nAdded\n\nAdd SQLite3 to test suite (@rvagg)\nAdd basic get() benchmarks (@rvagg)\nAdd compress boolean on open() (@rvagg)\n\n\n\nChanged\n\nSpeed up batch() and allow non-Strings to C++ (@rvagg)\nImproved compression test (@rvagg)\nReturn Strings not Buffers from C++ when possible (@rvagg)\nOptimised encoders and decoders (@rvagg)\nRevamped benchmark suite (@rvagg)\nAllow JS Strings through to native layer (@rvagg)\nCleaner build for osx (@rvagg)\nUpgrade to LevelDB@1.7 (@rvagg)\n\n\n\nRemoved\n\nRemove old and unused util functions (@rvagg)\nRemove compile warnings on osx (@rvagg)\nRemove compile warnings for solaris (@rvagg)\n\n\n\nFixed\n\nFix batch() benchmarks (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-72",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-72",
    "title": "3327 Research",
    "section": "0.3.3 - 2012-12-14",
    "text": "0.3.3 - 2012-12-14\n\nAdded\n\nAdd compression tests (@rvagg)\n\n\n\nFixed\n\nFix Snappy compression (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-73",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-73",
    "title": "3327 Research",
    "section": "0.3.2 - 2012-11-24",
    "text": "0.3.2 - 2012-11-24\n\nAdded\n\nAdd more functional tests (@rvagg)\nAdd snapshot tests (@rvagg)\n\n\n\nChanged\n\nEmit raw keys and values in events (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-74",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-74",
    "title": "3327 Research",
    "section": "0.3.1 - 2012-11-21",
    "text": "0.3.1 - 2012-11-21\n\nAdded\n\nAdd benchmark suite (@rvagg)\nAdd limit option to ReadStream (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-75",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-75",
    "title": "3327 Research",
    "section": "0.3.0 - 2012-11-18",
    "text": "0.3.0 - 2012-11-18\n\nAdded\n\nAdd .status property to keep track of db status (@raynos, @rvagg)\nAdd CloseError error type (@raynos, @rvagg)\nAdd tests for deferred operations (@rvagg)\n\n\n\nChanged\n\nDocument events (@rvagg)\nRun the encoding on start and end in case your keys are JSON encoded (@raynos)\nFirst attempt at deferring operations. All operations that used to throw when called before open are now called once the database is open (@raynos, @rvagg)\n\n\n\nFixed\n\nIf status is 'closing', call callback after db is closed (@raynos, @rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-76",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-76",
    "title": "3327 Research",
    "section": "0.2.1 - 2012-10-28",
    "text": "0.2.1 - 2012-10-28\n\nFixed\n\nFix db GC when using multiple ReadStream (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-77",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-77",
    "title": "3327 Research",
    "section": "0.2.0 - 2012-10-28",
    "text": "0.2.0 - 2012-10-28\n\nAdded\n\nAdd support for Solaris/SunOS/SmartOS (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-78",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-78",
    "title": "3327 Research",
    "section": "0.1.2 - 2012-10-26",
    "text": "0.1.2 - 2012-10-26\n\nFixed\n\nFix bug with falsey values on start and end, fixes #8 (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-79",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-79",
    "title": "3327 Research",
    "section": "0.1.1 - 2012-10-17",
    "text": "0.1.1 - 2012-10-17\n\nFixed\n\nFix bug with sticky options, fixes #6 (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-80",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-80",
    "title": "3327 Research",
    "section": "0.1.0 - 2012-09-28",
    "text": "0.1.0 - 2012-09-28\n\nAdded\n\nAdd Travis setup (@rvagg)\nAdd KeyStream() and ValueStream() (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-81",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-81",
    "title": "3327 Research",
    "section": "0.0.5 - 2012-09-22",
    "text": "0.0.5 - 2012-09-22\n\nChanged\n\nNative layer errors if key or value are undefined or null (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-82",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-82",
    "title": "3327 Research",
    "section": "0.0.5-1 - 2012-09-28",
    "text": "0.0.5-1 - 2012-09-28\n\nAdded\n\nAdd description to package.json (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-83",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-83",
    "title": "3327 Research",
    "section": "0.0.4 - 2012-09-12",
    "text": "0.0.4 - 2012-09-12\n\nFixed\n\nFix bug with options not being passed to readable streams (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-84",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-84",
    "title": "3327 Research",
    "section": "0.0.3 - 2012-09-09",
    "text": "0.0.3 - 2012-09-09\n\nAdded\n\nAdd reverse functionality to readable streams (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-85",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-85",
    "title": "3327 Research",
    "section": "0.0.2 - 2012-09-07",
    "text": "0.0.2 - 2012-09-07\n\nChanged\n\nDo not encourage using async throw in documentation (@rvagg)\nReturn to classical prototypal inheritance (@rvagg)\n\n\n\nFixed\n\nFix typos in documentation (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-86",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-86",
    "title": "3327 Research",
    "section": "0.0.2-1 - 2012-09-07",
    "text": "0.0.2-1 - 2012-09-07\n\nAdded\n\nAdd repository information to package.json (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-87",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-87",
    "title": "3327 Research",
    "section": "0.0.1 - 2012-08-31",
    "text": "0.0.1 - 2012-08-31\n\nAdded\n\nAdd start and end options for readable streams (@rvagg)\nAdd 'json' encoding (@rvagg)\nAdd .nextLocation(), .checkBinaryTestData(), .loadBinaryTestData(), .openTestDatabase(), .commonTearDown(), .commonSetup() and .binaryTestDataMD5Sum to test/common.js (@rvagg)\nAdd tests for .readStream() with start being midway key (@rvagg)\nAdd keywords to package.json (@rvagg)\n\n\n\nChanged\n\nNew API. Database constructor now accepts callback (@rvagg)\nUpdate documentation for new API (@rvagg)\n\n\n\nRemoved\n\nRemove usage of global in tests (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-88",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-88",
    "title": "3327 Research",
    "section": "0.0.0 - 2012-08-17",
    "text": "0.0.0 - 2012-08-17\n:seedling: Initial release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-89",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CHANGELOG.html#section-89",
    "title": "3327 Research",
    "section": "0.0.0-1 - 2012-08-18",
    "text": "0.0.0-1 - 2012-08-18\n\nAdded\n\nAdd bufferstream dependency (@rvagg)\n\n\n\nChanged\n\nDocument ReadStream and WriteStream (@rvagg)\nStart using ~ in dependencies (@rvagg)\n\n\n\nRemoved\n\nRemove unused inherits variable (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CONTRIBUTORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/CONTRIBUTORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "Contributors\n\n\n\nName\nGitHub\nSocial\n\n\n\n\nRod Vagg\n@rvagg\n@rvagg@twitter\n\n\nLars-Magnus Skog\n@ralphtheninja\n@ralph@social.weho.st\n\n\nVincent Weevers\n@vweevers\n@vweevers@twitter\n\n\nJulian Gruber\n@juliangruber\n@juliangruber@twitter\n\n\nDominic Tarr\n@dominictarr\n@dominictarr@twitter\n\n\nMatteo Collina\n@mcollina\n@matteocollina@twitter\n\n\nJames Halliday\n@substack\n@substack@twitter\n\n\nDavid Björklund\n@kesla\n@david_bjorklund@twitter\n\n\nMeirion Hughes\n@MeirionHughes\n\n\n\nRaynos (Jake Verbaten)\n\n\n\n\nJarrett Cruger\n@jcrugzz\n@jcrugzz@twitter\n\n\nArnout Engelen\n@raboof\n\n\n\nBen West\n@bewest\n\n\n\nHuan LI\n@zixia\n@zixia@twitter\n\n\nKyle E. Mitchell\n\n\n\n\nAditya Purwa\n@adityapurwa\n\n\n\nEduardo Sorribas\n@sorribas\n\n\n\nJames Butler\n@sandfox\n\n\n\nNolan Lawson\n@nolanlawson\n@nolan@toot.cafe\n\n\nAlejandro Oviedo\n@a0viedo\n\n\n\nAlex Potsides\n\n\n\n\nAndrew Kelley\n@andrewrk\n\n\n\nBraydon Fuller\n@braydonf\n\n\n\nBrian Woodward\n@doowb\n@doowb@twitter\n\n\nCalvin Metcalf\n@calvinmetcalf\n\n\n\nDaniel Ravina\n@danielravina\n\n\n\nDavid Dias\n@diasdavid\n\n\n\nHans Ott\n@hansott\n\n\n\nJames Brown\n\n\n\n\nMads Andreasen\n@MadsAndreasenTechPeople\n\n\n\nManuel Ernst\n@seriousManual\n\n\n\nMark Cavage\n@mcavage\n\n\n\nMatthew Wright\n@farskipper\n\n\n\nMax Ogden\n@maxogden\n@maxogden@twitter\n\n\nMonty Anderson\n@montyanderson\n\n\n\nmoro\n\n\n\n\nPaolo Fragomeni\n@hxoht\n@hxoht@twitter\n\n\nPascal Temel\n@PascalTemel\n\n\n\nPatrick Pfeiffer\n\n\n\n\nPedro Teixeira\n@pgte\n@pgte@twitter\n\n\nPomke\n\n\n\n\nPrayag Verma\n@pra85\n\n\n\nRichard Littauer\n@RichardLitt\n\n\n\nStephen Sawchuk\n\n\n\n\nSuper-User"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/UPGRADING.html#v4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/UPGRADING.html#v4",
    "title": "3327 Research",
    "section": "v4",
    "text": "v4\nThere have been two major updates to dependencies. First, level-iterator-stream is now based on readable-stream@3. Second, deferred-leveldown is now based on abstract-leveldown@6. Please follow these links for more information; both contain significant enough changes to warrant this levelup major. In addition, all aforementioned dependencies and by extension levelup have dropped support of IE10.\nTo get a consistent behavior between opening and opened levelup instances (in the former case, your store will be wrapped with deferred-leveldown), we recommend to pair levelup@4 only with a store based on abstract-leveldown >= 6. For example, deferred-leveldown now rejects null and undefined values. If you pair levelup@4 with an older store, db.put('key', null) would only throw an error if db is still opening itself."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/UPGRADING.html#v3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/UPGRADING.html#v3",
    "title": "3327 Research",
    "section": "v3",
    "text": "v3\n\nDropped support for node 4.\nBatch operations no longer default to 'put'. If type isn’t specified, an error will be thrown, courtesy of abstract-leveldown."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/UPGRADING.html#v2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/levelup/UPGRADING.html#v2",
    "title": "3327 Research",
    "section": "v2",
    "text": "v2\n\nSummary\nThere has been quite some work done for this new major version:\n\nMake levelup more generic by reducing focus on leveldown and LevelDB.\nMake levelup more generic by removing code related to encodings, which would allow *down implementations to manage encodings themselves.\nUse standard as linter to avoid bikeshedding.\nAdd a native Promise API for promise using geeks. Many have been asking for this. Also async/await is awesome. Breaking change: previously, if you did not pass a callback to an async function and there was an error, levelup would emit an error event instead. This is no longer true.\n\nPoint 1 and 2 also helps out with reducing complexity.\n\n\nUpgrade Guide\nSince levelup no longer tries to load leveldown as a default backend you have to provide a backend instance yourself.\nSo if you previously did:\n$ npm i levelup leveldown --save\nAnd in your code you did something like:\nconst levelup = require('levelup')\nconst db = levelup('/path/to/db')\nYou should now do (for identical functionality):\nconst levelup = require('levelup')\nconst encode = require('encoding-down')\nconst leveldown = require('leveldown')\nconst db = levelup(encode(leveldown('/path/to/db')))\nNote that we have moved out encodings into encoding-down, which in itself is a *down that wraps a *down (meta ftw). It basically just sits in between levelup and the actual backend to operate on encodings for keys and values. Default encoding is 'utf8' like before.\nThis obviously means everyone has to do a lot of code rewrite which is bad. So we aim to fix this by putting that code into level@2.0.0, which already is used as a convenience package.\nSwitching from levelup and leveldown combo to only using level you would do:\nconst level = require('level')\nconst db = level('/path/to/db')\nAlso, we aim to simplify using memdown in the same way by updating level-mem.\nFor more advanced usage with custom versions of abstract-leveldown, the first parameter to levelup() should be an abstract-leveldown instead of passing a factory function via options.db.\nSo if you previously did:\nconst db = levelup('/path/to/db', {\n  db: function (location) {\n    return new CustomLevelDOWN(location)\n  }\n})\nYou should now do (for identical functionality):\nconst encode = require('encoding-down')\nconst db = levelup(encode(new CustomLevelDOWN('/path/to/db')))"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-number-object/CHANGELOG.html#v1.0.6---2021-08-05",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-number-object/CHANGELOG.html#v1.0.6---2021-08-05",
    "title": "3327 Research",
    "section": "v1.0.6 - 2021-08-05",
    "text": "v1.0.6 - 2021-08-05\n\nCommits\n\n[Tests] run tests with core-js as well 5177312\n[Refactor] use has-tostringtag to behave correctly in the presence of symbol shams ca2b31d\n[Dev Deps] update auto-changelog, core-js, eslint, tape 50950f9"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-number-object/CHANGELOG.html#v1.0.5---2021-05-07",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-number-object/CHANGELOG.html#v1.0.5---2021-05-07",
    "title": "3327 Research",
    "section": "v1.0.5 - 2021-05-07",
    "text": "v1.0.5 - 2021-05-07\n\nCommits\n\n[Tests] migrate tests to Github Actions 9666737\n[actions] use node/install instead of node/run; use codecov action 7815ce2\n[meta] do not publish github action workflow files 80ccb75\n[Tests] run nyc on all tests c9ffb74\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog, tape 7e84161\n[readme] add actions and codecov badges 0c5ec7a\n[actions] add Require Allow Edits workflow dd0fb74\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, has-symbols, tape 2d36f80\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog 77d3140\n[Dev Deps] update eslint, @ljharb/eslint-config, tape 75d4abf\n[Dev Deps] update eslint, @ljharb/eslint-config, tape 0c2a917\n[Fix] do not use Object.prototype.toString when Symbol.toStringTag is shammed 8b6ebc4\n[Dev Deps] update auto-changelog, tape; add aud 62045fc\n[actions] use checkout v2; remove unneeded env d48cd06\n[meta] use prepublishOnly script for npm 7+ 827ab0d\n[actions] switch Automatic Rebase workflow to pull_request_target event bfed500\n[meta] remove explicit audit level config ce23e5e\n[meta] gitignore coverage output f1ad981"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-number-object/CHANGELOG.html#v1.0.4---2019-12-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-number-object/CHANGELOG.html#v1.0.4---2019-12-18",
    "title": "3327 Research",
    "section": "v1.0.4 - 2019-12-18",
    "text": "v1.0.4 - 2019-12-18\n\nCommits\n\n[Tests] use shared travis-ci configs 792b5aa\n[Tests] up to node v12.4, v11.15, v10.15, v9.11, v8.15, v7.10, v6.17, v5.12, v4.9; use nvm install-latest-npm dc66db7\nUpdate eslint, tape, semver; use my personal shared eslint config 7660fed\n[Tests] remove jscs f1fee97\n[meta] add auto-changelog 4b1c225\n[meta] remove unused Makefile and associated utilities 379b979\nUpdate covert, jscs, eslint, semver 16d2af8\n[Dev Deps] update eslint, @ljharb/eslint-config, covert, is, replace, semver, tape 21c0f04\nUpdate is, tape, covert, jscs, editorconfig-tools, nsp, eslint, semver. Add replace. Use ^ instead of ~. 19d6ee3\nUpdate eslint d32754b\n[Dev Deps] update eslint, @ljharb/eslint-config, replace 1df8165\nUpdate tape, jscs, eslint, @ljharb/eslint-config 675372b\n[readme] clean up readme; remove testling; fix repo URLs 80e29c4\n[Tests] up to node v12.7, v10.16, v8.16 287a968\nTest on latest iojs and node versions. 11c98a2\n[actions] add automatic rebasing / merge commit blocking 022d026\n[meta] create FUNDING.yml 7f52710\n[Dev Deps] update is, jscs, nsp, eslint, @ljharb/eslint-config, semver bc8cd50\n[Tests] use npx aud instead of nsp or npm audit with hoops 1f9200b\n[Tests] up to node v12.11 706d50a\n[Dev Deps] update jscs e3591a4\n[Tests] up to io.js v3.3, node v4.1 baf4ee7\nUpdate nsp, eslint 61b18d5\nUpdate eslint, semver 52e61bd\n[Dev Deps] update eslint, @ljharb/eslint-config, has-symbols; add safe-publish-latest 79db7f6\nOnly apps should have lockfiles 677b9b4\nTest on io.js v2.2 e8a38b2\n[meta] add funding field 85315e7\n[Dev Deps] update eslint, tape f3581aa\n[Tests] use eclint instead of editorconfig-tools 7b53680\n[Dev Deps] update semver, tape d6b524a\n[Dev Deps] Update tape, eslint be19203\nTest up to io.js v2.1 feb7ba6\nTest up to io.js v3.0 7be1f0a\n[Dev Deps] update tape d9a2318\nSwitch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. a6cd411\nTest on io.js v2.4 46c2e7f\nTest on io.js v2.3 9c344b0\nFix tests for faked @@toStringTag f8c446e"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-number-object/CHANGELOG.html#v1.0.3---2015-01-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-number-object/CHANGELOG.html#v1.0.3---2015-01-29",
    "title": "3327 Research",
    "section": "v1.0.3 - 2015-01-29",
    "text": "v1.0.3 - 2015-01-29\n\nCommits\n\nIf @@toStringTag is not present, use the old-school Object#toString test. 9b2a4df"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-number-object/CHANGELOG.html#v1.0.2---2015-01-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-number-object/CHANGELOG.html#v1.0.2---2015-01-29",
    "title": "3327 Research",
    "section": "v1.0.2 - 2015-01-29",
    "text": "v1.0.2 - 2015-01-29\n\nCommits\n\nImprove optimizability of the non-try/catch part. 7e6be2f\nFix package.json 4f2ebea"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-number-object/CHANGELOG.html#v1.0.1---2015-01-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-number-object/CHANGELOG.html#v1.0.1---2015-01-29",
    "title": "3327 Research",
    "section": "v1.0.1 - 2015-01-29",
    "text": "v1.0.1 - 2015-01-29\n\nCommits\n\nUse Object() instead of new Number() 1aaa746\nAdd early exits for typeof number, or typeof not “object”. eae4337"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-number-object/CHANGELOG.html#v1.0.0---2015-01-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-number-object/CHANGELOG.html#v1.0.0---2015-01-28",
    "title": "3327 Research",
    "section": "v1.0.0 - 2015-01-28",
    "text": "v1.0.0 - 2015-01-28\n\nCommits\n\nDotfiles. 9c74e3e\nmake release a99e5ae\npackage.json 4fed9ef\nRead me c91d6ba\nInitial commit 629fb96\nTests. a39de62\nImplementation. aedd91e"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "8.7.0 (2021-12-27)",
    "text": "8.7.0 (2021-12-27)\n\nNew features\nSupport quoted export names.\nUpgrade to Unicode 14.\nAdd support for Unicode 13 properties in regular expressions.\n\n\nBug fixes\nUse a loop to find line breaks, because the existing regexp search would overrun the end of the searched range and waste a lot of time in minified code."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "8.6.0 (2021-11-18)",
    "text": "8.6.0 (2021-11-18)\n\nBug fixes\nFix a bug where an object literal with multiple __proto__ properties would incorrectly be accepted if a later property value held an assigment.\n\n\nNew features\nSupport class private fields with the in operator."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "8.5.0 (2021-09-06)",
    "text": "8.5.0 (2021-09-06)\n\nBug fixes\nImprove context-dependent tokenization in a number of corner cases.\nFix location tracking after a 0x2028 or 0x2029 character in a string literal (which before did not increase the line number).\nFix an issue where arrow function bodies in for loop context would inappropriately consume in operators.\nFix wrong end locations stored on SequenceExpression nodes.\nImplement restriction that for/of loop LHS can’t start with let.\n\n\nNew features\nAdd support for ES2022 class static blocks.\nAllow multiple input files to be passed to the CLI tool."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "8.4.1 (2021-06-24)",
    "text": "8.4.1 (2021-06-24)\n\nBug fixes\nFix a bug where allowAwaitOutsideFunction would allow await in class field initializers, and setting ecmaVersion to 13 or higher would allow top-level await in non-module sources."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "8.4.0 (2021-06-11)",
    "text": "8.4.0 (2021-06-11)\n\nNew features\nA new option, allowSuperOutsideMethod, can be used to suppress the error when super is used in the wrong context."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "8.3.0 (2021-05-31)",
    "text": "8.3.0 (2021-05-31)\n\nNew features\nDefault allowAwaitOutsideFunction to true for ECMAScript 2022 an higher.\nAdd support for the d (indices) regexp flag."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "8.2.4 (2021-05-04)",
    "text": "8.2.4 (2021-05-04)\n\nBug fixes\nFix spec conformity in corner case ‘for await (async of …)’."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "8.2.3 (2021-05-04)",
    "text": "8.2.3 (2021-05-04)\n\nBug fixes\nFix an issue where the library couldn’t parse ‘for (async of …)’.\nFix a bug in UTF-16 decoding that would read characters incorrectly in some circumstances."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "8.2.2 (2021-04-29)",
    "text": "8.2.2 (2021-04-29)\n\nBug fixes\nFix a bug where a class field initialized to an async arrow function wouldn’t allow await inside it. Same issue existed for generator arrow functions with yield."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "8.2.1 (2021-04-24)",
    "text": "8.2.1 (2021-04-24)\n\nBug fixes\nFix a regression introduced in 8.2.0 where static or async class methods with keyword names fail to parse."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "8.2.0 (2021-04-24)",
    "text": "8.2.0 (2021-04-24)\n\nNew features\nAdd support for ES2022 class fields and private methods."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "8.1.1 (2021-04-12)",
    "text": "8.1.1 (2021-04-12)\n\nVarious\nStop shipping source maps in the NPM package."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "8.1.0 (2021-03-09)",
    "text": "8.1.0 (2021-03-09)\n\nBug fixes\nFix a spurious error in nested destructuring arrays.\n\n\nNew features\nExpose allowAwaitOutsideFunction in CLI interface.\nMake allowImportExportAnywhere also apply to import.meta."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "8.0.5 (2021-01-25)",
    "text": "8.0.5 (2021-01-25)\n\nBug fixes\nAdjust package.json to work with Node 12.16.0 and 13.0-13.6."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "8.0.4 (2020-10-05)",
    "text": "8.0.4 (2020-10-05)\n\nBug fixes\nMake await x ** y an error, following the spec.\nFix potentially exponential regular expression."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "8.0.3 (2020-10-02)",
    "text": "8.0.3 (2020-10-02)\n\nBug fixes\nFix a wasteful loop during Parser creation when setting ecmaVersion to \"latest\"."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "8.0.2 (2020-09-30)",
    "text": "8.0.2 (2020-09-30)\n\nBug fixes\nMake the TypeScript types reflect the current allowed values for ecmaVersion.\nFix another regexp/division tokenizer issue."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "8.0.1 (2020-08-12)",
    "text": "8.0.1 (2020-08-12)\n\nBug fixes\nProvide the correct value in the version export."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "8.0.0 (2020-08-12)",
    "text": "8.0.0 (2020-08-12)\n\nBug fixes\nDisallow expressions like (a = b) = c.\nMake non-octal escape sequences a syntax error in strict mode.\n\n\nNew features\nThe package can now be loaded directly as an ECMAScript module in node 13+.\nUpdate to the set of Unicode properties from ES2021.\n\n\nBreaking changes\nThe ecmaVersion option is now required. For the moment, omitting it will still work with a warning, but that will change in a future release.\nSome changes to method signatures that may be used by plugins."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "7.4.0 (2020-08-03)",
    "text": "7.4.0 (2020-08-03)\n\nNew features\nAdd support for logical assignment operators.\nAdd support for numeric separators."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "7.3.1 (2020-06-11)",
    "text": "7.3.1 (2020-06-11)\n\nBug fixes\nMake the string in the version export match the actual library version."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "7.3.0 (2020-06-11)",
    "text": "7.3.0 (2020-06-11)\n\nBug fixes\nFix a bug that caused parsing of object patterns with a property named set that had a default value to fail.\n\n\nNew features\nAdd support for optional chaining (?.)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "7.2.0 (2020-05-09)",
    "text": "7.2.0 (2020-05-09)\n\nBug fixes\nFix precedence issue in parsing of async arrow functions.\n\n\nNew features\nAdd support for nullish coalescing.\nAdd support for import.meta.\nSupport export * as ... syntax.\nUpgrade to Unicode 13."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-23",
    "title": "3327 Research",
    "section": "6.4.1 (2020-03-09)",
    "text": "6.4.1 (2020-03-09)\n\nBug fixes\nMore carefully check for valid UTF16 surrogate pairs in regexp validator."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-24",
    "title": "3327 Research",
    "section": "7.1.1 (2020-03-01)",
    "text": "7.1.1 (2020-03-01)\n\nBug fixes\nTreat \\8 and \\9 as invalid escapes in template strings.\nAllow unicode escapes in property names that are keywords.\nDon’t error on an exponential operator expression as argument to await.\nMore carefully check for valid UTF16 surrogate pairs in regexp validator."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-25",
    "title": "3327 Research",
    "section": "7.1.0 (2019-09-24)",
    "text": "7.1.0 (2019-09-24)\n\nBug fixes\nDisallow trailing object literal commas when ecmaVersion is less than 5.\n\n\nNew features\nAdd a static acorn property to the Parser class that contains the entire module interface, to allow plugins to access the instance of the library that they are acting on."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-26",
    "title": "3327 Research",
    "section": "7.0.0 (2019-08-13)",
    "text": "7.0.0 (2019-08-13)\n\nBreaking changes\nChanges the node format for dynamic imports to use the ImportExpression node type, as defined in ESTree.\nMakes 10 (ES2019) the default value for the ecmaVersion option."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-27",
    "title": "3327 Research",
    "section": "6.3.0 (2019-08-12)",
    "text": "6.3.0 (2019-08-12)\n\nNew features\nsourceType: \"module\" can now be used even when ecmaVersion is less than 6, to parse module-style code that otherwise conforms to an older standard."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-28",
    "title": "3327 Research",
    "section": "6.2.1 (2019-07-21)",
    "text": "6.2.1 (2019-07-21)\n\nBug fixes\nFix bug causing Acorn to treat some characters as identifier characters that shouldn’t be treated as such.\nFix issue where setting the allowReserved option to \"never\" allowed reserved words in some circumstances."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-29",
    "title": "3327 Research",
    "section": "6.2.0 (2019-07-04)",
    "text": "6.2.0 (2019-07-04)\n\nBug fixes\nImprove valid assignment checking in for/in and for/of loops.\nDisallow binding let in patterns.\n\n\nNew features\nSupport bigint syntax with ecmaVersion >= 11.\nSupport dynamic import syntax with ecmaVersion >= 11.\nUpgrade to Unicode version 12."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-30",
    "title": "3327 Research",
    "section": "6.1.1 (2019-02-27)",
    "text": "6.1.1 (2019-02-27)\n\nBug fixes\nFix bug that caused parsing default exports of with names to fail."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-31",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-31",
    "title": "3327 Research",
    "section": "6.1.0 (2019-02-08)",
    "text": "6.1.0 (2019-02-08)\n\nBug fixes\nFix scope checking when redefining a var as a lexical binding.\n\n\nNew features\nSplit up parseSubscripts to use an internal parseSubscript method to make it easier to extend with plugins."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-32",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-32",
    "title": "3327 Research",
    "section": "6.0.7 (2019-02-04)",
    "text": "6.0.7 (2019-02-04)\n\nBug fixes\nCheck that exported bindings are defined.\nDon’t treat \\u180e as a whitespace character.\nCheck for duplicate parameter names in methods.\nDon’t allow shorthand properties when they are generators or async methods.\nForbid binding await in async arrow function’s parameter list."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-33",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-33",
    "title": "3327 Research",
    "section": "6.0.6 (2019-01-30)",
    "text": "6.0.6 (2019-01-30)\n\nBug fixes\nThe content of class declarations and expressions is now always parsed in strict mode.\nDon’t allow let or const to bind the variable name let.\nTreat class declarations as lexical.\nDon’t allow a generator function declaration as the sole body of an if or else.\nIgnore \"use strict\" when after an empty statement.\nAllow string line continuations with special line terminator characters.\nTreat for bodies as part of the for scope when checking for conflicting bindings.\nFix bug with parsing yield in a for loop initializer.\nImplement special cases around scope checking for functions."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-34",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-34",
    "title": "3327 Research",
    "section": "6.0.5 (2019-01-02)",
    "text": "6.0.5 (2019-01-02)\n\nBug fixes\nFix TypeScript type for Parser.extend and add allowAwaitOutsideFunction to options type.\nDon’t treat let as a keyword when the next token is { on the next line.\nFix bug that broke checking for parentheses around an object pattern in a destructuring assignment when preserveParens was on."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-35",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-35",
    "title": "3327 Research",
    "section": "6.0.4 (2018-11-05)",
    "text": "6.0.4 (2018-11-05)\n\nBug fixes\nFurther improvements to tokenizing regular expressions in corner cases."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-36",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-36",
    "title": "3327 Research",
    "section": "6.0.3 (2018-11-04)",
    "text": "6.0.3 (2018-11-04)\n\nBug fixes\nFix bug in tokenizing an expression-less return followed by a function followed by a regular expression.\nRemove stray symlink in the package tarball."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-37",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-37",
    "title": "3327 Research",
    "section": "6.0.2 (2018-09-26)",
    "text": "6.0.2 (2018-09-26)\n\nBug fixes\nFix bug where default expressions could fail to parse inside an object destructuring assignment expression."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-38",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-38",
    "title": "3327 Research",
    "section": "6.0.1 (2018-09-14)",
    "text": "6.0.1 (2018-09-14)\n\nBug fixes\nFix wrong value in version export."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-39",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-39",
    "title": "3327 Research",
    "section": "6.0.0 (2018-09-14)",
    "text": "6.0.0 (2018-09-14)\n\nBug fixes\nBetter handle variable-redefinition checks for catch bindings and functions directly under if statements.\nForbid new.target in top-level arrow functions.\nFix issue with parsing a regexp after yield in some contexts.\n\n\nNew features\nThe package now comes with TypeScript definitions.\n\n\nBreaking changes\nThe default value of the ecmaVersion option is now 9 (2018).\nPlugins work differently, and will have to be rewritten to work with this version.\nThe loose parser and walker have been moved into separate packages (acorn-loose and acorn-walk)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-40",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-40",
    "title": "3327 Research",
    "section": "5.7.3 (2018-09-10)",
    "text": "5.7.3 (2018-09-10)\n\nBug fixes\nFix failure to tokenize regexps after expressions like x.of.\nBetter error message for unterminated template literals."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-41",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-41",
    "title": "3327 Research",
    "section": "5.7.2 (2018-08-24)",
    "text": "5.7.2 (2018-08-24)\n\nBug fixes\nProperly handle allowAwaitOutsideFunction in for statements.\nTreat function declarations at the top level of modules like let bindings.\nDon’t allow async function declarations as the only statement under a label."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-42",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-42",
    "title": "3327 Research",
    "section": "5.7.0 (2018-06-15)",
    "text": "5.7.0 (2018-06-15)\n\nNew features\nUpgraded to Unicode 11."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-43",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-43",
    "title": "3327 Research",
    "section": "5.6.0 (2018-05-31)",
    "text": "5.6.0 (2018-05-31)\n\nNew features\nAllow U+2028 and U+2029 in string when ECMAVersion >= 10.\nAllow binding-less catch statements when ECMAVersion >= 10.\nAdd allowAwaitOutsideFunction option for parsing top-level await."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-44",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-44",
    "title": "3327 Research",
    "section": "5.5.3 (2018-03-08)",
    "text": "5.5.3 (2018-03-08)\n\nBug fixes\nA second republish of the code in 5.5.1, this time with yarn, to hopefully get valid timestamps."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-45",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-45",
    "title": "3327 Research",
    "section": "5.5.2 (2018-03-08)",
    "text": "5.5.2 (2018-03-08)\n\nBug fixes\nA republish of the code in 5.5.1 in an attempt to solve an issue with the file timestamps in the npm package being 0."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-46",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-46",
    "title": "3327 Research",
    "section": "5.5.1 (2018-03-06)",
    "text": "5.5.1 (2018-03-06)\n\nBug fixes\nFix misleading error message for octal escapes in template strings."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-47",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-47",
    "title": "3327 Research",
    "section": "5.5.0 (2018-02-27)",
    "text": "5.5.0 (2018-02-27)\n\nNew features\nThe identifier character categorization is now based on Unicode version 10.\nAcorn will now validate the content of regular expressions, including new ES9 features."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-48",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-48",
    "title": "3327 Research",
    "section": "5.4.0 (2018-02-01)",
    "text": "5.4.0 (2018-02-01)\n\nBug fixes\nDisallow duplicate or escaped flags on regular expressions.\nDisallow octal escapes in strings in strict mode.\n\n\nNew features\nAdd support for async iteration.\nAdd support for object spread and rest."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-49",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-49",
    "title": "3327 Research",
    "section": "5.3.0 (2017-12-28)",
    "text": "5.3.0 (2017-12-28)\n\nBug fixes\nFix parsing of floating point literals with leading zeroes in loose mode.\nAllow duplicate property names in object patterns.\nDon’t allow static class methods named prototype.\nDisallow async functions directly under if or else.\nParse right-hand-side of for/of as an assignment expression.\nStricter parsing of for/in.\nDon’t allow unicode escapes in contextual keywords.\n\n\nNew features\nParsing class members was factored into smaller methods to allow plugins to hook into it."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-50",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-50",
    "title": "3327 Research",
    "section": "5.2.1 (2017-10-30)",
    "text": "5.2.1 (2017-10-30)\n\nBug fixes\nFix a token context corruption bug."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-51",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-51",
    "title": "3327 Research",
    "section": "5.2.0 (2017-10-30)",
    "text": "5.2.0 (2017-10-30)\n\nBug fixes\nFix token context tracking for class and function in property-name position.\nMake sure %* isn’t parsed as a valid operator.\nAllow shorthand properties get and set to be followed by default values.\nDisallow super when not in callee or object position.\n\n\nNew features\nSupport directive property on directive expression statements."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-52",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-52",
    "title": "3327 Research",
    "section": "5.1.2 (2017-09-04)",
    "text": "5.1.2 (2017-09-04)\n\nBug fixes\nDisable parsing of legacy HTML-style comments in modules.\nFix parsing of async methods whose names are keywords."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-53",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-53",
    "title": "3327 Research",
    "section": "5.1.1 (2017-07-06)",
    "text": "5.1.1 (2017-07-06)\n\nBug fixes\nFix problem with disambiguating regexp and division after a class."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-54",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-54",
    "title": "3327 Research",
    "section": "5.1.0 (2017-07-05)",
    "text": "5.1.0 (2017-07-05)\n\nBug fixes\nFix tokenizing of regexps in an object-desctructuring for/of loop and after yield.\nParse zero-prefixed numbers with non-octal digits as decimal.\nAllow object/array patterns in rest parameters.\nDon’t error when yield is used as a property name.\nAllow async as a shorthand object property.\n\n\nNew features\nImplement the template literal revision proposal for ES9."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-55",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-55",
    "title": "3327 Research",
    "section": "5.0.3 (2017-04-01)",
    "text": "5.0.3 (2017-04-01)\n\nBug fixes\nFix spurious duplicate variable definition errors for named functions."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-56",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-56",
    "title": "3327 Research",
    "section": "5.0.2 (2017-03-30)",
    "text": "5.0.2 (2017-03-30)\n\nBug fixes\nA binary operator after a parenthesized arrow expression is no longer incorrectly treated as an error."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-57",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-57",
    "title": "3327 Research",
    "section": "5.0.0 (2017-03-28)",
    "text": "5.0.0 (2017-03-28)\n\nBug fixes\nRaise an error for duplicated lexical bindings.\nFix spurious error when an assignement expression occurred after a spread expression.\nAccept regular expressions after of (in for/of), yield (in a generator), and braced arrow functions.\nAllow labels in front or var declarations, even in strict mode.\n\n\nBreaking changes\nParse declarations following export default as declaration nodes, not expressions. This means that class and function declarations nodes can now have null as their id."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-58",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-58",
    "title": "3327 Research",
    "section": "4.0.11 (2017-02-07)",
    "text": "4.0.11 (2017-02-07)\n\nBug fixes\nAllow all forms of member expressions to be parenthesized as lvalue."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-59",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-59",
    "title": "3327 Research",
    "section": "4.0.10 (2017-02-07)",
    "text": "4.0.10 (2017-02-07)\n\nBug fixes\nDon’t expect semicolons after default-exported functions or classes, even when they are expressions.\nCheck for use of 'use strict' directives in non-simple parameter functions, even when already in strict mode."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-60",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-60",
    "title": "3327 Research",
    "section": "4.0.9 (2017-02-06)",
    "text": "4.0.9 (2017-02-06)\n\nBug fixes\nFix incorrect error raised for parenthesized simple assignment targets, so that (x) = 1 parses again."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-61",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-61",
    "title": "3327 Research",
    "section": "4.0.8 (2017-02-03)",
    "text": "4.0.8 (2017-02-03)\n\nBug fixes\nSolve spurious parenthesized pattern errors by temporarily erring on the side of accepting programs that our delayed errors don’t handle correctly yet."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-62",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-62",
    "title": "3327 Research",
    "section": "4.0.7 (2017-02-02)",
    "text": "4.0.7 (2017-02-02)\n\nBug fixes\nAccept invalidly rejected code like (x).y = 2 again.\nDon’t raise an error when a function inside strict code has a non-simple parameter list."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-63",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-63",
    "title": "3327 Research",
    "section": "4.0.6 (2017-02-02)",
    "text": "4.0.6 (2017-02-02)\n\nBug fixes\nFix exponential behavior (manifesting itself as a complete hang for even relatively small source files) introduced by the new ‘use strict’ check."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-64",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-64",
    "title": "3327 Research",
    "section": "4.0.5 (2017-02-02)",
    "text": "4.0.5 (2017-02-02)\n\nBug fixes\nDisallow parenthesized pattern expressions.\nAllow keywords as export names.\nDon’t allow the async keyword to be parenthesized.\nProperly raise an error when a keyword contains a character escape.\nAllow \"use strict\" to appear after other string literal expressions.\nDisallow labeled declarations."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-65",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-65",
    "title": "3327 Research",
    "section": "4.0.4 (2016-12-19)",
    "text": "4.0.4 (2016-12-19)\n\nBug fixes\nFix crash when export was followed by a keyword that can’t be exported."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-66",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-66",
    "title": "3327 Research",
    "section": "4.0.3 (2016-08-16)",
    "text": "4.0.3 (2016-08-16)\n\nBug fixes\nAllow regular function declarations inside single-statement if branches in loose mode. Forbid them entirely in strict mode.\nProperly parse properties named async in ES2017 mode.\nFix bug where reserved words were broken in ES2017 mode."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-67",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-67",
    "title": "3327 Research",
    "section": "4.0.2 (2016-08-11)",
    "text": "4.0.2 (2016-08-11)\n\nBug fixes\nDon’t ignore period or ‘e’ characters after octal numbers.\nFix broken parsing for call expressions in default parameter values of arrow functions."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-68",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-68",
    "title": "3327 Research",
    "section": "4.0.1 (2016-08-08)",
    "text": "4.0.1 (2016-08-08)\n\nBug fixes\nFix false positives in duplicated export name errors."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-69",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-69",
    "title": "3327 Research",
    "section": "4.0.0 (2016-08-07)",
    "text": "4.0.0 (2016-08-07)\n\nBreaking changes\nThe default ecmaVersion option value is now 7.\nA number of internal method signatures changed, so plugins might need to be updated.\n\n\nBug fixes\nThe parser now raises errors on duplicated export names.\narguments and eval can now be used in shorthand properties.\nDuplicate parameter names in non-simple argument lists now always produce an error.\n\n\nNew features\nThe ecmaVersion option now also accepts year-style version numbers (2015, etc).\nSupport for async/await syntax when ecmaVersion is >= 8.\nSupport for trailing commas in call expressions when ecmaVersion is >= 8."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-70",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-70",
    "title": "3327 Research",
    "section": "3.3.0 (2016-07-25)",
    "text": "3.3.0 (2016-07-25)\n\nBug fixes\nFix bug in tokenizing of regexp operator after a function declaration.\nFix parser crash when parsing an array pattern with a hole.\n\n\nNew features\nImplement check against complex argument lists in functions that enable strict mode in ES7."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-71",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-71",
    "title": "3327 Research",
    "section": "3.2.0 (2016-06-07)",
    "text": "3.2.0 (2016-06-07)\n\nBug fixes\nImprove handling of lack of unicode regexp support in host environment.\nProperly reject shorthand properties whose name is a keyword.\n\n\nNew features\nVisitors created with visit.make now have their base as prototype, rather than copying properties into a fresh object."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-72",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-72",
    "title": "3327 Research",
    "section": "3.1.0 (2016-04-18)",
    "text": "3.1.0 (2016-04-18)\n\nBug fixes\nProperly tokenize the division operator directly after a function expression.\nAllow trailing comma in destructuring arrays."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-73",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-73",
    "title": "3327 Research",
    "section": "3.0.4 (2016-02-25)",
    "text": "3.0.4 (2016-02-25)\n\nFixes\nAllow update expressions as left-hand-side of the ES7 exponential operator."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-74",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-74",
    "title": "3327 Research",
    "section": "3.0.2 (2016-02-10)",
    "text": "3.0.2 (2016-02-10)\n\nFixes\nFix bug that accidentally made undefined a reserved word when parsing ES7."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-75",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-75",
    "title": "3327 Research",
    "section": "3.0.0 (2016-02-10)",
    "text": "3.0.0 (2016-02-10)\n\nBreaking changes\nThe default value of the ecmaVersion option is now 6 (used to be 5).\nSupport for comprehension syntax (which was dropped from the draft spec) has been removed.\n\n\nFixes\nlet and yield are now “contextual keywords”, meaning you can mostly use them as identifiers in ES5 non-strict code.\nA parenthesized class or function expression after export default is now parsed correctly.\n\n\nNew features\nWhen ecmaVersion is set to 7, Acorn will parse the exponentiation operator (**).\nThe identifier character ranges are now based on Unicode 8.0.0.\nPlugins can now override the raiseRecoverable method to override the way non-critical errors are handled."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-76",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-76",
    "title": "3327 Research",
    "section": "2.7.0 (2016-01-04)",
    "text": "2.7.0 (2016-01-04)\n\nFixes\nStop allowing rest parameters in setters.\nDisallow y rexexp flag in ES5.\nDisallow \\00 and \\000 escapes in strict mode.\nRaise an error when an import name is a reserved word."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-77",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-77",
    "title": "3327 Research",
    "section": "2.6.2 (2015-11-10)",
    "text": "2.6.2 (2015-11-10)\n\nFixes\nDon’t crash when no options object is passed."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-78",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-78",
    "title": "3327 Research",
    "section": "2.6.0 (2015-11-09)",
    "text": "2.6.0 (2015-11-09)\n\nFixes\nAdd await as a reserved word in module sources.\nDisallow yield in a parameter default value for a generator.\nForbid using a comma after a rest pattern in an array destructuring.\n\n\nNew features\nSupport parsing stdin in command-line tool."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-79",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn/CHANGELOG.html#section-79",
    "title": "3327 Research",
    "section": "2.5.0 (2015-10-27)",
    "text": "2.5.0 (2015-10-27)\n\nFixes\nFix tokenizer support in the command-line tool.\nStop allowing new.target outside of functions.\nRemove legacy guard and guardedHandler properties from try nodes.\nStop allowing multiple __proto__ properties on an object literal in strict mode.\nDon’t allow rest parameters to be non-identifier patterns.\nCheck for duplicate paramter names in arrow functions."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethereumjs/blockchain/node_modules/ms/license.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethereumjs/blockchain/node_modules/ms/license.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright (c) 2016 Zeit, Inc.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethereumjs/blockchain/node_modules/ms/readme.html#examples",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethereumjs/blockchain/node_modules/ms/readme.html#examples",
    "title": "3327 Research",
    "section": "Examples",
    "text": "Examples\nms('2 days')  // 172800000\nms('1d')      // 86400000\nms('10h')     // 36000000\nms('2.5 hrs') // 9000000\nms('2h')      // 7200000\nms('1m')      // 60000\nms('5s')      // 5000\nms('1y')      // 31557600000\nms('100')     // 100\n\nConvert from milliseconds\nms(60000)             // \"1m\"\nms(2 * 60000)         // \"2m\"\nms(ms('10 hours'))    // \"10h\"\n\n\nTime format written-out\nms(60000, { long: true })             // \"1 minute\"\nms(2 * 60000, { long: true })         // \"2 minutes\"\nms(ms('10 hours'), { long: true })    // \"10 hours\""
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethereumjs/blockchain/node_modules/ms/readme.html#features",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethereumjs/blockchain/node_modules/ms/readme.html#features",
    "title": "3327 Research",
    "section": "Features",
    "text": "Features\n\nWorks both in node and in the browser.\nIf a number is supplied to ms, a string with a unit is returned.\nIf a string that contains the number is supplied, it returns it as a number (e.g.: it returns 100 for '100').\nIf you pass a string with a number and a valid unit, the number of equivalent ms is returned."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethereumjs/blockchain/node_modules/ms/readme.html#caught-a-bug",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethereumjs/blockchain/node_modules/ms/readme.html#caught-a-bug",
    "title": "3327 Research",
    "section": "Caught a bug?",
    "text": "Caught a bug?\n\nFork this repository to your own GitHub account and then clone it to your local device\nLink the package to the global module directory: npm link\nWithin the module you want to test your local development instance of ms, just link it to the dependencies: npm link ms. Instead of the default one from npm, node will now use your clone of ms!\n\nAs always, you can run the tests using: npm test"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethereumjs/blockchain/node_modules/debug/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethereumjs/blockchain/node_modules/debug/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "2.6.9 / 2017-09-22\n\nremove ReDoS regexp in %o formatter (#504)\n\n\n\n2.6.8 / 2017-05-18\n\nFix: Check for undefined on browser globals (#462, @marbemac)\n\n\n\n2.6.7 / 2017-05-16\n\nFix: Update ms to 2.0.0 to fix regular expression denial of service vulnerability (#458, @hubdotcom)\nFix: Inline extend function in node implementation (#452, @dougwilson)\nDocs: Fix typo (#455, @msasad)\n\n\n\n2.6.5 / 2017-04-27\n\nFix: null reference check on window.documentElement.style.WebkitAppearance (#447, @thebigredgeek)\nMisc: clean up browser reference checks (#447, @thebigredgeek)\nMisc: add npm-debug.log to .gitignore (@thebigredgeek)\n\n\n\n2.6.4 / 2017-04-20\n\nFix: bug that would occure if process.env.DEBUG is a non-string value. (#444, @LucianBuzzo)\nChore: ignore bower.json in npm installations. (#437, @joaovieira)\nMisc: update “ms” to v0.7.3 (@tootallnate)\n\n\n\n2.6.3 / 2017-03-13\n\nFix: Electron reference to process.env.DEBUG (#431, @paulcbetts)\nDocs: Changelog fix (@thebigredgeek)\n\n\n\n2.6.2 / 2017-03-10\n\nFix: DEBUG_MAX_ARRAY_LENGTH (#420, @slavaGanzin)\nDocs: Add backers and sponsors from Open Collective (#422, @piamancini)\nDocs: Add Slackin invite badge (@tootallnate)\n\n\n\n2.6.1 / 2017-02-10\n\nFix: Module’s export default syntax fix for IE8 Expected identifier error\nFix: Whitelist DEBUG_FD for values 1 and 2 only (#415, @pi0)\nFix: IE8 “Expected identifier” error (#414, @vgoma)\nFix: Namespaces would not disable once enabled (#409, @musikov)\n\n\n\n2.6.0 / 2016-12-28\n\nFix: added better null pointer checks for browser useColors (@thebigredgeek)\nImprovement: removed explicit window.debug export (#404, @tootallnate)\nImprovement: deprecated DEBUG_FD environment variable (#405, @tootallnate)\n\n\n\n2.5.2 / 2016-12-25\n\nFix: reference error on window within webworkers (#393, @KlausTrainer)\nDocs: fixed README typo (#391, @lurch)\nDocs: added notice about v3 api discussion (@thebigredgeek)\n\n\n\n2.5.1 / 2016-12-20\n\nFix: babel-core compatibility\n\n\n\n2.5.0 / 2016-12-20\n\nFix: wrong reference in bower file (@thebigredgeek)\nFix: webworker compatibility (@thebigredgeek)\nFix: output formatting issue (#388, @kribblo)\nFix: babel-loader compatibility (#383, @escwald)\nMisc: removed built asset from repo and publications (@thebigredgeek)\nMisc: moved source files to /src (#378, @yamikuronue)\nTest: added karma integration and replaced babel with browserify for browser tests (#378, @yamikuronue)\nTest: coveralls integration (#378, @yamikuronue)\nDocs: simplified language in the opening paragraph (#373, @yamikuronue)\n\n\n\n2.4.5 / 2016-12-17\n\nFix: navigator undefined in Rhino (#376, @jochenberger)\nFix: custom log function (#379, @hsiliev)\nImprovement: bit of cleanup + linting fixes (@thebigredgeek)\nImprovement: rm non-maintainted dist/ dir (#375, @freewil)\nDocs: simplified language in the opening paragraph. (#373, @yamikuronue)\n\n\n\n2.4.4 / 2016-12-14\n\nFix: work around debug being loaded in preload scripts for electron (#368, @paulcbetts)\n\n\n\n2.4.3 / 2016-12-14\n\nFix: navigation.userAgent error for react native (#364, @escwald)\n\n\n\n2.4.2 / 2016-12-14\n\nFix: browser colors (#367, @tootallnate)\nMisc: travis ci integration (@thebigredgeek)\nMisc: added linting and testing boilerplate with sanity check (@thebigredgeek)\n\n\n\n2.4.1 / 2016-12-13\n\nFix: typo that broke the package (#356)\n\n\n\n2.4.0 / 2016-12-13\n\nFix: bower.json references unbuilt src entry point (#342, @justmatt)\nFix: revert “handle regex special characters” (@tootallnate)\nFeature: configurable util.inspect()`options for NodeJS (#327, @tootallnate)\nFeature: %O`(big O) pretty-prints objects (#322, @tootallnate)\nImprovement: allow colors in workers (#335, @botverse)\nImprovement: use same color for same namespace. (#338, @lchenay)\n\n\n\n2.3.3 / 2016-11-09\n\nFix: Catch JSON.stringify() errors (#195, Jovan Alleyne)\nFix: Returning localStorage saved values (#331, Levi Thomason)\nImprovement: Don’t create an empty object when no process (Nathan Rajlich)\n\n\n\n2.3.2 / 2016-11-09\n\nFix: be super-safe in index.js as well (@TooTallNate)\nFix: should check whether process exists (Tom Newby)\n\n\n\n2.3.1 / 2016-11-09\n\nFix: Added electron compatibility (#324, @paulcbetts)\nImprovement: Added performance optimizations (@tootallnate)\nReadme: Corrected PowerShell environment variable example (#252, @gimre)\nMisc: Removed yarn lock file from source control (#321, @fengmk2)\n\n\n\n2.3.0 / 2016-11-07\n\nFix: Consistent placement of ms diff at end of output (#215, @gorangajic)\nFix: Escaping of regex special characters in namespace strings (#250, @zacronos)\nFix: Fixed bug causing crash on react-native (#282, @vkarpov15)\nFeature: Enabled ES6+ compatible import via default export (#212 @bucaran)\nFeature: Added %O formatter to reflect Chrome’s console.log capability (#279, @oncletom)\nPackage: Update “ms” to 0.7.2 (#315, @DevSide)\nPackage: removed superfluous version property from bower.json (#207 @kkirsche)\nReadme: fix USE_COLORS to DEBUG_COLORS\nReadme: Doc fixes for format string sugar (#269, @mlucool)\nReadme: Updated docs for DEBUG_FD and DEBUG_COLORS environment variables (#232, @mattlyons0)\nReadme: doc fixes for PowerShell (#271 #243, @exoticknight @unreadable)\nReadme: better docs for browser support (#224, @matthewmueller)\nTooling: Added yarn integration for development (#317, @thebigredgeek)\nMisc: Renamed History.md to CHANGELOG.md (@thebigredgeek)\nMisc: Added license file (#226 #274, @CantemoInternal @sdaitzman)\nMisc: Updated contributors (@thebigredgeek)\n\n\n\n2.2.0 / 2015-05-09\n\npackage: update “ms” to v0.7.1 (#202, @dougwilson)\nREADME: add logging to file example (#193, @DanielOchoa)\nREADME: fixed a typo (#191, @amir-s)\nbrowser: expose storage (#190, @stephenmathieson)\nMakefile: add a distclean target (#189, @stephenmathieson)\n\n\n\n2.1.3 / 2015-03-13\n\nUpdated stdout/stderr example (#186)\nUpdated example/stdout.js to match debug current behaviour\nRenamed example/stderr.js to stdout.js\nUpdate Readme.md (#184)\nreplace high intensity foreground color for bold (#182, #183)\n\n\n\n2.1.2 / 2015-03-01\n\ndist: recompile\nupdate “ms” to v0.7.0\npackage: update “browserify” to v9.0.3\ncomponent: fix “ms.js” repo location\nchanged bower package name\nupdated documentation about using debug in a browser\nfix: security error on safari (#167, #168, @yields)\n\n\n\n2.1.1 / 2014-12-29\n\nbrowser: use typeof to check for console existence\nbrowser: check for console.log truthiness (fix IE 8/9)\nbrowser: add support for Chrome apps\nReadme: added Windows usage remarks\nAdd bower.json to properly support bower install\n\n\n\n2.1.0 / 2014-10-15\n\nnode: implement DEBUG_FD env variable support\npackage: update “browserify” to v6.1.0\npackage: add “license” field to package.json (#135, @panuhorsmalahti)\n\n\n\n2.0.0 / 2014-09-01\n\npackage: update “browserify” to v5.11.0\nnode: use stderr rather than stdout for logging (#29, @stephenmathieson)\n\n\n\n1.0.4 / 2014-07-15\n\ndist: recompile\nexample: remove console.info() log usage\nexample: add “Content-Type” UTF-8 header to browser example\nbrowser: place %c marker after the space character\nbrowser: reset the “content” color via color: inherit\nbrowser: add colors support for Firefox >= v31\ndebug: prefer an instance log() function over the global one (#119)\nReadme: update documentation about styled console logs for FF v31 (#116, @wryk)\n\n\n\n1.0.3 / 2014-07-09\n\nAdd support for multiple wildcards in namespaces (#122, @seegno)\nbrowser: fix lint\n\n\n\n1.0.2 / 2014-06-10\n\nbrowser: update color palette (#113, @gscottolson)\ncommon: make console logging function configurable (#108, @timoxley)\nnode: fix %o colors on old node <= 0.8.x\nMakefile: find node path using shell/which (#109, @timoxley)\n\n\n\n1.0.1 / 2014-06-06\n\nbrowser: use removeItem() to clear localStorage\nbrowser, node: don’t set DEBUG if namespaces is undefined (#107, @leedm777)\npackage: add “contributors” section\nnode: fix comment typo\nREADME: list authors\n\n\n\n1.0.0 / 2014-06-04\n\nmake ms diff be global, not be scope\ndebug: ignore empty strings in enable()\nnode: make DEBUG_COLORS able to disable coloring\n*: export the colors array\nnpmignore: don’t publish the dist dir\nMakefile: refactor to use browserify\npackage: add “browserify” as a dev dependency\nReadme: add Web Inspector Colors section\nnode: reset terminal color for the debug content\nnode: map “%o” to util.inspect()\nbrowser: map “%j” to JSON.stringify()\ndebug: add custom “formatters”\ndebug: use “ms” module for humanizing the diff\nReadme: add “bash” syntax highlighting\nbrowser: add Firebug color support\nbrowser: add colors for WebKit browsers\nnode: apply log to console\nrewrite: abstract common logic for Node & browsers\nadd .jshintrc file\n\n\n\n0.8.1 / 2014-04-14\n\npackage: re-add the “component” section\n\n\n\n0.8.0 / 2014-03-30\n\nadd enable() method for nodejs. Closes #27\nchange from stderr to stdout\nremove unnecessary index.js file\n\n\n\n0.7.4 / 2013-11-13\n\nremove “browserify” key from package.json (fixes something in browserify)\n\n\n\n0.7.3 / 2013-10-30\n\nfix: catch localStorage security error when cookies are blocked (Chrome)\nadd debug(err) support. Closes #46\nadd .browser prop to package.json. Closes #42\n\n\n\n0.7.2 / 2013-02-06\n\nfix package.json\nfix: Mobile Safari (private mode) is broken with debug\nfix: Use unicode to send escape character to shell instead of octal to work with strict mode javascript\n\n\n\n0.7.1 / 2013-02-05\n\nadd repository URL to package.json\nadd DEBUG_COLORED to force colored output\nadd browserify support\nfix component. Closes #24\n\n\n\n0.7.0 / 2012-05-04\n\nAdded .component to package.json\nAdded debug.component.js build\n\n\n\n0.6.0 / 2012-03-16\n\nAdded support for “-” prefix in DEBUG [Vinay Pulim]\nAdded .enabled flag to the node version [TooTallNate]\n\n\n\n0.5.0 / 2012-02-02\n\nAdded: humanize diffs. Closes #8\nAdded debug.disable() to the CS variant\nRemoved padding. Closes #10\nFixed: persist client-side variant again. Closes #9\n\n\n\n0.4.0 / 2012-02-01\n\nAdded browser variant support for older browsers [TooTallNate]\nAdded debug.enable('project:*') to browser variant [TooTallNate]\nAdded padding to diff (moved it to the right)\n\n\n\n0.3.0 / 2012-01-26\n\nAdded millisecond diff when isatty, otherwise UTC string\n\n\n\n0.2.0 / 2012-01-22\n\nAdded wildcard support\n\n\n\n0.1.0 / 2011-12-02\n\nAdded: remove colors unless stderr isatty [TooTallNate]\n\n\n\n0.0.1 / 2010-01-03\n\nInitial release"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/strip-ansi/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/strip-ansi/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install strip-ansi"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/strip-ansi/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/strip-ansi/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst stripAnsi = require('strip-ansi');\n\nstripAnsi('\\u001B[4mUnicorn\\u001B[0m');\n//=> 'Unicorn'\n\nstripAnsi('\\u001B]8;;https://github.com\\u0007Click\\u001B]8;;\\u0007');\n//=> 'Click'"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/strip-ansi/readme.html#security",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/strip-ansi/readme.html#security",
    "title": "3327 Research",
    "section": "Security",
    "text": "Security\nTo report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/strip-ansi/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/strip-ansi/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nstrip-ansi-cli - CLI for this module\nstrip-ansi-stream - Streaming version of this module\nhas-ansi - Check if a string has ANSI escape codes\nansi-regex - Regular expression for matching ANSI escape codes\nchalk - Terminal string styling done right"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/strip-ansi/readme.html#maintainers",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/strip-ansi/readme.html#maintainers",
    "title": "3327 Research",
    "section": "Maintainers",
    "text": "Maintainers\n\nSindre Sorhus\nJosh Junon"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/strip-ansi/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/strip-ansi/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/ansi-regex/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/ansi-regex/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install ansi-regex"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/ansi-regex/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/ansi-regex/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst ansiRegex = require('ansi-regex');\n\nansiRegex().test('\\u001B[4mcake\\u001B[0m');\n//=> true\n\nansiRegex().test('cake');\n//=> false\n\n'\\u001B[4mcake\\u001B[0m'.match(ansiRegex());\n//=> ['\\u001B[4m', '\\u001B[0m']\n\n'\\u001B[4mcake\\u001B[0m'.match(ansiRegex({onlyFirst: true}));\n//=> ['\\u001B[4m']\n\n'\\u001B]8;;https://github.com\\u0007click\\u001B]8;;\\u0007'.match(ansiRegex());\n//=> ['\\u001B]8;;https://github.com\\u0007', '\\u001B]8;;\\u0007']"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/ansi-regex/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/ansi-regex/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nansiRegex(options)\nReturns a regex for matching ANSI escape codes.\n\noptions\n\nonlyFirst\nType: boolean Default: false (Matches any ANSI escape codes in a string)\nMatch only the first ANSI escape."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/ansi-regex/readme.html#faq",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/ansi-regex/readme.html#faq",
    "title": "3327 Research",
    "section": "FAQ",
    "text": "FAQ\n\nWhy do you test for codes not in the ECMA 48 standard?\nSome of the codes we run as a test are codes that we acquired finding various lists of non-standard or manufacturer specific codes. We test for both standard and non-standard codes, as most of them follow the same or similar format and can be safely matched in strings without the risk of removing actual string content. There are a few non-standard control codes that do not follow the traditional format (i.e. they end in numbers) thus forcing us to exclude them from the test because we cannot reliably match them.\nOn the historical side, those ECMA standards were established in the early 90’s whereas the VT100, for example, was designed in the mid/late 70’s. At that point in time, control codes were still pretty ungoverned and engineers used them for a multitude of things, namely to activate hardware ports that may have been proprietary. Somewhere else you see a similar ‘anarchy’ of codes is in the x86 architecture for processors; there are a ton of “interrupts” that can mean different things on certain brands of processors, most of which have been phased out."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/ansi-regex/readme.html#security",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/ansi-regex/readme.html#security",
    "title": "3327 Research",
    "section": "Security",
    "text": "Security\nTo report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/ansi-regex/readme.html#maintainers",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/ansi-regex/readme.html#maintainers",
    "title": "3327 Research",
    "section": "Maintainers",
    "text": "Maintainers\n\nSindre Sorhus\nJosh Junon"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/ansi-regex/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/ansi-regex/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/string-width/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/string-width/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install string-width"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/string-width/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/string-width/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst stringWidth = require('string-width');\n\nstringWidth('古');\n//=> 2\n\nstringWidth('\\u001b[1m古\\u001b[22m');\n//=> 2\n\nstringWidth('a');\n//=> 1\n\nstringWidth('\\u001B]8;;https://github.com\\u0007Click\\u001B]8;;\\u0007');\n// => 5"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/string-width/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/string-width/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nstring-width-cli - CLI for this module\nstring-length - Get the real length of a string\nwidest-line - Get the visual width of the widest line in a string"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/string-width/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/node_modules/string-width/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install wrap-ansi"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst chalk = require('chalk');\nconst wrapAnsi = require('wrap-ansi');\n\nconst input = 'The quick brown ' + chalk.red('fox jumped over ') +\n    'the lazy ' + chalk.green('dog and then ran away with the unicorn.');\n\nconsole.log(wrapAnsi(input, 20));\n\n\n\n<b>\n    <a href=\"https://tidelift.com/subscription/pkg/npm-wrap_ansi?utm_source=npm-wrap-ansi&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n</b>\n<br>\n<sub>\n    Tidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n</sub>"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nwrapAnsi(input, columns, options)\nWrap words to the specified column width.\n\ninput\nType: string\nString with ANSI escape codes. Like one styled by chalk.\n\n\ncolumns\nType: number\nNumber of columns to wrap the text to.\n\n\noptions\nType: Object\n\nhard\nType: boolean Default: false\nBy default the wrap is soft, meaning long words may extend past the column width. Setting this to true will make it hard wrap at the column width.\n\n\nwordWrap\nType: boolean Default: true\nBy default, an attempt is made to split words at spaces, ensuring that they don’t extend past the configured columns. If wordWrap is false, each column will instead be completely filled splitting words as necessary.\n\n\ntrim\nType: boolean Default: true\nWhitespace on all lines is removed by default. Set this option to false if you don’t want to trim."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nslice-ansi - Slice a string with ANSI escape codes\ncli-truncate - Truncate a string to a specific width in the terminal\nchalk - Terminal string styling done right\njsesc - Generate ASCII-only output from Unicode strings. Useful for creating test fixtures."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/readme.html#maintainers",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/readme.html#maintainers",
    "title": "3327 Research",
    "section": "Maintainers",
    "text": "Maintainers\n\nSindre Sorhus\nJosh Junon\nBenjamin Coe"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/readme.html#security",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/readme.html#security",
    "title": "3327 Research",
    "section": "Security",
    "text": "Security\nTo report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/wrap-ansi/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/y18n/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/y18n/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "Change Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n4.0.3 (2021-04-07)\n\n\nBug Fixes\n\nrelease: 4.x.x should not enforce Node 10 (#126) (1e21a53)\n\n\n\n4.0.1 (2020-11-30)\n\n\nBug Fixes\n\naddress prototype pollution issue (#108) (a9ac604)\n\n # 4.0.0 (2017-10-10)\n\n\nBug Fixes\n\nallow support for falsy values like 0 in tagged literal (#45) (c926123)\n\n\n\nFeatures\n\n**__:** added tagged template literal support (#44) (0598daf)\n\n\n\nBREAKING CHANGES\n\n**__:** dropping Node 0.10/Node 0.12 support"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-negative-zero/CHANGELOG.html#v2.0.2---2021-12-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-negative-zero/CHANGELOG.html#v2.0.2---2021-12-10",
    "title": "3327 Research",
    "section": "v2.0.2 - 2021-12-10",
    "text": "v2.0.2 - 2021-12-10\n\nCommits\n\n[actions] reuse common workflows ece923d\n[actions] use node/install instead of node/run; use codecov action 3a26f43\n[meta] do not publish workflow files 2cea0c2\n[readme] add github actions/codecov badges; update URLs 0c0be3e\n[Dev Deps] update eslint, @ljharb/eslint-config, safe-publish-latest, tape a93d16e\n[meta] create FUNDING.yml b4f425e\n[actions] update codecov uploader 7999db3\n[Dev Deps] update eslint, @ljharb/eslint-config, auto-changelog, safe-publish-latest, tape 140e4d9\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, tape 23a8b6d\n[readme] add actions and codecov badges fe92126\n[readme] fix repo URLs 50c428e\n[Dev Deps] update eslint, @ljharb/eslint-config, tape 688155f\n[meta] use prepublishOnly script for npm 7+ 83171f9\n[actions] update workflows e9823db"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-negative-zero/CHANGELOG.html#v2.0.1---2020-12-04",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-negative-zero/CHANGELOG.html#v2.0.1---2020-12-04",
    "title": "3327 Research",
    "section": "v2.0.1 - 2020-12-04",
    "text": "v2.0.1 - 2020-12-04\n\nCommits\n\n[Tests] use shared travis-ci configs 5b92482\n[Tests] up to node v11.7, v10.15, v9.11, v8.15, v7.10, v6.16, v5.12, v4.9; use nvm install-latest-npm; fix test scripts 0f5d2f8\n[Tests] migrate tests to Github Actions b80f05a\n[Tests] remove jscs 7ccaf41\n[meta] add missing changelog 992bdde\n[readme] fix repo URLs; remove defunct badges 80fd18d\n[Tests] run nyc on all tests df26f14\nUpdate tape, jscs, eslint, @ljharb/eslint-config d7723aa\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog, tape 9fdaabe\n[Dev Deps] update eslint, @ljharb/eslint-config, covert, tape f07eeb2\n[Dev Deps] update tape, jscs, eslint, @ljharb/eslint-config bd5c751\n[actions] add automatic rebasing / merge commit blocking 5666a91\n[meta] add auto-changelog f70fb2b\n[actions] add “Allow Edits” workflow 2b040a8\n[Dev Deps] update eslint, @ljharb/eslint-config, tape; add safe-publish-latest 09e2e53\n[Tests] use npm audit instead of nsp 7df2669\n[Tests] up to io.js v3.3, node v4.1 4ff97c5\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog 9e8cb7b\n[Dev Deps] update jscs, eslint, @ljharb/eslint-config, nsp 70b9888\n[Dev Deps] update jscs 59d0c42\nAdd npm run security eb418ed\n[Dev Deps] update eslint, @ljharb/eslint-config, tape 86a758d\nOnly apps should have lockfiles a0ab621\n[Tests] use npx aud instead of nsp or npm audit with hoops 5c51349\n[meta] add funding field 1d0b2f4\n[actions] switch Automatic Rebase workflow to pull_request_target event 9b12367\n[Dev Deps] update auto-changelog, tape 6d98b8d\n[Dev Deps] Update tape, eslint a258cdb\n[Dev Deps] update auto-changelog; add aud 2ca2afb\nTest up to io.js v3.0 1254ae8\n[Dev Deps] update auto-changelog 4b54722\n[Tests] only audit prod deps 86d298b\n[Dev Deps] update tape 3a47e27\nSwitch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. 128d9bd"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-negative-zero/CHANGELOG.html#v2.0.0---2015-07-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-negative-zero/CHANGELOG.html#v2.0.0---2015-07-24",
    "title": "3327 Research",
    "section": "v2.0.0 - 2015-07-24",
    "text": "v2.0.0 - 2015-07-24\n\nCommits\n\nUpdate tape, eslint; use my personal shared eslint config. 648d002\nAdd npm run eslint 5a52d80\nUsing my standard jscs.json file 5a667d9\nAdding npm run lint 9a85ed9\nUpdate tape, covert, jscs c6cd3a6\nUpdate eslint e9c9b6e\nTest on latest io.js 2f7c8a9\nAdding license and downloads badges 717087a\nRemove Number type coercion. 481295d\nTest up to io.js v2.1 139a84a\nUpdate eslint 2f5fbfb\nUpdate eslint 53cb4c5\nTest on io.js v2.2 98a1824\nAll grade A-supported node/iojs versions now ship with an npm that understands ^. 772d6cd\nRun travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures. 3e6147e\nUse SVG badges instead of PNG d986cb4\nUpdate tape, jscs 9f9d7e7\nUpdate jscs 079eaf6\nUpdate tape, jscs cffe3fc\nUpdate tape, jscs 3a16616\nUse consistent quotes 9509a81\nTest on io.js v2.4 a9150a3\nTest on io.js v2.3 36d7acf\nLock covert to v1.0.0. 29d8917\nUpdating jscs fe09c8a\nUpdating jscs 5877bc7\nRunning linter as part of tests 9e77756\nUpdating covert 520a695"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-negative-zero/CHANGELOG.html#v1.0.0---2014-08-08",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-negative-zero/CHANGELOG.html#v1.0.0---2014-08-08",
    "title": "3327 Research",
    "section": "v1.0.0 - 2014-08-08",
    "text": "v1.0.0 - 2014-08-08\n\nCommits\n\nUpdating tape 31d1942\nUpdating tape e7143bf"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-negative-zero/CHANGELOG.html#v0.1.1---2014-05-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-negative-zero/CHANGELOG.html#v0.1.1---2014-05-13",
    "title": "3327 Research",
    "section": "v0.1.1 - 2014-05-13",
    "text": "v0.1.1 - 2014-05-13\n\nMerged\n\nSimplify code #1\n\n\n\nCommits\n\nAdding a trailing newline 61fb37f"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-negative-zero/CHANGELOG.html#v0.1.0---2014-05-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-negative-zero/CHANGELOG.html#v0.1.0---2014-05-13",
    "title": "3327 Research",
    "section": "v0.1.0 - 2014-05-13",
    "text": "v0.1.0 - 2014-05-13\n\nCommits\n\nMake sure old and unstable nodes don’t break Travis f627215\nUpdating deps b502f48\nOops, negative numbers were negative zero! 746cb97\nUpdating covert 99ef4ed\nUpdating tape ee9cfc2\nTesting on node 0.6 again 6a9bf0a"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-negative-zero/CHANGELOG.html#v0.0.0---2014-01-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-negative-zero/CHANGELOG.html#v0.0.0---2014-01-19",
    "title": "3327 Research",
    "section": "v0.0.0 - 2014-01-19",
    "text": "v0.0.0 - 2014-01-19\n\nCommits\n\npackage.json 8411d92\nread me 5c8bf3c\nInitial commit c06f7dc\nTests. 5c554d4\nTravis CI 334d000\nImplementation. 4ef4491"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright © 2013-present Contributors.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "5.1.1 - 2019-11-29",
    "text": "5.1.1 - 2019-11-29\n\nFixed\n\nPass options to abstract-leveldown store (#96) (@achingbrain). In addition to passing options to the levelup wrapper."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "5.1.0 - 2019-10-13",
    "text": "5.1.0 - 2019-10-13\n\nAdded\n\nSupport constructing without location (#95) (@vweevers)\n\n\n\nFixed\n\nBump levelup and encoding-down to prevent dedupe (cd22e66) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "5.0.3 - 2019-09-08",
    "text": "5.0.3 - 2019-09-08\n\nChanged\n\nUpgrade hallmark devDependency from ^0.1.0 to ^2.0.0 (#90, #93) (@vweevers)\nUpgrade standard devDependency from ^12.0.0 to ^14.0.0 (#89, #92) (@vweevers)\n\n\n\nFixed\n\nBump levelup and encoding-down to prevent dedupe (a293d30) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "5.0.2 - 2019-06-08",
    "text": "5.0.2 - 2019-06-08\n\nChanged\n\nUpgrade nyc devDependency from ^13.2.0 to ^14.0.0 (#85) (@vweevers)\n\n\n\nAdded\n\nAdd .npmignore (85b9a84) (@vweevers)\n\n\n\nFixed\n\nSupport variadic arguments in destroy() and repair() (#88) (@vweevers)\nDon’t assume existence of a LOG file in abstract destroy-test (#87) (@vweevers)\nFix Level badge (2429718) (@vweevers)\nRemove link to dead website (d671d63) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "5.0.1 - 2019-03-31",
    "text": "5.0.1 - 2019-03-31\n\nChanged\n\nUpdate nyc devDependency from ^12.0.2 to ^13.2.0 (#84) (@vweevers)\nApply common project tweaks (#82, #83) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "5.0.0 - 2018-12-27",
    "text": "5.0.0 - 2018-12-27\n\nChanged\n\nUpgrade encoding-down from ~5.0.0 to ^6.0.0 (#80, #81) (@vweevers)\nUpgrade levelup from ^3.0.0 to ^4.0.0 (#79) (@ralphtheninja)\nUpgrade standard devDependency from ^11.0.0 to ^12.0.0 (#74) (@ralphtheninja)\nReplace remark-cli devDependency with hallmark (#81) (@vweevers)\n\n\n\nAdded\n\nAdd nyc and coveralls (#73) (@ralphtheninja)\n\n\n\nRemoved\n\nRemove node 9 (29fdaf4) (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "4.0.1 - 2018-06-23",
    "text": "4.0.1 - 2018-06-23\n\nChanged\n\nUse var instead of let (@ralphtheninja)\n\n\n\nAdded\n\nAdd remark tooling (@ralphtheninja)\nAdd 'use strict' to all abstract tests (@ralphtheninja)\n\n\n\nRemoved\n\nRemove contributors from package.json (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "4.0.0 - 2018-06-13",
    "text": "4.0.0 - 2018-06-13\n\nChanged\n\nRewrite test.js to test level-packager api (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "3.1.0 - 2018-05-28",
    "text": "3.1.0 - 2018-05-28\n\nChanged\n\nSplit up tests into abstract/*-test.js (@ralphtheninja)\n\n\n\nRemoved\n\nRemove .jshintrc (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "3.0.0 - 2018-05-23",
    "text": "3.0.0 - 2018-05-23\n\nAdded\n\nAdd node 10 to Travis (@ralphtheninja)\nAdd UPGRADING.md (@ralphtheninja)\n\n\n\nChanged\n\nUpdate standard to ^11.0.0 (@ralphtheninja)\nUpdate encoding-down to ~5.0.0 (@ralphtheninja)\nUpdate leveldown to ^4.0.0 (@ralphtheninja)\nUpdate levelup to ^3.0.0 (@ralphtheninja)\nChange License & Copyright to License in README (@ralphtheninja)\nReplace const with var for IE10 support (@ralphtheninja)\n\n\n\nRemoved\n\nRemove node 4 from Travis (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "2.1.1 - 2018-02-13",
    "text": "2.1.1 - 2018-02-13\n\nAdded\n\nTravis: add 9 (@ralphtheninja)\n\n\n\nChanged\n\nUpdate encoding-down to ~4.0.0 (@ralphtheninja)\nUpdate leveldown to ^3.0.0 (@ralphtheninja)\nUpdate copyright year to 2018 (@ralphtheninja)\n\n\n\nFixed\n\nTest: clean up level-test-* dbs after tests are done (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "2.1.0 - 2017-12-13",
    "text": "2.1.0 - 2017-12-13\n\nAdded\n\nAdd standard for linting (@ralphtheninja)\n\n\n\nChanged\n\nAttach .errors from levelup to Level constructor (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "2.0.2 - 2017-11-11",
    "text": "2.0.2 - 2017-11-11\n\nChanged\n\nUpdate encoding-down to ~3.0.0 (@vweevers)\nREADME: update node badge (@vweevers)\n\n\n\nFixed\n\nTravis: restore node 4 (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "2.0.1 - 2017-10-12",
    "text": "2.0.1 - 2017-10-12\n\nAdded\n\nTest that encoding options default to utf8 (@ralphtheninja)\nTest that .keyEncoding and .valueEncoding are passed to encoding-down (@ralphtheninja)\n\n\n\nFixed\n\nFix encoding options to encoding-down (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "2.0.0 - 2017-10-11",
    "text": "2.0.0 - 2017-10-11\n\nAdded\n\nREADME: add level badge (@ralphtheninja)\n\n\n\nChanged\n\nUpdate levelup to ^2.0.0 (@ralphtheninja)\nUpdate encoding-down to ~2.3.0 (@ralphtheninja)\nUpdate leveldown to ^2.0.0 (@ralphtheninja)\nREADME: update npm badges to similar badge style (@ralphtheninja)\n\n\n\nRemoved\n\nREADME: Remove Greenkeeper badge (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#rc3---2017-09-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#rc3---2017-09-16",
    "title": "3327 Research",
    "section": "2.0.0-rc3 - 2017-09-16",
    "text": "2.0.0-rc3 - 2017-09-16\n\nChanged\n\nUpdate levelup to 2.0.0-rc3 (@ralphtheninja)\nUpdate leveldown to ^1.8.0 (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#rc2---2017-09-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#rc2---2017-09-12",
    "title": "3327 Research",
    "section": "2.0.0-rc2 - 2017-09-12",
    "text": "2.0.0-rc2 - 2017-09-12\n\nChanged\n\nUpdate levelup to 2.0.0-rc2 (@ralphtheninja)\nUpdate encoding-down to ~2.2.0 (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#rc1---2017-09-04",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#rc1---2017-09-04",
    "title": "3327 Research",
    "section": "2.0.0-rc1 - 2017-09-04",
    "text": "2.0.0-rc1 - 2017-09-04\n\nAdded\n\nTravis: add 8 (@ralphtheninja)\nREADME: add Greenkeeper badge (@ralphtheninja)\nREADME: add node badge (@ralphtheninja)\n\n\n\nChanged\n\nREADME: steer away from LevelDOWN to abstract-leveldown (@ralphtheninja)\nUpdate copyright year to 2017 (@ralphtheninja)\n\n\n\nRemoved\n\nTravis: remove 0.12, 4, 5 and 7 (@ralphtheninja)\n\n\n\nFixed"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "1.2.1 - 2016-12-27",
    "text": "1.2.1 - 2016-12-27\n\nAdded\n\nTravis: add 6 and 7 (@ralphtheninja)\n\n\n\nChanged\n\nTravis: use gcc 4.8 (@ralphtheninja)\n\n\n\nRemoved\n\nTravis: remove 0.10, 1.0, 1.8, 2 and 3 (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "1.2.0 - 2015-11-27",
    "text": "1.2.0 - 2015-11-27\n\nAdded\n\nAdd dependency badge (@ralphtheninja)\nTravis: add 1.0, 2, 3, 4 and 5 (@ralphtheninja)\n\n\n\nChanged\n\nUpdate levelup to ~1.3.0 (@ralphtheninja)\nUpdate leveldown to ^1.4.2 (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "1.1.0 - 2015-06-09",
    "text": "1.1.0 - 2015-06-09\n\nChanged\n\nUpdate levelup to ~1.2.0 (@mcollina)\nUpdate leveldown to ~1.2.2 (@mcollina)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "1.0.0 - 2015-05-19",
    "text": "1.0.0 - 2015-05-19\n\nChanged\n\nREADME: add link to level/community repo (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "1.0.0-0 - 2015-05-16",
    "text": "1.0.0-0 - 2015-05-16\n\nAdded\n\nAdd Travis (@ralphtheninja)\nAdd leveldown dev dependency (@ralphtheninja)\n\n\n\nChanged\n\nUpdate levelup to ~1.0.0 (@ralphtheninja)\nRun tests using packager(leveldown) (@ralphtheninja)\n\n\n\nRemoved\n\nRemove level dependency (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "0.19.7 - 2015-05-10",
    "text": "0.19.7 - 2015-05-10\n\nAdded\n\nAdd level-test-* to .gitignore (@juliangruber)\n\n\n\nChanged\n\nRun the tests if they are not required (@juliangruber)\nRename the repository to packager (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "0.19.6 - 2015-05-10",
    "text": "0.19.6 - 2015-05-10\n\nFixed\n\nFix incorrect options logic (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "0.19.5 - 2015-05-10",
    "text": "0.19.5 - 2015-05-10\n\nFixed\n\nFixed bug with missing opening curly brace (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-23",
    "title": "3327 Research",
    "section": "0.19.4 - 2015-05-10",
    "text": "0.19.4 - 2015-05-10\n\nChanged\n\nUse typeof instead of util.isFunction() (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-24",
    "title": "3327 Research",
    "section": "0.19.3 - 2015-05-10",
    "text": "0.19.3 - 2015-05-10\n\nFixed\n\nFix missing closing parenthesis (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-25",
    "title": "3327 Research",
    "section": "0.19.2 - 2015-05-10",
    "text": "0.19.2 - 2015-05-10\n\nFixed\n\nFix missing closing parenthesis (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-26",
    "title": "3327 Research",
    "section": "0.19.1 - 2015-05-10",
    "text": "0.19.1 - 2015-05-10\n\nFixed\n\nnull options should not be treated as object (@deian)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-27",
    "title": "3327 Research",
    "section": "0.19.0 - 2015-05-04",
    "text": "0.19.0 - 2015-05-04\n\nChanged\n\nPlain MIT license (@andrewrk)\nREADME: update logo and copyright year (@ralphtheninja)\nUpdate levelup to ~0.19.0 (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-28",
    "title": "3327 Research",
    "section": "0.18.0 - 2013-11-18",
    "text": "0.18.0 - 2013-11-18\n\nChanged\n\nBumped version (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-29",
    "title": "3327 Research",
    "section": "0.17.0 - 2013-10-09",
    "text": "0.17.0 - 2013-10-09\n:seedling: Initial release.\nHistorical Note This changelog is ordered by semver-version, but the first few releases here did not use semver-valid tags."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-30",
    "title": "3327 Research",
    "section": "0.17.0-5 - 2013-10-12",
    "text": "0.17.0-5 - 2013-10-12\n\nChanged\n\nClean up debugging noise (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-31",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-31",
    "title": "3327 Research",
    "section": "0.17.0-4 - 2013-10-12",
    "text": "0.17.0-4 - 2013-10-12\n\nRemoved\n\nRemove copy() (@rvagg)\n\n\n\nFixed\n\nFix repair() and destroy() (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-32",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-32",
    "title": "3327 Research",
    "section": "0.17.0-3 - 2013-10-12",
    "text": "0.17.0-3 - 2013-10-12\n\nFixed\n\nMade tests compatible with node 0.8 (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-33",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-33",
    "title": "3327 Research",
    "section": "0.17.0-2 - 2013-10-12",
    "text": "0.17.0-2 - 2013-10-12\n\nAdded\n\nAdd options to exported tests to handle memdown (@rvagg)\n\n\n\nChanged\n\nREADME: level -> level-packager (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-34",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CHANGELOG.html#section-34",
    "title": "3327 Research",
    "section": "0.17.0-1 - 2013-10-09",
    "text": "0.17.0-1 - 2013-10-09\n\nRemoved\n\nRemove tape from devDependencies, allow callers to pass in custom test function (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CONTRIBUTORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/CONTRIBUTORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "Contributors\n\n\n\nName\nGitHub\nSocial\n\n\n\n\nLars-Magnus Skog\n@ralphtheninja\n@ralph@social.weho.st\n\n\nVincent Weevers\n@vweevers\n@vweevers@twitter\n\n\nJulian Gruber\n@juliangruber\n@juliangruber@twitter\n\n\nRod Vagg\n@rvagg\n@rvagg@twitter\n\n\nAlex Potsides\n\n\n\n\nAndrew Kelley\n@andrewrk\n\n\n\nDeian Stefan\n@deian\n\n\n\nMatteo Collina\n@mcollina\n@matteocollina@twitter"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/UPGRADING.html#v5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/UPGRADING.html#v5",
    "title": "3327 Research",
    "section": "v5",
    "text": "v5\nUpgraded to levelup@4 and encoding-down@6. We recommend to pair level-packager@5 only with a store based on abstract-leveldown >= 6. Please follow the earlier links for more information."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/UPGRADING.html#v4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/UPGRADING.html#v4",
    "title": "3327 Research",
    "section": "v4",
    "text": "v4\nThe test.js file was rewritten to test the level-packager api and is no longer part of the api. Implementations based on level-packager should instead use the tests in the abstract/ folder."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/UPGRADING.html#v3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-packager/UPGRADING.html#v3",
    "title": "3327 Research",
    "section": "v3",
    "text": "v3\nDropped support for node 4. No other breaking changes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "1.0.10 / 2018-02-15",
    "text": "1.0.10 / 2018-02-15\n\nUse .concat instead of + for arrays, #122."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "1.0.9 / 2016-09-29",
    "text": "1.0.9 / 2016-09-29\n\nRerelease after 1.0.8 - deps cleanup."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "1.0.8 / 2016-09-29",
    "text": "1.0.8 / 2016-09-29\n\nMaintenance (deps bump, fix node 6.5+ tests, coverage report)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "1.0.7 / 2016-03-17",
    "text": "1.0.7 / 2016-03-17\n\nTeach addArgument to accept string arg names. #97, @tomxtobin."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "1.0.6 / 2016-02-06",
    "text": "1.0.6 / 2016-02-06\n\nMaintenance: moved to eslint & updated CS."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "1.0.5 / 2016-02-05",
    "text": "1.0.5 / 2016-02-05\n\nRemoved lodash dependency to significantly reduce install size. Thanks to @mourner."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "1.0.4 / 2016-01-17",
    "text": "1.0.4 / 2016-01-17\n\nMaintenance: lodash update to 4.0.0."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "1.0.3 / 2015-10-27",
    "text": "1.0.3 / 2015-10-27\n\nFix parse = in args: --examplepath=\"C:\\myfolder\\env=x64\". #84, @CatWithApple."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "1.0.2 / 2015-03-22",
    "text": "1.0.2 / 2015-03-22\n\nRelaxed lodash version dependency."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "1.0.1 / 2015-02-20",
    "text": "1.0.1 / 2015-02-20\n\nChanged dependencies to be compatible with ancient nodejs."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "1.0.0 / 2015-02-19",
    "text": "1.0.0 / 2015-02-19\n\nMaintenance release.\nReplaced underscore with lodash.\nBumped version to 1.0.0 to better reflect semver meaning.\nHISTORY.md -> CHANGELOG.md"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "0.1.16 / 2013-12-01",
    "text": "0.1.16 / 2013-12-01\n\nMaintenance release. Updated dependencies and docs."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "0.1.15 / 2013-05-13",
    "text": "0.1.15 / 2013-05-13\n\nFixed #55, @trebor89"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "0.1.14 / 2013-05-12",
    "text": "0.1.14 / 2013-05-12\n\nFixed #62, @maxtaco"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "0.1.13 / 2013-04-08",
    "text": "0.1.13 / 2013-04-08\n\nAdded .npmignore to reduce package size"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "0.1.12 / 2013-02-10",
    "text": "0.1.12 / 2013-02-10\n\nFixed conflictHandler (#46), @hpaulj"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "0.1.11 / 2013-02-07",
    "text": "0.1.11 / 2013-02-07\n\nMultiple bugfixes, @hpaulj\nAdded 70+ tests (ported from python), @hpaulj\nAdded conflictHandler, @applepicke\nAdded fromfilePrefixChar, @hpaulj"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "0.1.10 / 2012-12-30",
    "text": "0.1.10 / 2012-12-30\n\nAdded mutual exclusion support, thanks to @hpaulj\nFixed options check for storeConst & appendConst actions, thanks to @hpaulj"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "0.1.9 / 2012-12-27",
    "text": "0.1.9 / 2012-12-27\n\nFixed option dest interferens with other options (issue #23), thanks to @hpaulj\nFixed default value behavior with * positionals, thanks to @hpaulj\nImprove getDefault() behavior, thanks to @hpaulj\nImrove negative argument parsing, thanks to @hpaulj"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "0.1.8 / 2012-12-01",
    "text": "0.1.8 / 2012-12-01\n\nFixed parser parents (issue #19), thanks to @hpaulj\nFixed negative argument parse (issue #20), thanks to @hpaulj"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "0.1.7 / 2012-10-14",
    "text": "0.1.7 / 2012-10-14\n\nFixed ‘choices’ argument parse (issue #16)\nFixed stderr output (issue #15)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "0.1.6 / 2012-09-09",
    "text": "0.1.6 / 2012-09-09\n\nFixed check for conflict of options (thanks to @tomxtobin)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "0.1.5 / 2012-09-03",
    "text": "0.1.5 / 2012-09-03\n\nFix parser #setDefaults method (thanks to @tomxtobin)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-23",
    "title": "3327 Research",
    "section": "0.1.4 / 2012-07-30",
    "text": "0.1.4 / 2012-07-30\n\nFixed pseudo-argument support (thanks to @CGamesPlay)\nFixed addHelp default (should be true), if not set (thanks to @benblank)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-24",
    "title": "3327 Research",
    "section": "0.1.3 / 2012-06-27",
    "text": "0.1.3 / 2012-06-27\n\nFixed formatter api name: Formatter -> HelpFormatter"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-25",
    "title": "3327 Research",
    "section": "0.1.2 / 2012-05-29",
    "text": "0.1.2 / 2012-05-29\n\nAdded basic tests\nRemoved excess whitespace in help\nFixed error reporting, when parcer with subcommands called with empty arguments"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-26",
    "title": "3327 Research",
    "section": "0.1.1 / 2012-05-23",
    "text": "0.1.1 / 2012-05-23\n\nFixed line wrapping in help formatter\nAdded better error reporting on invalid arguments"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/argparse/CHANGELOG.html#section-27",
    "title": "3327 Research",
    "section": "0.1.0 / 2012-05-16",
    "text": "0.1.0 / 2012-05-16\n\nFirst release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "2.3.1 (2022-01-02)",
    "text": "2.3.1 (2022-01-02)\n\nFixed\n\nFixes bug when a pattern containing an expression after the closing parenthesis (/!(*.d).{ts,tsx}) was incorrectly converted to regexp (9f241ef).\n\n\n\nChanged\n\nSome documentation improvements (f81d236, 421e0e7)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "2.3.0 (2021-05-21)",
    "text": "2.3.0 (2021-05-21)\n\nFixed\n\nFixes bug where file names with two dots were not being matched consistently with negation extglobs containing a star (56083ef)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "2.2.3 (2021-04-10)",
    "text": "2.2.3 (2021-04-10)\n\nFixed\n\nDo not skip pattern seperator for square brackets (fb08a30).\nSet negatedExtGlob also if it does not span the whole pattern (032e3f5)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "2.2.2 (2020-03-21)",
    "text": "2.2.2 (2020-03-21)\n\nFixed\n\nCorrectly handle parts of the pattern after parentheses in the scan method (e15b920)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "2.2.1 (2020-01-04)",
    "text": "2.2.1 (2020-01-04)\n\nFixes #49, so that braces with no sets or ranges are now propertly treated as literals."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "2.2.0 (2020-01-04)",
    "text": "2.2.0 (2020-01-04)\n\nDisable fastpaths mode for the parse method (5b8d33f)\nAdd tokens, slashes, and parts to the object returned by picomatch.scan()."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "2.1.0 (2019-10-31)",
    "text": "2.1.0 (2019-10-31)\n\nadd benchmarks for scan (4793b92)\nAdd eslint object-curly-spacing rule (707c650)\nAdd prefer-const eslint rule (5c7501c)\nAdd support for nonegate in scan API (275c9b9)\nChange lets to consts. Move root import up. (4840625)\ncloses https://github.com/micromatch/picomatch/issues/21 (766bcb0)\nFix “Extglobs” table in readme (eb19da8)\nfixes https://github.com/micromatch/picomatch/issues/20 (9caca07)\nfixes https://github.com/micromatch/picomatch/issues/26 (fa58f45)\nLint test (d433a34)\nlint unit tests (0159b55)\nMake scan work with noext (6c02e03)\nminor linting (c2a2b87)\nminor parser improvements (197671d)\nremove eslint since it… (07876fa)\nremove funding file (8ebe96d)\nRemove unused funks (cbc6d54)\nRun eslint during pretest, fix existing eslint findings (0682367)\nsupport noparen in scan (3d37569)\nupdate changelog (7b34e77)\nupdate travis (777f038)\nUse eslint-disable-next-line instead of eslint-disable (4e7c1fd)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "2.0.7 (2019-05-14)",
    "text": "2.0.7 (2019-05-14)\n\n2.0.7 (9eb9a71)\nsupports lookbehinds (1f63f7e)\nupdate .verb.md file with typo change (2741279)\nfix: typo in README (0753e44)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "2.0.4 (2019-04-10)",
    "text": "2.0.4 (2019-04-10)\n\nFixed\n\nReadme link fixed by @danez.\noptions.capture now works as expected when fastpaths are enabled. See https://github.com/micromatch/picomatch/pull/12/commits/26aefd71f1cfaf95c37f1c1fcab68a693b037304. Thanks to @DrPizza."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "2.0.0 (2019-04-10)",
    "text": "2.0.0 (2019-04-10)\n\nAdded\n\nAdds support for options.onIgnore. See the readme for details\nAdds support for options.onResult. See the readme for details\n\n\n\nBreaking changes\n\nThe unixify option was renamed to windows\ncaching and all related options and methods have been removed"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "1.0.0 (2018-11-05)",
    "text": "1.0.0 (2018-11-05)\n\nadds .onMatch option\nimprovements to .scan method\nnumerous improvements and optimizations for matching and parsing\nbetter windows path handling"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/picomatch/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "0.1.0 - 2017-04-13",
    "text": "0.1.0 - 2017-04-13\nFirst release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-symbol/CHANGELOG.html#v1.0.4---2021-05-08",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-symbol/CHANGELOG.html#v1.0.4---2021-05-08",
    "title": "3327 Research",
    "section": "v1.0.4 - 2021-05-08",
    "text": "v1.0.4 - 2021-05-08\n\nCommits\n\n[Tests] migrate tests to Github Actions 997d43c\n[actions] use node/install instead of node/run; use codecov action fe0ccb7\n[meta] remove unused Makefile and associated utilities 3ab2748\n[meta] do not publish github action workflow files f20fafe\n[Tests] run nyc on all tests 5c332fc\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog, object-inspect, tape c5a58a8\n[readme] fix repo URLs; remove travis badge bcd9258\n[actions] add “Allow Edits” workflow 33ae2d3\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, object-inspect, tape e53def0\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog, object-inspect ae36504\n[readme] add actions and codecov badges aae7f09\n[Dev Deps] update eslint, @ljharb/eslint-config, tape d993fae\n[Dev Deps] update eslint, @ljharb/eslint-config, tape 51808a5\n[Dev Deps] update auto-changelog, tape c90040f\n[Dev Deps] update eslint, tape 9fee159\n[meta] use prepublishOnly script for npm 7+ b166afc\n[meta] gitignore coverage output 4a0fe3a\n[actions] update workflows fbcbc9e\n[Dev Deps] update auto-changelog; add aud e66ab98\n[Deps] update has-symbols 6ce7de5\n[actions] update rebase action to use checkout v2 1173c79\n[actions] switch Automatic Rebase workflow to pull_request_target event 94a6348\n[Tests] only audit prod deps 0692681\n[meta] do not publish .nvmrc file ed47833"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-symbol/CHANGELOG.html#v1.0.3---2019-11-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-symbol/CHANGELOG.html#v1.0.3---2019-11-20",
    "title": "3327 Research",
    "section": "v1.0.3 - 2019-11-20",
    "text": "v1.0.3 - 2019-11-20\n\nCommits\n\n[Tests] use shared travis-ci configs 034afdd\n[Tests] remove jscs 0c026a0\n[meta] add auto-changelog 9a1776b\n[Tests] up to node v12.10, v11.15, v10.16, v8.16, v6.17 23a6db4\n[Tests] up to node v11.7, v10.15, v8.15, v6.16 892d92e\n[Dev Deps] update eslint, @ljharb/eslint-config, safe-publish-latest, semver, tape c2e6d6a\n[readme] fix repo URLs 655c288\n[actions] add automatic rebasing / merge commit blocking 97b1229\n[meta] add FUNDING.yml 94c64a3\n[Dev Deps] update eslint, @ljharb/eslint-config, covert, tape, semver 71ab543\n[Dev Deps] update eslint, @ljharb/eslint-config, semver, tape c6212f9\n[Dev Deps] update eslint, @ljharb/eslint-config, safe-publish-latest, object-inspect 91bc802\n[Tests] use npx aud instead of nsp or npm audit with hoops 8cbe69c\n[Tests] use npm audit instead of nsp 741b51d\n[meta] add funding field 65b58d1\n[Deps] update has-symbols 9cb5b2a"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-symbol/CHANGELOG.html#v1.0.2---2018-09-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-symbol/CHANGELOG.html#v1.0.2---2018-09-20",
    "title": "3327 Research",
    "section": "v1.0.2 - 2018-09-20",
    "text": "v1.0.2 - 2018-09-20\n\nCommits\n\nUpdate eslint, tape, semver; use my personal shared eslint config e86aaea\n[Tests] on all node minors; improve test matrix 50bc07f\n[Dev Deps] update tape, jscs, nsp, semver, eslint, @ljharb/eslint-config 45e17bd\n[Tests] up to node v10.0, v9.11, v8.11, v6.14, v4.9; use nvm install-latest-npm 44402cb\n[Tests] up to node v8.1, v7.10, v6.11, v4.8; improve matrix; old npm breaks on newer nodes 9047c23\nUpdate tape, covert, jscs, semver d57d1ce\nAdd npm run eslint 0d75a66\nUpdate eslint 042fb3a\n[Refactor] use has-symbols and object-inspect 129bc68\n[Tests] up to node v10.11, v8.12 c1822e8\nUpdate tape, jscs, eslint, @ljharb/eslint-config 089d2cf\n[Tests] up to node v8.4; newer npm breaks on older node 05ce701\nAll grade A-supported node/iojs versions now ship with an npm that understands ^. 241e6a6\nTest on latest node and io.js versions. 5c8d5de\n[Dev Deps] update eslint, @ljharb/eslint-config, nsp, semver, tape 06047bf\n[Dev Deps] update jscs, nsp, semver, eslint, @ljharb/eslint-config 9d25dd7\n[Tests] up to io.js v3.3, node v4.1 ce173bd\nUpdate nsp, eslint 29e5214\nUpdate semver, eslint 53be884\n[Dev Deps] update eslint, nsp, semver, tape 3bd149c\n[Dev Deps] update jscs 69b4231\nTest up to io.js v2.1 0b61ac7\n[Dev Deps] update tape 5e1b200\nOnly apps should have lockfiles. a191ff5\n[Dev Deps] update nsp, eslint, @ljharb/eslint-config 97c87ef\nTest on io.js v2.2 42560e4\n[Dev Deps] Update tape, eslint 149b2f2\n[Tests] fix test messages 28bd1ed\nTest up to io.js v3.0 c0dcc98\nnode now supports Symbols now. d1853ad\n[Dev Deps] update tape f7a6575\nSwitch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. aae9c6a\nTest on io.js v2.4 ab8f449\nTest on io.js v2.3 58ce871"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-symbol/CHANGELOG.html#v1.0.1---2015-01-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-symbol/CHANGELOG.html#v1.0.1---2015-01-26",
    "title": "3327 Research",
    "section": "v1.0.1 - 2015-01-26",
    "text": "v1.0.1 - 2015-01-26\n\nCommits\n\nCorrect package description. f4d15b9"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-symbol/CHANGELOG.html#v1.0.0---2015-01-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-symbol/CHANGELOG.html#v1.0.0---2015-01-24",
    "title": "3327 Research",
    "section": "v1.0.0 - 2015-01-24",
    "text": "v1.0.0 - 2015-01-24\n\nCommits\n\nDotfiles. 5d9a744\nTests. 8af5663\nmake release 6293446\npackage.json 7d4082c\nInitial commit cbb179f\nRead me. 099a775\nImplementation. cb51248"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/true-case-path/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/true-case-path/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "2.2.0 (2019-07-24)",
    "text": "2.2.0 (2019-07-24)\n\nBuild System\n\nAdd standard-version (e9b6ab8)\n\n\n\nFeatures\n\nAdd optional basePath argument for selective case-correction (d5b3d2c), closes barsh/true-case-path#2 gatsbyjs/gatsby#15876"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/true-case-path/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/true-case-path/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "2.1.0 (2019-07-24)",
    "text": "2.1.0 (2019-07-24)\n\nBuild System\n\nAdd standard-version (e9b6ab8)\n\n\n\nFeatures\n\nAdd optional basePath argument for selective case-correction (d5b3d2c), closes barsh/true-case-path#2 gatsbyjs/gatsby#15876"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-weakref/CHANGELOG.html#v1.0.2---2021-12-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-weakref/CHANGELOG.html#v1.0.2---2021-12-10",
    "title": "3327 Research",
    "section": "v1.0.2 - 2021-12-10",
    "text": "v1.0.2 - 2021-12-10\n\nCommits\n\n[actions] reuse common workflows 2375b1f\n[meta] do not publish workflow files 4c1be42\n[actions] use node/install instead of node/run; use codecov action 7ec78ce\n[readme] update URLs 6306f09\n[Dev Deps] update eslint, @ljharb/eslint-config, object-inspect, safe-publish-latest, tape 7a1601e\n[readme] add actions and codecov badges 67ecd14\n[Dev Deps] update eslint, @ljharb/eslint-config, auto-changelog, object-inspect, safe-publish-latest, tape 1a5013b\n[actions] update codecov uploader b57b037\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, object-inspect, tape da49017\n[meta] simplify “exports” 9b88835\n[Dev Deps] update eslint, @ljharb/eslint-config, tape c7e77f4\n[Dev Deps] update eslint 417b29e\n[meta] add safe-publish-latest; use prepublishOnly script for npm 7+ b1b99f4\n[Deps] update call-bind aea342e\n[actions] update workflows 786c2d3"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-weakref/CHANGELOG.html#v1.0.1---2020-12-04",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-weakref/CHANGELOG.html#v1.0.1---2020-12-04",
    "title": "3327 Research",
    "section": "v1.0.1 - 2020-12-04",
    "text": "v1.0.1 - 2020-12-04\n\nCommits\n\n[Tests] migrate tests to Github Actions 05b4faa\n[Tests] run nyc on all tests 8df2e4b\n[actions] add “Allow Edits” workflow 4a716b8\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog, object-inspect be23cf3\n[Refactor] use call-bind instead of es-abstract a933a96\n[actions] switch Automatic Rebase workflow to pull_request_target event 4473ed2\n[readme] remove travis badge bd3bfcd"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-weakref/CHANGELOG.html#v1.0.0---2020-08-01",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-weakref/CHANGELOG.html#v1.0.0---2020-08-01",
    "title": "3327 Research",
    "section": "v1.0.0 - 2020-08-01",
    "text": "v1.0.0 - 2020-08-01\n\nCommits\n\nInitial commit dd86394\nreadme f4defca\nTests 13d8139\nnpm init 55a2bb7\nImplementation 1ec84e3\n[meta] add auto-changelog ab9ce44\n[actions] add automatic rebasing / merge commit blocking 3d3f4d5\n[meta] add “funding”; create FUNDING.yml f35ef3d\n[Tests] add npm run lint af2123d\n[Tests] use shared travis-ci configs 042b4de\nOnly apps should have lockfiles fcae604"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map-support/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map-support/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright (c) 2014 Evan Wallace\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-fullwidth-code-point/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-fullwidth-code-point/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install --save is-fullwidth-code-point"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-fullwidth-code-point/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-fullwidth-code-point/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst isFullwidthCodePoint = require('is-fullwidth-code-point');\n\nisFullwidthCodePoint('谢'.codePointAt());\n//=> true\n\nisFullwidthCodePoint('a'.codePointAt());\n//=> false"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-fullwidth-code-point/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-fullwidth-code-point/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nisFullwidthCodePoint(input)\n\ninput\nType: number\nCode point of a character."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-fullwidth-code-point/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-fullwidth-code-point/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/env-paths/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/env-paths/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install env-paths"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/env-paths/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/env-paths/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst envPaths = require('env-paths');\n\nconst paths = envPaths('MyApp');\n\npaths.data;\n//=> '/home/sindresorhus/.local/share/MyApp-nodejs'\n\npaths.config\n//=> '/home/sindresorhus/.config/MyApp-nodejs'"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/env-paths/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/env-paths/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\npaths = envPaths(name, options?)\nNote: It only generates the path strings. It doesn’t create the directories for you. You could use make-dir to create the directories.\n\nname\nType: string\nName of your project. Used to generate the paths.\n\n\noptions\nType: object\n\nsuffix\nType: string Default: 'nodejs'\nDon’t use this option unless you really have to! Suffix appended to the project name to avoid name conflicts with native apps. Pass an empty string to disable it.\n\n\n\n\npaths.data\nDirectory for data files.\nExample locations (with the default nodejs suffix):\n\nmacOS: ~/Library/Application Support/MyApp-nodejs\nWindows: %LOCALAPPDATA%\\MyApp-nodejs\\Data (for example, C:\\Users\\USERNAME\\AppData\\Local\\MyApp-nodejs\\Data)\nLinux: ~/.local/share/MyApp-nodejs (or $XDG_DATA_HOME/MyApp-nodejs)\n\n\n\npaths.config\nDirectory for config files.\nExample locations (with the default nodejs suffix):\n\nmacOS: ~/Library/Preferences/MyApp-nodejs\nWindows: %APPDATA%\\MyApp-nodejs\\Config (for example, C:\\Users\\USERNAME\\AppData\\Roaming\\MyApp-nodejs\\Config)\nLinux: ~/.config/MyApp-nodejs (or $XDG_CONFIG_HOME/MyApp-nodejs)\n\n\n\npaths.cache\nDirectory for non-essential data files.\nExample locations (with the default nodejs suffix):\n\nmacOS: ~/Library/Caches/MyApp-nodejs\nWindows: %LOCALAPPDATA%\\MyApp-nodejs\\Cache (for example, C:\\Users\\USERNAME\\AppData\\Local\\MyApp-nodejs\\Cache)\nLinux: ~/.cache/MyApp-nodejs (or $XDG_CACHE_HOME/MyApp-nodejs)\n\n\n\npaths.log\nDirectory for log files.\nExample locations (with the default nodejs suffix):\n\nmacOS: ~/Library/Logs/MyApp-nodejs\nWindows: %LOCALAPPDATA%\\MyApp-nodejs\\Log (for example, C:\\Users\\USERNAME\\AppData\\Local\\MyApp-nodejs\\Log)\nLinux: ~/.local/state/MyApp-nodejs (or $XDG_STATE_HOME/MyApp-nodejs)\n\n\n\npaths.temp\nDirectory for temporary files.\nExample locations (with the default nodejs suffix):\n\nmacOS: /var/folders/jf/f2twvvvs5jl_m49tf034ffpw0000gn/T/MyApp-nodejs\nWindows: %LOCALAPPDATA%\\Temp\\MyApp-nodejs (for example, C:\\Users\\USERNAME\\AppData\\Local\\Temp\\MyApp-nodejs)\nLinux: /tmp/USERNAME/MyApp-nodejs\n\n\n\n<b>\n    <a href=\"https://tidelift.com/subscription/pkg/npm-env-paths?utm_source=npm-env-paths&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n</b>\n<br>\n<sub>\n    Tidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n</sub>"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/typescript/CODE_OF_CONDUCT.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/typescript/CODE_OF_CONDUCT.html",
    "title": "3327 Research",
    "section": "",
    "text": "This project has adopted the Microsoft Open Source Code of Conduct. For more information see the Code of Conduct FAQ or contact opencode@microsoft.com with any additional questions or comments."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/typescript/AUTHORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/typescript/AUTHORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "TypeScript is authored by:\n\n0verk1ll\nAbubaker Bashir\nAdam Freidin\nAdam Postma\nAdi Dahiya\nAditya Daflapurkar\nAdnan Chowdhury\nAdrian Leonhard\nAdrien Gibrat\nAhmad Farid\nAjay Poshak\nAlan Agius\nAlan Pierce\nAlessandro Vergani\nAlex Chugaev\nAlex Eagle\nAlex Khomchenko\nAlex Ryan\nAlexander\nAlexander Kuvaev\nAlexander Rusakov\nAlexander Tarasyuk\nAli Sabzevari\nAluan Haddad\namaksimovich2\nAnatoly Ressin\nAnders Hejlsberg\nAnders Kaseorg\nAndre Sutherland\nAndreas Martin\nAndrej Baran\nAndrew\nAndrew Branch\nAndrew Casey\nAndrew Faulkner\nAndrew Ochsner\nAndrew Stegmaier\nAndrew Z Allen\nAndrey Roenko\nAndrii Dieiev\nAndrás Parditka\nAndy Hanson\nAnil Anar\nAnix\nAnton Khlynovskiy\nAnton Tolmachev\nAnubha Mathur\nAnyhowStep\nArmando Aguirre\nArnaud Tournier\nArnav Singh\nArpad Borsos\nArtem Tyurin\nArthur Ozga\nAsad Saeeduddin\nAustin Cummings\nAvery Morin\nAziz Khambati\nBasarat Ali Syed\n@begincalendar\nBen Duffield\nBen Lichtman\nBen Mosher\nBenedikt Meurer\nBenjamin Bock\nBenjamin Lichtman\nBenny Neugebauer\nBigAru\nBill Ticehurst\nBlaine Bublitz\nBlake Embrey\n@bluelovers\n@bootstraponline\nBowden Kelly\nBowden Kenny\nBrad Zacher\nBrandon Banks\nBrandon Bloom\nBrandon Slade\nBrendan Kenny\nBrett Mayen\nBrian Terlson\nBryan Forbes\nCaitlin Potter\nCaleb Sander\nCameron Taggart\n@cedvdb\nCharles\nCharles Pierce\nCharly POLY\nChris Bubernak\nChris Patterson\nchristian\nChristophe Vidal\nChuck Jazdzewski\nClay Miller\nColby Russell\nColin Snover\nCollins Abitekaniza\nConnor Clark\nCotton Hou\ncsigs\nCyrus Najmabadi\nDafrok Zhang\nDahan Gong\nDaiki Nishikawa\nDan Corder\nDan Freeman\nDan Quirk\nDan Rollo\nDaniel Gooss\nDaniel Imms\nDaniel Krom\nDaniel Król\nDaniel Lehenbauer\nDaniel Rosenwasser\nDavid Li\nDavid Sheldrick\nDavid Sherret\nDavid Souther\nDavid Staheli\nDenis Nedelyaev\nDerek P Sifford\nDhruv Rajvanshi\nDick van den Brink\nDiogo Franco (Kovensky)\nDirk Bäumer\nDirk Holtwick\nDmitrijs Minajevs\nDom Chen\nDonald Pipowitch\nDoug Ilijev\ndreamran43@gmail.com\n@e-cloud\nEcole Keine\nEddie Jaoude\nEdward Thomson\nEECOLOR\nEli Barzilay\nElizabeth Dinella\nEly Alamillo\nEric Grube\nEric Tsang\nErik Edrosa\nErik McClenney\nEsakki Raj\nEthan Resnick\nEthan Rubio\nEugene Timokhov\nEvan Cahill\nEvan Martin\nEvan Sebastian\nExE Boss\nEyas Sharaiha\nFabian Cook\n@falsandtru\nFilipe Silva\n@flowmemo\nForbes Lindesay\nFrancois Hendriks\nFrancois Wouts\nFrank Wallis\nFrantišek Žiacik\nFrederico Bittencourt\nfullheightcoding\nGabe Moothart\nGabriel Isenberg\nGabriela Araujo Britto\nGabriela Britto\ngb714us\nGilad Peleg\nGodfrey Chan\nGorka Hernández Estomba\nGraeme Wicksted\nGuillaume Salles\nGuy Bedford\nhafiz\nHalasi Tamás\nHendrik Liebau\nHenry Mercer\nHerrington Darkholme\nHoang Pham\nHolger Jeromin\nHoma Wong\nHye Sung Jung\nIain Monro\n@IdeaHunter\nIgor Novozhilov\nIgor Oleinikov\nIka\niliashkolyar\nIllusionMH\nIngvar Stepanyan\nIngvar Stepanyan\nIsiah Meadows\nispedals\nIvan Enderlin\nIvo Gabe de Wolff\nIwata Hidetaka\nJack Bates\nJack Williams\nJake Boone\nJakub Korzeniowski\nJakub Młokosiewicz\nJames Henry\nJames Keane\nJames Whitney\nJan Melcher\nJason Freeman\nJason Jarrett\nJason Killian\nJason Ramsay\nJBerger\nJean Pierre\nJed Mao\nJeff Wilcox\nJeffrey Morlan\nJesse Schalken\nJesse Trinity\nJing Ma\nJiri Tobisek\nJoe Calzaretta\nJoe Chung\nJoel Day\nJoey Watts\nJohannes Rieken\nJohn Doe\nJohn Vilk\nJonathan Bond-Caron\nJonathan Park\nJonathan Toland\nJordan Harband\nJordi Oliveras Rovira\nJoscha Feth\nJoseph Wunderlich\nJosh Abernathy\nJosh Goldberg\nJosh Kalderimis\nJosh Soref\nJuan Luis Boya García\nJulian Williams\nJustin Bay\nJustin Johansson\njwbay\nK. Preißer\nKagami Sascha Rosylight\nKanchalai Tanglertsampan\nkarthikkp\nKate Miháliková\nKeen Yee Liau\nKeith Mashinter\nKen Howard\nKenji Imamula\nKerem Kat\nKevin Donnelly\nKevin Gibbons\nKevin Lang\nKhải\nKitson Kelly\nKlaus Meinhardt\nKris Zyp\nKyle Kelley\nKārlis Gaņģis\nlaoxiong\nLeon Aves\nLimon Monte\nLorant Pinter\nLucien Greathouse\nLuka Hartwig\nLukas Elmer\nM.Yoshimura\nMaarten Sijm\nMagnus Hiie\nMagnus Kulke\nManish Bansal\nManish Giri\nMarcus Noble\nMarin Marinov\nMarius Schulz\nMarkus Johnsson\nMarkus Wolf\nMartin\nMartin Hiller\nMartin Johns\nMartin Probst\nMartin Vseticka\nMartyn Janes\nMasahiro Wakame\nMateusz Burzyński\nMatt Bierner\nMatt McCutchen\nMatt Mitchell\nMatthew Aynalem\nMatthew Miller\nMattias Buelens\nMax Heiber\nMaxwell Paul Brickner\n@meyer\nMicah Zoltu\n@micbou\nMichael\nMichael Crane\nMichael Henderson\nMichael Tamm\nMichael Tang\nMichal Przybys\nMike Busyrev\nMike Morearty\nMilosz Piechocki\nMine Starks\nMinh Nguyen\nMohamed Hegazy\nMohsen Azimi\nMukesh Prasad\nMyles Megyesi\nNathan Day\nNathan Fenner\nNathan Shively-Sanders\nNathan Yee\nncoley\nNicholas Yang\nNicu Micleușanu\n@nieltg\nNima Zahedi\nNoah Chen\nNoel Varanda\nNoel Yoo\nNoj Vek\nnrcoley\nNuno Arruda\nOleg Mihailik\nOleksandr Chekhovskyi\nOmer Sheikh\nOrta Therox\nOrta Therox\nOskar Grunning\nOskar Segersva¨rd\nOussama Ben Brahim\nOzair Patel\nPatrick McCartney\nPatrick Zhong\nPaul Koerbitz\nPaul van Brenk\n@pcbro\nPedro Maltez\nPete Bacon Darwin\nPeter Burns\nPeter Šándor\nPhilip Pesca\nPhilippe Voinov\nPi Lanningham\nPiero Cangianiello\nPierre-Antoine Mills\n@piloopin\nPranav Senthilnathan\nPrateek Goel\nPrateek Nayak\nPrayag Verma\nPriyantha Lankapura\n@progre\nPunya Biswal\nr7kamura\nRado Kirov\nRaj Dosanjh\nrChaser53\nReiner Dolp\nRemo H. Jansen\n@rflorian\nRhys van der Waerden\n@rhysd\nRicardo N Feliciano\nRichard Karmazín\nRichard Knoll\nRoger Spratley\nRon Buckton\nRostislav Galimsky\nRowan Wyborn\nrpgeeganage\nRuwan Pradeep Geeganage\nRyan Cavanaugh\nRyan Clarke\nRyohei Ikegami\nSalisbury, Tom\nSam Bostock\nSam Drugan\nSam El-Husseini\nSam Lanning\nSangmin Lee\nSanket Mishra\nSarangan Rajamanickam\nSasha Joseph\nSean Barag\nSergey Rubanov\nSergey Shandar\nSergey Tychinin\nSergii Bezliudnyi\nSergio Baidon\nSharon Rolel\nSheetal Nandi\nShengping Zhong\nSheon Han\nShyyko Serhiy\nSiddharth Singh\nsisisin\nSlawomir Sadziak\nSolal Pirelli\nSoo Jae Hwang\nStan Thomas\nStanislav Iliev\nStanislav Sysoev\nStas Vilchik\nStephan Ginthör\nSteve Lucco\n@styfle\nSudheesh Singanamalla\nSuhas\nSuhas Deshpande\nsuperkd37\nSébastien Arod\n@T18970237136\n@t_\nTan Li Hau\nTapan Prakash\nTaras Mankovski\nTarik Ozket\nTetsuharu Ohzeki\nThe Gitter Badger\nThomas den Hollander\nThorsten Ball\nTien Hoanhtien\nTim Lancina\nTim Perry\nTim Schaub\nTim Suchanek\nTim Viiding-Spader\nTingan Ho\nTitian Cernicova-Dragomir\ntkondo\nTodd Thomson\ntogru\nTom J\nTorben Fitschen\nToxyxer\n@TravCav\nTroy Tae\nTruongSinh Tran-Nguyen\nTycho Grouwstra\nuhyo\nVadi Taslim\nVakhurin Sergey\nValera Rozuvan\nVilic Vane\nVimal Raghubir\nVladimir Kurchatkin\nVladimir Matveev\nVyacheslav Pukhanov\nWenlu Wang\nWes Souza\nWesley Wigham\nWilliam Orr\nWilson Hobbs\nxiaofa\nxl1\nYacine Hmito\nYang Cao\nYork Yao\n@yortus\nYoshiki Shibukawa\nYuichi Nukiyama\nYuval Greenfield\nYuya Tanaka\nZ\nZeeshan Ahmed\nZev Spitz\nZhengbo Li\nZixiang Li\n@Zzzen\n阿卡琳"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/typescript/SECURITY.html#security",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/typescript/SECURITY.html#security",
    "title": "3327 Research",
    "section": "Security",
    "text": "Security\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include Microsoft, Azure, DotNet, AspNet, Xamarin, and our GitHub organizations.\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets Microsoft’s definition of a security vulnerability, please report it to us as described below."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/typescript/SECURITY.html#reporting-security-issues",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/typescript/SECURITY.html#reporting-security-issues",
    "title": "3327 Research",
    "section": "Reporting Security Issues",
    "text": "Reporting Security Issues\nPlease do not report security vulnerabilities through public GitHub issues.\nInstead, please report them to the Microsoft Security Response Center (MSRC) at https://msrc.microsoft.com/create-report.\nIf you prefer to submit without logging in, send email to secure@microsoft.com. If possible, encrypt your message with our PGP key; please download it from the Microsoft Security Response Center PGP Key page.\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at microsoft.com/msrc.\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\nType of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\nFull paths of source file(s) related to the manifestation of the issue\nThe location of the affected source code (tag/branch/commit or direct URL)\nAny special configuration required to reproduce the issue\nStep-by-step instructions to reproduce the issue\nProof-of-concept or exploit code (if possible)\nImpact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our Microsoft Bug Bounty Program page for more details about our active programs."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/typescript/SECURITY.html#preferred-languages",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/typescript/SECURITY.html#preferred-languages",
    "title": "3327 Research",
    "section": "Preferred Languages",
    "text": "Preferred Languages\nWe prefer all communications to be in English."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/typescript/SECURITY.html#policy",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/typescript/SECURITY.html#policy",
    "title": "3327 Research",
    "section": "Policy",
    "text": "Policy\nMicrosoft follows the principle of Coordinated Vulnerability Disclosure."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/bignumber/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/bignumber/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/strings/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/strings/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/hdnode/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/hdnode/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/sha2/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/sha2/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/pbkdf2/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/pbkdf2/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/keccak256/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/keccak256/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/bytes/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/bytes/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/hash/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/hash/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/web/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/web/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/contracts/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/contracts/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/constants/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/constants/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/providers/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/providers/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/wordlists/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/wordlists/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/base64/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/base64/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/json-wallets/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/json-wallets/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/rlp/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/rlp/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/solidity/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/solidity/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/abi/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/abi/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/units/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/units/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/networks/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/networks/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/transactions/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/transactions/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/properties/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/properties/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/address/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/address/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/wallet/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/wallet/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/abstract-provider/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/abstract-provider/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/random/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/random/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/abstract-signer/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/abstract-signer/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/signing-key/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/signing-key/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2019 Richard Moore\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/basex/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@ethersproject/basex/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "Forked from https://github.com/cryptocoinjs/bs58 Originally written by Mike Hearn for BitcoinJ Copyright (c) 2011 Google Inc\nPorted to JavaScript by Stefan Thomas Merged Buffer refactorings from base58-native by Stephen Pair Copyright (c) 2013 BitPay Inc\nRemoved Buffer Dependency Copyright (c) 2019 Richard Moore\nMIT License\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs-parser/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs-parser/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "13.1.0 (2019-05-05)",
    "text": "13.1.0 (2019-05-05)\n\nFeatures\n\nadd strip-aliased and strip-dashed configuration options. (#172) (a3936aa)\nsupport boolean which do not consume next argument. (#171) (0ae7fcb)\n\n # 13.0.0 (2019-02-02)\n\n\nFeatures\n\ndon’t coerce number from string with leading ‘0’ or ‘+’ (#158) (18d0fd5)\n\n\n\nBREAKING CHANGES\n\noptions with leading ‘+’ or ‘0’ now parse as strings\n\n # 12.0.0 (2019-01-29)\n\n\nBug Fixes\n\nbetter handling of quoted strings (#153) (2fb71b2)\n\n\n\nFeatures\n\ndefault value is now used if no right-hand value provided for numbers/strings (#156) (5a7c46a)\n\n\n\nBREAKING CHANGES\n\na flag with no right-hand value no longer populates defaulted options with undefined.\nquotes at beginning and endings of strings are not removed during parsing.\n\n ## 11.1.1 (2018-11-19)\n\n\nBug Fixes\n\nensure empty string is added into argv._ (#140) (79cda98)\n\n\n\nReverts\n\nmake requiresArg work in conjunction with arrays (#136) (f4a3063)\n\n # 11.1.0 (2018-11-10)\n\n\nBug Fixes\n\nhandling of one char alias (#139) (ee56e31)\n\n\n\nFeatures\n\nadd halt-at-non-option configuration option (#130) (a849fce)\n\n # 11.0.0 (2018-10-06)\n\n\nBug Fixes\n\nflatten-duplicate-arrays:false for more than 2 arrays (#128) (2bc395f)\nhyphenated flags combined with dot notation broke parsing (#131) (dc788da)\nmake requiresArg work in conjunction with arrays (#136) (77ae1d4)\n\n\n\nChores\n\nupdate dependencies (6dc42a1)\n\n\n\nFeatures\n\nalso add camelCase array options (#125) (08c0117)\narray.type can now be provided, supporting coercion (#132) (4b8cfce)\n\n\n\nBREAKING CHANGES\n\ndrops Node 4 support\nthe argv object is now populated differently (correctly) when hyphens and dot notation are used in conjunction.\n\n # 10.1.0 (2018-06-29)\n\n\nFeatures\n\nadd set-placeholder-key configuration (#123) (19386ee)\n\n # 10.0.0 (2018-04-04)\n\n\nBug Fixes\n\ndo not set boolean flags if not defined in argv (#119) (f6e6599)\n\n\n\nBREAKING CHANGES\n\nboolean flags defined without a default value will now behave like other option type and won’t be set in the parsed results when the user doesn’t set the corresponding CLI arg.\n\nPrevious behavior:\nvar parse = require('yargs-parser');\n\nparse('--flag', {boolean: ['flag']});\n// => { _: [], flag: true }\n\nparse('--no-flag', {boolean: ['flag']});\n// => { _: [], flag: false }\n\nparse('', {boolean: ['flag']});\n// => { _: [], flag: false }\nNew behavior:\nvar parse = require('yargs-parser');\n\nparse('--flag', {boolean: ['flag']});\n// => { _: [], flag: true }\n\nparse('--no-flag', {boolean: ['flag']});\n// => { _: [], flag: false }\n\nparse('', {boolean: ['flag']});\n// => { _: [] } => flag not set similarly to other option type\n ## 9.0.2 (2018-01-20)\n\n\nBug Fixes\n\nnargs was still aggressively consuming too many arguments (9b28aad)\n\n ## 9.0.1 (2018-01-20)\n\n\nBug Fixes\n\nnargs was consuming too many arguments (4fef206)\n\n # 9.0.0 (2018-01-20)\n\n\nFeatures\n\nnarg arguments no longer consume flag arguments (#114) (60bb9b3)\n\n\n\nBREAKING CHANGES\n\narguments of form –foo, -abc, will no longer be consumed by nargs\n\n # 8.1.0 (2017-12-20)\n\n\nBug Fixes\n\nallow null config values (#108) (d8b14f9)\nensure consistent parsing of dot-notation arguments (#102) (c9bd79c)\nimplement @antoniom’s fix for camel-case expansion (3087e1d)\nonly run coercion functions once, despite aliases. (#76) (#103) (507aaef)\nscientific notation circumvented bounds check (#110) (3571f57)\ntokenizer should ignore spaces at the beginning of the argString (#106) (f34ead9)\n\n\n\nFeatures\n\nmake combining arrays a configurable option (#111) (c8bf536)\nmerge array from arguments with array from config (#83) (806ddd6)\n\n # 8.0.0 (2017-10-05)\n\n\nBug Fixes\n\nIgnore multiple spaces between arguments. (#100) (d137227)\n\n\n\nFeatures\n\nallow configuration of prefix for boolean negation (#94) (00bde7d)\nreworking how numbers are parsed (#104) (fba00eb)\n\n\n\nBREAKING CHANGES\n\nstrings that fail Number.isSafeInteger() are no longer coerced into numbers.\n\n # 7.0.0 (2017-05-02)\n\n\nChores\n\nrevert populate– logic (#91) (6003e6d)\n\n\n\nBREAKING CHANGES\n\npopulate– now defaults to false.\n\n ## 6.0.1 (2017-05-01)\n\n\nBug Fixes\n\ndefault ‘–’ to undefined when not provided; this is closer to the array API (#90) (4e739cc)\n\n # 6.0.0 (2017-05-01)\n\n\nBug Fixes\n\nenvironment variables should take precedence over config file (#81) (76cee1f)\nparsing hints should apply for dot notation keys (#86) (3e47d62)\n\n\n\nChores\n\nupgrade to newest version of camelcase (#87) (f1903aa)\n\n\n\nFeatures\n\nadd – option which allows arguments after the – flag to be returned separated from positional arguments (#84) (2572ca8)\nwhen parsing stops, we now populate “–” by default (#88) (cd666db)\n\n\n\nBREAKING CHANGES\n\nrather than placing arguments in “_“, when parsing is stopped via”–“; we now populate an array called”–” by default.\ncamelcase now requires Node 4+.\nenvironment variables will now override config files (args, env, config-file, config-object)\n\n # 5.0.0 (2017-02-18)\n\n\nBug Fixes\n\nenvironment variables should take precedence over config file (#81) (76cee1f)\n\n\n\nBREAKING CHANGES\n\nenvironment variables will now override config files (args, env, config-file, config-object)\n\n ## 4.2.1 (2017-01-02)\n\n\nBug Fixes\n\nflatten/duplicate regression (#75) (68d68a0)\n\n # 4.2.0 (2016-12-01)\n\n\nBug Fixes\n\ninner objects in configs had their keys appended to top-level key when dot-notation was disabled (#72) (0b1b5f9)\n\n\n\nFeatures\n\nallow multiple arrays to be provided, rather than always combining (#71) (0f0fb2d)\n\n # 4.1.0 (2016-11-07)\n\n\nFeatures\n\napply coercions to default options (#65) (c79052b)\nhandle dot notation boolean options (#63) (02c3545)\n\n ## 4.0.2 (2016-09-30)\n\n\nBug Fixes\n\nwhoops, let’s make the assign not change the Object key order (29d069a)\n\n ## 4.0.1 (2016-09-30)\n\n\nBug Fixes\n\nlodash.assign was deprecated (#59) (5e7eb11)\n\n # 4.0.0 (2016-09-26)\n\n\nBug Fixes\n\ncoerce should be applied to the final objects and arrays created (#57) (4ca69da)\n\n\n\nBREAKING CHANGES\n\ncoerce is no longer applied to individual arguments in an implicit array.\n\n # 3.2.0 (2016-08-13)\n\n\nFeatures\n\ncoerce full array instead of each element (#51) (cc4dc56)\n\n # 3.1.0 (2016-08-09)\n\n\nBug Fixes\n\naddress pkgConf parsing bug outlined in #37 (#45) (be76ee6)\nbetter parsing of negative values (#44) (2e43692)\ncheck aliases when guessing defaults for arguments fixes #41 (#43) (f3e4616)\n\n\n\nFeatures\n\nadded coerce option, for providing specialized argument parsing (#42) (7b49cd2)\n\n # 3.0.0 (2016-08-07)\n\n\nBug Fixes\n\nparsing issue with numeric character in group of options (#19) (f743236)\nupgraded lodash.assign (5d7fdf4)\n\n\n\nBREAKING CHANGES\n\nsubtle change to how values are parsed in a group of single-character arguments.\nfirst released in 3.1.0, better handling of negative values should be considered a breaking change.\n\n ## 2.4.1 (2016-07-16)\n\n\nBug Fixes\n\ncount: do not increment a default value (#39) (b04a189)\n\n # 2.4.0 (2016-04-11)\n\n\nFeatures\n\nenvironment: Support nested options in environment variables (#26) thanks @elas7 / (020778b)\n\n # 2.3.0 (2016-04-09)\n\n\nBug Fixes\n\nboolean: fix for boolean options with non boolean defaults (#20) (2dbe86b), closes [(#20](https://github.com/(/issues/20)\npackage: remove tests from tarball (0353c0d)\nparsing: handle calling short option with an empty string as the next value. (a867165)\nboolean flag when next value contains the strings ‘true’ or ‘false’. (69941a6)\nupdate dependencies; add standard-version bin for next release (#24) (822d9d5)\n\n\n\nFeatures\n\nconfiguration: Allow to pass configuration objects to yargs-parser (0780900)\nnormalize: allow normalize to work with arrays (e0eaa1a)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "4.0.0 / 2017-07-12",
    "text": "4.0.0 / 2017-07-12\n\nBREAKING: Remove global spaces option.\nBREAKING: Drop support for Node 0.10, 0.12, and io.js.\nRemove undocumented passParsingErrors option.\nAdded EOL override option to writeFile when using spaces. #89"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "3.0.1 / 2017-07-05",
    "text": "3.0.1 / 2017-07-05\n\nFixed bug in writeFile when there was a serialization error & no callback was passed. In previous versions, an empty file would be written; now no file is written."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "3.0.0 / 2017-04-25",
    "text": "3.0.0 / 2017-04-25\n\nChanged behavior of throws option for readFileSync; now does not throw filesystem errors when throws is false"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "2.4.0 / 2016-09-15",
    "text": "2.4.0 / 2016-09-15\n\nChanged\n\nadded optional support for graceful-fs [#62]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "2.3.1 / 2016-05-13",
    "text": "2.3.1 / 2016-05-13\n\nfix to support BOM. #45"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "2.3.0 / 2016-04-16",
    "text": "2.3.0 / 2016-04-16\n\nadd throws to readFile(). See #39\nadd support for any arbitrary fs module. Useful with mock-fs"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "2.2.3 / 2015-10-14",
    "text": "2.2.3 / 2015-10-14\n\ninclude file name in parse error. See: https://github.com/jprichardson/node-jsonfile/pull/34"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "2.2.2 / 2015-09-16",
    "text": "2.2.2 / 2015-09-16\n\nsplit out tests into separate files\nfixed throws when set to true in readFileSync(). See: https://github.com/jprichardson/node-jsonfile/pull/33"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "2.2.1 / 2015-06-25",
    "text": "2.2.1 / 2015-06-25\n\nfixed regression when passing in string as encoding for options in writeFile() and writeFileSync(). See: https://github.com/jprichardson/node-jsonfile/issues/28"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "2.2.0 / 2015-06-25",
    "text": "2.2.0 / 2015-06-25\n\nadded options.spaces to writeFile() and writeFileSync()"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "2.1.2 / 2015-06-22",
    "text": "2.1.2 / 2015-06-22\n\nfixed if passed readFileSync(file, 'utf8'). See: https://github.com/jprichardson/node-jsonfile/issues/25"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "2.1.1 / 2015-06-19",
    "text": "2.1.1 / 2015-06-19\n\nfixed regressions if null is passed for options. See: https://github.com/jprichardson/node-jsonfile/issues/24"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "2.1.0 / 2015-06-19",
    "text": "2.1.0 / 2015-06-19\n\ncleanup: JavaScript Standard Style, rename files, dropped terst for assert\nmethods now support JSON revivers/replacers"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "2.0.1 / 2015-05-24",
    "text": "2.0.1 / 2015-05-24\n\nupdate license attribute https://github.com/jprichardson/node-jsonfile/pull/21"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "2.0.0 / 2014-07-28",
    "text": "2.0.0 / 2014-07-28\n\nadded \\n to end of file on write. #14\nadded options.throws to readFileSync()\ndropped support for Node v0.8"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "1.2.0 / 2014-06-29",
    "text": "1.2.0 / 2014-06-29\n\nremoved semicolons\nbugfix: passed options to fs.readFile and fs.readFileSync. This technically changes behavior, but changes it according to docs. #12"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "1.1.1 / 2013-11-11",
    "text": "1.1.1 / 2013-11-11\n\nfixed catching of callback bug (ffissore / #5)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "1.1.0 / 2013-10-11",
    "text": "1.1.0 / 2013-10-11\n\nadded options param to methods, (seanodell / #4)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "1.0.1 / 2013-09-05",
    "text": "1.0.1 / 2013-09-05\n\nremoved homepage field from package.json to remove NPM warning"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "1.0.0 / 2013-06-28",
    "text": "1.0.0 / 2013-06-28\n\nadded .npmignore, #1\nchanged spacing default from 4 to 2 to follow Node conventions"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/jsonfile/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "0.0.1 / 2012-09-10",
    "text": "0.0.1 / 2012-09-10\n\nInitial release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-date-object/CHANGELOG.html#v1.0.5---2021-08-05",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-date-object/CHANGELOG.html#v1.0.5---2021-08-05",
    "title": "3327 Research",
    "section": "v1.0.5 - 2021-08-05",
    "text": "v1.0.5 - 2021-08-05\n\nCommits\n\n[meta] remove .jscs.json 31c731c\n[Fix] use has-tostringtag to behave correctly in the presence of symbol shams 17a6df4\n[Dev Deps] update eslint, auto-changelog, tape 79db3af"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-date-object/CHANGELOG.html#v1.0.4---2021-05-07",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-date-object/CHANGELOG.html#v1.0.4---2021-05-07",
    "title": "3327 Research",
    "section": "v1.0.4 - 2021-05-07",
    "text": "v1.0.4 - 2021-05-07\n\nCommits\n\n[Fix] do not use Object.prototype.toString when Symbol.toStringTag is shammed 8943a4a\n[readme] make all URLs https 1d4d6cd\n[Dev Deps] update eslint a7abeaa"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-date-object/CHANGELOG.html#v1.0.3---2021-05-05",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-date-object/CHANGELOG.html#v1.0.3---2021-05-05",
    "title": "3327 Research",
    "section": "v1.0.3 - 2021-05-05",
    "text": "v1.0.3 - 2021-05-05\n\nCommits\n\n[Tests] migrate tests to Github Actions 023504f\n[readme] add actions and codecov badges e63305f\n[meta] do not publish github action workflow files 017d906\n[Tests] run nyc on all tests 0376b6f\n[readme] fix repo URLs; remove defunct badges 1c148c6\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog, tape c7a3f54\n[actions] add “Allow Edits” workflow e79b5b2\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, tape da28980\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog 5cabae9\n[readme] add actions and codecov badges 33dfb88\n[Dev Deps] update eslint, @ljharb/eslint-config, tape 745eb04\n[Dev Deps] update eslint, @ljharb/eslint-config, tape 466c62b\n[actions] use checkout v2; remove unneeded env ff87a16\n[Dev Deps] update auto-changelog, tape 93188f5\n[meta] use prepublishOnly script for npm 7+ 1d0e3ea\n[actions] update workflows 4d1a235\n[Dev Deps] update auto-changelog; add aud 67be59a\n[actions] switch Automatic Rebase workflow to pull_request_target event a6661c2\n[Tests] only audit prod deps dd4a47f"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-date-object/CHANGELOG.html#v1.0.2---2019-12-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-date-object/CHANGELOG.html#v1.0.2---2019-12-18",
    "title": "3327 Research",
    "section": "v1.0.2 - 2019-12-18",
    "text": "v1.0.2 - 2019-12-18\n\nCommits\n\n[Tests] use shared travis-ci configs 8a378b8\n[Tests] on all node minors; use nvm install-latest-npm; fix scripts; improve matrix 6e97a21\n[Dev Deps] update eslint, @ljharb/eslint-config, is, jscs, nsp, semver, tape 8472b90\n[Tests] up to node v10.0, v9.11, v8.11, v6.14, v4.9 ae73e38\n[meta] add auto-changelog 82f8f47\n[meta] remove unused Makefile and associated utilities 788a2cd\n[Tests] up to node v11.4, v10.14, v8.14, v6.15 b9caf7c\n[Tests] up to node v12.4, v11.15, v10.15, v8.15, v6.17; use nvm install-latest-npm cda0abc\n[Tests] up to node v12.10, v10.16, v8.16 49bc482\n[Dev Deps] update eslint, @ljharb/eslint-config, semver, tape; add safe-publish-latest f77fec4\n[actions] add automatic rebasing / merge commit blocking 68605fc\n[meta] create FUNDING.yml 4f82d88\n[Dev Deps] update tape, jscs, eslint, @ljharb/eslint-config 3cbf28a\n[Dev Deps] update eslint, @ljharb/eslint-config@, is, semver, tape abf9fb0\n[Tests] switch from nsp to npm audit 6543c7d\n[Dev Deps] update eslint, @ljharb/eslint-config, covert, tape ba5d2d7\n[Dev Deps] update eslint, nsp, semver, tape c1e3525\n[Tests] use npx aud instead of nsp or npm audit with hoops 14e4824\n[Dev Deps] update eslint, @ljharb/eslint-config, safe-publish-latest 68ead64\n[Dev Deps] update eslint, semver,tape,semver[f55453f`](https://github.com/inspect-js/is-date-object/commit/f55453f200903277465d7e9307a9c49120a4f419)\nOnly apps should have lockfiles 6c848eb\n[Tests] remove jscs 3fd3a62\n[Dev Deps] update eslint, tape 77d3130\n[meta] add funding field 9ef6d58"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-date-object/CHANGELOG.html#v1.0.1---2015-09-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-date-object/CHANGELOG.html#v1.0.1---2015-09-27",
    "title": "3327 Research",
    "section": "v1.0.1 - 2015-09-27",
    "text": "v1.0.1 - 2015-09-27\n\nCommits\n\nUpdate tape, semver, eslint; use my personal shared eslint config. 731aa13\nUpdate is, tape, covert, jscs, editorconfig-tools, nsp, eslint, semver 53e43a6\nUpdate eslint d2fc304\nUpdate tape, jscs, eslint, @ljharb/eslint-config c9568df\nTest on latest node and io.js versions. a21d537\nUpdate nsp, eslint, semver 9e1d908\nUpdate covert, jscs, eslint, semver f198f6b\n[Dev Deps] update tape, jscs, eslint ab9bdbb\nIf @@toStringTag is not present, use the old-school Object#toString test. c03afce\n[Dev Deps] update jscs, nsp, tape, eslint, @ljharb/eslint-config 9d94ccb\n[Dev Deps] update is, eslint, @ljharb/eslint-config, semver 35cbff7\nTest up to io.js v2.3 be5d11e\n[Tests] on io.js v3.3, up to node v4.1 20221a3\n[Tests] up to io.js v3.2 7009b4a\nTest on io.js v2.1 68b29b1\nRemove editorconfig-tools 8d3972c\n[Dev Deps] update tape 204945d\nSwitch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. 7bff214\nTest on io.js v2.5 92f7bd6\nTest on io.js v2.4 ebb34bf\nFix tests for faked @@toStringTag 3b9c26c\nTest on io.js v3.0 5eedf4b"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-date-object/CHANGELOG.html#v1.0.0---2015-01-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-date-object/CHANGELOG.html#v1.0.0---2015-01-28",
    "title": "3327 Research",
    "section": "v1.0.0 - 2015-01-28",
    "text": "v1.0.0 - 2015-01-28\n\nCommits\n\nDotfiles. 5b6a929\nmake release e8d40ce\npackage.json a107259\nRead me eb92695\nInitial commit 4fc7755\nTests. b6f432f\nImplementation. dd0fd96"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/iconv-lite/Changelog.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/iconv-lite/Changelog.html",
    "title": "3327 Research",
    "section": "",
    "text": "0.4.24 / 2018-08-22\n\nAdded MIK encoding (#196, by @Ivan-Kalatchev)\n\n\n\n0.4.23 / 2018-05-07\n\nFix deprecation warning in Node v10 due to the last usage of new Buffer (#185, by @felixbuenemann)\nSwitched from NodeBuffer to Buffer in typings (#155 by @felixfbecker, #186 by @larssn)\n\n\n\n0.4.22 / 2018-05-05\n\nUse older semver style for dependencies to be compatible with Node version 0.10 (#182, by @dougwilson)\nFix tests to accomodate fixes in Node v10 (#182, by @dougwilson)\n\n\n\n0.4.21 / 2018-04-06\n\nFix encoding canonicalization (#156)\nFix the paths in the “browser” field in package.json (#174 by @LMLB)\nRemoved “contributors” section in package.json - see Git history instead.\n\n\n\n0.4.20 / 2018-04-06\n\nUpdated new Buffer() usages with recommended replacements as it’s being deprecated in Node v10 (#176, #178 by @ChALkeR)\n\n\n\n0.4.19 / 2017-09-09\n\nFixed iso8859-1 codec regression in handling untranslatable characters (#162, caused by #147)\nRe-generated windows1255 codec, because it was updated in iconv project\nFixed grammar in error message when iconv-lite is loaded with encoding other than utf8\n\n\n\n0.4.18 / 2017-06-13\n\nFixed CESU-8 regression in Node v8.\n\n\n\n0.4.17 / 2017-04-22\n\nUpdated typescript definition file to support Angular 2 AoT mode (#153 by @larssn)\n\n\n\n0.4.16 / 2017-04-22\n\nAdded support for React Native (#150)\nChanged iso8859-1 encoding to usine internal ‘binary’ encoding, as it’s the same thing (#147 by @mscdex)\nFixed typo in Readme (#138 by @jiangzhuo)\nFixed build for Node v6.10+ by making correct version comparison\nAdded a warning if iconv-lite is loaded not as utf-8 (see #142)\n\n\n\n0.4.15 / 2016-11-21\n\nFixed typescript type definition (#137)\n\n\n\n0.4.14 / 2016-11-20\n\nPreparation for v1.0\nAdded Node v6 and latest Node versions to Travis CI test rig\nDeprecated Node v0.8 support\nTypescript typings (@larssn)\nFix encoding of Euro character in GB 18030 (inspired by @lygstate)\nAdd ms prefix to dbcs windows encodings (@rokoroku)\n\n\n\n0.4.13 / 2015-10-01\n\nFix silly mistake in deprecation notice.\n\n\n\n0.4.12 / 2015-09-26\n\nNode v4 support:\n\nAdded CESU-8 decoding (#106)\nAdded deprecation notice for extendNodeEncodings\nAdded Travis tests for Node v4 and io.js latest (#105 by @Mithgol)\n\n\n\n\n0.4.11 / 2015-07-03\n\nAdded CESU-8 encoding.\n\n\n\n0.4.10 / 2015-05-26\n\nChanged UTF-16 endianness heuristic to take into account any ASCII chars, not just spaces. This should minimize the importance of “default” endianness.\n\n\n\n0.4.9 / 2015-05-24\n\nStreamlined BOM handling: strip BOM by default, add BOM when encoding if addBOM: true. Added docs to Readme.\nUTF16 now uses UTF16-LE by default.\nFixed minor issue with big5 encoding.\nAdded io.js testing on Travis; updated node-iconv version to test against. Now we just skip testing SBCS encodings that node-iconv doesn’t support.\n(internal refactoring) Updated codec interface to use classes.\nUse strict mode in all files.\n\n\n\n0.4.8 / 2015-04-14\n\nadded alias UNICODE-1-1-UTF-7 for UTF-7 encoding (#94)\n\n\n\n0.4.7 / 2015-02-05\n\nstop official support of Node.js v0.8. Should still work, but no guarantees. reason: Packages needed for testing are hard to get on Travis CI.\nwork in environment where Object.prototype is monkey patched with enumerable props (#89).\n\n\n\n0.4.6 / 2015-01-12\n\nfix rare aliases of single-byte encodings (thanks @mscdex)\ndouble the timeout for dbcs tests to make them less flaky on travis\n\n\n\n0.4.5 / 2014-11-20\n\nfix windows-31j and x-sjis encoding support (@nleush)\nminor fix: undefined variable reference when internal error happens\n\n\n\n0.4.4 / 2014-07-16\n\nadded encodings UTF-7 (RFC2152) and UTF-7-IMAP (RFC3501 Section 5.1.3)\nfixed streaming base64 encoding\n\n\n\n0.4.3 / 2014-06-14\n\nadded encodings UTF-16BE and UTF-16 with BOM\n\n\n\n0.4.2 / 2014-06-12\n\ndon’t throw exception if extendNodeEncodings() is called more than once\n\n\n\n0.4.1 / 2014-06-11\n\ncodepage 808 added\n\n\n\n0.4.0 / 2014-06-10\n\ncode is rewritten from scratch\nall widespread encodings are supported\nstreaming interface added\nbrowserify compatibility added\n(optional) extend core primitive encodings to make usage even simpler\nmoved from vows to mocha as the testing framework"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/decamelize/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/decamelize/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install --save decamelize"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/decamelize/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/decamelize/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst decamelize = require('decamelize');\n\ndecamelize('unicornRainbow');\n//=> 'unicorn_rainbow'\n\ndecamelize('unicornRainbow', '-');\n//=> 'unicorn-rainbow'"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/decamelize/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/decamelize/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\ndecamelize(input, separator)\n\ninput\nType: string\n\n\nseparator\nType: string Default: _"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/decamelize/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/decamelize/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\nSee camelcase for the inverse."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/decamelize/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/decamelize/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/async/CHANGELOG.html#new-features",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/async/CHANGELOG.html#new-features",
    "title": "3327 Research",
    "section": "New Features",
    "text": "New Features\n\nAsync is now modularized. Individual functions can be require()d from the main package. (require('async/auto')) (#984, #996)\nAsync is also available as a collection of ES2015 modules in the new async-es package. (import {forEachSeries} from 'async-es') (#984, #996)\nAdded race, analogous to Promise.race(). It will run an array of async tasks in parallel and will call its callback with the result of the first task to respond. (#568, #1038)\nCollection methods now accept ES2015 iterators. Maps, Sets, and anything that implements the iterator spec can now be passed directly to each, map, parallel, etc.. (#579, #839, #1074)\nAdded mapValues, for mapping over the properties of an object and returning an object with the same keys. (#1157, #1177)\nAdded timeout, a wrapper for an async function that will make the task time-out after the specified time. (#1007, #1027)\nAdded reflect and reflectAll, analagous to Promise.reflect(), a wrapper for async tasks that always succeeds, by gathering results and errors into an object. (#942, #1012, #1095)\nconstant supports dynamic arguments – it will now always use its last argument as the callback. (#1016, #1052)\nsetImmediate and nextTick now support arguments to partially apply to the deferred function, like the node-native versions do. (#940, #1053)\nauto now supports resolving cyclic dependencies using Kahn’s algorithm (#1140).\nAdded autoInject, a relative of auto that automatically spreads a task’s dependencies as arguments to the task function. (#608, #1055, #1099, #1100)\nYou can now limit the concurrency of auto tasks. (#635, #637)\nAdded retryable, a relative of retry that wraps an async function, making it retry when called. (#1058)\nretry now supports specifying a function that determines the next time interval, useful for exponential backoff, logging and other retry strategies. (#1161)\nretry will now pass all of the arguments the task function was resolved with to the callback (#1231).\nAdded q.unsaturated – callback called when a queue’s number of running workers falls below a threshold. (#868, #1030, #1033, #1034)\nAdded q.error – a callback called whenever a queue task calls its callback with an error. (#1170)\napplyEach and applyEachSeries now pass results to the final callback. (#1088)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/async/CHANGELOG.html#breaking-changes",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/async/CHANGELOG.html#breaking-changes",
    "title": "3327 Research",
    "section": "Breaking changes",
    "text": "Breaking changes\n\nCalling a callback more than once is considered an error, and an error will be thrown. This had an explicit breaking change in waterfall. If you were relying on this behavior, you should more accurately represent your control flow as an event emitter or stream. (#814, #815, #1048, #1050)\nauto task functions now always take the callback as the last argument. If a task has dependencies, the results object will be passed as the first argument. To migrate old task functions, wrap them with _.flip (#1036, #1042)\nInternal setImmediate calls have been refactored away. This may make existing flows vulnerable to stack overflows if you use many synchronous functions in series. Use ensureAsync to work around this. (#696, #704, #1049, #1050)\nmap used to return an object when iterating over an object. map now always returns an array, like in other libraries. The previous object behavior has been split out into mapValues. (#1157, #1177)\nfilter, reject, some, every, detect and their families like {METHOD}Series and {METHOD}Limit now expect an error as the first callback argument, rather than just a simple boolean. Pass null as the first argument, or use fs.access instead of fs.exists. (#118, #774, #1028, #1041)\n{METHOD} and {METHOD}Series are now implemented in terms of {METHOD}Limit. This is a major internal simplification, and is not expected to cause many problems, but it does subtly affect how functions execute internally. (#778, #847)\nretry’s callback is now optional. Previously, omitting the callback would partially apply the function, meaning it could be passed directly as a task to series or auto. The partially applied “control-flow” behavior has been separated out into retryable. (#1054, #1058)\nThe test function for whilst, until, and during used to be passed non-error args from the iteratee function’s callback, but this led to weirdness where the first call of the test function would be passed no args. We have made it so the test function is never passed extra arguments, and only the doWhilst, doUntil, and doDuring functions pass iteratee callback arguments to the test function (#1217, #1224)\nThe q.tasks array has been renamed q._tasks and is now implemented as a doubly linked list (DLL). Any code that used to interact with this array will need to be updated to either use the provided helpers or support DLLs (#1205).\nThe timing of the q.saturated() callback in a queue has been modified to better reflect when tasks pushed to the queue will start queueing. (#724, #1078)\nRemoved iterator method in favour of ES2015 iterator protocol which natively supports arrays (#1237)\nDropped support for Component, Jam, SPM, and Volo (#1175, ##176)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/async/CHANGELOG.html#bug-fixes",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/async/CHANGELOG.html#bug-fixes",
    "title": "3327 Research",
    "section": "Bug Fixes",
    "text": "Bug Fixes\n\nImproved handling of no dependency cases in auto & autoInject (#1147).\nFixed a bug where the callback generated by asyncify with Promises could resolve twice (#1197).\nFixed several documented optional callbacks not actually being optional (#1223)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/async/CHANGELOG.html#other",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/async/CHANGELOG.html#other",
    "title": "3327 Research",
    "section": "Other",
    "text": "Other\n\nAdded someSeries and everySeries for symmetry, as well as a complete set of any/anyLimit/anySeries and all//allLmit/allSeries aliases.\nAdded find as an alias for detect. (as well asfindLimitandfindSeries`).\nVarious doc fixes (#1005, #1008, #1010, #1015, #1021, #1037, #1039, #1051, #1102, #1107, #1121, #1123, #1129, #1135, #1138, #1141, #1153, #1216, #1217, #1232, #1233, #1236, #1238)\n\nThank you @aearly and @megawac for taking the lead on version 2 of async."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-locate/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-locate/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install --save p-locate"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-locate/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-locate/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nHere we find the first file that exists on disk, in array order.\nconst pathExists = require('path-exists');\nconst pLocate = require('p-locate');\n\nconst files = [\n    'unicorn.png',\n    'rainbow.png', // only this one actually exists on disk\n    'pony.png'\n];\n\npLocate(files, file => pathExists(file)).then(foundPath => {\n    console.log(foundPath);\n    //=> 'rainbow'\n});\nThe above is just an example. Use locate-path if you need this."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-locate/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-locate/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\npLocate(input, tester, options)\nReturns a Promise that is fulfilled when tester resolves to true or the iterable is done, or rejects if any of the promises reject. The fulfilled value is the current iterable value or undefined if tester never resolved to true.\n\ninput\nType: Iterable<Promise|any>\n\n\ntester(element)\nType: Function\nExpected to return a Promise<boolean> or boolean.\n\n\noptions\nType: Object\n\nconcurrency\nType: number Default: Infinity Minimum: 1\nNumber of concurrently pending promises returned by tester.\n\n\npreserveOrder\nType: boolean Default: true\nPreserve input order when searching.\nDisable this to improve performance if you don’t care about the order."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-locate/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-locate/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\np-map - Map over promises concurrently\np-filter - Filter promises concurrently\np-any - Wait for any promise to be fulfilled\nMore…"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-locate/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-locate/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/get-intrinsic/CHANGELOG.html#v1.1.1---2021-02-03",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/get-intrinsic/CHANGELOG.html#v1.1.1---2021-02-03",
    "title": "3327 Research",
    "section": "v1.1.1 - 2021-02-03",
    "text": "v1.1.1 - 2021-02-03\n\nFixed\n\n[meta] export ./package.json #9\n\n\n\nCommits\n\n[readme] flesh out the readme; use evalmd d12f12c\n[eslint] set up proper globals config 5a8c098\n[Dev Deps] update eslint 7b9a5c0"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/get-intrinsic/CHANGELOG.html#v1.1.0---2021-01-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/get-intrinsic/CHANGELOG.html#v1.1.0---2021-01-25",
    "title": "3327 Research",
    "section": "v1.1.0 - 2021-01-25",
    "text": "v1.1.0 - 2021-01-25\n\nFixed\n\n[Refactor] delay Function eval until syntax-derived values are requested #3\n\n\n\nCommits\n\n[Tests] migrate tests to Github Actions 2ab762b\n[meta] do not publish github action workflow files 5e7108e\n[Tests] add some coverage 01ac7a8\n[Dev Deps] update eslint, @ljharb/eslint-config, call-bind, es-abstract, tape; add call-bind 911b672\n[Refactor] rearrange evalled constructors a bit 7e7e4bf\n[meta] add Automatic Rebase and Require Allow Edits workflows 0199968"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/get-intrinsic/CHANGELOG.html#v1.0.2---2020-12-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/get-intrinsic/CHANGELOG.html#v1.0.2---2020-12-17",
    "title": "3327 Research",
    "section": "v1.0.2 - 2020-12-17",
    "text": "v1.0.2 - 2020-12-17\n\nCommits\n\n[Fix] Throw for non‑existent intrinsics 68f873b\n[Fix] Throw for non‑existent segments in the intrinsic path 8325dee\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, has-bigints, object-inspect 0c227a7\n[meta] do not lint coverage output 70d2419"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/get-intrinsic/CHANGELOG.html#v1.0.1---2020-10-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/get-intrinsic/CHANGELOG.html#v1.0.1---2020-10-30",
    "title": "3327 Research",
    "section": "v1.0.1 - 2020-10-30",
    "text": "v1.0.1 - 2020-10-30\n\nCommits\n\n[Tests] gather coverage data on every job d1d280d\n[Fix] add missing dependencies 5031771\n[Tests] use es-value-fixtures af48765"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/get-intrinsic/CHANGELOG.html#v1.0.0---2020-10-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/get-intrinsic/CHANGELOG.html#v1.0.0---2020-10-29",
    "title": "3327 Research",
    "section": "v1.0.0 - 2020-10-29",
    "text": "v1.0.0 - 2020-10-29\n\nCommits\n\nImplementation bbce57c\nTests 17b4f0d\nInitial commit 3153294\nnpm init fb326c4\n[meta] add Automatic Rebase and Require Allow Edits workflows 48862fb\n[meta] add auto-changelog 5f28ad0\n[meta] add “funding”; create FUNDING.yml c2bbdde\n[Tests] add npm run lint 0a84b98\nOnly apps should have lockfiles 9586c75"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/arg/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/arg/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "MIT License\nCopyright (c) 2017-2019 Zeit, Inc.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/es-to-primitive/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/es-to-primitive/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "1.2.1 / 2019-11-08\n\n[readme] remove testling URLs\n[meta] add funding field\n[meta] create FUNDING.yml\n[Dev Deps] update eslint, @ljharb/eslint-config, covert, replace, semver, tape, function.prototype.name\n[Tests] use shared travis-ci configs\n[Tests] Add es5 tests for symbol types (#45)\n[Tests] use npx aud instead of nsp or npm audit with hoops\n[Tests] remove jscs\n\n\n\n1.2.0 / 2018-09-27\n\n[New] create ES2015 entry point/property, to replace ES6\n[Fix] Ensure optional arguments are not part of the length (#29)\n[Deps] update is-callable\n[Dev Deps] update tape, jscs, nsp, eslint, @ljharb/eslint-config, semver, object-inspect, replace\n[Tests] avoid util.inspect bug with new Date(NaN) on node v6.0 and v6.1.\n[Tests] up to node v10.11, v9.11, v8.12, v6.14, v4.9\n\n\n\n1.1.1 / 2016-01-03\n\n[Fix: ES5] fix coercion logic: ES5’s ToPrimitive does not coerce any primitive value, regardless of hint (#2)\n\n\n\n1.1.0 / 2015-12-27\n\n[New] add Symbol.toPrimitive support\n[Deps] update is-callable, is-date-object\n[Dev Deps] update eslint, tape, semver, jscs, covert, nsp, @ljharb/eslint-config\n[Dev Deps] remove unused deps\n[Tests] up to node v5.3\n[Tests] fix npm upgrades on older node versions\n[Tests] fix testling\n[Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG\n\n\n\n1.0.1 / 2016-01-03\n\n[Fix: ES5] fix coercion logic: ES5’s ToPrimitive does not coerce any primitive value, regardless of hint (#2)\n[Deps] update is-callable, is-date-object\n[Dev Deps] update eslint, tape, semver, jscs, covert, nsp, @ljharb/eslint-config\n[Dev Deps] remove unused deps\n[Tests] up to node v5.3\n[Tests] fix npm upgrades on older node versions\n[Tests] fix testling\n[Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG\n\n\n\n1.0.0 / 2015-03-19\n\nInitial release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/es-abstract/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/es-abstract/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "1.19.1 / 2021-10-02\n\n[Fix] ES2020+: CreateRegExpStringIterator: should not have enumerable methods\n[Dev Deps] update array.prototype.filter, array.prototype.indexof\n\n\n\n1.19.0 / 2021-09-30\n\n[New] ES2021+: IterableToList: make method parameter optional (#61)\n[New] add ES2021\n[New] ES2020+: add StringToBigInt, ToBigInt, ToBigInt64, ToBigUint64\n[New] ES2017+: add IsSharedArrayBuffer, OrdinaryToPrimitive\n[New] ES2015+: add CharacterRange, IsCompatiblePropertyDescriptor\n[New] ES2020+: add CreateRegExpStringIterator\n[Fix] ES2020+: ToBigInt64/ToBigUint64: avoid node v10.4-v10.8 bug with limited BigInt range\n[Fix] ES2020+: AbstractRelationalComparison, AbstractEqualityComparison: support BigInt\n[Fix] ES2020+: ToBigInt64/ToBigUint64: Improve the definitions of twoSixtyThree and twoSixtyFour (#140)\n[meta] do not publish .gitattributes\n[Tests] Correct the behavior of safeBigInt\n[Tests] Exclude dotfiles from the testing sweep (#141)\n\n\n\n1.18.7 / 2021-09-28\n\n[Fix] getOwnPropertyDescriptor helper: avoid crashing in IE < 9\n[Fix] ArraySetLength: node v0.6 has a bug where array lengths can be Set but not Defined\n[eslint] remove unused directive\n[Tests] fix spelling\n\n\n\n1.18.6 / 2021-09-07\n\n[Fix] ES2020+: NumberToBigInt: throw a SyntaxError when BigInts are not supported\n[Refactor] extract getSymbolDescription logic to get-symbol-description\n[Refactor] ES2018+: AbstractRelationalComparison: use IsStringPrefix\n[Deps] update is-callable, is-regex, is-string\n[Dev Deps] update @ljharb/eslint-config, tape\n[Tests] GetSubstitution: add cases\n\n\n\n1.18.5 / 2021-08-01\n\n[meta] remove “exports” (#133)\n[Dev Deps] update eslint\n\n\n\n1.18.4 / 2021-07-29\n\n[meta] partial revert of b54cfe8525faff482450e843a49d43be3a086225\n[Deps] update internal-slot, object-inspect\n[Dev Deps] update eslint, tape\n[Tests] ArraySetLength: increase coverage\n\n\n\n1.18.3 / 2021-05-27\n\n[Fix] ES2020+: ToNumber: ensure it throws on a BigInt (#130)\n\n\n\n1.18.2 / 2021-05-25\n\n[meta] add helpers to “exports” field, for back compat\n\n\n\n1.18.1 / 2021-05-25\n\n[readme] update and clarify entry points\n[meta] add “exports” field, with escape hatch\n[meta] add sideEffects field\n[meta] use prepublishOnly, for npm 7+\n[eslint] clean up eslint rules\n[Deps] update is-regex, is-string, object-inspect, unbox-primitive\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, tape\n[actions] disable fail-fast on matrix jobs\n[actions] use node/install action instead of node/run\n[actions] update codeql-analysis to new best practices\n\n\n\n1.18.0 / 2021-03-03\n\n[New] add ES2020, and a number of additional AOs: See the changelog entries for the prereleases for more information:\n\nnext.3\nnext.2\nnext.1\nnext.0\n\n[Refactor] ES5+: Abstract Relational Comparison: increase coverage\n[Tests] increase coverage\n[Tests] do not run coverage on node 0.6\n\n\n\n1.18.0-next.3 / 2021-03-01\n\n[New] ES2015: add StringGetIndexProperty\n[New] ES2015+: add RegExpCreate, SplitMatch, StringCreate\n[New] ES2016-ES2019: add UTF16Decode\n[New] ES2020+: add NumberToBigInt\n[New] ES2020+: addBigInt::/Number::` methods:\n[Fix] ES5: ToNumber: properly refuse to parse ES6+ forms\n[Fix] ES2015+: Invoke: optional argumentsList must be a List of arguments, not a list of arguments\n[Fix] ES2016+: UTF16Encoding: properly return a string code point instead of a numeric code point\n[Fix] ES2020: NumberBitwiseOp: assert that x and y are Numbers\n[readme] remove travis/testling badge, fix repo URLs\n[meta] ES2015: add missing CreateArrayIterator AO\n[meta] ES2015-ES2017: add missing DaylightSavingTA AO\n[meta] rerun npm run spackle to update URLs left after 11d8c8df11c0d15d094a6035afed662e22b440ef\n[meta] update ecma URLs\n[meta] unignore 2020 operations list\n[meta] update operations scripts linting\n[meta] refactor getOps script to fetch all years at once\n[meta] refactor operations script to keep years in one place\n[meta] fix ES2015 spec URL\n[Deps] update has-symbols, string.prototype.trimend, string.prototype.trimstart, get-intrinsic, is-callable, is-regex\n[Dev Deps] update eslint, @ljharb/eslint-config, array.prototype.indexof, aud, es-value-fixtures, object.fromentries, tape, diff\n[operations] detect ES2020+ style T:: numeric operations\n[Tests] increase coverage\n[Tests] BigInt(1e17) throws on node v10.4-v10.6\n[Tests] improve coverage on Number:: methods\n[Tests] tape v5 .equal now uses strict equality, so no more need for is()\n[Tests] improve BigInt:: and Number:: coverage\n[Tests] actually run all the helpers tests\n[Tests] ensure “expected missing” ops list is accurate\n[Tests] abstract away per-operation skips\n[Tests] skip BigInt:: tests on envs without BigInts\n[Tests] use es-value-fixtures\n[actions] update workflows\n\n\n\n1.18.0-next.2 / 2021-01-17\n\n[New] helpers: add isByteValue, isCodePoint, some\n[Fix] ES2018+: fix GetSubstitution with named captures\n[Fix] ES2020: GetIterator: add omitted hint parameter\n[Fix] ES2018/ES2019: SetFunctionLength: Infinities should throw\n[Fix] ES2020: ToIndex uses SameValue instead of SameValueZero\n[Fix] ES2020: CopyDataProperties uses CreateDataPropertyOrThrow instead of CreateDataProperty\n[Refactor] use extracted call-bind instead of local helpers\n[Refactor] use extracted get-intrinsic package\n[Deps] update call-bind, get-intrinsic, is-callable, is-negative-zero, is-regex, object-inspect, object.assign, string.prototype.trimend, string.prototype.trimstart\n[Dev Deps] update eslint, @ljharb/eslint-config, array.prototype.indexof, aud, diff, functions-have-names, has-bigints, has-strict-mode, object-is, object.fromentries, tape\n[actions] switch Automatic Rebase workflow to pull_request_target event\n[actions] add “Allow Edits” workflow\n[meta] pin cheerio to v1.0.0-rc.3, to fix getOps\n[meta] make all URLs consistent, and point to spec artifacts\n[meta] refactor deltas script; update eslint on operations scripts\n[meta] do not publish .github dir (#123)\n[Tests] add v.notNonNegativeIntegers, v.nonConstructorFunctions\n[Tests] migrate tests to Github Actions\n[Tests] run coverage on all tests\n[Tests] add npm run test:ses\n\n\n\n1.18.0-next.1 / 2020-09-30\n\n[Fix] ES2020: ToInteger: -0 should always be normalized to +0 (#116)\n[patch] GetIntrinsic: Adapt to override-mistake-fix pattern (#115)\n[Fix] callBind: ensure compatibility with SES\n[Deps] update is-callable, object.assign\n[Dev Deps] update eslint, @ljharb/eslint-config\n[eslint] fix warning\n[Tests] temporarily allow SES tests to fail (#115)\n[Tests] ses-compat - initialize module after ses lockdown (#113)\n[Tests] [Refactor] use defineProperty helper rather than assignment\n[Tests] [Refactor] clean up defineProperty test helper\n\n\n\n1.18.0-next.0 / 2020-08-14\n\n[New] add ES2020\n[New] GetIntrinsic: add %AggregateError%, %FinalizationRegistry%, and %WeakRef%\n[New] ES5+: add abs, floor; use modulo consistently\n[New] GetIntrinsic: Cache accessed intrinsics (#98)\n[New] GetIntrinsic: Add ES201x function intrinsics (#97)\n[New] ES2015+: add QuoteJSONString, OrdinaryCreateFromConstructor\n[New] ES2017+: add StringGetOwnProperty\n[New] ES2016+: add UTF16Encoding\n[New] ES2018+: add SetFunctionLength, UnicodeEscape\n[New] add isLeadingSurrogate/isTrailingSurrogate helpers\n[Fix] ES5+: ToPropertyDescriptor: use intrinsic TypeError\n[Fix] ES2018+: CopyDataProperties/NumberToString: use intrinsic TypeError\n[Deps] update is-regex, object-inspect\n[Dev Deps] update eslint\n\n\n\n1.17.7 / 2020-09-30\n\n[Fix] ES2020: ToInteger: -0 should always be normalized to +0 (#116)\n[patch] GetIntrinsic: Adapt to override-mistake-fix pattern (#115)\n[Fix] callBind: ensure compatibility with SES\n[Deps] update is-callable, is-regex, object-inspect, object.assign\n[Dev Deps] update eslint, @ljharb/eslint-config\n\n\n\n1.17.6 / 2020-06-13\n\n[Fix] helpers/getSymbolDescription: use the global Symbol registry when available (#92)\n[Fix] ES2015+: IsConstructor: when Reflect.construct is available, be spec-accurate (#93)\n[Fix] ES2015+: Set: Always return boolean value (#101)\n[Fix] ES2015+: Set: ensure exceptions are thrown in IE 9 when requested\n[Fix] Use Reflect.apply(…) if available (#99)\n[Fix] helpers/floor: module-cache Math.floor\n[Fix] helpers/getSymbolDescription: Prefer bound description getter when present\n[Fix] 2016: Use getIteratorMethod in IterableToArrayLike (#94)\n[Fix] helpers/OwnPropertyKeys: Use Reflect.ownKeys(…) if available (#91)\n[Fix] 2018+: Fix CopyDataProperties depending on this (#95)\n[meta] mark spackled files as autogenerated\n[meta] Type: fix spec URL\n[meta] ES2015: complete ops list\n[Deps] update is‑callable, is‑regex\n[Deps] switch from string.prototype.trimleft/string.prototype.trimright to string.prototype.trimstart/string.prototype.trimend\n[Dev Deps] update eslint, @ljharb/eslint-config, in-publish, object-is, tape; add aud\n[eslint] helpers/isPropertyDescriptor: fix indentation\n[Tests] helpers/getSymbolDescription: add test cases; some envs have Symbol.for but can not infer a name (#92)\n[Tests] try out CodeQL analysis\n[Tests] reformat expected missing ops\n[Tests] Run tests with undefined this (#96)\n\n\n\n1.17.5 / 2020-03-22\n\n[Fix] CreateDataProperty: update an existing property\n[Fix] run missing spackle from cd7504701879ddea0f5981e99cbcf93bfea9171d\n[Dev Deps] update make-arrow-function, tape, @ljharb/eslint-config\n\n\n\n1.17.4 / 2020-01-21\n\n[Fix] 2015+: add code to handle IE 8’s problems\n[Tests] fix tests for IE 8\n\n\n\n1.17.3 / 2020-01-19\n\n[Fix] ObjectCreate 2015+: Fall back to __proto__ and normal new in older browsers\n[Fix] GetIntrinsic: ensure the allowMissing property actually works on dotted intrinsics\n\n\n\n1.17.2 / 2020-01-14\n\n[Fix] helpers/OwnPropertyKeys: include non-enumerables too\n\n\n\n1.17.1 / 2020-01-14\n\n[Refactor] add OwnPropertyKeys helper, use it in CopyDataProperties\n[Refactor] IteratorClose: remove useless assignment\n[Dev Deps] update eslint, tape, diff\n\n\n\n1.17.0 / 2019-12-20\n\n[New] Split up each operation into its own file (prereleased)\n[Fix] GetIntrinsic: IE 8 has a broken Object.getOwnPropertyDescriptor\n[Fix] object.assign is a runtime dep (prereleased)\n[Refactor] GetIntrinsic: remove the internal property salts, since % already handles that\n[Refactor] GetIntrinsic: further simplification\n[Deps] update is-callable, string.prototype.trimleft, string.prototype.trimright, is-regex\n[Dev Deps] update @ljharb/eslint-config, object-is, object.fromentries, tape\n[Tests] add .eslintignore\n[meta] remove unused Makefile and associated utils\n[meta] only run spackle script in publish (#78) (prereleased)\n\n\n\n1.17.0-next.1 / 2019-12-11\n\n[Fix] object.assign is a runtime dep\n[meta] only run spackle script in publish (#78)\n\n\n\n1.17.0-next.0 / 2019-12-11\n\n[New] Split up each operation into its own file\n\n\n\n1.16.3 / 2019-12-04\n\n[Fix] GetIntrinsic: when given a path to a getter, return the actual getter\n[Dev Deps] update eslint\n\n\n\n1.16.2 / 2019-11-24\n\n[Fix] IE 6-7 lack JSON\n[Fix] IE 6-8 strings can’t use array slice, they need string slice\n[Dev Deps] update eslint\n\n\n\n1.16.1 / 2019-11-24\n\n[Fix] GetIntrinsics: turns out IE 8 throws when Object.getOwnPropertyDescriptor(arguments);, and does not throw on callee anyways\n[Deps] update es-to-primitive, has-symbols, object-inspect\n[Dev Deps] update eslint, @ljharb/eslint-config, safe-publish-latest\n[meta] re-include year files inside operations\n[meta] add funding field\n[actions] add Automatic Rebase github action\n[Tests] use shared travis-ci config\n[Tests] disable check-coverage, and let codecov do it\n\n\n\n1.16.0 / 2019-10-18\n\n[New] ES2015+: add SetFunctionName\n[New] ES2015+: add GetPrototypeFromConstructor, with caveats\n[New] ES2015+: add CreateListFromArrayLike\n[New] ES2016+: add OrdinarySetPrototypeOf\n[New] ES2016+: add OrdinaryGetPrototypeOf\n[New] add getSymbolDescription and getInferredName helpers\n[Fix] GetIterator: add fallback for pre-Symbol environments, tests\n[Dev Deps] update object.fromentries\n[Tests] add node v12.2\n\n\n\n1.15.0 / 2019-10-02\n\n[New] ES2018+: add DateString, TimeString\n[New] ES2015+: add ToDateString\n[New] ES5+: add msFromTime, SecFromTime, MinFromTime, HourFromTime, TimeWithinDay, Day, DayFromYear, TimeFromYear, YearFromTime, WeekDay, DaysInYear, InLeapYear, DayWithinYear, MonthFromTime, DateFromTime, MakeDay, MakeDate, MakeTime, TimeClip, modulo\n[New] add regexTester helper\n[New] add callBound helper\n[New] add ES2020’s intrinsic dot notation\n[New] add isPrefixOf helper\n[New] add maxSafeInteger helper\n[Deps] update string.prototype.trimleft, string.prototype.trimright\n[Dev Deps] update eslint\n[Tests] on node v12.11\n[meta] npmignore operations scripts; add “deltas”\n\n\n\n1.14.2 / 2019-09-08\n\n[Fix] ES2016: IterableToArrayLike: add proper fallback for strings, pre-Symbols\n[Tests] on node v12.10\n\n\n\n1.14.1 / 2019-09-03\n\n[meta] republish with some extra files removed\n\n\n\n1.14.0 / 2019-09-02\n\n[New] add ES2019\n[New] ES2017+: add IterableToList\n[New] ES2016: add IterableToArrayLike\n[New] ES2015+: add ArrayCreate, ArraySetLength, OrdinaryDefineOwnProperty, OrdinaryGetOwnProperty, OrdinaryHasProperty, CreateHTML, GetOwnPropertyKeys, InstanceofOperator, SymbolDescriptiveString, GetSubstitution, ValidateAndApplyPropertyDescriptor, IsPromise, OrdinaryHasInstance, TestIntegrityLevel, SetIntegrityLevel\n[New] add callBind helper, and use it\n[New] add helpers: isPropertyDescriptor, every\n[New] ES5+: add Abstract Relational Comparison\n[New] ES5+: add Abstract Equality Comparison, Strict Equality Comparison\n[Fix] ES2015+: GetIterator: only require native Symbols when method is omitted\n[Fix] ES2015: Call: error message now properly displays Symbols using object-inspect\n[Fix] ES2015+: ValidateAndApplyPropertyDescriptor: use ES2017 logic to bypass spec bugs\n[Fix] ES2015+: CreateDataProperty, DefinePropertyOrThrow, ValidateAndApplyPropertyDescriptor: add fallbacks for ES3\n[Fix] ES2015+: FromPropertyDescriptor: no longer requires a fully complete Property Descriptor\n[Fix] ES5: IsPropertyDescriptor: call into IsDataDescriptor and IsAccessorDescriptor\n[Refactor] use has-symbols for Symbol detection\n[Fix] helpers/assertRecord: remove console.log\n[Deps] update object-keys\n[readme] add security note\n[meta] change http URLs to https\n[meta] linter cleanup\n[meta] fix getOps script\n[meta] add FUNDING.yml\n[Dev Deps] update eslint, @ljharb/eslint-config, safe-publish-latest, semver, replace, cheerio, tape\n[Tests] up to node v12.9, v11.15, v10.16, v8.16, v6.17\n[Tests] temporarily allow node 0.6 to fail; segfaulting in travis\n[Tests] use the values helper more in es5 tests\n[Tests] fix linting to apply to all files\n[Tests] run npx aud only on prod deps\n[Tests] add v.descriptors helpers\n[Tests] use npx aud instead of npm audit with hoops\n[Tests] use eclint instead of editorconfig-tools\n[Tests] some intrinsic cleanup\n[Tests] migrate es5 tests to use values helper\n[Tests] add some missing ES2015 ops\n\n\n\n1.13.0 / 2019-01-02\n\n[New] add ES2018\n[New] add ES2015/ES2016: EnumerableOwnNames; ES2017: EnumerableOwnProperties\n[New] ES2015+: add thisBooleanValue, thisNumberValue, thisStringValue, thisTimeValue\n[New] ES2015+: add DefinePropertyOrThrow, DeletePropertyOrThrow, CreateMethodProperty\n[New] add assertRecord helper\n[Deps] update is-callable, has, object-keys, es-to-primitive\n[Dev Deps] update eslint, @ljharb/eslint-config, tape, semver, safe-publish-latest, replace\n[Tests] use npm audit instead of nsp\n[Tests] remove jscs\n[Tests] up to node v11.6, v10.15, v8.15, v6.16\n[Tests] move descriptor factories to values helper\n[Tests] add getOps to programmatically fetch abstract operation names\n\n\n\n1.12.0 / 2018-05-31\n\n[New] add GetIntrinsic entry point\n[New] ES2015+: add ObjectCreate\n\n\n\n\n1.11.0 / 2018-03-21\n\n[New] ES2015+: add iterator abstract ops\n[Dev Deps] update eslint, nsp, object.assign, semver, tape\n[Tests] up to node v9.8, v8.10, v6.13\n\n\n\n1.10.0 / 2017-11-24\n\n[New] ES2015+: AdvanceStringIndex\n[Dev Deps] update eslint, nsp\n[Tests] require node 0.6 to pass again\n[Tests] up to node v9.2, v8.9, v6.12; use nvm install-latest-npm; pin included builds to LTS\n\n\n\n1.9.0 / 2017-09-30\n\n[New] es2015+: add ArraySpeciesCreate\n[New] ES2015+: add CreateDataProperty and CreateDataPropertyOrThrow\n[Tests] consolidate duplicated tests\n[Tests] increase coverage\n[Dev Deps] update nsp, eslint\n\n\n\n1.8.2 / 2017-09-03\n\n[Fix] es2015+: ToNumber: provide the proper hint for Date objects (#27)\n[Dev Deps] update eslint\n\n\n\n1.8.1 / 2017-08-30\n\n[Fix] ES2015+: ToPropertyKey: should return a symbol for Symbols (#26)\n[Deps] update function-bind\n[Dev Deps] update eslint, @ljharb/eslint-config\n[Docs] github broke markdown parsing\n\n\n\n1.8.0 / 2017-08-04\n\n[New] add ES2017\n[New] move es6+ to es2015+; leave es6/es7 as aliases\n[New] ES5+: add IsPropertyDescriptor, IsAccessorDescriptor, IsDataDescriptor, IsGenericDescriptor, FromPropertyDescriptor, ToPropertyDescriptor\n[New] ES2015+: add CompletePropertyDescriptor, Set, HasOwnProperty, HasProperty, IsConcatSpreadable, Invoke, CreateIterResultObject, RegExpExec\n[Fix] es7/es2016: do not mutate ES6\n[Fix] assign helper only supports one source\n[Deps] update is-regex\n[Dev Deps] update nsp, eslint, @ljharb/eslint-config\n[Dev Deps] update eslint, @ljharb/eslint-config, nsp, semver, tape\n[Tests] add tests for missing and excess operations\n[Tests] add codecov for coverage\n[Tests] up to node v8.2, v7.10, v6.11, v4.8; newer npm breaks on older node\n[Tests] use same lists of value types across tests; ensure tests are the same when ops are the same\n[Tests] ES2015: add ToNumber symbol tests\n[Tests] switch to nyc for code coverage\n[Tests] make IsRegExp tests consistent across editions\n\n\n\n1.7.0 / 2017-01-22\n\n[New] ES6: Add GetMethod (#16)\n[New] ES6: Add GetV (#16)\n[New] ES6: Add Get (#17)\n[Tests] up to node v7.4, v6.9, v4.6; improve test matrix\n[Dev Deps] update tape, nsp, eslint, @ljharb/eslint-config, safe-publish-latest\n\n\n\n1.6.1 / 2016-08-21\n\n[Fix] ES6: IsConstructor should return true for class constructors.\n\n\n\n1.6.0 / 2016-08-20\n\n[New] ES5 / ES6: add Type\n[New] ES6: SpeciesConstructor\n[Dev Deps] update jscs, nsp, eslint, @ljharb/eslint-config, semver; add safe-publish-latest\n[Tests] up to node v6.4, v5.12, v4.5\n\n\n\n1.5.1 / 2016-05-30\n\n[Fix] ES.IsRegExp: actually look up Symbol.match on the argument\n[Refactor] create isNaN helper\n[Deps] update is-callable, function-bind\n[Deps] update es-to-primitive, fix ES5 tests\n[Dev Deps] update jscs, eslint, @ljharb/eslint-config, tape, nsp\n[Tests] up to node v6.2, v5.11, v4.4\n[Tests] use pretest/posttest for linting/security\n\n\n\n1.5.0 / 2015-12-27\n\n[New] adds Symbol.toPrimitive support via es-to-primitive\n[Deps] update is-callable, es-to-primitive\n[Dev Deps] update jscs, nsp, eslint, @ljharb/eslint-config, semver, tape\n[Tests] up to node v5.3\n\n\n\n1.4.3 / 2015-11-04\n\n[Fix] ES6.ToNumber: should give NaN for explicitly signed hex strings (#4)\n[Refactor] ES6.ToNumber: No need to double-trim\n[Refactor] group tests better\n[Tests] should still pass on node v0.8\n\n\n\n1.4.2 / 2015-11-02\n\n[Fix] ensure ES.ToNumber trims whitespace, and does not trim non-whitespace (#3)\n\n\n\n1.4.1 / 2015-10-31\n\n[Fix] ensure only 0-1 are valid binary and 0-7 are valid octal digits (#2)\n[Dev Deps] update tape, jscs, nsp, eslint, @ljharb/eslint-config\n[Tests] on node v5.0\n[Tests] fix npm upgrades for older node versions\npackage.json: use object form of “authors”, add “contributors”\n\n\n\n1.4.0 / 2015-09-26\n\n[Deps] update is-callable\n[Dev Deps] update tape, jscs, eslint, @ljharb/eslint-config\n[Tests] on node v4.2\n[New] Add SameValueNonNumber to ES7\n\n\n\n1.3.2 / 2015-09-26\n\n[Fix] Fix ES6.IsRegExp to properly handle Symbol.match, per spec.\n[Tests] up to io.js v3.3, node v4.1\n[Dev Deps] update tape, jscs, nsp, eslint, @ljharb/eslint-config, semver\n\n\n\n1.3.1 / 2015-08-15\n\n[Fix] Ensure that objects that toString to a binary or octal literal also convert properly\n\n\n\n1.3.0 / 2015-08-15\n\n[New] ES6’s ToNumber now supports binary and octal literals.\n[Dev Deps] update jscs, eslint, @ljharb/eslint-config, tape\n[Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG\n[Tests] up to io.js v3.0\n\n\n\n1.2.2 / 2015-07-28\n\n[Fix] Both ES5.CheckObjectCoercible and ES6.RequireObjectCoercible return the value if they don’t throw.\n[Tests] Test on latest io.js versions.\n[Dev Deps] Update eslint, jscs, tape, semver, covert, nsp\n\n\n\n1.2.1 / 2015-03-20\n\nFix isFinite helper.\n\n\n\n1.2.0 / 2015-03-19\n\nUse es-to-primitive for ToPrimitive methods.\nTest on latest io.js versions; allow failures on all but 2 latest node/io.js versions.\n\n\n\n1.1.2 / 2015-03-20\n\nFix isFinite helper.\n\n\n\n1.1.1 / 2015-03-19\n\nFix isPrimitive check for functions\nUpdate eslint, editorconfig-tools, semver, nsp\n\n\n\n1.1.0 / 2015-02-17\n\nAdd ES7 export (non-default).\nAll grade A-supported node/iojs versions now ship with an npm that understands ^.\nTest on iojs-v1.2.\n\n\n\n1.0.1 / 2015-01-30\n\nUse is-callable instead of an internal function.\nUpdate tape, jscs, nsp, eslint\n\n\n\n1.0.0 / 2015-01-10\n\nv1.0.0"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/es-abstract/node_modules/object.assign/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/es-abstract/node_modules/object.assign/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "4.1.2 / 2020-10-30\n\n[Refactor] use extracted call-bind instead of full es-abstract\n[Dev Deps] update eslint, ses, browserify\n[Tests] run tests in SES\n[Tests] ses-compat: show error stacks\n\n\n\n4.1.1 / 2020-09-11\n\n[Fix] avoid mutating Object.assign in modern engines\n[Refactor] use callBind from es-abstract instead of function-bind\n[Deps] update has-symbols, object-keys, define-properties\n[meta] add funding field, FUNDING.yml\n[Dev Deps] update eslint, @ljharb/eslint-config, @es-shims/api, browserify, covert, for-each, is, tape, functions-have-names; add aud, safe-publish-latest; remove jscs\n[actions] add Require Allow Edits workflow\n[actions] add automatic rebasing / merge commit blocking\n[Tests] ses-compat - add test to ensure package initializes correctly after ses lockdown (#77)\n[Tests] Add passing test for a source of window.location (#68)\n[Tests] use shared travis-ci config\n[Tests] use npx aud instead of npm audit with hoops or nsp\n[Tests] use functions-have-names\n\n\n\n4.1.0 / 2017-12-21\n\n[New] add auto entry point (#52)\n[Refactor] Use has-symbols module\n[Deps] update function-bind, object-keys\n[Dev Deps] update @es-shims/api, browserify, nsp, eslint, @ljharb/eslint-config, is\n[Tests] up to node v9.3, v8.9, v6.12; use nvm install-latest-npm; pin included builds to LTS\n\n\n\n4.0.4 / 2016-07-04\n\n[Fix] Cache original getOwnPropertySymbols, and use that when Object.getOwnPropertySymbols is unavailable\n[Deps] update object-keys\n[Dev Deps] update eslint, get-own-property-symbols, core-js, jscs, nsp, browserify, @ljharb/eslint-config, tape, @es-shims/api\n[Tests] up to node v6.2, v5.10, v4.4\n[Tests] run sham tests on node 0.10\n[Tests] use pretest/posttest for linting/security\n\n\n\n4.0.3 / 2015-10-21\n\n[Fix] Support core-js’s Symbol sham (#17)\n[Fix] Ensure that properties removed or made non-enumerable during enumeration are not assigned (#16)\n[Fix] Avoid looking up keys and values more than once\n[Tests] Avoid using reduce so npm run test:shams:corejs passes in node v0.8 (core-js#122)\n[Tests] Refactor to use my conventional structure that separates shimmed, implementation, and common tests\n[Tests] Create npm run test:shams and better organize tests for symbol shams\n[Tests] Remove nsp in favor of requiresafe\n\n\n\n4.0.2 / 2015-10-20\n\n[Fix] Ensure correct property enumeration order, particularly in v8 (#15)\n[Deps] update object-keys, define-properties\n[Dev Deps] update browserify, is, tape, jscs, eslint, @ljharb/eslint-config\n[Tests] up to io.js v3.3, node v4.2\n\n\n\n4.0.1 / 2015-08-16\n\n[Docs] Add Symbol note to readme\n\n\n\n4.0.0 / 2015-08-15\n\n[Breaking] Implement the es-shim API.\n[Robustness] Make implementation robust against later modification of environment methods.\n[Refactor] Move implementation to implementation.js\n[Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG\n[Deps] update object-keys, define-properties\n[Dev Deps] update browserify, tape, eslint, jscs, browserify\n[Tests] Add npm run tests-only\n[Tests] use my personal shared eslint config.\n[Tests] up to io.js v3.0\n\n\n\n3.0.1 / 2015-06-28\n\nCache Object and Array#push to make the shim more robust.\n[Fix] Remove use of Array#filter, which isn’t in ES3.\n[Deps] Update object-keys, define-properties\n[Dev Deps] Update get-own-property-symbols, browserify, eslint, nsp\n[Tests] Test up to io.js v2.3\n[Tests] Adding Object.assign tests for non-object targets, per https://github.com/paulmillr/es6-shim/issues/348\n\n\n\n3.0.0 / 2015-05-20\n\nAttempt to feature-detect Symbols, even if typeof Symbol() !== 'symbol' (#12)\nMake a separate hasSymbols internal module\nUpdate browserify, eslint\n\n\n\n2.0.3 / 2015-06-28\n\nCache Object and Array#push to make the shim more robust.\n[Fix] Remove use of Array#filter, which isn’t in ES3\n[Deps] Update object-keys, define-properties\n[Dev Deps] Update browserify, nsp, eslint\n[Tests] Test up to io.js v2.3\n\n\n\n2.0.2 / 2015-05-20\n\nMake sure .shim is non-enumerable.\nRefactor .shim implementation to use define-properties predicates, rather than deleteing the original.\nUpdate docs to match spec/implementation. (#11)\nAdd npm run eslint\nTest up to io.js v2.0\nUpdate jscs, browserify, covert\n\n\n\n2.0.1 / 2015-04-12\n\nMake sure non-enumerable Symbols are excluded.\n\n\n\n2.0.0 / 2015-04-12\n\nMake sure the shim function overwrites a broken implementation with pending exceptions.\nEnsure shim is not enumerable using define-properties\nEnsure Object.assign includes symbols.\nAll grade A-supported node/iojs versions now ship with an npm that understands ^.\nRun travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures.\nAdd npm run security via nsp\nUpdate browserify, jscs, tape, object-keys, is\n\n\n\n1.1.1 / 2014-12-14\n\nActually include the browser build in npm\n\n\n\n1.1.0 / 2014-12-14\n\nAdd npm run build, and build an automatic-shimming browser distribution as part of the npm publish process.\nUpdate is, jscs\n\n\n\n1.0.3 / 2014-11-29\n\nRevert “optimize –production installs”\n\n\n\n1.0.2 / 2014-11-27\n\nUpdate jscs, is, object-keys, tape\nAdd badges to README\nName URLs in README\nLock covert to v1.0.0\nOptimize –production installs\n\n\n\n1.0.1 / 2014-08-26\n\nUpdate is, covert\n\n\n\n1.0.0 / 2014-08-07\n\nUpdate object-keys, tape\n\n\n\n0.5.0 / 2014-07-31\n\nObject.assign no longer throws on null or undefined sources, per https://bugs.ecmascript.org/show_bug.cgi?id=3096\n\n\n\n0.4.3 / 2014-07-30\n\nDon’t modify vars in the function signature, since it deoptimizes v8\n\n\n\n0.4.2 / 2014-07-30\n\nFixing the version number: v0.4.2\n\n\n\n0.4.1 / 2014-07-19\n\nRevert “Use the native Object.keys if it’s available.”\n\n\n\n0.4.0 / 2014-07-19\n\nUse the native Object.keys if it’s available.\nFixes #2.\nAdding failing tests for #2.\nFix indentation.\nAdding npm run lint\nUpdate tape, covert\nREADME: Use SVG badge for Travis #1 from mathiasbynens/patch-1\n\n\n\n0.3.1 / 2014-04-10\n\nObject.assign does partially modify objects if it throws, per https://twitter.com/awbjs/status/454320863093862400\n\n\n\n0.3.0 / 2014-04-10\n\nUpdate with newest ES6 behavior - Object.assign now takes a variable number of source objects.\nUpdate tape\nMake sure old and unstable nodes don’t fail Travis\n\n\n\n0.2.1 / 2014-03-16\n\nLet object-keys handle the fallback\nUpdate dependency badges\nAdding bower.json\n\n\n\n0.2.0 / 2014-03-16\n\nUse a for loop, because ES3 browsers don’t have “reduce”\n\n\n\n0.1.1 / 2014-03-14\n\nUpdating readme\n\n\n\n0.1.0 / 2014-03-14\n\nInitial release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "BSD 3-Clause License\nCopyright (c) 2014, Nathan LaFreniere and other contributors All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "6.10.3",
    "text": "6.10.3\n\n[Fix] parse: ignore __proto__ keys (#428)\n[Robustness] stringify: avoid relying on a global undefined (#427)\n[actions] reuse common workflows\n[Dev Deps] update eslint, @ljharb/eslint-config, object-inspect, tape"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "6.10.2",
    "text": "6.10.2\n\n[Fix] stringify: actually fix cyclic references (#426)\n[Fix] stringify: avoid encoding arrayformat comma when encodeValuesOnly = true (#424)\n[readme] remove travis badge; add github actions/codecov badges; update URLs\n[Docs] add note and links for coercing primitive values (#408)\n[actions] update codecov uploader\n[actions] update workflows\n[Tests] clean up stringify tests slightly\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, object-inspect, safe-publish-latest, tape"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "6.10.1",
    "text": "6.10.1\n\n[Fix] stringify: avoid exception on repeated object values (#402)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "6.10.0",
    "text": "6.10.0\n\n[New] stringify: throw on cycles, instead of an infinite loop (#395, #394, #393)\n[New] parse: add allowSparse option for collapsing arrays with missing indices (#312)\n[meta] fix README.md (#399)\n[meta] only run npm run dist in publish, not install\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, has-symbols, tape\n[Tests] fix tests on node v0.6\n[Tests] use ljharb/actions/node/install instead of ljharb/actions/node/run\n[Tests] Revert “[meta] ignore eclint transitive audit warning”"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "6.9.6",
    "text": "6.9.6\n\n[Fix] restore dist dir; mistakenly removed in d4f6c32"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "6.9.5",
    "text": "6.9.5\n\n[Fix] stringify: do not encode parens for RFC1738\n[Fix] stringify: fix arrayFormat comma with empty array/objects (#350)\n[Refactor] format: remove util.assign call\n[meta] add “Allow Edits” workflow; update rebase workflow\n[actions] switch Automatic Rebase workflow to pull_request_target event\n[Tests] stringify: add tests for #378\n[Tests] migrate tests to Github Actions\n[Tests] run nyc on all tests; use tape runner\n[Dev Deps] update eslint, @ljharb/eslint-config, browserify, mkdirp, object-inspect, tape; add aud"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "6.9.4",
    "text": "6.9.4\n\n[Fix] stringify: when arrayFormat is comma, respect serializeDate (#364)\n[Refactor] stringify: reduce branching (part of #350)\n[Refactor] move maybeMap to utils\n[Dev Deps] update browserify, tape"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "6.9.3",
    "text": "6.9.3\n\n[Fix] proper comma parsing of URL-encoded commas (#361)\n[Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "6.9.2",
    "text": "6.9.2\n\n[Fix] parse: Fix parsing array from object with comma true (#359)\n[Fix] parse: throw a TypeError instead of an Error for bad charset (#349)\n[meta] ignore eclint transitive audit warning\n[meta] fix indentation in package.json\n[meta] add tidelift marketing copy\n[Dev Deps] update eslint, @ljharb/eslint-config, object-inspect, has-symbols, tape, mkdirp, iconv-lite\n[actions] add automatic rebasing / merge commit blocking"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "6.9.1",
    "text": "6.9.1\n\n[Fix] parse: with comma true, handle field that holds an array of arrays (#335)\n[Fix] parse: with comma true, do not split non-string values (#334)\n[meta] add funding field\n[Dev Deps] update eslint, @ljharb/eslint-config\n[Tests] use shared travis-ci config"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "6.9.0",
    "text": "6.9.0\n\n[New] parse/stringify: Pass extra key/value argument to decoder (#333)\n[Dev Deps] update eslint, @ljharb/eslint-config, evalmd\n[Tests] parse: add passing arrayFormat tests\n[Tests] add posttest using npx aud to run npm audit without a lockfile\n[Tests] up to node v12.10, v11.15, v10.16, v8.16\n[Tests] Buffer.from in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "6.8.2",
    "text": "6.8.2\n\n[Fix] proper comma parsing of URL-encoded commas (#361)\n[Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "6.8.1",
    "text": "6.8.1\n\n[Fix] parse: Fix parsing array from object with comma true (#359)\n[Fix] parse: throw a TypeError instead of an Error for bad charset (#349)\n[Fix] parse: with comma true, handle field that holds an array of arrays (#335)\n[fix] parse: with comma true, do not split non-string values (#334)\n[meta] add tidelift marketing copy\n[meta] add funding field\n[Dev Deps] update eslint, @ljharb/eslint-config, tape, safe-publish-latest, evalmd, has-symbols, iconv-lite, mkdirp, object-inspect\n[Tests] parse: add passing arrayFormat tests\n[Tests] use shared travis-ci configs\n[Tests] Buffer.from in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray\n[actions] add automatic rebasing / merge commit blocking"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "6.8.0",
    "text": "6.8.0\n\n[New] add depth=false to preserve the original key; [Fix] depth=0 should preserve the original key (#326)\n[New] [Fix] stringify symbols and bigints\n[Fix] ensure node 0.12 can stringify Symbols\n[Fix] fix for an impossible situation: when the formatter is called with a non-string value\n[Refactor] formats: tiny bit of cleanup.\n[Dev Deps] update eslint, @ljharb/eslint-config, browserify, safe-publish-latest, iconv-lite, tape\n[Tests] add tests for depth=0 and depth=false behavior, both current and intuitive/intended (#326)\n[Tests] use eclint instead of editorconfig-tools\n[docs] readme: add security note\n[meta] add github sponsorship\n[meta] add FUNDING.yml\n[meta] Clean up license text so it’s properly detected as BSD-3-Clause"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "6.7.2",
    "text": "6.7.2\n\n[Fix] proper comma parsing of URL-encoded commas (#361)\n[Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "6.7.1",
    "text": "6.7.1\n\n[Fix] parse: Fix parsing array from object with comma true (#359)\n[Fix] parse: with comma true, handle field that holds an array of arrays (#335)\n[fix] parse: with comma true, do not split non-string values (#334)\n[Fix] parse: throw a TypeError instead of an Error for bad charset (#349)\n[Fix] fix for an impossible situation: when the formatter is called with a non-string value\n[Refactor] formats: tiny bit of cleanup.\nreadme: add security note\n[meta] add tidelift marketing copy\n[meta] add funding field\n[meta] add FUNDING.yml\n[meta] Clean up license text so it’s properly detected as BSD-3-Clause\n[Dev Deps] update eslint, @ljharb/eslint-config, tape, safe-publish-latest, evalmd, iconv-lite, mkdirp, object-inspect, browserify\n[Tests] parse: add passing arrayFormat tests\n[Tests] use shared travis-ci configs\n[Tests] Buffer.from in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray\n[Tests] add tests for depth=0 and depth=false behavior, both current and intuitive/intended\n[Tests] use eclint instead of editorconfig-tools\n[actions] add automatic rebasing / merge commit blocking"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "6.7.0",
    "text": "6.7.0\n\n[New] stringify/parse: add comma as an arrayFormat option (#276, #219)\n[Fix] correctly parse nested arrays (#212)\n[Fix] utils.merge: avoid a crash with a null target and a truthy non-array source, also with an array source\n[Robustness] stringify: cache Object.prototype.hasOwnProperty\n[Refactor] utils: isBuffer: small tweak; add tests\n[Refactor] use cached Array.isArray\n[Refactor] parse/stringify: make a function to normalize the options\n[Refactor] utils: reduce observable [[Get]]s\n[Refactor] stringify/utils: cache Array.isArray\n[Tests] always use String(x) over x.toString()\n[Tests] fix Buffer tests to work in node < 4.5 and node < 5.10\n[Tests] temporarily allow coverage to fail"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "6.6.0",
    "text": "6.6.0\n\n[New] Add support for iso-8859-1, utf8 “sentinel” and numeric entities (#268)\n[New] move two-value combine to a utils function (#189)\n[Fix] stringify: fix a crash with strictNullHandling and a custom filter/serializeDate (#279)\n[Fix] when parseArrays is false, properly handle keys ending in [] (#260)\n[Fix] stringify: do not crash in an obscure combo of interpretNumericEntities, a bad custom decoder, & iso-8859-1\n[Fix] utils: merge: fix crash when source is a truthy primitive & no options are provided\n[refactor] stringify: Avoid arr = arr.concat(…), push to the existing instance (#269)\n[Refactor] parse: only need to reassign the var once\n[Refactor] parse/stringify: clean up charset options checking; fix defaults\n[Refactor] add missing defaults\n[Refactor] parse: one less concat call\n[Refactor] utils: compactQueue: make it explicitly side-effecting\n[Dev Deps] update browserify, eslint, @ljharb/eslint-config, iconv-lite, safe-publish-latest, tape\n[Tests] up to node v10.10, v9.11, v8.12, v6.14, v4.9; pin included builds to LTS"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "6.5.2",
    "text": "6.5.2\n\n[Fix] use safer-buffer instead of Buffer constructor\n[Refactor] utils: module.exports one thing, instead of mutating exports (#230)\n[Dev Deps] update browserify, eslint, iconv-lite, safer-buffer, tape, browserify"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "6.5.1",
    "text": "6.5.1\n\n[Fix] Fix parsing & compacting very deep objects (#224)\n[Refactor] name utils functions\n[Dev Deps] update eslint, @ljharb/eslint-config, tape\n[Tests] up to node v8.4; use nvm install-latest-npm so newer npm doesn’t break older node\n[Tests] Use precise dist for Node.js 0.6 runtime (#225)\n[Tests] make 0.6 required, now that it’s passing\n[Tests] on node v8.2; fix npm on node 0.6"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "6.5.0",
    "text": "6.5.0\n\n[New] add utils.assign\n[New] pass default encoder/decoder to custom encoder/decoder functions (#206)\n[New] parse/stringify: add ignoreQueryPrefix/addQueryPrefix options, respectively (#213)\n[Fix] Handle stringifying empty objects with addQueryPrefix (#217)\n[Fix] do not mutate options argument (#207)\n[Refactor] parse: cache index to reuse in else statement (#182)\n[Docs] add various badges to readme (#208)\n[Dev Deps] update eslint, browserify, iconv-lite, tape\n[Tests] up to node v8.1, v7.10, v6.11; npm v4.6 breaks on node < v1; npm v5+ breaks on node < v4\n[Tests] add editorconfig-tools"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "6.4.0",
    "text": "6.4.0\n\n[New] qs.stringify: add encodeValuesOnly option\n[Fix] follow allowPrototypes option during merge (#201, #201)\n[Fix] support keys starting with brackets (#202, #200)\n[Fix] chmod a-x\n[Dev Deps] update eslint\n[Tests] up to node v7.7, v6.10,v4.8; disable osx builds since they block linux builds\n[eslint] reduce warnings"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "6.3.2",
    "text": "6.3.2\n\n[Fix] follow allowPrototypes option during merge (#201, #200)\n[Dev Deps] update eslint\n[Fix] chmod a-x\n[Fix] support keys starting with brackets (#202, #200)\n[Tests] up to node v7.7, v6.10,v4.8; disable osx builds since they block linux builds"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-23",
    "title": "3327 Research",
    "section": "6.3.1",
    "text": "6.3.1\n\n[Fix] ensure that allowPrototypes: false does not ever shadow Object.prototype properties (thanks, @snyk!)\n[Dev Deps] update eslint, @ljharb/eslint-config, browserify, iconv-lite, qs-iconv, tape\n[Tests] on all node minors; improve test matrix\n[Docs] document stringify option allowDots (#195)\n[Docs] add empty object and array values example (#195)\n[Docs] Fix minor inconsistency/typo (#192)\n[Docs] document stringify option sort (#191)\n[Refactor] stringify: throw faster with an invalid encoder\n[Refactor] remove unnecessary escapes (#184)\nRemove contributing.md, since qs is no longer part of hapi (#183)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-24",
    "title": "3327 Research",
    "section": "6.3.0",
    "text": "6.3.0\n\n[New] Add support for RFC 1738 (#174, #173)\n[New] stringify: Add serializeDate option to customize Date serialization (#159)\n[Fix] ensure utils.merge handles merging two arrays\n[Refactor] only constructors should be capitalized\n[Refactor] capitalized var names are for constructors only\n[Refactor] avoid using a sparse array\n[Robustness] formats: cache String#replace\n[Dev Deps] update browserify, eslint, @ljharb/eslint-config; add safe-publish-latest\n[Tests] up to node v6.8, v4.6; improve test matrix\n[Tests] flesh out arrayLimit/arrayFormat tests (#107)\n[Tests] skip Object.create tests when null objects are not available\n[Tests] Turn on eslint for test files (#175)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-25",
    "title": "3327 Research",
    "section": "6.2.3",
    "text": "6.2.3\n\n[Fix] follow allowPrototypes option during merge (#201, #200)\n[Fix] chmod a-x\n[Fix] support keys starting with brackets (#202, #200)\n[Tests] up to node v7.7, v6.10,v4.8; disable osx builds since they block linux builds"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-26",
    "title": "3327 Research",
    "section": "6.2.2",
    "text": "6.2.2\n\n[Fix] ensure that allowPrototypes: false does not ever shadow Object.prototype properties"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-27",
    "title": "3327 Research",
    "section": "6.2.1",
    "text": "6.2.1\n\n[Fix] ensure key[]=x&key[]&key[]=y results in 3, not 2, values\n[Refactor] Be explicit and use Object.prototype.hasOwnProperty.call\n[Tests] remove parallelshell since it does not reliably report failures\n[Tests] up to node v6.3, v5.12\n[Dev Deps] update tape, eslint, @ljharb/eslint-config, qs-iconv"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-28",
    "title": "3327 Research",
    "section": "6.2.0",
    "text": "6.2.0\n\n[New] pass Buffers to the encoder/decoder directly (#161)\n[New] add “encoder” and “decoder” options, for custom param encoding/decoding (#160)\n[Fix] fix compacting of nested sparse arrays (#150)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-29",
    "title": "3327 Research",
    "section": "**6.1.2",
    "text": "**6.1.2\n\n[Fix] follow allowPrototypes option during merge (#201, #200)\n[Fix] chmod a-x\n[Fix] support keys starting with brackets (#202, #200)\n[Tests] up to node v7.7, v6.10,v4.8; disable osx builds since they block linux builds"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-30",
    "title": "3327 Research",
    "section": "6.1.1",
    "text": "6.1.1\n\n[Fix] ensure that allowPrototypes: false does not ever shadow Object.prototype properties"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-31",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-31",
    "title": "3327 Research",
    "section": "6.1.0",
    "text": "6.1.0\n\n[New] allowDots option for stringify (#151)\n[Fix] “sort” option should work at a depth of 3 or more (#151)\n[Fix] Restore dist directory; will be removed in v7 (#148)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-32",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-32",
    "title": "3327 Research",
    "section": "6.0.4",
    "text": "6.0.4\n\n[Fix] follow allowPrototypes option during merge (#201, #200)\n[Fix] chmod a-x\n[Fix] support keys starting with brackets (#202, #200)\n[Tests] up to node v7.7, v6.10,v4.8; disable osx builds since they block linux builds"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-33",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-33",
    "title": "3327 Research",
    "section": "6.0.3",
    "text": "6.0.3\n\n[Fix] ensure that allowPrototypes: false does not ever shadow Object.prototype properties\n[Fix] Restore dist directory; will be removed in v7 (#148)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-34",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-34",
    "title": "3327 Research",
    "section": "6.0.2",
    "text": "6.0.2\n\nRevert ES6 requirement and restore support for node down to v0.8."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-35",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-35",
    "title": "3327 Research",
    "section": "6.0.1",
    "text": "6.0.1\n\n#127 Fix engines definition in package.json"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-36",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-36",
    "title": "3327 Research",
    "section": "6.0.0",
    "text": "6.0.0\n\n#124 Use ES6 and drop support for node < v4"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-37",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-37",
    "title": "3327 Research",
    "section": "5.2.1",
    "text": "5.2.1\n\n[Fix] ensure key[]=x&key[]&key[]=y results in 3, not 2, values"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-38",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-38",
    "title": "3327 Research",
    "section": "5.2.0",
    "text": "5.2.0\n\n#64 Add option to sort object keys in the query string"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-39",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-39",
    "title": "3327 Research",
    "section": "5.1.0",
    "text": "5.1.0\n\n#117 make URI encoding stringified results optional\n#106 Add flag skipNulls to optionally skip null values in stringify"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-40",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-40",
    "title": "3327 Research",
    "section": "5.0.0",
    "text": "5.0.0\n\n#114 default allowDots to false\n#100 include dist to npm"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-41",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-41",
    "title": "3327 Research",
    "section": "4.0.0",
    "text": "4.0.0\n\n#98 make returning plain objects and allowing prototype overwriting properties optional"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-42",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-42",
    "title": "3327 Research",
    "section": "3.1.0",
    "text": "3.1.0\n\n#89 Add option to disable “Transform dot notation to bracket notation”"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-43",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-43",
    "title": "3327 Research",
    "section": "3.0.0",
    "text": "3.0.0\n\n#80 qs.parse silently drops properties\n#77 Perf boost\n#60 Add explicit option to disable array parsing\n#74 Bad parse when turning array into object\n#81 Add a filter option\n#68 Fixed issue with recursion and passing strings into objects.\n#66 Add mixed array and object dot notation support Closes: #47\n#76 RFC 3986\n#85 No equal sign\n#84 update license attribute"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-44",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-44",
    "title": "3327 Research",
    "section": "2.4.1",
    "text": "2.4.1\n\n#73 Property ‘hasOwnProperty’ of object # is not a function\n\n\n\n2.4.0\n\n#70 Add arrayFormat option\n\n\n\n2.3.3\n\n#59 make sure array indexes are >= 0, closes #57\n#58 make qs usable for browser loader\n\n\n\n2.3.2\n\n#55 allow merging a string into an object\n\n\n\n2.3.1\n\n#52 Return “undefined” and “false” instead of throwing “TypeError”.\n\n\n\n2.3.0\n\n#50 add option to omit array indices, closes #46\n\n\n\n2.2.5\n\n#39 Is there an alternative to Buffer.isBuffer?\n#49 refactor utils.merge, fixes #45\n#41 avoid browserifying Buffer, for #39\n\n\n\n2.2.4\n\n#38 how to handle object keys beginning with a number\n\n\n\n2.2.3\n\n#37 parser discards first empty value in array\n#36 Update to lab 4.x\n\n\n\n2.2.2\n\n#33 Error when plain object in a value\n#34 use Object.prototype.hasOwnProperty.call instead of obj.hasOwnProperty\n#24 Changelog? Semver?\n\n\n\n2.2.1\n\n#32 account for circular references properly, closes #31\n#31 qs.parse stackoverflow on circular objects\n\n\n\n2.2.0\n\n#26 Don’t use Buffer global if it’s not present\n#30 Bug when merging non-object values into arrays\n#29 Don’t call Utils.clone at the top of Utils.merge\n#23 Ability to not limit parameters?\n\n\n\n2.1.0\n\n#22 Enable using a RegExp as delimiter\n\n\n\n2.0.0\n\n#18 Why is there arrayLimit?\n#20 Configurable parametersLimit\n#21 make all limits optional, for #18, for #20\n\n\n\n1.2.2\n\n#19 Don’t overwrite null values\n\n\n\n1.2.1\n\n#16 ignore non-string delimiters\n#15 Close code block\n\n\n\n1.2.0\n\n#12 Add optional delim argument\n#13 fix #11: flattened keys in array are now correctly parsed\n\n\n\n1.1.0\n\n#7 Empty values of a POST array disappear after being submitted\n#9 Should not omit equals signs (=) when value is null\n#6 Minor grammar fix in README\n\n\n\n1.0.2\n\n#5 array holes incorrectly copied into object on large index\n\n\n\n\n \n\n\n \n\n  \n    Proudly supported by    \n      \n        \n    \n    About"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-45",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-45",
    "title": "3327 Research",
    "section": "2.4.0",
    "text": "2.4.0\n\n#70 Add arrayFormat option"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-46",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-46",
    "title": "3327 Research",
    "section": "2.3.3",
    "text": "2.3.3\n\n#59 make sure array indexes are >= 0, closes #57\n#58 make qs usable for browser loader"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-47",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-47",
    "title": "3327 Research",
    "section": "2.3.2",
    "text": "2.3.2\n\n#55 allow merging a string into an object"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-48",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-48",
    "title": "3327 Research",
    "section": "2.3.1",
    "text": "2.3.1\n\n#52 Return “undefined” and “false” instead of throwing “TypeError”."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-49",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-49",
    "title": "3327 Research",
    "section": "2.3.0",
    "text": "2.3.0\n\n#50 add option to omit array indices, closes #46"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-50",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-50",
    "title": "3327 Research",
    "section": "2.2.5",
    "text": "2.2.5\n\n#39 Is there an alternative to Buffer.isBuffer?\n#49 refactor utils.merge, fixes #45\n#41 avoid browserifying Buffer, for #39"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-51",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-51",
    "title": "3327 Research",
    "section": "2.2.4",
    "text": "2.2.4\n\n#38 how to handle object keys beginning with a number"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-52",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-52",
    "title": "3327 Research",
    "section": "2.2.3",
    "text": "2.2.3\n\n#37 parser discards first empty value in array\n#36 Update to lab 4.x"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-53",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-53",
    "title": "3327 Research",
    "section": "2.2.2",
    "text": "2.2.2\n\n#33 Error when plain object in a value\n#34 use Object.prototype.hasOwnProperty.call instead of obj.hasOwnProperty\n#24 Changelog? Semver?"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-54",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-54",
    "title": "3327 Research",
    "section": "2.2.1",
    "text": "2.2.1\n\n#32 account for circular references properly, closes #31\n#31 qs.parse stackoverflow on circular objects"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-55",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-55",
    "title": "3327 Research",
    "section": "2.2.0",
    "text": "2.2.0\n\n#26 Don’t use Buffer global if it’s not present\n#30 Bug when merging non-object values into arrays\n#29 Don’t call Utils.clone at the top of Utils.merge\n#23 Ability to not limit parameters?"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-56",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-56",
    "title": "3327 Research",
    "section": "2.1.0",
    "text": "2.1.0\n\n#22 Enable using a RegExp as delimiter"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-57",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-57",
    "title": "3327 Research",
    "section": "2.0.0",
    "text": "2.0.0\n\n#18 Why is there arrayLimit?\n#20 Configurable parametersLimit\n#21 make all limits optional, for #18, for #20"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-58",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-58",
    "title": "3327 Research",
    "section": "1.2.2",
    "text": "1.2.2\n\n#19 Don’t overwrite null values"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-59",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-59",
    "title": "3327 Research",
    "section": "1.2.1",
    "text": "1.2.1\n\n#16 ignore non-string delimiters\n#15 Close code block"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-60",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-60",
    "title": "3327 Research",
    "section": "1.2.0",
    "text": "1.2.0\n\n#12 Add optional delim argument\n#13 fix #11: flattened keys in array are now correctly parsed"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-61",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-61",
    "title": "3327 Research",
    "section": "1.1.0",
    "text": "1.1.0\n\n#7 Empty values of a POST array disappear after being submitted\n#9 Should not omit equals signs (=) when value is null\n#6 Minor grammar fix in README"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-62",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/qs/CHANGELOG.html#section-62",
    "title": "3327 Research",
    "section": "1.0.2",
    "text": "1.0.2\n\n#5 array holes incorrectly copied into object on large index"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "3.13.1 / 2019-04-05",
    "text": "3.13.1 / 2019-04-05\n\nFix possible code execution in (already unsafe) .load(), #480."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "3.13.0 / 2019-03-20",
    "text": "3.13.0 / 2019-03-20\n\nSecurity fix: safeLoad() can hang when arrays with nested refs used as key. Now throws exception for nested arrays. #475."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "3.12.2 / 2019-02-26",
    "text": "3.12.2 / 2019-02-26\n\nFix noArrayIndent option for root level, #468."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "3.12.1 / 2019-01-05",
    "text": "3.12.1 / 2019-01-05\n\nAdded noArrayIndent option, #432."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "3.12.0 / 2018-06-02",
    "text": "3.12.0 / 2018-06-02\n\nSupport arrow functions without a block statement, #421."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "3.11.0 / 2018-03-05",
    "text": "3.11.0 / 2018-03-05\n\nFix dump in bin/octal/hex formats for negative integers, #399.\nAdd arrow functions suport for !!js/function."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "3.10.0 / 2017-09-10",
    "text": "3.10.0 / 2017-09-10\n\nFix condenseFlow output (quote keys for sure, instead of spaces), #371, #370.\nDump astrals as codepoints instead of surrogate pair, #368."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "3.9.1 / 2017-07-08",
    "text": "3.9.1 / 2017-07-08\n\nEnsure stack is present for custom errors in node 7.+, #351."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "3.9.0 / 2017-07-08",
    "text": "3.9.0 / 2017-07-08\n\nAdd condenseFlow option (to create pretty URL query params), #346.\nSupport array return from safeLoadAll/loadAll, #350."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "3.8.4 / 2017-05-08",
    "text": "3.8.4 / 2017-05-08\n\nDumper: prevent space after dash for arrays that wrap, #343."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "3.8.3 / 2017-04-05",
    "text": "3.8.3 / 2017-04-05\n\nShould not allow numbers to begin and end with underscore, #335."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "3.8.2 / 2017-03-02",
    "text": "3.8.2 / 2017-03-02\n\nFix !!float 123 (integers) parse, #333.\nDon’t allow leading zeros in floats (except 0, 0.xxx).\nAllow positive exponent without sign in floats."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "3.8.1 / 2017-02-07",
    "text": "3.8.1 / 2017-02-07\n\nMaintenance: update browserified build."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "3.8.0 / 2017-02-07",
    "text": "3.8.0 / 2017-02-07\n\nFix reported position for duplicated mapping key errors. Now points to block start instead of block end. (#243, thanks to @shockey)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "3.7.0 / 2016-11-12",
    "text": "3.7.0 / 2016-11-12\n\nFix parsing of quotes followed by newlines (#304, thanks to @dplepage).\nSupport polymorphism for tags (#300, thanks to @monken)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "3.6.1 / 2016-05-11",
    "text": "3.6.1 / 2016-05-11\n\nFix output cut on a pipe, #286."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "3.6.0 / 2016-04-16",
    "text": "3.6.0 / 2016-04-16\n\nDumper rewrite, fix multiple bugs with trailing \\n. Big thanks to @aepsilon!\nLoader: fix leading/trailing newlines in block scalars, @aepsilon."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "3.5.5 / 2016-03-17",
    "text": "3.5.5 / 2016-03-17\n\nDate parse fix: don’t allow dates with on digit in month and day, #268."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "3.5.4 / 2016-03-09",
    "text": "3.5.4 / 2016-03-09\n\nnoCompatMode for dumper, to disable quoting YAML 1.1 values."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "3.5.3 / 2016-02-11",
    "text": "3.5.3 / 2016-02-11\n\nMaintenance release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "3.5.2 / 2016-01-11",
    "text": "3.5.2 / 2016-01-11\n\nMaintenance: missed comma in bower config."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "3.5.1 / 2016-01-11",
    "text": "3.5.1 / 2016-01-11\n\nRemoved inherit dependency, #239.\nBetter browserify workaround for esprima load.\nDemo rewrite."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "3.5.0 / 2016-01-10",
    "text": "3.5.0 / 2016-01-10\n\nDumper. Fold strings only, #217.\nDumper. norefs option, to clone linked objects, #229.\nLoader. Throw a warning for duplicate keys, #166.\nImproved browserify support (mark esprima & Buffer excluded)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-23",
    "title": "3327 Research",
    "section": "3.4.6 / 2015-11-26",
    "text": "3.4.6 / 2015-11-26\n\nUse standalone inherit to keep browserified files clear."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-24",
    "title": "3327 Research",
    "section": "3.4.5 / 2015-11-23",
    "text": "3.4.5 / 2015-11-23\n\nAdded lineWidth option to dumper."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-25",
    "title": "3327 Research",
    "section": "3.4.4 / 2015-11-21",
    "text": "3.4.4 / 2015-11-21\n\nFixed floats dump (missed dot for scientific format), #220.\nAllow non-printable characters inside quoted scalars, #192."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-26",
    "title": "3327 Research",
    "section": "3.4.3 / 2015-10-10",
    "text": "3.4.3 / 2015-10-10\n\nMaintenance release - deps bump (esprima, argparse)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-27",
    "title": "3327 Research",
    "section": "3.4.2 / 2015-09-09",
    "text": "3.4.2 / 2015-09-09\n\nFixed serialization of duplicated entries in sequences, #205. Thanks to @vogelsgesang."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-28",
    "title": "3327 Research",
    "section": "3.4.1 / 2015-09-05",
    "text": "3.4.1 / 2015-09-05\n\nFixed stacktrace handling in generated errors, for browsers (FF/IE)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-29",
    "title": "3327 Research",
    "section": "3.4.0 / 2015-08-23",
    "text": "3.4.0 / 2015-08-23\n\nFixed multiline keys dump, #197. Thanks to @tcr.\nDon’t throw on warnongs anymore. Use onWarning option to catch.\nThrow error on unknown tags (was warning before).\nFixed heading line breaks in some scalars (regression).\nReworked internals of error class."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-30",
    "title": "3327 Research",
    "section": "3.3.1 / 2015-05-13",
    "text": "3.3.1 / 2015-05-13\n\nAdded .sortKeys dumper option, thanks to @rjmunro.\nFixed astral characters support, #191."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-31",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-31",
    "title": "3327 Research",
    "section": "3.3.0 / 2015-04-26",
    "text": "3.3.0 / 2015-04-26\n\nSignificantly improved long strings formatting in dumper, thanks to @isaacs.\nStrip BOM if exists."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-32",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-32",
    "title": "3327 Research",
    "section": "3.2.7 / 2015-02-19",
    "text": "3.2.7 / 2015-02-19\n\nMaintenance release.\nUpdated dependencies.\nHISTORY.md -> CHANGELOG.md"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-33",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-33",
    "title": "3327 Research",
    "section": "3.2.6 / 2015-02-07",
    "text": "3.2.6 / 2015-02-07\n\nFixed encoding of UTF-16 surrogate pairs. (e.g. “001F431” CAT FACE).\nFixed demo dates dump (#113, thanks to @Hypercubed)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-34",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-34",
    "title": "3327 Research",
    "section": "3.2.5 / 2014-12-28",
    "text": "3.2.5 / 2014-12-28\n\nFixed resolving of all built-in types on empty nodes.\nFixed invalid warning on empty lines within quoted scalars and flow collections.\nFixed bug: Tag on an empty node didn’t resolve in some cases."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-35",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-35",
    "title": "3327 Research",
    "section": "3.2.4 / 2014-12-19",
    "text": "3.2.4 / 2014-12-19\n\nFixed resolving of !!null tag on an empty node."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-36",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-36",
    "title": "3327 Research",
    "section": "3.2.3 / 2014-11-08",
    "text": "3.2.3 / 2014-11-08\n\nImplemented dumping of objects with circular and cross references.\nPartially fixed aliasing of constructed objects. (see issue #141 for details)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-37",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-37",
    "title": "3327 Research",
    "section": "3.2.2 / 2014-09-07",
    "text": "3.2.2 / 2014-09-07\n\nFixed infinite loop on unindented block scalars.\nRewritten base64 encode/decode in binary type, to keep code licence clear."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-38",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-38",
    "title": "3327 Research",
    "section": "3.2.1 / 2014-08-24",
    "text": "3.2.1 / 2014-08-24\n\nNothig new. Just fix npm publish error."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-39",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-39",
    "title": "3327 Research",
    "section": "3.2.0 / 2014-08-24",
    "text": "3.2.0 / 2014-08-24\n\nAdded input piping support to CLI.\nFixed typo, that could cause hand on initial indent (#139)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-40",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-40",
    "title": "3327 Research",
    "section": "3.1.0 / 2014-07-07",
    "text": "3.1.0 / 2014-07-07\n\n1.5x-2x speed boost.\nRemoved deprecated require('xxx.yml') support.\nSignificant code cleanup and refactoring.\nInternal API changed. If you used custom types - see updated examples. Others are not affected.\nEven if the input string has no trailing line break character, it will be parsed as if it has one.\nAdded benchmark scripts.\nMoved bower files to /dist folder\nBugfixes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-41",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-41",
    "title": "3327 Research",
    "section": "3.0.2 / 2014-02-27",
    "text": "3.0.2 / 2014-02-27\n\nFixed bug: “constructor” string parsed as null."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-42",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-42",
    "title": "3327 Research",
    "section": "3.0.1 / 2013-12-22",
    "text": "3.0.1 / 2013-12-22\n\nFixed parsing of literal scalars. (issue #108)\nPrevented adding unnecessary spaces in object dumps. (issue #68)\nFixed dumping of objects with very long (> 1024 in length) keys."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-43",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-43",
    "title": "3327 Research",
    "section": "3.0.0 / 2013-12-16",
    "text": "3.0.0 / 2013-12-16\n\nRefactored code. Changed API for custom types.\nRemoved output colors in CLI, dump json by default.\nRemoved big dependencies from browser version (esprima, buffer)\n\nload esprima manually, if !!js/function needed\n!!bin now returns Array in browser\n\nAMD support.\nDon’t quote dumped strings because of - & ? (if not first char).\nDeprecated loading yaml files via require(), as not recommended behaviour for node."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-44",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-44",
    "title": "3327 Research",
    "section": "2.1.3 / 2013-10-16",
    "text": "2.1.3 / 2013-10-16\n\nFix wrong loading of empty block scalars."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-45",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-45",
    "title": "3327 Research",
    "section": "2.1.2 / 2013-10-07",
    "text": "2.1.2 / 2013-10-07\n\nFix unwanted line breaks in folded scalars."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-46",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-46",
    "title": "3327 Research",
    "section": "2.1.1 / 2013-10-02",
    "text": "2.1.1 / 2013-10-02\n\nDumper now respects deprecated booleans syntax from YAML 1.0/1.1\nFixed reader bug in JSON-like sequences/mappings."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-47",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-47",
    "title": "3327 Research",
    "section": "2.1.0 / 2013-06-05",
    "text": "2.1.0 / 2013-06-05\n\nAdd standard YAML schemas: Failsafe (FAILSAFE_SCHEMA), JSON (JSON_SCHEMA) and Core (CORE_SCHEMA).\nRename DEFAULT_SCHEMA to DEFAULT_FULL_SCHEMA and SAFE_SCHEMA to DEFAULT_SAFE_SCHEMA.\nBug fix: export NIL constant from the public interface.\nAdd skipInvalid dumper option.\nUse safeLoad for require extension."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-48",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-48",
    "title": "3327 Research",
    "section": "2.0.5 / 2013-04-26",
    "text": "2.0.5 / 2013-04-26\n\nClose security issue in !!js/function constructor. Big thanks to @nealpoole for security audit."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-49",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-49",
    "title": "3327 Research",
    "section": "2.0.4 / 2013-04-08",
    "text": "2.0.4 / 2013-04-08\n\nUpdated .npmignore to reduce package size"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-50",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-50",
    "title": "3327 Research",
    "section": "2.0.3 / 2013-02-26",
    "text": "2.0.3 / 2013-02-26\n\nFixed dumping of empty arrays ans objects. ([] and {} instead of null)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-51",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-51",
    "title": "3327 Research",
    "section": "2.0.2 / 2013-02-15",
    "text": "2.0.2 / 2013-02-15\n\nFixed input validation: tabs are printable characters."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-52",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-52",
    "title": "3327 Research",
    "section": "2.0.1 / 2013-02-09",
    "text": "2.0.1 / 2013-02-09\n\nFixed error, when options not passed to function cass"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-53",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-53",
    "title": "3327 Research",
    "section": "2.0.0 / 2013-02-09",
    "text": "2.0.0 / 2013-02-09\n\nFull rewrite. New architecture. Fast one-stage parsing.\nChanged custom types API.\nAdded YAML dumper."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-54",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-54",
    "title": "3327 Research",
    "section": "1.0.3 / 2012-11-05",
    "text": "1.0.3 / 2012-11-05\n\nFixed utf-8 files loading."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-55",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-55",
    "title": "3327 Research",
    "section": "1.0.2 / 2012-08-02",
    "text": "1.0.2 / 2012-08-02\n\nPull out hand-written shims. Use ES5-Shims for old browsers support. See #44.\nFix timstamps incorectly parsed in local time when no time part specified."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-56",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-56",
    "title": "3327 Research",
    "section": "1.0.1 / 2012-07-07",
    "text": "1.0.1 / 2012-07-07\n\nFixes TypeError: 'undefined' is not an object under Safari. Thanks Phuong.\nFix timestamps incorrectly parsed in local time. Thanks @caolan. Closes #46."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-57",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-57",
    "title": "3327 Research",
    "section": "1.0.0 / 2012-07-01",
    "text": "1.0.0 / 2012-07-01\n\ny, yes, n, no, on, off are not converted to Booleans anymore. Fixes #42.\nrequire(filename) now returns a single document and throws an Error if file contains more than one document.\nCLI was merged back from js-yaml.bin"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-58",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-58",
    "title": "3327 Research",
    "section": "0.3.7 / 2012-02-28",
    "text": "0.3.7 / 2012-02-28\n\nFix export of addConstructor(). Closes #39."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-59",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-59",
    "title": "3327 Research",
    "section": "0.3.6 / 2012-02-22",
    "text": "0.3.6 / 2012-02-22\n\nRemoved AMD parts - too buggy to use. Need help to rewrite from scratch\nRemoved YUI compressor warning (renamed double variable). Closes #40."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-60",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-60",
    "title": "3327 Research",
    "section": "0.3.5 / 2012-01-10",
    "text": "0.3.5 / 2012-01-10\n\nWorkagound for .npmignore fuckup under windows. Thanks to airportyh."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-61",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-61",
    "title": "3327 Research",
    "section": "0.3.4 / 2011-12-24",
    "text": "0.3.4 / 2011-12-24\n\nFixes str[] for oldIEs support.\nAdds better has change support for browserified demo.\nimproves compact output of Error. Closes #33."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-62",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-62",
    "title": "3327 Research",
    "section": "0.3.3 / 2011-12-20",
    "text": "0.3.3 / 2011-12-20\n\njsyaml executable moved to separate module.\nadds compact stringification of Errors."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-63",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-63",
    "title": "3327 Research",
    "section": "0.3.2 / 2011-12-16",
    "text": "0.3.2 / 2011-12-16\n\nFixes ug with block style scalars. Closes #26.\nAll sources are passing JSLint now.\nFixes bug in Safari. Closes #28.\nFixes bug in Opers. Closes #29.\nImproves browser support. Closes #20.\nAdded jsyaml executable.\nAdded !!js/function support. Closes #12."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-64",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-64",
    "title": "3327 Research",
    "section": "0.3.1 / 2011-11-18",
    "text": "0.3.1 / 2011-11-18\n\nAdded AMD support for browserified version.\nWrapped browserified js-yaml into closure.\nFixed the resolvement of non-specific tags. Closes #17.\nAdded permalinks for online demo YAML snippets. Now we have YPaste service, lol.\nAdded !!js/regexp and !!js/undefined types. Partially solves #12.\nFixed !!set mapping.\nFixed month parse in dates. Closes #19."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-65",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-65",
    "title": "3327 Research",
    "section": "0.3.0 / 2011-11-09",
    "text": "0.3.0 / 2011-11-09\n\nRemoved JS.Class dependency. Closes #3.\nAdded browserified version. Closes #13.\nAdded live demo of browserified version.\nPorted some of the PyYAML tests. See #14.\nFixed timestamp bug when fraction was given."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-66",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-66",
    "title": "3327 Research",
    "section": "0.2.2 / 2011-11-06",
    "text": "0.2.2 / 2011-11-06\n\nFixed crash on docs without —. Closes #8.\nFixed miltiline string parse\nFixed tests/comments for using array as key"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-67",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-67",
    "title": "3327 Research",
    "section": "0.2.1 / 2011-11-02",
    "text": "0.2.1 / 2011-11-02\n\nFixed short file read (<4k). Closes #9."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-68",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-yaml/CHANGELOG.html#section-68",
    "title": "3327 Research",
    "section": "0.2.0 / 2011-11-02",
    "text": "0.2.0 / 2011-11-02\n\nFirst public release"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#development",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#development",
    "title": "3327 Research",
    "section": "Development",
    "text": "Development\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v4.0.1---january-6th-2019",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v4.0.1---january-6th-2019",
    "title": "3327 Research",
    "section": "v4.0.1 - January 6th, 2019",
    "text": "v4.0.1 - January 6th, 2019\n\nFix main reference path - b826104\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v4.0.0---january-5th-2019",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v4.0.0---january-5th-2019",
    "title": "3327 Research",
    "section": "v4.0.0 - January 5th, 2019",
    "text": "v4.0.0 - January 5th, 2019\n\n#94 - Missing “No newline at end of file” when comparing two texts that do not end in newlines (@federicotdn)\n#227 - Licence\n#199 - Import statement for jsdiff\n#159 - applyPatch affecting wrong line number with with new lines\n#8 - A new state “replace”\nDrop ie9 from karma targets - 79c31bd\nUpgrade deps. Convert from webpack to rollup - 2c1a29c\nMake ()[]“’ as word boundaries between each other - f27b899\njsdiff: Replaced phantomJS by chrome - ec3114e\nAdd yarn.lock to .npmignore - 29466d8\n\nCompatibility notes: - Bower and Component packages no longer supported\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v3.5.0---march-4th-2018",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v3.5.0---march-4th-2018",
    "title": "3327 Research",
    "section": "v3.5.0 - March 4th, 2018",
    "text": "v3.5.0 - March 4th, 2018\n\nOmit redundant slice in join method of diffArrays - 1023590\nSupport patches with empty lines - fb0f208\nAccept a custom JSON replacer function for JSON diffing - 69c7f0a\nOptimize parch header parser - 2aec429\nFix typos - e89c832\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v3.4.0---october-7th-2017",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v3.4.0---october-7th-2017",
    "title": "3327 Research",
    "section": "v3.4.0 - October 7th, 2017",
    "text": "v3.4.0 - October 7th, 2017\n\n#183 - Feature request: ability to specify a custom equality checker for diffArrays\n#173 - Bug: diffArrays gives wrong result on array of booleans\n#158 - diffArrays will not compare the empty string in array?\ncomparator for custom equality checks - 30e141e\ncount oldLines and newLines when there are conflicts - 53bf384\nFix: diffArrays can compare falsey items - 9e24284\nDocs: Replace grunt with npm test - 00e2f94\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v3.3.1---september-3rd-2017",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v3.3.1---september-3rd-2017",
    "title": "3327 Research",
    "section": "v3.3.1 - September 3rd, 2017",
    "text": "v3.3.1 - September 3rd, 2017\n\n#141 - Cannot apply patch because my file delimiter is “/r/n” instead of “/n”\n#192 - Fix: Bad merge when adding new files (#189)\ncorrect spelling mistake - 21fa478\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v3.3.0---july-5th-2017",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v3.3.0---july-5th-2017",
    "title": "3327 Research",
    "section": "v3.3.0 - July 5th, 2017",
    "text": "v3.3.0 - July 5th, 2017\n\n#114 - /patch/merge not exported\nGracefully accept invalid newStart in hunks, same as patch(1) does. - d8a3635\nUse regex rather than starts/ends with for parsePatch - 6cab62c\nAdd browser flag - e64f674\nrefactor: simplified code a bit more - 8f8e0f2\nrefactor: simplified code a bit - b094a6f\nfix: some corrections re ignoreCase option - 3c78fd0\nignoreCase option - 3cbfbb5\nSanitize filename while parsing patches - 2fe8129\nAdded better installation methods - aced50b\nSimple export of functionality - 8690f31\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v3.2.0---december-26th-2016",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v3.2.0---december-26th-2016",
    "title": "3327 Research",
    "section": "v3.2.0 - December 26th, 2016",
    "text": "v3.2.0 - December 26th, 2016\n\n#156 - Add undefinedReplacement option to diffJson (@ewnd9)\n#154 - Add examples and images to .npmignore. (@wtgtybhertgeghgtwtg)\n#153 - feat(structuredPatch): Pass options to diffLines (@Kiougar)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v3.1.0---november-27th-2016",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v3.1.0---november-27th-2016",
    "title": "3327 Research",
    "section": "v3.1.0 - November 27th, 2016",
    "text": "v3.1.0 - November 27th, 2016\n\n#146 - JsDiff.diffArrays to compare arrays (@wvanderdeijl)\n#144 - Split file using all possible line delimiter instead of hard-coded “/n” and join lines back using the original delimiters (@soulbeing)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v3.0.1---october-9th-2016",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v3.0.1---october-9th-2016",
    "title": "3327 Research",
    "section": "v3.0.1 - October 9th, 2016",
    "text": "v3.0.1 - October 9th, 2016\n\n#139 - Make README.md look nicer in npmjs.com (@takenspc)\n#135 - parsePatch combines patches from multiple files into a single IUniDiff when there is no “Index” line (@ramya-rao-a)\n#124 - IE7/IE8 failure since 2.0.0 (@boneskull)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v3.0.0---august-23rd-2016",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v3.0.0---august-23rd-2016",
    "title": "3327 Research",
    "section": "v3.0.0 - August 23rd, 2016",
    "text": "v3.0.0 - August 23rd, 2016\n\n#130 - Add callback argument to applyPatches patched option (@piranna)\n#120 - Correctly handle file names containing spaces (@adius)\n#119 - Do single reflow (@wifiextender)\n#117 - Make more usable with long strings. (@abnbgist)\n\nCompatibility notes: - applyPatches patch callback now is async and requires the callback be called to continue operation\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.2.3---may-31st-2016",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.2.3---may-31st-2016",
    "title": "3327 Research",
    "section": "v2.2.3 - May 31st, 2016",
    "text": "v2.2.3 - May 31st, 2016\n\n#118 - Add a fix for applying 0-length destination patches (@chaaz)\n#115 - Fixed grammar in README (@krizalys)\n#113 - fix typo (@vmazare)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.2.2---march-13th-2016",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.2.2---march-13th-2016",
    "title": "3327 Research",
    "section": "v2.2.2 - March 13th, 2016",
    "text": "v2.2.2 - March 13th, 2016\n\n#102 - diffJson with dates, returns empty curly braces (@dr-dimitru)\n#97 - Whitespaces & diffWords (@faiwer)\n#92 - Fixes typo in the readme (@bg451)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.2.1---november-12th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.2.1---november-12th-2015",
    "title": "3327 Research",
    "section": "v2.2.1 - November 12th, 2015",
    "text": "v2.2.1 - November 12th, 2015\n\n#89 - add in display selector to readme (@FranDias)\n#88 - Split diffs based on file headers instead of ‘Index:’ metadata (@piranna)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.2.0---october-29th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.2.0---october-29th-2015",
    "title": "3327 Research",
    "section": "v2.2.0 - October 29th, 2015",
    "text": "v2.2.0 - October 29th, 2015\n\n#80 - Fix a typo: applyPath -> applyPatch (@fluxxu)\n#83 - Add basic fuzzy matching to applyPatch (@piranna) Commits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.2.0---october-29th-2015-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.2.0---october-29th-2015-1",
    "title": "3327 Research",
    "section": "v2.2.0 - October 29th, 2015",
    "text": "v2.2.0 - October 29th, 2015\n\n#80 - Fix a typo: applyPath -> applyPatch (@fluxxu)\n#83 - Add basic fuzzy matching to applyPatch (@piranna) Commits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.1.3---september-30th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.1.3---september-30th-2015",
    "title": "3327 Research",
    "section": "v2.1.3 - September 30th, 2015",
    "text": "v2.1.3 - September 30th, 2015\n\n#78 - fix: error throwing when apply patch to empty string (@21paradox)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.1.2---september-23rd-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.1.2---september-23rd-2015",
    "title": "3327 Research",
    "section": "v2.1.2 - September 23rd, 2015",
    "text": "v2.1.2 - September 23rd, 2015\n\n#76 - diff headers give error (@piranna)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.1.1---september-9th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.1.1---september-9th-2015",
    "title": "3327 Research",
    "section": "v2.1.1 - September 9th, 2015",
    "text": "v2.1.1 - September 9th, 2015\n\n#73 - Is applyPatches() exposed in the API? (@davidparsson)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.1.0---august-27th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.1.0---august-27th-2015",
    "title": "3327 Research",
    "section": "v2.1.0 - August 27th, 2015",
    "text": "v2.1.0 - August 27th, 2015\n\n#72 - Consider using options object API for flag permutations (@kpdecker)\n#70 - diffWords treats at the end as significant whitespace (@nesQuick)\n#69 - Missing count (@wfalkwallace)\n#68 - diffLines seems broken (@wfalkwallace)\n#60 - Support multiple diff hunks (@piranna)\n#54 - Feature Request: 3-way merge (@mog422)\n#42 - Fuzz factor for applyPatch (@stuartpb)\nMove whitespace ignore out of equals method - 542063c\nInclude source maps in babel output - 7f7ab21\nMerge diff/line and diff/patch implementations - 1597705\nDrop map utility method - 1ddc939\nDocumentation for parsePatch and applyPatches - 27c4b77\n\nCompatibility notes: - The undocumented ignoreWhitespace flag has been removed from the Diff equality check directly. This implementation may be copied to diff utilities if dependencies existed on this functionality.\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.0.2---august-8th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.0.2---august-8th-2015",
    "title": "3327 Research",
    "section": "v2.0.2 - August 8th, 2015",
    "text": "v2.0.2 - August 8th, 2015\n\n#67 - cannot require from npm module in node (@commenthol)\nConvert to chai since we don’t support IE8 - a96bbad\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.0.1---august-7th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.0.1---august-7th-2015",
    "title": "3327 Research",
    "section": "v2.0.1 - August 7th, 2015",
    "text": "v2.0.1 - August 7th, 2015\n\nAdd release build at proper step - 57542fd\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.0.0---august-7th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v2.0.0---august-7th-2015",
    "title": "3327 Research",
    "section": "v2.0.0 - August 7th, 2015",
    "text": "v2.0.0 - August 7th, 2015\n\n#66 - Add karma and sauce tests (@kpdecker)\n#65 - Create component repository for bower (@kpdecker)\n#64 - Automatically call removeEmpty for all tokenizer calls (@kpdecker)\n#62 - Allow access to structured object representation of patch data (@bittrance)\n#61 - Use svg instead of png to get better image quality (@PeterDaveHello)\n#29 - word tokenizer works only for 7 bit ascii (@plasmagunman)\n\nCompatibility notes: - this.removeEmpty is now called automatically for all instances. If this is not desired, this may be overridden on a per instance basis. - The library has been refactored to use some ES6 features. The external APIs should remain the same, but bower projects that directly referenced the repository will now have to point to the components/jsdiff repository.\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.4.0---may-6th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.4.0---may-6th-2015",
    "title": "3327 Research",
    "section": "v1.4.0 - May 6th, 2015",
    "text": "v1.4.0 - May 6th, 2015\n\n#57 - createPatch -> applyPatch failed. (@mog422)\n#56 - Two files patch (@rgeissert)\n#14 - Flip added and removed order? (@jakesandlund)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.3.2---march-30th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.3.2---march-30th-2015",
    "title": "3327 Research",
    "section": "v1.3.2 - March 30th, 2015",
    "text": "v1.3.2 - March 30th, 2015\n\n#53 - Updated README.MD with Bower installation instructions (@ofbriggs)\n#49 - Cannot read property ‘oldlines’ of undefined (@nwtn)\n#44 - invalid-meta jsdiff is missing “main” entry in bower.json\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.3.1---march-13th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.3.1---march-13th-2015",
    "title": "3327 Research",
    "section": "v1.3.1 - March 13th, 2015",
    "text": "v1.3.1 - March 13th, 2015\n\n#52 - Fix for #51 Wrong result of JsDiff.diffLines (@felicienfrancois)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.3.0---march-2nd-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.3.0---march-2nd-2015",
    "title": "3327 Research",
    "section": "v1.3.0 - March 2nd, 2015",
    "text": "v1.3.0 - March 2nd, 2015\n\n#47 - Adding Diff Trimmed Lines (@JamesGould123)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.2.2---january-26th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.2.2---january-26th-2015",
    "title": "3327 Research",
    "section": "v1.2.2 - January 26th, 2015",
    "text": "v1.2.2 - January 26th, 2015\n\n#45 - Fix AMD module loading (@pedrocarrico)\n#43 - added a bower file (@nbrustein)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.2.1---december-26th-2014",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.2.1---december-26th-2014",
    "title": "3327 Research",
    "section": "v1.2.1 - December 26th, 2014",
    "text": "v1.2.1 - December 26th, 2014\n\n#41 - change condition of using node export system. (@ironhee)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.2.0---november-29th-2014",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.2.0---november-29th-2014",
    "title": "3327 Research",
    "section": "v1.2.0 - November 29th, 2014",
    "text": "v1.2.0 - November 29th, 2014\n\n#37 - Add support for sentences. (@vmariano)\n#28 - Implemented diffJson (@papandreou)\n#27 - Slow to execute over diffs with a large number of changes (@termi)\nAllow for optional async diffing - 19385b9\nFix diffChars implementation - eaa44ed\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.1.0---november-25th-2014",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.1.0---november-25th-2014",
    "title": "3327 Research",
    "section": "v1.1.0 - November 25th, 2014",
    "text": "v1.1.0 - November 25th, 2014\n\n#33 - AMD and global exports (@ovcharik)\n#32 - Add support for component (@vmariano)\n#31 - Don’t rely on Array.prototype.map (@papandreou)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.0.8---december-22nd-2013",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.0.8---december-22nd-2013",
    "title": "3327 Research",
    "section": "v1.0.8 - December 22nd, 2013",
    "text": "v1.0.8 - December 22nd, 2013\n\n#24 - Handle windows newlines on non windows machines. (@benogle)\n#23 - Prettied up the API formatting a little, and added basic node and web examples (@airportyh)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.0.7---september-11th-2013",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.0.7---september-11th-2013",
    "title": "3327 Research",
    "section": "v1.0.7 - September 11th, 2013",
    "text": "v1.0.7 - September 11th, 2013\n\n#22 - Added variant of WordDiff that doesn’t ignore whitespace differences (@papandreou\nAdd 0.10 to travis tests - 243a526\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.0.6---august-30th-2013",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/release-notes.html#v1.0.6---august-30th-2013",
    "title": "3327 Research",
    "section": "v1.0.6 - August 30th, 2013",
    "text": "v1.0.6 - August 30th, 2013\n\n#19 - Explicitly define contents of npm package (@sindresorhus\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/CONTRIBUTING.html#pull-requests",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/CONTRIBUTING.html#pull-requests",
    "title": "3327 Research",
    "section": "Pull Requests",
    "text": "Pull Requests\nWe also accept pull requests!\nGenerally we like to see pull requests that\n\nMaintain the existing code style\nAre focused on a single change (i.e. avoid large refactoring or style adjustments in untouched code if not the primary goal of the pull request)\nHave good commit messages\nHave tests\nDon’t decrease the current code coverage (see coverage/lcov-report/index.html)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/CONTRIBUTING.html#building",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/CONTRIBUTING.html#building",
    "title": "3327 Research",
    "section": "Building",
    "text": "Building\nnpm install\nnpm test\nThe npm test -- dev implements watching for tests within Node and karma start may be used for manual testing in browsers.\nIf you notice any problems, please report them to the GitHub issue tracker at http://github.com/kpdecker/jsdiff/issues."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/CONTRIBUTING.html#releasing",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ts-node/node_modules/diff/CONTRIBUTING.html#releasing",
    "title": "3327 Research",
    "section": "Releasing",
    "text": "Releasing\nJsDiff utilizes the release yeoman generator to perform most release tasks.\nA full release may be completed with the following:\nyo release\nnpm publish"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl-util/AUTHORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl-util/AUTHORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "List of authors\nAlphabetical order by first name.\nFormat: Name (GitHub username or URL)\n\nAndSDev (@AndSDev)\nDmitry Chestnykh (@dchest)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethjs-util/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethjs-util/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "0.1.3 – less dependencies\n\nLess dependencies\nSmaller build size\nMore docs\n\n\n\n0.1.2 – config fixes\n\nwebpack config updates\nbuild config updates\n\n\n\n0.1.1 – less dependencies\n\nLess dependencies, same functionality\nMore tests\nMore docs\n\n\n\n0.0.5 – more config\n\nModule configuration for es5, webpack and dist builds\n\n\n\n0.0.4 – remove unused deps\n\nRemoved one unused dep\n\n\n\n0.0.3 – added some property to arrayContainsArray\n\nadded some property to arrayContainsArray, allows some array in another\n\n\n\n0.0.2 – added isHexString and getKeys\n\nadded isHexString method\nadded getKeys method util\n\n\n\n0.0.1 – ethjs-util\n\nBasic testing\nBasic docs\nLicense\nlinting\nbasic exports"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-binary-path/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-binary-path/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install is-binary-path"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-binary-path/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-binary-path/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst isBinaryPath = require('is-binary-path');\n\nisBinaryPath('source/unicorn.png');\n//=> true\n\nisBinaryPath('source/unicorn.txt');\n//=> false"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-binary-path/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-binary-path/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nbinary-extensions - List of binary file extensions\nis-text-path - Check if a filepath is a text file"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-binary-path/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-binary-path/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus, Paul Miller"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@cspotcode/source-map-support/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@cspotcode/source-map-support/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright (c) 2014 Evan Wallace\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/safer-buffer/Porting-Buffer.html#regarding-buffer.allocunsafe",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/safer-buffer/Porting-Buffer.html#regarding-buffer.allocunsafe",
    "title": "3327 Research",
    "section": "Regarding Buffer.allocUnsafe",
    "text": "Regarding Buffer.allocUnsafe\nBe extra cautious when using Buffer.allocUnsafe: * Don’t use it if you don’t have a good reason to * e.g. you probably won’t ever see a performance difference for small buffers, in fact, those might be even faster with Buffer.alloc(), * if your code is not in the hot code path — you also probably won’t notice a difference, * keep in mind that zero-filling minimizes the potential risks. * If you use it, make sure that you never return the buffer in a partially-filled state, * if you are writing to it sequentially — always truncate it to the actuall written length\nErrors in handling buffers allocated with Buffer.allocUnsafe could result in various issues, ranged from undefined behaviour of your code to sensitive data (user input, passwords, certs) leaking to the remote attacker.\nNote that the same applies to new Buffer usage without zero-filling, depending on the Node.js version (and lacking type checks also adds DoS to the list of potential problems).\n ## FAQ\n ### What is wrong with the Buffer constructor?\nThe Buffer constructor could be used to create a buffer in many different ways:\n\nnew Buffer(42) creates a Buffer of 42 bytes. Before Node.js 8, this buffer contained arbitrary memory for performance reasons, which could include anything ranging from program source code to passwords and encryption keys.\nnew Buffer('abc') creates a Buffer that contains the UTF-8-encoded version of the string 'abc'. A second argument could specify another encoding: For example, new Buffer(string, 'base64') could be used to convert a Base64 string into the original sequence of bytes that it represents.\nThere are several other combinations of arguments.\n\nThis meant that, in code like var buffer = new Buffer(foo);, it is not possible to tell what exactly the contents of the generated buffer are without knowing the type of foo.\nSometimes, the value of foo comes from an external source. For example, this function could be exposed as a service on a web server, converting a UTF-8 string into its Base64 form:\nfunction stringToBase64(req, res) {\n  // The request body should have the format of `{ string: 'foobar' }`\n  const rawBytes = new Buffer(req.body.string)\n  const encoded = rawBytes.toString('base64')\n  res.end({ encoded: encoded })\n}\nNote that this code does not validate the type of req.body.string:\n\nreq.body.string is expected to be a string. If this is the case, all goes well.\nreq.body.string is controlled by the client that sends the request.\nIf req.body.string is the number 50, the rawBytes would be 50 bytes:\n\nBefore Node.js 8, the content would be uninitialized\nAfter Node.js 8, the content would be 50 bytes with the value 0\n\n\nBecause of the missing type check, an attacker could intentionally send a number as part of the request. Using this, they can either:\n\nRead uninitialized memory. This will leak passwords, encryption keys and other kinds of sensitive information. (Information leak)\nForce the program to allocate a large amount of memory. For example, when specifying 500000000 as the input value, each request will allocate 500MB of memory. This can be used to either exhaust the memory available of a program completely and make it crash, or slow it down significantly. (Denial of Service)\n\nBoth of these scenarios are considered serious security issues in a real-world web server context.\nwhen using Buffer.from(req.body.string) instead, passing a number will always throw an exception instead, giving a controlled behaviour that can always be handled by the program.\n ### The Buffer() constructor has been deprecated for a while. Is this really an issue?\nSurveys of code in the npm ecosystem have shown that the Buffer() constructor is still widely used. This includes new code, and overall usage of such code has actually been increasing."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/safer-buffer/Readme.html#how-to-use",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/safer-buffer/Readme.html#how-to-use",
    "title": "3327 Research",
    "section": "How to use?",
    "text": "How to use?\nFirst, port all Buffer() and new Buffer() calls to Buffer.alloc() and Buffer.from() API.\nThen, to achieve compatibility with outdated Node.js versions (<4.5.0 and 5.x <5.9.0), use const Buffer = require('safer-buffer').Buffer in all files where you make calls to the new Buffer API. Use var instead of const if you need that for your Node.js version range support.\nAlso, see the porting Buffer guide."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/safer-buffer/Readme.html#do-i-need-it",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/safer-buffer/Readme.html#do-i-need-it",
    "title": "3327 Research",
    "section": "Do I need it?",
    "text": "Do I need it?\nHopefully, not — dropping support for outdated Node.js versions should be fine nowdays, and that is the recommended path forward. You do need to port to the Buffer.alloc() and Buffer.from() though.\nSee the porting guide for a better description."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/safer-buffer/Readme.html#why-not-safe-buffer",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/safer-buffer/Readme.html#why-not-safe-buffer",
    "title": "3327 Research",
    "section": "Why not safe-buffer?",
    "text": "Why not safe-buffer?\nIn short: while safe-buffer serves as a polyfill for the new API, it allows old API usage and itself contains footguns.\nsafe-buffer could be used safely to get the new API while still keeping support for older Node.js versions (like this module), but while analyzing ecosystem usage of the old Buffer API I found out that safe-buffer is itself causing problems in some cases.\nFor example, consider the following snippet:\n$ cat example.unsafe.js\nconsole.log(Buffer(20))\n$ ./node-v6.13.0-linux-x64/bin/node example.unsafe.js\n<Buffer 0a 00 00 00 00 00 00 00 28 13 de 02 00 00 00 00 05 00 00 00>\n$ standard example.unsafe.js\nstandard: Use JavaScript Standard Style (https://standardjs.com)\n  /home/chalker/repo/safer-buffer/example.unsafe.js:2:13: 'Buffer()' was deprecated since v6. Use 'Buffer.alloc()' or 'Buffer.from()' (use 'https://www.npmjs.com/package/safe-buffer' for '<4.5.0') instead.\nThis is allocates and writes to console an uninitialized chunk of memory. standard linter (among others) catch that and warn people to avoid using unsafe API.\nLet’s now throw in safe-buffer!\n$ cat example.safe-buffer.js\nconst Buffer = require('safe-buffer').Buffer\nconsole.log(Buffer(20))\n$ standard example.safe-buffer.js\n$ ./node-v6.13.0-linux-x64/bin/node example.safe-buffer.js\n<Buffer 08 00 00 00 00 00 00 00 28 58 01 82 fe 7f 00 00 00 00 00 00>\nSee the problem? Adding in safe-buffer magically removes the lint warning, but the behavior remains identiсal to what we had before, and when launched on Node.js 6.x LTS — this dumps out chunks of uninitialized memory. And this code will still emit runtime warnings on Node.js 10.x and above.\nThat was done by design. I first considered changing safe-buffer, prohibiting old API usage or emitting warnings on it, but that significantly diverges from safe-buffer design. After some discussion, it was decided to move my approach into a separate package, and this is that separate package.\nThis footgun is not imaginary — I observed top-downloaded packages doing that kind of thing, «fixing» the lint warning by blindly including safe-buffer without any actual changes.\nAlso in some cases, even if the API was migrated to use of safe Buffer API — a random pull request can bring unsafe Buffer API usage back to the codebase by adding new calls — and that could go unnoticed even if you have a linter prohibiting that (becase of the reason stated above), and even pass CI. I also observed that being done in popular packages.\nSome examples: * webdriverio (a module with 548 759 downloads/month), * websocket-stream (218 288 d/m, fix in maxogden/websocket-stream#142), * node-serialport (113 138 d/m, fix in node-serialport/node-serialport#1510), * karma (3 973 193 d/m, fix in karma-runner/karma#2947), * spdy-transport (5 970 727 d/m, fix in spdy-http2/spdy-transport#53). * And there are a lot more over the ecosystem.\nI filed a PR at mysticatea/eslint-plugin-node#110 to partially fix that (for cases when that lint rule is used), but it is a semver-major change for linter rules and presets, so it would take significant time for that to reach actual setups. It also hasn’t been released yet (2018-03-20).\nAlso, safer-buffer discourages the usage of .allocUnsafe(), which is often done by a mistake. It still supports it with an explicit concern barier, by placing it under require('safer-buffer/dangereous')."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/safer-buffer/Readme.html#but-isnt-throwing-bad",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/safer-buffer/Readme.html#but-isnt-throwing-bad",
    "title": "3327 Research",
    "section": "But isn’t throwing bad?",
    "text": "But isn’t throwing bad?\nNot really. It’s an error that could be noticed and fixed early, instead of causing havoc later like unguarded new Buffer() calls that end up receiving user input can do.\nThis package affects only the files where var Buffer = require('safer-buffer').Buffer was done, so it is really simple to keep track of things and make sure that you don’t mix old API usage with that. Also, CI should hint anything that you might have missed.\nNew commits, if tested, won’t land new usage of unsafe Buffer API this way. Node.js 10.x also deals with that by printing a runtime depecation warning.\n\nWould it affect third-party modules?\nNo, unless you explicitly do an awful thing like monkey-patching or overriding the built-in Buffer. Don’t do that.\n\n\nBut I don’t want throwing…\nThat is also fine!\nAlso, it could be better in some cases when you don’t comprehensive enough test coverage.\nIn that case — just don’t override Buffer and use var SaferBuffer = require('safer-buffer').Buffer instead.\nThat way, everything using Buffer natively would still work, but there would be two drawbacks:\n\nBuffer.from/Buffer.alloc won’t be polyfilled — use SaferBuffer.from and SaferBuffer.alloc instead.\nYou are still open to accidentally using the insecure deprecated API — use a linter to catch that.\n\nNote that using a linter to catch accidential Buffer constructor usage in this case is strongly recommended. Buffer is not overriden in this usecase, so linters won’t get confused."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/safer-buffer/Readme.html#without-footguns",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/safer-buffer/Readme.html#without-footguns",
    "title": "3327 Research",
    "section": "«Without footguns»?",
    "text": "«Without footguns»?\nWell, it is still possible to do some things with Buffer API, e.g. accessing .buffer property on older versions and duping things from there. You shouldn’t do that in your code, probabably.\nThe intention is to remove the most significant footguns that affect lots of packages in the ecosystem, and to do it in the proper way.\nAlso, this package doesn’t protect against security issues affecting some Node.js versions, so for usage in your own production code, it is still recommended to update to a Node.js version supported by upstream."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright © 2012-present Contributors.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "6.3.0 - 2019-10-13",
    "text": "6.3.0 - 2019-10-13\n\nAdded\n\nAdd manifest (Level/community#83) and encode compactRange() (#93) (@vweevers)\nAdd type property for reachdown (Level/community#82) (8a23848) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "6.2.0 - 2019-09-06",
    "text": "6.2.0 - 2019-09-06\n\nChanged\n\nUpgrade hallmark devDependency from ^0.1.0 to ^2.0.0 (#85, #91) (@vweevers)\nUpgrade standard devDependency from ^12.0.0 to ^14.0.0 (#84, #90) (@vweevers)\nUpgrade memdown devDependency from ^4.0.0 to ^5.0.0 (#88) (@vweevers)\n\n\n\nAdded\n\nSupport db.clear() (#89) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "6.1.0 - 2019-06-22",
    "text": "6.1.0 - 2019-06-22\n\nChanged\n\nUpgrade nyc devDependency from ^13.2.0 to ^14.0.0 (#81)) (@vweevers)\n\n\n\nAdded\n\nSupport seeking (#82, #83) (@MeirionHughes, @vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "6.0.2 - 2019-03-31",
    "text": "6.0.2 - 2019-03-31\n\nChanged\n\nUpgrade memdown devDependency from ^3.0.0 to ^4.0.0 (#80) (@vweevers)\nUpgrade nyc devDependency from ^12.0.2 to ^13.2.0 (#79) (@vweevers)\nApply common project tweaks (#77, #78) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "6.0.1 - 2018-12-27",
    "text": "6.0.1 - 2018-12-27\n\nChanged\n\nReplace remark-cli devDependency with hallmark (#76) (@vweevers)\n\n\n\nAdded\n\nIncrease coverage to 100% (#75) (@vweevers)\n\n\n\nFixed\n\nFix approximateSize() to encode start and end arguments (#75) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "6.0.0 - 2018-12-25",
    "text": "6.0.0 - 2018-12-25\n\nChanged\n\nPrefer const over var in README (@ralphtheninja)\nUpgrade abstract-leveldown dependency from ^5.0.0 to ^v6.0.0 (#68) (@ralphtheninja)\nUpgrade standard devDependency from ^11.0.0 to ^v12.0.0 (@ralphtheninja)\nUse full link references in README (#60) (@vweevers)\n\n\n\nAdded\n\nExplain serialization (#72) (@vweevers)\nAdd nyc and coveralls (#64) (@ralphtheninja)\n\n\n\nRemoved\n\nRemove node 9 (@ralphtheninja)\nRemove now superfluous _setupIteratorOptions() (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "5.0.4 - 2018-06-22",
    "text": "5.0.4 - 2018-06-22\n\nAdded\n\nAdd LICENSE.md (@ralphtheninja)\nAdd CONTRIBUTORS.md (@ralphtheninja)\nAdd remark tooling (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "5.0.3 - 2018-05-30",
    "text": "5.0.3 - 2018-05-30\n\nChanged\n\nReplace util.inherits with inherits module (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "5.0.2 - 2018-05-23",
    "text": "5.0.2 - 2018-05-23\n\nAdded\n\nAdd UPGRADING.md (@vweevers)\n\n\n\nChanged\n\nUpgrade abstract-leveldown to 5.0.0 (@ralphtheninja)\nUpgrade memdown to 3.0.0 (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "5.0.1 - 2018-05-19",
    "text": "5.0.1 - 2018-05-19\n\nChanged\n\nOverride _setupIteratorOptions to not clobber ranges (@ralphtheninja, @dominictarr)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "5.0.0 - 2018-05-13",
    "text": "5.0.0 - 2018-05-13\n\nAdded\n\nAdd 10 to Travis (@ralphtheninja)\n\n\n\nChanged\n\nUpdate level-errors to 2.0.0 (@ralphtheninja)\nUpdate level-codec to 9.0.0 (@ralphtheninja)\n\n\n\nRemoved\n\nRemove 4 from Travis (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "4.0.1 - 2018-05-19",
    "text": "4.0.1 - 2018-05-19\n\nChanged\n\nOverride _setupIteratorOptions to not clobber ranges (@ralphtheninja, @dominictarr)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "4.0.0 - 2018-02-12",
    "text": "4.0.0 - 2018-02-12\n\nAdded\n\nAdd 9 to Travis (@ralphtheninja)\n\n\n\nChanged\n\nUpdate abstract-leveldown to 4.0.0 (@ralphtheninja)\nUpdate memdown to 2.0.0 (@ralphtheninja)\n\n\n\nRemoved\n\nRemove 7 from Travis (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "3.0.1 - 2017-12-18",
    "text": "3.0.1 - 2017-12-18\n\nAdded\n\nTest that default utf8 encoding stringifies numbers (@vweevers)\n\n\n\nFixed\n\nSkip decoding if options.keys or options.values is false (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "3.0.0 - 2017-11-11",
    "text": "3.0.0 - 2017-11-11\n\nAdded\n\nREADME: add node badge (>= 4) (@vweevers)\n\n\n\nChanged\n\nUpdate abstract-leveldown to 3.0.0 (@ralphtheninja)\n\n\n\nRemoved\n\nRemove 0.12 from Travis (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "2.3.4 - 2017-10-24",
    "text": "2.3.4 - 2017-10-24\n\nAdded\n\nREADME: add example of npm installed encoding (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "2.3.3 - 2017-10-22",
    "text": "2.3.3 - 2017-10-22\n\nChanged\n\nREADME: fix level-codec links (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "2.3.2 - 2017-10-22",
    "text": "2.3.2 - 2017-10-22\n\nChanged\n\nREADME: tweak badges (@ralphtheninja)\nREADME: add more code examples (@vweevers)\nUpdate level-codec to 8.0.0 (@ralphtheninja)\n\n\n\nFixed\n\nFix problems related to missing asBuffer, keyAsBuffer and valueAsBuffer (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "2.3.1 - 2017-10-02",
    "text": "2.3.1 - 2017-10-02\n\nChanged\n\nRefactor typings (@MeirionHughes)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "2.3.0 - 2017-09-24",
    "text": "2.3.0 - 2017-09-24\n\nAdded\n\nAdd default export (@zixia)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "2.2.1 - 2017-09-13",
    "text": "2.2.1 - 2017-09-13\n\nFixed\n\nFix typings (@MeirionHughes)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "2.2.0 - 2017-09-12",
    "text": "2.2.0 - 2017-09-12\n\nAdded\n\nAdd Typescript typings (@MeirionHughes)\n\n\n\nChanged\n\nREADME: AbstractLevelDOWN -> abstract-leveldown (@ralphtheninja)\nUpdate abstract-leveldown (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "2.1.5 - 2017-08-18",
    "text": "2.1.5 - 2017-08-18\n\nAdded\n\nREADME: add api docs (@ralphtheninja)\nAdd basic tests (@ralphtheninja)\n\n\n\nChanged\n\nEnable Travis for ci (@ralphtheninja)\nUpdate dependencies (@ralphtheninja)\nUse safe-buffer (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-23",
    "title": "3327 Research",
    "section": "2.1.4 - 2017-01-26",
    "text": "2.1.4 - 2017-01-26\n\nFixed\n\nRename methods to _serializeKey() and _serializeValue() (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-24",
    "title": "3327 Research",
    "section": "2.1.3 - 2017-01-26",
    "text": "2.1.3 - 2017-01-26\n\nAdded\n\nAdd _encodeKey() and _encodeValue() id functions (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-25",
    "title": "3327 Research",
    "section": "2.1.2 - 2017-01-26",
    "text": "2.1.2 - 2017-01-26\n\nFixed\n\nEmit encoding errors in streams too (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-26",
    "title": "3327 Research",
    "section": "2.1.1 - 2017-01-26",
    "text": "2.1.1 - 2017-01-26\n\nFixed\n\nReturn encoding errors on get (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-27",
    "title": "3327 Research",
    "section": "2.1.0 - 2017-01-26",
    "text": "2.1.0 - 2017-01-26\n\nAdded\n\nAdd support for approximateSize() (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-28",
    "title": "3327 Research",
    "section": "2.0.8 - 2017-01-26",
    "text": "2.0.8 - 2017-01-26\n\nRemoved\n\nRemove Iterator.prototype.seek (@juliangruber)\n\n\n\nFixed\n\nFix encoding lt/get range options (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-29",
    "title": "3327 Research",
    "section": "2.0.7 - 2017-01-26",
    "text": "2.0.7 - 2017-01-26\n\nAdded\n\nAdd 'utf8' as default encoding (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-30",
    "title": "3327 Research",
    "section": "2.0.6 - 2017-01-26",
    "text": "2.0.6 - 2017-01-26\n\nFixed\n\nFix typof -> typeof bug (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-31",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-31",
    "title": "3327 Research",
    "section": "2.0.5 - 2017-01-26",
    "text": "2.0.5 - 2017-01-26\n\nFixed\n\nFix bug in iterator._next() with undefined key or value (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-32",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-32",
    "title": "3327 Research",
    "section": "2.0.4 - 2017-01-26",
    "text": "2.0.4 - 2017-01-26\n\nChanged\n\nUpdate level-codec for utf8 fixes (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-33",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-33",
    "title": "3327 Research",
    "section": "2.0.3 - 2017-01-26",
    "text": "2.0.3 - 2017-01-26\n\nFixed\n\nFix bug with incorrect db (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-34",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-34",
    "title": "3327 Research",
    "section": "2.0.2 - 2017-01-26",
    "text": "2.0.2 - 2017-01-26\n\nFixed\n\nFix bug with incorrect db and missing new operator (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-35",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-35",
    "title": "3327 Research",
    "section": "2.0.1 - 2017-01-26",
    "text": "2.0.1 - 2017-01-26\n\nFixed\n\nFix bug with AbstractChainedBatch inheritance (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-36",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-36",
    "title": "3327 Research",
    "section": "2.0.0 - 2017-01-26",
    "text": "2.0.0 - 2017-01-26\n\nChanged\n\nVersion bump (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-37",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CHANGELOG.html#section-37",
    "title": "3327 Research",
    "section": "1.0.0 - 2017-01-26",
    "text": "1.0.0 - 2017-01-26\n:seedling: Initial release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CONTRIBUTORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/CONTRIBUTORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "Contributors\n\n\n\nName\nGitHub\nSocial\n\n\n\n\nLars-Magnus Skog\n@ralphtheninja\n@ralph@social.weho.st\n\n\nVincent Weevers\n@vweevers\n@vweevers@twitter\n\n\nJulian Gruber\n@juliangruber\n@juliangruber@twitter\n\n\nMeirion Hughes\n@MeirionHughes\n\n\n\nHuan LI\n@zixia\n@zixia@twitter"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/UPGRADING.html#v6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/UPGRADING.html#v6",
    "title": "3327 Research",
    "section": "v6",
    "text": "v6\nUpgraded abstract-leveldown to v6.0.0. Please see the corresponding changelog entry for more information."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/UPGRADING.html#v5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/UPGRADING.html#v5",
    "title": "3327 Research",
    "section": "v5",
    "text": "v5\nDropped support for node 4. No other breaking changes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/UPGRADING.html#v4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/UPGRADING.html#v4",
    "title": "3327 Research",
    "section": "v4",
    "text": "v4\nDropped support for node 7.\n\n.batch(array) enforces objects\nThis major release contains an upgrade to abstract-leveldown with a breaking change for the array version of .batch(). This change ensures all elements in the batch array are objects.\nIf you previously passed arrays to .batch() that contained undefined or null, they would be silently ignored. Now this will produce an error."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/UPGRADING.html#v3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/encoding-down/UPGRADING.html#v3",
    "title": "3327 Research",
    "section": "v3",
    "text": "v3\nDropped support for node 0.12. No other breaking changes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-limit/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-limit/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install p-limit"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-limit/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-limit/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst pLimit = require('p-limit');\n\nconst limit = pLimit(1);\n\nconst input = [\n    limit(() => fetchSomething('foo')),\n    limit(() => fetchSomething('bar')),\n    limit(() => doSomething())\n];\n\n(async () => {\n    // Only one promise is run at once\n    const result = await Promise.all(input);\n    console.log(result);\n})();"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-limit/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-limit/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\npLimit(concurrency)\nReturns a limit function.\n\nconcurrency\nType: number Minimum: 1\nConcurrency limit.\n\n\n\nlimit(fn)\nReturns the promise returned by calling fn.\n\nfn\nType: Function\nPromise-returning/async function."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-limit/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-limit/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\np-queue - Promise queue with concurrency control\np-throttle - Throttle promise-returning & async functions\np-debounce - Debounce promise-returning & async functions\np-all - Run promise-returning & async functions concurrently with optional limited concurrency\nMore…"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-limit/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-limit/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#development",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#development",
    "title": "3327 Research",
    "section": "Development",
    "text": "Development\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.5.0---march-4th-2018",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.5.0---march-4th-2018",
    "title": "3327 Research",
    "section": "v3.5.0 - March 4th, 2018",
    "text": "v3.5.0 - March 4th, 2018\n\nOmit redundant slice in join method of diffArrays - 1023590\nSupport patches with empty lines - fb0f208\nAccept a custom JSON replacer function for JSON diffing - 69c7f0a\nOptimize parch header parser - 2aec429\nFix typos - e89c832\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.5.0---march-4th-2018-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.5.0---march-4th-2018-1",
    "title": "3327 Research",
    "section": "v3.5.0 - March 4th, 2018",
    "text": "v3.5.0 - March 4th, 2018\n\nOmit redundant slice in join method of diffArrays - 1023590\nSupport patches with empty lines - fb0f208\nAccept a custom JSON replacer function for JSON diffing - 69c7f0a\nOptimize parch header parser - 2aec429\nFix typos - e89c832\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.4.0---october-7th-2017",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.4.0---october-7th-2017",
    "title": "3327 Research",
    "section": "v3.4.0 - October 7th, 2017",
    "text": "v3.4.0 - October 7th, 2017\n\n#183 - Feature request: ability to specify a custom equality checker for diffArrays\n#173 - Bug: diffArrays gives wrong result on array of booleans\n#158 - diffArrays will not compare the empty string in array?\ncomparator for custom equality checks - 30e141e\ncount oldLines and newLines when there are conflicts - 53bf384\nFix: diffArrays can compare falsey items - 9e24284\nDocs: Replace grunt with npm test - 00e2f94\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.3.1---september-3rd-2017",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.3.1---september-3rd-2017",
    "title": "3327 Research",
    "section": "v3.3.1 - September 3rd, 2017",
    "text": "v3.3.1 - September 3rd, 2017\n\n#141 - Cannot apply patch because my file delimiter is “/r/n” instead of “/n”\n#192 - Fix: Bad merge when adding new files (#189)\ncorrect spelling mistake - 21fa478\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.3.0---july-5th-2017",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.3.0---july-5th-2017",
    "title": "3327 Research",
    "section": "v3.3.0 - July 5th, 2017",
    "text": "v3.3.0 - July 5th, 2017\n\n#114 - /patch/merge not exported\nGracefully accept invalid newStart in hunks, same as patch(1) does. - d8a3635\nUse regex rather than starts/ends with for parsePatch - 6cab62c\nAdd browser flag - e64f674\nrefactor: simplified code a bit more - 8f8e0f2\nrefactor: simplified code a bit - b094a6f\nfix: some corrections re ignoreCase option - 3c78fd0\nignoreCase option - 3cbfbb5\nSanitize filename while parsing patches - 2fe8129\nAdded better installation methods - aced50b\nSimple export of functionality - 8690f31\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.2.0---december-26th-2016",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.2.0---december-26th-2016",
    "title": "3327 Research",
    "section": "v3.2.0 - December 26th, 2016",
    "text": "v3.2.0 - December 26th, 2016\n\n#156 - Add undefinedReplacement option to diffJson (@ewnd9)\n#154 - Add examples and images to .npmignore. (@wtgtybhertgeghgtwtg)\n#153 - feat(structuredPatch): Pass options to diffLines (@Kiougar)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.1.0---november-27th-2016",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.1.0---november-27th-2016",
    "title": "3327 Research",
    "section": "v3.1.0 - November 27th, 2016",
    "text": "v3.1.0 - November 27th, 2016\n\n#146 - JsDiff.diffArrays to compare arrays (@wvanderdeijl)\n#144 - Split file using all possible line delimiter instead of hard-coded “/n” and join lines back using the original delimiters (@soulbeing)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.0.1---october-9th-2016",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.0.1---october-9th-2016",
    "title": "3327 Research",
    "section": "v3.0.1 - October 9th, 2016",
    "text": "v3.0.1 - October 9th, 2016\n\n#139 - Make README.md look nicer in npmjs.com (@takenspc)\n#135 - parsePatch combines patches from multiple files into a single IUniDiff when there is no “Index” line (@ramya-rao-a)\n#124 - IE7/IE8 failure since 2.0.0 (@boneskull)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.0.0---august-23rd-2016",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v3.0.0---august-23rd-2016",
    "title": "3327 Research",
    "section": "v3.0.0 - August 23rd, 2016",
    "text": "v3.0.0 - August 23rd, 2016\n\n#130 - Add callback argument to applyPatches patched option (@piranna)\n#120 - Correctly handle file names containing spaces (@adius)\n#119 - Do single reflow (@wifiextender)\n#117 - Make more usable with long strings. (@abnbgist)\n\nCompatibility notes: - applyPatches patch callback now is async and requires the callback be called to continue operation\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.2.3---may-31st-2016",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.2.3---may-31st-2016",
    "title": "3327 Research",
    "section": "v2.2.3 - May 31st, 2016",
    "text": "v2.2.3 - May 31st, 2016\n\n#118 - Add a fix for applying 0-length destination patches (@chaaz)\n#115 - Fixed grammar in README (@krizalys)\n#113 - fix typo (@vmazare)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.2.2---march-13th-2016",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.2.2---march-13th-2016",
    "title": "3327 Research",
    "section": "v2.2.2 - March 13th, 2016",
    "text": "v2.2.2 - March 13th, 2016\n\n#102 - diffJson with dates, returns empty curly braces (@dr-dimitru)\n#97 - Whitespaces & diffWords (@faiwer)\n#92 - Fixes typo in the readme (@bg451)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.2.1---november-12th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.2.1---november-12th-2015",
    "title": "3327 Research",
    "section": "v2.2.1 - November 12th, 2015",
    "text": "v2.2.1 - November 12th, 2015\n\n#89 - add in display selector to readme (@FranDias)\n#88 - Split diffs based on file headers instead of ‘Index:’ metadata (@piranna)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.2.0---october-29th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.2.0---october-29th-2015",
    "title": "3327 Research",
    "section": "v2.2.0 - October 29th, 2015",
    "text": "v2.2.0 - October 29th, 2015\n\n#80 - Fix a typo: applyPath -> applyPatch (@fluxxu)\n#83 - Add basic fuzzy matching to applyPatch (@piranna) Commits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.2.0---october-29th-2015-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.2.0---october-29th-2015-1",
    "title": "3327 Research",
    "section": "v2.2.0 - October 29th, 2015",
    "text": "v2.2.0 - October 29th, 2015\n\n#80 - Fix a typo: applyPath -> applyPatch (@fluxxu)\n#83 - Add basic fuzzy matching to applyPatch (@piranna) Commits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.1.3---september-30th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.1.3---september-30th-2015",
    "title": "3327 Research",
    "section": "v2.1.3 - September 30th, 2015",
    "text": "v2.1.3 - September 30th, 2015\n\n#78 - fix: error throwing when apply patch to empty string (@21paradox)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.1.2---september-23rd-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.1.2---september-23rd-2015",
    "title": "3327 Research",
    "section": "v2.1.2 - September 23rd, 2015",
    "text": "v2.1.2 - September 23rd, 2015\n\n#76 - diff headers give error (@piranna)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.1.1---september-9th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.1.1---september-9th-2015",
    "title": "3327 Research",
    "section": "v2.1.1 - September 9th, 2015",
    "text": "v2.1.1 - September 9th, 2015\n\n#73 - Is applyPatches() exposed in the API? (@davidparsson)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.1.0---august-27th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.1.0---august-27th-2015",
    "title": "3327 Research",
    "section": "v2.1.0 - August 27th, 2015",
    "text": "v2.1.0 - August 27th, 2015\n\n#72 - Consider using options object API for flag permutations (@kpdecker)\n#70 - diffWords treats at the end as significant whitespace (@nesQuick)\n#69 - Missing count (@wfalkwallace)\n#68 - diffLines seems broken (@wfalkwallace)\n#60 - Support multiple diff hunks (@piranna)\n#54 - Feature Request: 3-way merge (@mog422)\n#42 - Fuzz factor for applyPatch (@stuartpb)\nMove whitespace ignore out of equals method - 542063c\nInclude source maps in babel output - 7f7ab21\nMerge diff/line and diff/patch implementations - 1597705\nDrop map utility method - 1ddc939\nDocumentation for parsePatch and applyPatches - 27c4b77\n\nCompatibility notes: - The undocumented ignoreWhitespace flag has been removed from the Diff equality check directly. This implementation may be copied to diff utilities if dependencies existed on this functionality.\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.0.2---august-8th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.0.2---august-8th-2015",
    "title": "3327 Research",
    "section": "v2.0.2 - August 8th, 2015",
    "text": "v2.0.2 - August 8th, 2015\n\n#67 - cannot require from npm module in node (@commenthol)\nConvert to chai since we don’t support IE8 - a96bbad\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.0.1---august-7th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.0.1---august-7th-2015",
    "title": "3327 Research",
    "section": "v2.0.1 - August 7th, 2015",
    "text": "v2.0.1 - August 7th, 2015\n\nAdd release build at proper step - 57542fd\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.0.0---august-7th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v2.0.0---august-7th-2015",
    "title": "3327 Research",
    "section": "v2.0.0 - August 7th, 2015",
    "text": "v2.0.0 - August 7th, 2015\n\n#66 - Add karma and sauce tests (@kpdecker)\n#65 - Create component repository for bower (@kpdecker)\n#64 - Automatically call removeEmpty for all tokenizer calls (@kpdecker)\n#62 - Allow access to structured object representation of patch data (@bittrance)\n#61 - Use svg instead of png to get better image quality (@PeterDaveHello)\n#29 - word tokenizer works only for 7 bit ascii (@plasmagunman)\n\nCompatibility notes: - this.removeEmpty is now called automatically for all instances. If this is not desired, this may be overridden on a per instance basis. - The library has been refactored to use some ES6 features. The external APIs should remain the same, but bower projects that directly referenced the repository will now have to point to the components/jsdiff repository.\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.4.0---may-6th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.4.0---may-6th-2015",
    "title": "3327 Research",
    "section": "v1.4.0 - May 6th, 2015",
    "text": "v1.4.0 - May 6th, 2015\n\n#57 - createPatch -> applyPatch failed. (@mog422)\n#56 - Two files patch (@rgeissert)\n#14 - Flip added and removed order? (@jakesandlund)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.3.2---march-30th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.3.2---march-30th-2015",
    "title": "3327 Research",
    "section": "v1.3.2 - March 30th, 2015",
    "text": "v1.3.2 - March 30th, 2015\n\n#53 - Updated README.MD with Bower installation instructions (@ofbriggs)\n#49 - Cannot read property ‘oldlines’ of undefined (@nwtn)\n#44 - invalid-meta jsdiff is missing “main” entry in bower.json\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.3.1---march-13th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.3.1---march-13th-2015",
    "title": "3327 Research",
    "section": "v1.3.1 - March 13th, 2015",
    "text": "v1.3.1 - March 13th, 2015\n\n#52 - Fix for #51 Wrong result of JsDiff.diffLines (@felicienfrancois)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.3.0---march-2nd-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.3.0---march-2nd-2015",
    "title": "3327 Research",
    "section": "v1.3.0 - March 2nd, 2015",
    "text": "v1.3.0 - March 2nd, 2015\n\n#47 - Adding Diff Trimmed Lines (@JamesGould123)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.2.2---january-26th-2015",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.2.2---january-26th-2015",
    "title": "3327 Research",
    "section": "v1.2.2 - January 26th, 2015",
    "text": "v1.2.2 - January 26th, 2015\n\n#45 - Fix AMD module loading (@pedrocarrico)\n#43 - added a bower file (@nbrustein)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.2.1---december-26th-2014",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.2.1---december-26th-2014",
    "title": "3327 Research",
    "section": "v1.2.1 - December 26th, 2014",
    "text": "v1.2.1 - December 26th, 2014\n\n#41 - change condition of using node export system. (@ironhee)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.2.0---november-29th-2014",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.2.0---november-29th-2014",
    "title": "3327 Research",
    "section": "v1.2.0 - November 29th, 2014",
    "text": "v1.2.0 - November 29th, 2014\n\n#37 - Add support for sentences. (@vmariano)\n#28 - Implemented diffJson (@papandreou)\n#27 - Slow to execute over diffs with a large number of changes (@termi)\nAllow for optional async diffing - 19385b9\nFix diffChars implementation - eaa44ed\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.1.0---november-25th-2014",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.1.0---november-25th-2014",
    "title": "3327 Research",
    "section": "v1.1.0 - November 25th, 2014",
    "text": "v1.1.0 - November 25th, 2014\n\n#33 - AMD and global exports (@ovcharik)\n#32 - Add support for component (@vmariano)\n#31 - Don’t rely on Array.prototype.map (@papandreou)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.0.8---december-22nd-2013",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.0.8---december-22nd-2013",
    "title": "3327 Research",
    "section": "v1.0.8 - December 22nd, 2013",
    "text": "v1.0.8 - December 22nd, 2013\n\n#24 - Handle windows newlines on non windows machines. (@benogle)\n#23 - Prettied up the API formatting a little, and added basic node and web examples (@airportyh)\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.0.7---september-11th-2013",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.0.7---september-11th-2013",
    "title": "3327 Research",
    "section": "v1.0.7 - September 11th, 2013",
    "text": "v1.0.7 - September 11th, 2013\n\n#22 - Added variant of WordDiff that doesn’t ignore whitespace differences (@papandreou\nAdd 0.10 to travis tests - 243a526\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.0.6---august-30th-2013",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/release-notes.html#v1.0.6---august-30th-2013",
    "title": "3327 Research",
    "section": "v1.0.6 - August 30th, 2013",
    "text": "v1.0.6 - August 30th, 2013\n\n#19 - Explicitly define contents of npm package (@sindresorhus\n\nCommits"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/CONTRIBUTING.html#pull-requests",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/CONTRIBUTING.html#pull-requests",
    "title": "3327 Research",
    "section": "Pull Requests",
    "text": "Pull Requests\nWe also accept pull requests!\nGenerally we like to see pull requests that - Maintain the existing code style - Are focused on a single change (i.e. avoid large refactoring or style adjustments in untouched code if not the primary goal of the pull request) - Have good commit messages - Have tests - Don’t decrease the current code coverage (see coverage/lcov-report/index.html)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/CONTRIBUTING.html#building",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/CONTRIBUTING.html#building",
    "title": "3327 Research",
    "section": "Building",
    "text": "Building\nnpm install\nnpm test\nThe npm test -- dev implements watching for tests within Node and karma start may be used for manual testing in browsers.\nIf you notice any problems, please report them to the GitHub issue tracker at http://github.com/kpdecker/jsdiff/issues."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/CONTRIBUTING.html#releasing",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/diff/CONTRIBUTING.html#releasing",
    "title": "3327 Research",
    "section": "Releasing",
    "text": "Releasing\nJsDiff utilizes the release yeoman generator to perform most release tasks.\nA full release may be completed with the following:\nyo release\nnpm publish\nyo release:publish components jsdiff dist/components/"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/webidl-conversions/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/webidl-conversions/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The BSD 2-Clause License\nCopyright (c) 2014, Domenic Denicola All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/minimist/readme.html#var-argv-parseargsargs-opts",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/minimist/readme.html#var-argv-parseargsargs-opts",
    "title": "3327 Research",
    "section": "var argv = parseArgs(args, opts={})",
    "text": "var argv = parseArgs(args, opts={})\nReturn an argument object argv populated with the array arguments from args.\nargv._ contains all the arguments that didn’t have an option associated with them.\nNumeric-looking arguments will be returned as numbers unless opts.string or opts.boolean is set for that argument name.\nAny arguments after '--' will not be parsed and will end up in argv._.\noptions can be:\n\nopts.string - a string or array of strings argument names to always treat as strings\nopts.boolean - a boolean, string or array of strings to always treat as booleans. if true will treat all double hyphenated arguments without equal signs as boolean (e.g. affects --foo, not -f or --foo=bar)\nopts.alias - an object mapping string names to strings or arrays of string argument names to use as aliases\nopts.default - an object mapping string argument names to default values\nopts.stopEarly - when true, populate argv._ with everything after the first non-option\nopts['--'] - when true, populate argv._ with everything before the -- and argv['--'] with everything after the --. Here’s an example:\n> require('./')('one two three -- four five --six'.split(' '), { '--': true })\n{ _: [ 'one', 'two', 'three' ],\n  '--': [ 'four', 'five', '--six' ] }\nNote that with opts['--'] set, parsing for arguments still stops after the --.\nopts.unknown - a function which is invoked with a command line parameter not defined in the opts configuration object. If the function returns false, the unknown option is not added to argv."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/find-up/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/find-up/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install --save find-up"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/find-up/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/find-up/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\n/\n└── Users\n        └── sindresorhus\n                ├── unicorn.png\n                └── foo\n                        └── bar\n                                ├── baz\n                                └── example.js\n// example.js\nconst findUp = require('find-up');\n\nfindUp('unicorn.png').then(filepath => {\n    console.log(filepath);\n    //=> '/Users/sindresorhus/unicorn.png'\n});\n\nfindUp(['rainbow.png', 'unicorn.png']).then(filepath => {\n    console.log(filepath);\n    //=> '/Users/sindresorhus/unicorn.png'\n});"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/find-up/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/find-up/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nfindUp(filename, options)\nReturns a Promise for the filepath or null.\n\n\nfindUp([filenameA, filenameB], options)\nReturns a Promise for the first filepath found (by respecting the order) or null.\n\n\nfindUp.sync(filename, options)\nReturns a filepath or null.\n\n\nfindUp.sync([filenameA, filenameB], options)\nReturns the first filepath found (by respecting the order) or null.\n\nfilename\nType: string\nFilename of the file to find.\n\n\noptions\n\ncwd\nType: string Default: process.cwd()\nDirectory to start from."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/find-up/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/find-up/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nfind-up-cli - CLI for this module\npkg-up - Find the closest package.json file\npkg-dir - Find the root directory of an npm package"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/find-up/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/find-up/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#highlights",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#highlights",
    "title": "3327 Research",
    "section": "Highlights",
    "text": "Highlights\n\nExpressive API\nHighly performant\nAbility to nest styles\n256/Truecolor color support\nAuto-detects color support\nDoesn’t extend String.prototype\nClean and focused\nActively maintained\nUsed by ~23,000 packages as of December 31, 2017"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install chalk"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst chalk = require('chalk');\n\nconsole.log(chalk.blue('Hello world!'));\nChalk comes with an easy to use composable API where you just chain and nest the styles you want.\nconst chalk = require('chalk');\nconst log = console.log;\n\n// Combine styled and normal strings\nlog(chalk.blue('Hello') + ' World' + chalk.red('!'));\n\n// Compose multiple styles using the chainable API\nlog(chalk.blue.bgRed.bold('Hello world!'));\n\n// Pass in multiple arguments\nlog(chalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz'));\n\n// Nest styles\nlog(chalk.red('Hello', chalk.underline.bgBlue('world') + '!'));\n\n// Nest styles of the same type even (color, underline, background)\nlog(chalk.green(\n    'I am a green line ' +\n    chalk.blue.underline.bold('with a blue substring') +\n    ' that becomes green again!'\n));\n\n// ES2015 template literal\nlog(`\nCPU: ${chalk.red('90%')}\nRAM: ${chalk.green('40%')}\nDISK: ${chalk.yellow('70%')}\n`);\n\n// ES2015 tagged template literal\nlog(chalk`\nCPU: {red ${cpu.totalPercent}%}\nRAM: {green ${ram.used / ram.total * 100}%}\nDISK: {rgb(255,131,0) ${disk.used / disk.total * 100}%}\n`);\n\n// Use RGB colors in terminal emulators that support it.\nlog(chalk.keyword('orange')('Yay for orange colored text!'));\nlog(chalk.rgb(123, 45, 67).underline('Underlined reddish color'));\nlog(chalk.hex('#DEADED').bold('Bold gray!'));\nEasily define your own themes:\nconst chalk = require('chalk');\n\nconst error = chalk.bold.red;\nconst warning = chalk.keyword('orange');\n\nconsole.log(error('Error!'));\nconsole.log(warning('Warning!'));\nTake advantage of console.log string substitution:\nconst name = 'Sindre';\nconsole.log(chalk.green('Hello %s'), name);\n//=> 'Hello Sindre'"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nchalk.<style>[.<style>...](string, [string...])\nExample: chalk.red.bold.underline('Hello', 'world');\nChain styles and call the last one as a method with a string argument. Order doesn’t matter, and later styles take precedent in case of a conflict. This simply means that chalk.red.yellow.green is equivalent to chalk.green.\nMultiple arguments will be separated by space.\n\n\nchalk.enabled\nColor support is automatically detected, as is the level (see chalk.level). However, if you’d like to simply enable/disable Chalk, you can do so via the .enabled property.\nChalk is enabled by default unless explicitly disabled via the constructor or chalk.level is 0.\nIf you need to change this in a reusable module, create a new instance:\nconst ctx = new chalk.constructor({enabled: false});\n\n\nchalk.level\nColor support is automatically detected, but you can override it by setting the level property. You should however only do this in your own code as it applies globally to all Chalk consumers.\nIf you need to change this in a reusable module, create a new instance:\nconst ctx = new chalk.constructor({level: 0});\nLevels are as follows:\n\nAll colors disabled\nBasic color support (16 colors)\n256 color support\nTruecolor support (16 million colors)\n\n\n\nchalk.supportsColor\nDetect whether the terminal supports color. Used internally and handled for you, but exposed for convenience.\nCan be overridden by the user with the flags --color and --no-color. For situations where using --color is not possible, add the environment variable FORCE_COLOR=1 to forcefully enable color or FORCE_COLOR=0 to forcefully disable. The use of FORCE_COLOR overrides all other color support checks.\nExplicit 256/Truecolor mode can be enabled using the --color=256 and --color=16m flags, respectively."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#styles",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#styles",
    "title": "3327 Research",
    "section": "Styles",
    "text": "Styles\n\nModifiers\n\nreset\nbold\ndim\nitalic (Not widely supported)\nunderline\ninverse\nhidden\nstrikethrough (Not widely supported)\nvisible (Text is emitted only if enabled)\n\n\n\nColors\n\nblack\nred\ngreen\nyellow\nblue (On Windows the bright version is used since normal blue is illegible)\nmagenta\ncyan\nwhite\ngray (“bright black”)\nredBright\ngreenBright\nyellowBright\nblueBright\nmagentaBright\ncyanBright\nwhiteBright\n\n\n\nBackground colors\n\nbgBlack\nbgRed\nbgGreen\nbgYellow\nbgBlue\nbgMagenta\nbgCyan\nbgWhite\nbgBlackBright\nbgRedBright\nbgGreenBright\nbgYellowBright\nbgBlueBright\nbgMagentaBright\nbgCyanBright\nbgWhiteBright"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#tagged-template-literal",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#tagged-template-literal",
    "title": "3327 Research",
    "section": "Tagged template literal",
    "text": "Tagged template literal\nChalk can be used as a tagged template literal.\nconst chalk = require('chalk');\n\nconst miles = 18;\nconst calculateFeet = miles => miles * 5280;\n\nconsole.log(chalk`\n  There are {bold 5280 feet} in a mile.\n  In {bold ${miles} miles}, there are {green.bold ${calculateFeet(miles)} feet}.\n`);\nBlocks are delimited by an opening curly brace ({), a style, some content, and a closing curly brace (}).\nTemplate styles are chained exactly like normal Chalk styles. The following two statements are equivalent:\nconsole.log(chalk.bold.rgb(10, 100, 200)('Hello!'));\nconsole.log(chalk`{bold.rgb(10,100,200) Hello!}`);\nNote that function styles (rgb(), hsl(), keyword(), etc.) may not contain spaces between parameters.\nAll interpolated values (chalk`${foo}`) are converted to strings via the .toString() method. All curly braces ({ and }) in interpolated value strings are escaped."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#and-truecolor-color-support",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#and-truecolor-color-support",
    "title": "3327 Research",
    "section": "256 and Truecolor color support",
    "text": "256 and Truecolor color support\nChalk supports 256 colors and Truecolor (16 million colors) on supported terminal apps.\nColors are downsampled from 16 million RGB values to an ANSI color format that is supported by the terminal emulator (or by specifying {level: n} as a Chalk option). For example, Chalk configured to run at level 1 (basic color support) will downsample an RGB value of #FF0000 (red) to 31 (ANSI escape for red).\nExamples:\n\nchalk.hex('#DEADED').underline('Hello, world!')\nchalk.keyword('orange')('Some orange text')\nchalk.rgb(15, 100, 204).inverse('Hello!')\n\nBackground versions of these models are prefixed with bg and the first level of the module capitalized (e.g. keyword for foreground colors and bgKeyword for background colors).\n\nchalk.bgHex('#DEADED').underline('Hello, world!')\nchalk.bgKeyword('orange')('Some orange text')\nchalk.bgRgb(15, 100, 204).inverse('Hello!')\n\nThe following color models can be used:\n\nrgb - Example: chalk.rgb(255, 136, 0).bold('Orange!')\nhex - Example: chalk.hex('#FF8800').bold('Orange!')\nkeyword (CSS keywords) - Example: chalk.keyword('orange').bold('Orange!')\nhsl - Example: chalk.hsl(32, 100, 50).bold('Orange!')\nhsv - Example: chalk.hsv(32, 100, 100).bold('Orange!')\nhwb - Example: chalk.hwb(32, 0, 50).bold('Orange!')\nansi16\nansi256"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#windows",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#windows",
    "title": "3327 Research",
    "section": "Windows",
    "text": "Windows\nIf you’re on Windows, do yourself a favor and use cmder instead of cmd.exe."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#origin-story",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#origin-story",
    "title": "3327 Research",
    "section": "Origin story",
    "text": "Origin story\ncolors.js used to be the most popular string styling module, but it has serious deficiencies like extending String.prototype which causes all kinds of problems and the package is unmaintained. Although there are other packages, they either do too much or not enough. Chalk is a clean and focused alternative."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nchalk-cli - CLI for this module\nansi-styles - ANSI escape codes for styling strings in the terminal\nsupports-color - Detect whether a terminal supports color\nstrip-ansi - Strip ANSI escape codes\nstrip-ansi-stream - Strip ANSI escape codes from a stream\nhas-ansi - Check if a string has ANSI escape codes\nansi-regex - Regular expression for matching ANSI escape codes\nwrap-ansi - Wordwrap a string with ANSI escape codes\nslice-ansi - Slice a string with ANSI escape codes\ncolor-convert - Converts colors between different models\nchalk-animation - Animate strings in the terminal\ngradient-string - Apply color gradients to strings\nchalk-pipe - Create chalk style schemes with simpler style strings\nterminal-link - Create clickable links in the terminal"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#maintainers",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#maintainers",
    "title": "3327 Research",
    "section": "Maintainers",
    "text": "Maintainers\n\nSindre Sorhus\nJosh Junon"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/chalk/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-regex/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-regex/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install ansi-regex"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-regex/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-regex/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst ansiRegex = require('ansi-regex');\n\nansiRegex().test('\\u001B[4mcake\\u001B[0m');\n//=> true\n\nansiRegex().test('cake');\n//=> false\n\n'\\u001B[4mcake\\u001B[0m'.match(ansiRegex());\n//=> ['\\u001B[4m', '\\u001B[0m']"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-regex/readme.html#faq",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-regex/readme.html#faq",
    "title": "3327 Research",
    "section": "FAQ",
    "text": "FAQ\n\nWhy do you test for codes not in the ECMA 48 standard?\nSome of the codes we run as a test are codes that we acquired finding various lists of non-standard or manufacturer specific codes. We test for both standard and non-standard codes, as most of them follow the same or similar format and can be safely matched in strings without the risk of removing actual string content. There are a few non-standard control codes that do not follow the traditional format (i.e. they end in numbers) thus forcing us to exclude them from the test because we cannot reliably match them.\nOn the historical side, those ECMA standards were established in the early 90’s whereas the VT100, for example, was designed in the mid/late 70’s. At that point in time, control codes were still pretty ungoverned and engineers used them for a multitude of things, namely to activate hardware ports that may have been proprietary. Somewhere else you see a similar ‘anarchy’ of codes is in the x86 architecture for processors; there are a ton of “interrupts” that can mean different things on certain brands of processors, most of which have been phased out."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-regex/readme.html#maintainers",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-regex/readme.html#maintainers",
    "title": "3327 Research",
    "section": "Maintainers",
    "text": "Maintainers\n\nSindre Sorhus\nJosh Junon"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-regex/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-regex/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/base-x/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/base-x/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright (c) 2018 base-x contributors Copyright (c) 2014-2018 The Bitcoin Core developers\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-flag/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-flag/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install has-flag"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-flag/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-flag/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\n// foo.js\nconst hasFlag = require('has-flag');\n\nhasFlag('unicorn');\n//=> true\n\nhasFlag('--unicorn');\n//=> true\n\nhasFlag('f');\n//=> true\n\nhasFlag('-f');\n//=> true\n\nhasFlag('foo=bar');\n//=> true\n\nhasFlag('foo');\n//=> false\n\nhasFlag('rainbow');\n//=> false\n$ node foo.js -f --unicorn --foo=bar -- --rainbow"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-flag/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-flag/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nhasFlag(flag, argv)\nReturns a boolean for whether the flag exists.\n\nflag\nType: string\nCLI flag to look for. The -- prefix is optional.\n\n\nargv\nType: string[] Default: process.argv\nCLI arguments."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-flag/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-flag/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/supports-color/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/supports-color/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install supports-color"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/supports-color/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/supports-color/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst supportsColor = require('supports-color');\n\nif (supportsColor.stdout) {\n    console.log('Terminal stdout supports color');\n}\n\nif (supportsColor.stdout.has256) {\n    console.log('Terminal stdout supports 256 colors');\n}\n\nif (supportsColor.stderr.has16m) {\n    console.log('Terminal stderr supports 16 million colors (truecolor)');\n}"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/supports-color/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/supports-color/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\nReturns an Object with a stdout and stderr property for testing either streams. Each property is an Object, or false if color is not supported.\nThe stdout/stderr objects specifies a level of support for color through a .level property and a corresponding flag:\n\n.level = 1 and .hasBasic = true: Basic color support (16 colors)\n.level = 2 and .has256 = true: 256 color support\n.level = 3 and .has16m = true: Truecolor support (16 million colors)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/supports-color/readme.html#info",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/supports-color/readme.html#info",
    "title": "3327 Research",
    "section": "Info",
    "text": "Info\nIt obeys the --color and --no-color CLI flags.\nCan be overridden by the user with the flags --color and --no-color. For situations where using --color is not possible, add the environment variable FORCE_COLOR=1 to forcefully enable color or FORCE_COLOR=0 to forcefully disable. The use of FORCE_COLOR overrides all other color support checks.\nExplicit 256/Truecolor mode can be enabled using the --color=256 and --color=16m flags, respectively."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/supports-color/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/supports-color/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nsupports-color-cli - CLI for this module\nchalk - Terminal string styling done right"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/supports-color/readme.html#maintainers",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/supports-color/readme.html#maintainers",
    "title": "3327 Research",
    "section": "Maintainers",
    "text": "Maintainers\n\nSindre Sorhus\nJosh Junon"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/supports-color/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/supports-color/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/unbox-primitive/CHANGELOG.html#v1.0.1---2021-03-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/unbox-primitive/CHANGELOG.html#v1.0.1---2021-03-25",
    "title": "3327 Research",
    "section": "v1.0.1 - 2021-03-25",
    "text": "v1.0.1 - 2021-03-25\n\nCommits\n\n[Tests] use shared travis-ci configs f977e5f\n[Tests] migrate tests to Github Actions b89def6\n[meta] do not publish github action workflow files 325d1f1\nreadme 810cd70\n[Tests] run nyc on all tests; use tape runner 2f5fb08\n[meta] add auto-changelog 03ed375\n[actions] add automatic rebasing / merge commit blocking 6dec48d\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, object-inspect, object-is, tape 528ed88\n[actions] check out the entire repo 5095b29\n[actions] add “Allow Edits” workflow 5aa26d7\n[Dev Deps] update eslint, @ljharb/eslint-config, object-inspect, object-is, safe-publish-latest, tape afc18c6\n[readme] remove travis badge a025899\n[Dev Deps] update auto-changelog 9219a32\n[readme] Fix missing paren in example 73f5a33\n[Dev Deps] update @ljharb/eslint-config, tape e450acc\n[Deps] update has-bigints, has-symbols, which-boxed-primitive a4279b5\n[Dev Deps] update auto-changelog, in-publish, tape b351548\n[actions] switch Automatic Rebase workflow to pull_request_target event f600382\n[readme] fix travis links 4d02fa9\n[Dev Deps] update auto-changelog; add aud 07e74a3\n[meta] add funding field 7ca4bd7\n[Tests] only audit prod deps 47d8d5f\n[Deps] update has-symbols c70c15e"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/unbox-primitive/CHANGELOG.html#v1.0.0---2019-08-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/unbox-primitive/CHANGELOG.html#v1.0.0---2019-08-10",
    "title": "3327 Research",
    "section": "v1.0.0 - 2019-08-10",
    "text": "v1.0.0 - 2019-08-10\n\nCommits\n\n[Tests] add .travis.yml 8c9a5ef\nInitial commit feaff15\n[Tests] add tests 3dd18d6\nimplementation 472fb41\nnpm init e9e426f\n[Tests] add linting 139e74b\n[meta] create FUNDING.yml a9509e1\nOnly apps should have lockfiles b3d0834"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-shared-array-buffer/CHANGELOG.html#v1.0.1---2021-03-04",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-shared-array-buffer/CHANGELOG.html#v1.0.1---2021-03-04",
    "title": "3327 Research",
    "section": "v1.0.1 - 2021-03-04",
    "text": "v1.0.1 - 2021-03-04\n\nCommits\n\n[readme] fix repo URLs 37c38f3"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-shared-array-buffer/CHANGELOG.html#v1.0.0---2021-03-04",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-shared-array-buffer/CHANGELOG.html#v1.0.0---2021-03-04",
    "title": "3327 Research",
    "section": "v1.0.0 - 2021-03-04",
    "text": "v1.0.0 - 2021-03-04\n\nCommits\n\n[Tests] add tests 9c7b806\nInitial commit 4e65c5e\n[meta] do not publish github action workflow files ac3693d\nreadme 7a984d0\nnpm init a586c99\n[actions] add automatic rebasing / merge commit blocking 184fe62\nImplementation 207e26d\n[meta] create FUNDING.yml; add “funding” field 3cad3fc\n[meta] add auto-changelog 31f1f2c\n[Tests] add npm run lint 2e5146e\nOnly apps should have lockfiles 7b2adfa"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "7.0.1 / 2018-11-07",
    "text": "7.0.1 / 2018-11-07\n\nFix removeSync() on Windows, in some cases, it would error out with ENOTEMPTY (#646)\nDocument mode option for ensureDir*() (#587)\nDon’t include documentation files in npm package tarball (#642, #643)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "7.0.0 / 2018-07-16",
    "text": "7.0.0 / 2018-07-16\n\nBREAKING: Refine copy*() handling of symlinks to properly detect symlinks that point to the same file. (#582)\nFix bug with copying write-protected directories (#600)\nUniversalify fs.lchmod() (#596)\nAdd engines field to package.json (#580)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "6.0.1 / 2018-05-09",
    "text": "6.0.1 / 2018-05-09\n\nFix fs.promises ExperimentalWarning on Node v10.1.0 (#578)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "6.0.0 / 2018-05-01",
    "text": "6.0.0 / 2018-05-01\n\nDrop support for Node.js versions 4, 5, & 7 (#564)\nRewrite move to use fs.rename where possible (#549)\nDon’t convert relative paths to absolute paths for filter (#554)\ncopy*’s behavior when preserveTimestamps is false has been OS-dependent since 5.0.0, but that’s now explicitly noted in the docs (#563)\nFix subdirectory detection for copy* & move* (#541)\nHandle case-insensitive paths correctly in copy* (#568)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "5.0.0 / 2017-12-11",
    "text": "5.0.0 / 2017-12-11\nSignificant refactor of copy() & copySync(), including breaking changes. No changes to other functions in this release.\nHuge thanks to @manidlou for doing most of the work on this release.\n\nThe filter option can no longer be a RegExp (must be a function). This was deprecated since fs-extra v1.0.0. #512\ncopy()’s filter option can now be a function that returns a Promise. #518\ncopy() & copySync() now use fs.copyFile()/fs.copyFileSync() in environments that support it (currently Node 8.5.0+). Older Node versions still get the old implementation. #505\nDon’t allow copying a directory into itself. #83\nHandle copying between identical files. #198\nError out when copying an empty folder to a path that already exists. #464\nDon’t create dest’s parent if the filter function aborts the copy() operation. #517\nFix writeStream not being closed if there was an error in copy(). #516"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "4.0.3 / 2017-12-05",
    "text": "4.0.3 / 2017-12-05\n\nFix wrong chmod values in fs.remove() #501\nFix TypeError on systems that don’t have some fs operations like lchown #520"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "4.0.2 / 2017-09-12",
    "text": "4.0.2 / 2017-09-12\n\nAdded EOL option to writeJson* & outputJson* (via upgrade to jsonfile v4)\nAdded promise support to fs.copyFile() in Node 8.5+\nAdded .js extension to main field in package.json for better tooling compatibility. #485"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "4.0.1 / 2017-07-31",
    "text": "4.0.1 / 2017-07-31\n\nFixed\n\nPreviously, ensureFile() & ensureFileSync() would do nothing if the path was a directory. Now, they error out for consistency with ensureDir(). #465, #466, #470"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "4.0.0 / 2017-07-14",
    "text": "4.0.0 / 2017-07-14\n\nChanged\n\nBREAKING: The promisified versions of fs.read() & fs.write() now return objects. See the docs for details. #436, #449\nfs.move() now errors out when destination is a subdirectory of source. #458\nApplied upstream fixes from rimraf to fs.remove() & fs.removeSync(). #459\n\n\n\nFixed\n\nGot fs.outputJSONSync() working again; it was broken due to refactoring. #428\n\nAlso clarified the docs in a few places."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "3.0.1 / 2017-05-04",
    "text": "3.0.1 / 2017-05-04\n\nFix bug in move() & moveSync() when source and destination are the same, and source does not exist. #415"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "3.0.0 / 2017-04-27",
    "text": "3.0.0 / 2017-04-27\n\nAdded\n\nBREAKING: Added Promise support. All asynchronous native fs methods and fs-extra methods now return a promise if the callback is not passed. #403\npathExists(), a replacement for the deprecated fs.exists. pathExists has a normal error-first callback signature. Also added pathExistsSync, an alias to fs.existsSync, for completeness. #406\n\n\n\nRemoved\n\nBREAKING: Removed support for setting the default spaces for writeJson(), writeJsonSync(), outputJson(), & outputJsonSync(). This was undocumented. #402\n\n\n\nChanged\n\nUpgraded jsonfile dependency to v3.0.0:\n\nBREAKING: Changed behavior of throws option for readJsonSync(); now does not throw filesystem errors when throws is false.\n\nBREAKING: writeJson(), writeJsonSync(), outputJson(), & outputJsonSync() now output minified JSON by default for consistency with JSON.stringify(); set the spaces option to 2 to override this new behavior. #402\nUse Buffer.allocUnsafe() instead of new Buffer() in environments that support it. #394\n\n\n\nFixed\n\nremoveSync() silently failed on Windows in some cases. Now throws an EBUSY error. #408"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "2.1.2 / 2017-03-16",
    "text": "2.1.2 / 2017-03-16\n\nFixed\n\nWeird windows bug that resulted in ensureDir()’s callback being called twice in some cases. This bug may have also affected remove(). See #392, #393"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "2.1.1 / 2017-03-15",
    "text": "2.1.1 / 2017-03-15\n\nFixed\n\nReverted 5597bd, this broke compatibility with Node.js versions v4+ but less than v4.5.0.\nRemove Buffer.alloc() usage in moveSync()."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "2.1.0 / 2017-03-15",
    "text": "2.1.0 / 2017-03-15\nThanks to Mani Maghsoudlou (@manidlou) & Jan Peer Stöcklmair (@JPeer264) for their extraordinary help with this release!\n\nAdded\n\nmoveSync() See #309, #381. (@manidlou)\ncopy() and copySync()’s filter option now gets the destination path passed as the second parameter. #366 (@manidlou)\n\n\n\nChanged\n\nUse Buffer.alloc() instead of deprecated new Buffer() in copySync(). #380 (@manidlou)\nRefactored entire codebase to use ES6 features supported by Node.js v4+ #355. (@JPeer264)\nRefactored docs. (@manidlou)\n\n\n\nFixed\n\nmove() shouldn’t error out when source and dest are the same. #377, #378 (@jdalton)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "2.0.0 / 2017-01-16",
    "text": "2.0.0 / 2017-01-16\n\nRemoved\n\nBREAKING: Removed support for Node v0.12. The Node foundation stopped officially supporting it on Jan 1st, 2017.\nBREAKING: Remove walk() and walkSync(). walkSync() was only part of fs-extra for a little over two months. Use klaw instead of walk(), in fact, walk() was just an alias to klaw. For walkSync() use klaw-sync. See: #338, #339\n\n\n\nChanged\n\nBREAKING: Renamed clobber to overwrite. This affects copy(), copySync(), and move(). #330, #333\nMoved docs, to docs/. #340\n\n\n\nFixed\n\nApply filters to directories in copySync() like in copy(). #324\nA specific condition when disk is under heavy use, copy() can fail. #326"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "1.0.0 / 2016-11-01",
    "text": "1.0.0 / 2016-11-01\nAfter five years of development, we finally have reach the 1.0.0 milestone! Big thanks goes to Ryan Zim for leading the charge on this release!\n\nAdded\n\nwalkSync()\n\n\n\nChanged\n\nBREAKING: dropped Node v0.10 support.\ndisabled rimaf globbing, wasn’t used. #280\ndeprecate copy()/copySync() option filter if it’s a RegExp. filter should now be a function.\ninline rimraf. This is temporary and was done because rimraf depended upon the beefy glob which fs-extra does not use. #300\n\n\n\nFixed\n\nbug fix proper closing of file handle on utimesMillis() #271\nproper escaping of files with dollar signs #291\ncopySync() failed if user didn’t own file. #199, #301"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "0.30.0 / 2016-04-28",
    "text": "0.30.0 / 2016-04-28\n\nBrought back Node v0.10 support. I didn’t realize there was still demand. Official support will end 2016-10-01."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "0.29.0 / 2016-04-27",
    "text": "0.29.0 / 2016-04-27\n\nBREAKING: removed support for Node v0.10. If you still want to use Node v0.10, everything should work except for ensureLink()/ensureSymlink(). Node v0.12 is still supported but will be dropped in the near future as well."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "0.28.0 / 2016-04-17",
    "text": "0.28.0 / 2016-04-17\n\nBREAKING: removed createOutputStream(). Use https://www.npmjs.com/package/create-output-stream. See: #192\nmkdirs()/mkdirsSync() check for invalid win32 path chars. See: #209, #237\nmkdirs()/mkdirsSync() if drive not mounted, error. See: [#93][#93]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "0.27.0 / 2016-04-15",
    "text": "0.27.0 / 2016-04-15\n\nadd dereference option to copySync(). #235"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "0.26.7 / 2016-03-16",
    "text": "0.26.7 / 2016-03-16\n\nfixed copy() if source and dest are the same. #230"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "0.26.6 / 2016-03-15",
    "text": "0.26.6 / 2016-03-15\n\nfixed if emptyDir() does not have a callback: #229"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "0.26.5 / 2016-01-27",
    "text": "0.26.5 / 2016-01-27\n\ncopy() with two arguments (w/o callback) was broken. See: #215"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-23",
    "title": "3327 Research",
    "section": "0.26.4 / 2016-01-05",
    "text": "0.26.4 / 2016-01-05\n\ncopySync() made preserveTimestamps default consistent with copy() which is false. See: #208"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-24",
    "title": "3327 Research",
    "section": "0.26.3 / 2015-12-17",
    "text": "0.26.3 / 2015-12-17\n\nfixed copy() hangup in copying blockDevice / characterDevice / /dev/null. See: #193"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-25",
    "title": "3327 Research",
    "section": "0.26.2 / 2015-11-02",
    "text": "0.26.2 / 2015-11-02\n\nfixed outputJson{Sync}() spacing adherence to fs.spaces"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-26",
    "title": "3327 Research",
    "section": "0.26.1 / 2015-11-02",
    "text": "0.26.1 / 2015-11-02\n\nfixed copySync() when clogger=true and the destination is read only. See: #190"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-27",
    "title": "3327 Research",
    "section": "0.26.0 / 2015-10-25",
    "text": "0.26.0 / 2015-10-25\n\nextracted the walk() function into its own module klaw."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-28",
    "title": "3327 Research",
    "section": "0.25.0 / 2015-10-24",
    "text": "0.25.0 / 2015-10-24\n\nnow has a file walker walk()"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-29",
    "title": "3327 Research",
    "section": "0.24.0 / 2015-08-28",
    "text": "0.24.0 / 2015-08-28\n\nremoved alias delete() and deleteSync(). See: #171"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-30",
    "title": "3327 Research",
    "section": "0.23.1 / 2015-08-07",
    "text": "0.23.1 / 2015-08-07\n\nBetter handling of errors for move() when moving across devices. #170\nensureSymlink() and ensureLink() should not throw errors if link exists. #169"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-31",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-31",
    "title": "3327 Research",
    "section": "0.23.0 / 2015-08-06",
    "text": "0.23.0 / 2015-08-06\n\nadded ensureLink{Sync}() and ensureSymlink{Sync}(). See: #165"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-32",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-32",
    "title": "3327 Research",
    "section": "0.22.1 / 2015-07-09",
    "text": "0.22.1 / 2015-07-09\n\nPrevent calling hasMillisResSync() on module load. See: #149. Fixes regression that was introduced in 0.21.0."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-33",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-33",
    "title": "3327 Research",
    "section": "0.22.0 / 2015-07-09",
    "text": "0.22.0 / 2015-07-09\n\npreserve permissions / ownership in copy(). See: [#54][#54]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-34",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-34",
    "title": "3327 Research",
    "section": "0.21.0 / 2015-07-04",
    "text": "0.21.0 / 2015-07-04\n\nadd option to preserve timestamps in copy() and copySync(). See: #141\nupdated graceful-fs@3.x to 4.x. This brings in features from amazing-graceful-fs (much cleaner code / less hacks)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-35",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-35",
    "title": "3327 Research",
    "section": "0.20.1 / 2015-06-23",
    "text": "0.20.1 / 2015-06-23\n\nfixed regression caused by latest jsonfile update: See: https://github.com/jprichardson/node-jsonfile/issues/26"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-36",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-36",
    "title": "3327 Research",
    "section": "0.20.0 / 2015-06-19",
    "text": "0.20.0 / 2015-06-19\n\nremoved jsonfile aliases with File in the name, they weren’t documented and probably weren’t in use e.g. this package had both fs.readJsonFile and fs.readJson that were aliases to each other, now use fs.readJson.\npreliminary walker created. Intentionally not documented. If you use it, it will almost certainly change and break your code.\nstarted moving tests inline\nupgraded to jsonfile@2.1.0, can now pass JSON revivers/replacers to readJson(), writeJson(), outputJson()"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-37",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-37",
    "title": "3327 Research",
    "section": "0.19.0 / 2015-06-08",
    "text": "0.19.0 / 2015-06-08\n\nfs.copy() had support for Node v0.8, dropped support"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-38",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-38",
    "title": "3327 Research",
    "section": "0.18.4 / 2015-05-22",
    "text": "0.18.4 / 2015-05-22\n\nfixed license field according to this: #136 and https://github.com/npm/npm/releases/tag/v2.10.0"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-39",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-39",
    "title": "3327 Research",
    "section": "0.18.3 / 2015-05-08",
    "text": "0.18.3 / 2015-05-08\n\nbugfix: handle EEXIST when clobbering on some Linux systems. #134"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-40",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-40",
    "title": "3327 Research",
    "section": "0.18.2 / 2015-04-17",
    "text": "0.18.2 / 2015-04-17\n\nbugfix: allow F_OK ([#120][#120])"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-41",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-41",
    "title": "3327 Research",
    "section": "0.18.1 / 2015-04-15",
    "text": "0.18.1 / 2015-04-15\n\nimproved windows support for move() a bit. https://github.com/jprichardson/node-fs-extra/commit/92838980f25dc2ee4ec46b43ee14d3c4a1d30c1b\nfixed a lot of tests for Windows (appveyor)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-42",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-42",
    "title": "3327 Research",
    "section": "0.18.0 / 2015-03-31",
    "text": "0.18.0 / 2015-03-31\n\nadded emptyDir() and emptyDirSync()"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-43",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-43",
    "title": "3327 Research",
    "section": "0.17.0 / 2015-03-28",
    "text": "0.17.0 / 2015-03-28\n\ncopySync added clobber option (before always would clobber, now if clobber is false it throws an error if the destination exists). Only works with files at the moment.\ncreateOutputStream() added. See: [#118][#118]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-44",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-44",
    "title": "3327 Research",
    "section": "0.16.5 / 2015-03-08",
    "text": "0.16.5 / 2015-03-08\n\nfixed fs.move when clobber is true and destination is a directory, it should clobber. [#114][#114]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-45",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-45",
    "title": "3327 Research",
    "section": "0.16.4 / 2015-03-01",
    "text": "0.16.4 / 2015-03-01\n\nfs.mkdirs fix infinite loop on Windows. See: See https://github.com/substack/node-mkdirp/pull/74 and https://github.com/substack/node-mkdirp/issues/66"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-46",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-46",
    "title": "3327 Research",
    "section": "0.16.3 / 2015-01-28",
    "text": "0.16.3 / 2015-01-28\n\nreverted https://github.com/jprichardson/node-fs-extra/commit/1ee77c8a805eba5b99382a2591ff99667847c9c9"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-47",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-47",
    "title": "3327 Research",
    "section": "0.16.2 / 2015-01-28",
    "text": "0.16.2 / 2015-01-28\n\nfixed fs.copy for Node v0.8 (support is temporary and will be removed in the near future)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-48",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-48",
    "title": "3327 Research",
    "section": "0.16.1 / 2015-01-28",
    "text": "0.16.1 / 2015-01-28\n\nif setImmediate is not available, fall back to process.nextTick"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-49",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-49",
    "title": "3327 Research",
    "section": "0.16.0 / 2015-01-28",
    "text": "0.16.0 / 2015-01-28\n\nbugfix fs.move() into itself. Closes [#104]\nbugfix fs.move() moving directory across device. Closes [#108]\nadded coveralls support\nbugfix: nasty multiple callback fs.copy() bug. Closes [#98]\nmisc fs.copy code cleanups"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-50",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-50",
    "title": "3327 Research",
    "section": "0.15.0 / 2015-01-21",
    "text": "0.15.0 / 2015-01-21\n\ndropped ncp, imported code in\nbecause of previous, now supports io.js\ngraceful-fs is now a dependency"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-51",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-51",
    "title": "3327 Research",
    "section": "0.14.0 / 2015-01-05",
    "text": "0.14.0 / 2015-01-05\n\nchanged copy/copySync from fs.copy(src, dest, [filters], callback) to fs.copy(src, dest, [options], callback) [#100][#100]\nremoved mockfs tests for mkdirp (this may be temporary, but was getting in the way of other tests)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-52",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-52",
    "title": "3327 Research",
    "section": "0.13.0 / 2014-12-10",
    "text": "0.13.0 / 2014-12-10\n\nremoved touch and touchSync methods (they didn’t handle permissions like UNIX touch)\nupdated \"ncp\": \"^0.6.0\" to \"ncp\": \"^1.0.1\"\nimported mkdirp => minimist and mkdirp are no longer dependences, should now appease people who wanted mkdirp to be --use_strict safe. See #59"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-53",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-53",
    "title": "3327 Research",
    "section": "0.12.0 / 2014-09-22",
    "text": "0.12.0 / 2014-09-22\n\ncopy symlinks in copySync() [#85][#85]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-54",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-54",
    "title": "3327 Research",
    "section": "0.11.1 / 2014-09-02",
    "text": "0.11.1 / 2014-09-02\n\nbugfix copySync() preserve file permissions [#80][#80]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-55",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-55",
    "title": "3327 Research",
    "section": "0.11.0 / 2014-08-11",
    "text": "0.11.0 / 2014-08-11\n\nupgraded \"ncp\": \"^0.5.1\" to \"ncp\": \"^0.6.0\"\nupgrade jsonfile\": \"^1.2.0\" to jsonfile\": \"^2.0.0\" => on write, json files now have \\n at end. Also adds options.throws to readJsonSync() see https://github.com/jprichardson/node-jsonfile#readfilesyncfilename-options for more details."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-56",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-56",
    "title": "3327 Research",
    "section": "0.10.0 / 2014-06-29",
    "text": "0.10.0 / 2014-06-29\n\nbugfix: upgaded \"jsonfile\": \"~1.1.0\" to \"jsonfile\": \"^1.2.0\", bumped minor because of jsonfile dep change from ~ to ^. [#67]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-57",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-57",
    "title": "3327 Research",
    "section": "0.9.1 / 2014-05-22",
    "text": "0.9.1 / 2014-05-22\n\nremoved Node.js 0.8.x support, 0.9.0 was published moments ago and should have been done there"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-58",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-58",
    "title": "3327 Research",
    "section": "0.9.0 / 2014-05-22",
    "text": "0.9.0 / 2014-05-22\n\nupgraded ncp from ~0.4.2 to ^0.5.1, [#58]\nupgraded rimraf from ~2.2.6 to ^2.2.8\nupgraded mkdirp from 0.3.x to ^0.5.0\nadded methods ensureFile(), ensureFileSync()\nadded methods ensureDir(), ensureDirSync() [#31]\nadded move() method. From: https://github.com/andrewrk/node-mv"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-59",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-59",
    "title": "3327 Research",
    "section": "0.8.1 / 2013-10-24",
    "text": "0.8.1 / 2013-10-24\n\ncopy failed to return an error to the callback if a file doesn’t exist (ulikoehler [#38], [#39])"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-60",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-60",
    "title": "3327 Research",
    "section": "0.8.0 / 2013-10-14",
    "text": "0.8.0 / 2013-10-14\n\nfilter implemented on copy() and copySync(). (Srirangan / [#36])"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-61",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-61",
    "title": "3327 Research",
    "section": "0.7.1 / 2013-10-12",
    "text": "0.7.1 / 2013-10-12\n\ncopySync() implemented (Srirangan / [#33])\nupdated to the latest jsonfile version 1.1.0 which gives options params for the JSON methods. Closes [#32]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-62",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-62",
    "title": "3327 Research",
    "section": "0.7.0 / 2013-10-07",
    "text": "0.7.0 / 2013-10-07\n\nupdate readme conventions\ncopy() now works if destination directory does not exist. Closes [#29]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-63",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-63",
    "title": "3327 Research",
    "section": "0.6.4 / 2013-09-05",
    "text": "0.6.4 / 2013-09-05\n\nchanged homepage field in package.json to remove NPM warning"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-64",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-64",
    "title": "3327 Research",
    "section": "0.6.3 / 2013-06-28",
    "text": "0.6.3 / 2013-06-28\n\nchanged JSON spacing default from 4 to 2 to follow Node conventions\nupdated jsonfile dep\nupdated rimraf dep"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-65",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-65",
    "title": "3327 Research",
    "section": "0.6.2 / 2013-06-28",
    "text": "0.6.2 / 2013-06-28\n\nadded .npmignore, [#25]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-66",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-66",
    "title": "3327 Research",
    "section": "0.6.1 / 2013-05-14",
    "text": "0.6.1 / 2013-05-14\n\nmodified for strict mode, closes [#24]\nadded outputJson()/outputJsonSync(), closes [#23]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-67",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-67",
    "title": "3327 Research",
    "section": "0.6.0 / 2013-03-18",
    "text": "0.6.0 / 2013-03-18\n\nremoved node 0.6 support\nadded node 0.10 support\nupgraded to latest ncp and rimraf.\noptional graceful-fs support. Closes [#17]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-68",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-68",
    "title": "3327 Research",
    "section": "0.5.0 / 2013-02-03",
    "text": "0.5.0 / 2013-02-03\n\nRemoved readTextFile.\nRenamed readJSONFile to readJSON and readJson, same with write.\nRestructured documentation a bit. Added roadmap."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-69",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-69",
    "title": "3327 Research",
    "section": "0.4.0 / 2013-01-28",
    "text": "0.4.0 / 2013-01-28\n\nSet default spaces in jsonfile from 4 to 2.\nUpdated testutil deps for tests.\nRenamed touch() to createFile()\nAdded outputFile() and outputFileSync()\nChanged creation of testing diretories so the /tmp dir is not littered.\nAdded readTextFile() and readTextFileSync()."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-70",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-70",
    "title": "3327 Research",
    "section": "0.3.2 / 2012-11-01",
    "text": "0.3.2 / 2012-11-01\n\nAdded touch() and touchSync() methods."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-71",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-71",
    "title": "3327 Research",
    "section": "0.3.1 / 2012-10-11",
    "text": "0.3.1 / 2012-10-11\n\nFixed some stray globals."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-72",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-72",
    "title": "3327 Research",
    "section": "0.3.0 / 2012-10-09",
    "text": "0.3.0 / 2012-10-09\n\nRemoved all CoffeeScript from tests.\nRenamed mkdir to mkdirs/mkdirp."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-73",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-73",
    "title": "3327 Research",
    "section": "0.2.1 / 2012-09-11",
    "text": "0.2.1 / 2012-09-11\n\nUpdated rimraf dep."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-74",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-74",
    "title": "3327 Research",
    "section": "0.2.0 / 2012-09-10",
    "text": "0.2.0 / 2012-09-10\n\nRewrote module into JavaScript. (Must still rewrite tests into JavaScript)\nAdded all methods of jsonfile\nAdded Travis-CI."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-75",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-75",
    "title": "3327 Research",
    "section": "0.1.3 / 2012-08-13",
    "text": "0.1.3 / 2012-08-13\n\nAdded method readJSONFile."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-76",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-76",
    "title": "3327 Research",
    "section": "0.1.2 / 2012-06-15",
    "text": "0.1.2 / 2012-06-15\n\nBug fix: deleteSync() didn’t exist.\nVerified Node v0.8 compatibility."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-77",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-77",
    "title": "3327 Research",
    "section": "0.1.1 / 2012-06-15",
    "text": "0.1.1 / 2012-06-15\n\nFixed bug in remove()/delete() that wouldn’t execute the function if a callback wasn’t passed."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-78",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-78",
    "title": "3327 Research",
    "section": "0.1.0 / 2012-05-31",
    "text": "0.1.0 / 2012-05-31\n\nRenamed copyFile() to copy(). copy() can now copy directories (recursively) too.\nRenamed rmrf() to remove().\nremove() aliased with delete().\nAdded mkdirp capabilities. Named: mkdir(). Hides Node.js native mkdir().\nInstead of exporting the native fs module with new functions, I now copy over the native methods to a new object and export that instead."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-79",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-79",
    "title": "3327 Research",
    "section": "0.0.4 / 2012-03-14",
    "text": "0.0.4 / 2012-03-14\n\nRemoved CoffeeScript dependency"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-80",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fs-extra/CHANGELOG.html#section-80",
    "title": "3327 Research",
    "section": "0.0.3 / 2012-01-11",
    "text": "0.0.3 / 2012-01-11\n\nAdded methods rmrf and rmrfSync\nMoved tests from Jasmine to Mocha\n\n[#126]: https://github.com/jprichardson/node-fs-extra/issues/126 ” TypeError: Object # has no method ‘access’” [#125]: https://github.com/jprichardson/node-fs-extra/issues/125 “Question: What do the *Sync function do different from non-sync” [#124]: https://github.com/jprichardson/node-fs-extra/issues/124 “move with clobber option ‘ENOTEMPTY’” [#123]: https://github.com/jprichardson/node-fs-extra/issues/123 “Only copy the content of a directory” [#122]: https://github.com/jprichardson/node-fs-extra/pull/122 “Update section links in README to match current section ids.” [#121]: https://github.com/jprichardson/node-fs-extra/issues/121 “emptyDir is undefined” [#120]: https://github.com/jprichardson/node-fs-extra/issues/120 “usage bug caused by shallow cloning methods of ‘graceful-fs’” [#119]: https://github.com/jprichardson/node-fs-extra/issues/119 “mkdirs and ensureDir never invoke callback and consume CPU indefinitely if provided a path with invalid characters on Windows” [#118]: https://github.com/jprichardson/node-fs-extra/pull/118 “createOutputStream” [#117]: https://github.com/jprichardson/node-fs-extra/pull/117 “Fixed issue with slash separated paths on windows” [#116]: https://github.com/jprichardson/node-fs-extra/issues/116 “copySync can only copy directories not files [documentation, feature-copy]” [#115]: https://github.com/jprichardson/node-fs-extra/issues/115 “.Copy & .CopySync [feature-copy]” [#114]: https://github.com/jprichardson/node-fs-extra/issues/114 “Fails to move (rename) directory to non-empty directory even with clobber: true” [#113]: https://github.com/jprichardson/node-fs-extra/issues/113 “fs.copy seems to callback early if the destination file already exists” [#112]: https://github.com/jprichardson/node-fs-extra/pull/112 “Copying a file into an existing directory” [#111]: https://github.com/jprichardson/node-fs-extra/pull/111 “Moving a file into an existing directory” [#110]: https://github.com/jprichardson/node-fs-extra/pull/110 “Moving a file into an existing directory” [#109]: https://github.com/jprichardson/node-fs-extra/issues/109 “fs.move across windows drives fails” [#108]: https://github.com/jprichardson/node-fs-extra/issues/108 “fse.move directories across multiple devices doesn’t work” [#107]: https://github.com/jprichardson/node-fs-extra/pull/107 “Check if dest path is an existing dir and copy or move source in it” [#106]: https://github.com/jprichardson/node-fs-extra/issues/106 “fse.copySync crashes while copying across devices D: [feature-copy]” [#105]: https://github.com/jprichardson/node-fs-extra/issues/105 “fs.copy hangs on iojs” [#104]: https://github.com/jprichardson/node-fs-extra/issues/104 “fse.move deletes folders [bug]” [#103]: https://github.com/jprichardson/node-fs-extra/issues/103 “Error: EMFILE with copy” [#102]: https://github.com/jprichardson/node-fs-extra/issues/102 “touch / touchSync was removed ?” [#101]: https://github.com/jprichardson/node-fs-extra/issues/101 “fs-extra promisified” [#100]: https://github.com/jprichardson/node-fs-extra/pull/100 “copy: options object or filter to pass to ncp” [#99]: https://github.com/jprichardson/node-fs-extra/issues/99 “ensureDir() modes [future]” [#98]: https://github.com/jprichardson/node-fs-extra/issues/98 “fs.copy() incorrect async behavior [bug]” [#97]: https://github.com/jprichardson/node-fs-extra/pull/97 “use path.join; fix copySync bug” [#96]: https://github.com/jprichardson/node-fs-extra/issues/96 “destFolderExists in copySync is always undefined.” [#95]: https://github.com/jprichardson/node-fs-extra/pull/95 “Using graceful-ncp instead of ncp” [#94]: https://github.com/jprichardson/node-fs-extra/issues/94 “Error: EEXIST, file already exists ‘../mkdirp/bin/cmd.js’ on fs.copySync() [enhancement, feature-copy]” [#93]: https://github.com/jprichardson/node-fs-extra/issues/93 “Confusing error if drive not mounted [enhancement]” [#92]: https://github.com/jprichardson/node-fs-extra/issues/92 “Problems with Bluebird” [#91]: https://github.com/jprichardson/node-fs-extra/issues/91 “fs.copySync(‘/test’, ‘/haha’) is different with ‘cp -r /test /haha’ [enhancement]” [#90]: https://github.com/jprichardson/node-fs-extra/issues/90 “Folder creation and file copy is Happening in 64 bit machine but not in 32 bit machine” [#89]: https://github.com/jprichardson/node-fs-extra/issues/89 “Error: EEXIST using fs-extra’s fs.copy to copy a directory on Windows” [#88]: https://github.com/jprichardson/node-fs-extra/issues/88 “Stacking those libraries” [#87]: https://github.com/jprichardson/node-fs-extra/issues/87 “createWriteStream + outputFile = ?” [#86]: https://github.com/jprichardson/node-fs-extra/issues/86 “no moveSync?” [#85]: https://github.com/jprichardson/node-fs-extra/pull/85 “Copy symlinks in copySync” [#84]: https://github.com/jprichardson/node-fs-extra/issues/84 “Push latest version to npm ?” [#83]: https://github.com/jprichardson/node-fs-extra/issues/83 “Prevent copying a directory into itself [feature-copy]” [#82]: https://github.com/jprichardson/node-fs-extra/pull/82 “README updates for move” [#81]: https://github.com/jprichardson/node-fs-extra/issues/81 “fd leak after fs.move” [#80]: https://github.com/jprichardson/node-fs-extra/pull/80 “Preserve file mode in copySync” [#79]: https://github.com/jprichardson/node-fs-extra/issues/79 “fs.copy only .html file empty” [#78]: https://github.com/jprichardson/node-fs-extra/pull/78 “copySync was not applying filters to directories” [#77]: https://github.com/jprichardson/node-fs-extra/issues/77 “Create README reference to bluebird” [#76]: https://github.com/jprichardson/node-fs-extra/issues/76 “Create README reference to typescript” [#75]: https://github.com/jprichardson/node-fs-extra/issues/75 “add glob as a dep? [question]” [#74]: https://github.com/jprichardson/node-fs-extra/pull/74 “including new emptydir module” [#73]: https://github.com/jprichardson/node-fs-extra/pull/73 “add dependency status in readme” [#72]: https://github.com/jprichardson/node-fs-extra/pull/72 “Use svg instead of png to get better image quality” [#71]: https://github.com/jprichardson/node-fs-extra/issues/71 “fse.copy not working on Windows 7 x64 OS, but, copySync does work” [#70]: https://github.com/jprichardson/node-fs-extra/issues/70 “Not filter each file, stops on first false [bug]” [#69]: https://github.com/jprichardson/node-fs-extra/issues/69 “How to check if folder exist and read the folder name” [#68]: https://github.com/jprichardson/node-fs-extra/issues/68 “consider flag to readJsonSync (throw false) [enhancement]” [#67]: https://github.com/jprichardson/node-fs-extra/issues/67 “docs for readJson incorrectly states that is accepts options” [#66]: https://github.com/jprichardson/node-fs-extra/issues/66 “ENAMETOOLONG” [#65]: https://github.com/jprichardson/node-fs-extra/issues/65 “exclude filter in fs.copy” [#64]: https://github.com/jprichardson/node-fs-extra/issues/64 “Announce: mfs - monitor your fs-extra calls” [#63]: https://github.com/jprichardson/node-fs-extra/issues/63 “Walk” [#62]: https://github.com/jprichardson/node-fs-extra/issues/62 “npm install fs-extra doesn’t work” [#61]: https://github.com/jprichardson/node-fs-extra/issues/61 “No longer supports node 0.8 due to use of ^ in package.json dependencies” [#60]: https://github.com/jprichardson/node-fs-extra/issues/60 “chmod & chown for mkdirs” [#59]: https://github.com/jprichardson/node-fs-extra/issues/59 “Consider including mkdirp and making fs-extra ‘–use_strict’ safe [question]” [#58]: https://github.com/jprichardson/node-fs-extra/issues/58 “Stack trace not included in fs.copy error” [#57]: https://github.com/jprichardson/node-fs-extra/issues/57 “Possible to include wildcards in delete?” [#56]: https://github.com/jprichardson/node-fs-extra/issues/56 “Crash when have no access to write to destination file in copy” [#55]: https://github.com/jprichardson/node-fs-extra/issues/55 “Is it possible to have any console output similar to Grunt copy module?” [#54]: https://github.com/jprichardson/node-fs-extra/issues/54 “copy does not preserve file ownership and permissons” [#53]: https://github.com/jprichardson/node-fs-extra/issues/53 “outputFile() - ability to write data in appending mode” [#52]: https://github.com/jprichardson/node-fs-extra/pull/52 “This fixes (what I think) is a bug in copySync” [#51]: https://github.com/jprichardson/node-fs-extra/pull/51 “Add a Bitdeli Badge to README” [#50]: https://github.com/jprichardson/node-fs-extra/issues/50 “Replace mechanism in createFile” [#49]: https://github.com/jprichardson/node-fs-extra/pull/49 “update rimraf to v2.2.6” [#48]: https://github.com/jprichardson/node-fs-extra/issues/48 “fs.copy issue [bug]” [#47]: https://github.com/jprichardson/node-fs-extra/issues/47 “Bug in copy - callback called on readStream ‘close’ - Fixed in ncp 0.5.0” [#46]: https://github.com/jprichardson/node-fs-extra/pull/46 “update copyright year” [#45]: https://github.com/jprichardson/node-fs-extra/pull/45 “Added note about fse.outputFile() being the one that overwrites” [#44]: https://github.com/jprichardson/node-fs-extra/pull/44 “Proposal: Stream support” [#43]: https://github.com/jprichardson/node-fs-extra/issues/43 “Better error reporting” [#42]: https://github.com/jprichardson/node-fs-extra/issues/42 “Performance issue?” [#41]: https://github.com/jprichardson/node-fs-extra/pull/41 “There does seem to be a synchronous version now” [#40]: https://github.com/jprichardson/node-fs-extra/issues/40 “fs.copy throw unexplained error ENOENT, utime” [#39]: https://github.com/jprichardson/node-fs-extra/pull/39 “Added regression test for copy() return callback on error” [#38]: https://github.com/jprichardson/node-fs-extra/pull/38 “Return err in copy() fstat cb, because stat could be undefined or null” [#37]: https://github.com/jprichardson/node-fs-extra/issues/37 “Maybe include a line reader? [enhancement, question]” [#36]: https://github.com/jprichardson/node-fs-extra/pull/36 “filter parameter fs.copy and fs.copySync” [#35]: https://github.com/jprichardson/node-fs-extra/pull/35 “filter parameter fs.copy and fs.copySync” [#34]: https://github.com/jprichardson/node-fs-extra/issues/34 “update docs to include options for JSON methods [enhancement]” [#33]: https://github.com/jprichardson/node-fs-extra/pull/33 “fs_extra.copySync” [#32]: https://github.com/jprichardson/node-fs-extra/issues/32 “update to latest jsonfile [enhancement]” [#31]: https://github.com/jprichardson/node-fs-extra/issues/31 “Add ensure methods [enhancement]” [#30]: https://github.com/jprichardson/node-fs-extra/issues/30 “update package.json optional dep graceful-fs” [#29]: https://github.com/jprichardson/node-fs-extra/issues/29 “Copy failing if dest directory doesn’t exist. Is this intended?” [#28]: https://github.com/jprichardson/node-fs-extra/issues/28 “homepage field must be a string url. Deleted.” [#27]: https://github.com/jprichardson/node-fs-extra/issues/27 “Update Readme” [#26]: https://github.com/jprichardson/node-fs-extra/issues/26 “Add readdir recursive method. [enhancement]” [#25]: https://github.com/jprichardson/node-fs-extra/pull/25 “adding an .npmignore file” [#24]: https://github.com/jprichardson/node-fs-extra/issues/24 “[bug] cannot run in strict mode [bug]” [#23]: https://github.com/jprichardson/node-fs-extra/issues/23 “writeJSON() should create parent directories” [#22]: https://github.com/jprichardson/node-fs-extra/pull/22 “Add a limit option to mkdirs()” [#21]: https://github.com/jprichardson/node-fs-extra/issues/21 “touch() in 0.10.0” [#20]: https://github.com/jprichardson/node-fs-extra/issues/20 “fs.remove yields callback before directory is really deleted” [#19]: https://github.com/jprichardson/node-fs-extra/issues/19 “fs.copy err is empty array” [#18]: https://github.com/jprichardson/node-fs-extra/pull/18 “Exposed copyFile Function” [#17]: https://github.com/jprichardson/node-fs-extra/issues/17 “Use require('graceful-fs') if found instead of require('fs')” [#16]: https://github.com/jprichardson/node-fs-extra/pull/16 “Update README.md” [#15]: https://github.com/jprichardson/node-fs-extra/issues/15 “Implement cp -r but sync aka copySync. [enhancement]” [#14]: https://github.com/jprichardson/node-fs-extra/issues/14 “fs.mkdirSync is broken in 0.3.1” [#13]: https://github.com/jprichardson/node-fs-extra/issues/13 “Thoughts on including a directory tree / file watcher? [enhancement, question]” [#12]: https://github.com/jprichardson/node-fs-extra/issues/12 “copyFile & copyFileSync are global” [#11]: https://github.com/jprichardson/node-fs-extra/issues/11 “Thoughts on including a file walker? [enhancement, question]” [#10]: https://github.com/jprichardson/node-fs-extra/issues/10 “move / moveFile API [enhancement]” [#9]: https://github.com/jprichardson/node-fs-extra/issues/9 “don’t import normal fs stuff into fs-extra” [#8]: https://github.com/jprichardson/node-fs-extra/pull/8 “Update rimraf to latest version” [#6]: https://github.com/jprichardson/node-fs-extra/issues/6 “Remove CoffeeScript development dependency” [#5]: https://github.com/jprichardson/node-fs-extra/issues/5 “comments on naming” [#4]: https://github.com/jprichardson/node-fs-extra/issues/4 “version bump to 0.2” [#3]: https://github.com/jprichardson/node-fs-extra/pull/3 “Hi! I fixed some code for you!” [#2]: https://github.com/jprichardson/node-fs-extra/issues/2 “Merge with fs.extra and mkdirp” [#1]: https://github.com/jprichardson/node-fs-extra/issues/1 “file-extra npm !exist”\n\n\n\n \n\n\n \n\n  \n    Proudly supported by    \n      \n        \n    \n    About"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rlp/node_modules/bn.js/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rlp/node_modules/bn.js/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "5.2.0 / 2021-02-23",
    "text": "5.2.0 / 2021-02-23\n\nfix: Buffer not using global in browser (#260)\nFix LE constructor for HEX (#265)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rlp/node_modules/bn.js/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rlp/node_modules/bn.js/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "5.1.3 / 2020-08-14",
    "text": "5.1.3 / 2020-08-14\n\nAdd support for defined but not implemented Symbol.for (#252)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rlp/node_modules/bn.js/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rlp/node_modules/bn.js/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "5.1.2 / 2020-05-20",
    "text": "5.1.2 / 2020-05-20\n\nFix BN v5/v4 interoperability issue (#249)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rlp/node_modules/bn.js/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rlp/node_modules/bn.js/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "5.1.1 / 2019-12-24",
    "text": "5.1.1 / 2019-12-24\n\nTemporary workaround for BN#_move (#236)\nAdd eslintrc instead config in package.json (#237)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rlp/node_modules/bn.js/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rlp/node_modules/bn.js/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "5.1.0 / 2019-12-23",
    "text": "5.1.0 / 2019-12-23\n\nBenchmark for BigInt (#226)\nAdd documentation for max/min (#232)\nUpdate BN#inspect for Symbols (#225)\nImprove performance of toArrayLike (#222)\ntemporary disable jumboMulTo in BN#mulTo (#221)\noptimize toBitArray function (#212)\nfix iaddn sign issue (#216)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rlp/node_modules/bn.js/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rlp/node_modules/bn.js/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "5.0.0 / 2019-07-04",
    "text": "5.0.0 / 2019-07-04\n\ntravis: update node versions (#205)\nRefactor buffer constructor (#200)\nlib: fix for negative numbers: imuln, modrn, idivn (#185)\nbn: fix Red#imod (#178)\ncheck unexpected high bits for invalid characters (#173)\ndocument support very large integers (#158)\nonly define toBuffer if Buffer is defined (#172)\nlib: better validation of string input (#151)\ntests: reject decimal input in constructor (#91)\nbn: make .strip() an internal method (#105)\nlib: deprecate .modn() introduce .modrn() (#112 #129 #130)\nbn: don’t accept invalid characters (#141)\npackage: use files insteadof .npmignore (#152)\nbn: improve allocation speed for buffers (#167)\ntoJSON to default to interoperable hex (length % 2) (#164)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/color-convert/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/color-convert/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "1.0.0 - 2016-01-07\n\nRemoved: unused speed test\nAdded: Automatic routing between previously unsupported conversions (#27)\nRemoved: xxx2xxx() and xxx2xxxRaw() functions (#27)\nRemoved: convert() class (#27)\nChanged: all functions to lookup dictionary (#27)\nChanged: ansi to ansi256 (#27)\nFixed: argument grouping for functions requiring only one argument (#27)\n\n\n\n0.6.0 - 2015-07-23\n\nAdded: methods to handle ANSI 16/256 colors:\n\nrgb2ansi16\nrgb2ansi\nhsl2ansi16\nhsl2ansi\nhsv2ansi16\nhsv2ansi\nhwb2ansi16\nhwb2ansi\ncmyk2ansi16\ncmyk2ansi\nkeyword2ansi16\nkeyword2ansi\nansi162rgb\nansi162hsl\nansi162hsv\nansi162hwb\nansi162cmyk\nansi162keyword\nansi2rgb\nansi2hsl\nansi2hsv\nansi2hwb\nansi2cmyk\nansi2keyword (#18)\n\n\n\n\n0.5.3 - 2015-06-02\n\nFixed: hsl2hsv does not return NaN anymore when using [0,0,0] (#15)\n\n\nCheck out commit logs for older releases"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/unpipe/HISTORY.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/unpipe/HISTORY.html",
    "title": "3327 Research",
    "section": "",
    "text": "1.0.0 / 2015-06-14\n\nInitial release"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs-unparser/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs-unparser/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "1.6.0 (2019-07-30)",
    "text": "1.6.0 (2019-07-30)\n\nBug Fixes\n\nsecurity: update deps addressing recent audit vulnerabilities (#40) (2e74f1b)\naddress bug with camelCased flattened keys (#32) (981533a)\ndeps: updated the lodash version to fix vulnerability (#39) (7375966)\npackage: update yargs to version 10.0.3 (f1eb4cb)\npackage: update yargs to version 11.0.0 (6aa7c91)\n\n\n\nFeatures\n\nadd interoperation with minimist (ba477f5)\n\n # 1.5.0 (2018-11-30)\n\n\nBug Fixes\n\npackage: update yargs to version 10.0.3 (f1eb4cb)\npackage: update yargs to version 11.0.0 (6aa7c91)\n\n\n\nFeatures\n\nadd interoperation with minimist (ba477f5)\n\n # 1.4.0 (2017-12-30)\n\n\nFeatures\n\nadd interoperation with minimist (ba477f5)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/binary-extensions/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/binary-extensions/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install binary-extensions"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/binary-extensions/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/binary-extensions/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst binaryExtensions = require('binary-extensions');\n\nconsole.log(binaryExtensions);\n//=> ['3ds', '3g2', …]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/binary-extensions/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/binary-extensions/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nis-binary-path - Check if a filepath is a binary file\ntext-extensions - List of text file extensions\n\n\n\n<b>\n    <a href=\"https://tidelift.com/subscription/pkg/npm-binary-extensions?utm_source=npm-binary-extensions&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n</b>\n<br>\n<sub>\n    Tidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n</sub>"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/get-caller-file/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/get-caller-file/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "ISC License (ISC) Copyright 2018 Stefan Penner\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED “AS IS” AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/util-deprecate/History.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/util-deprecate/History.html",
    "title": "3327 Research",
    "section": "",
    "text": "1.0.2 / 2015-10-07\n\nuse try/catch when checking localStorage (#3, @kumavis)\n\n\n\n1.0.1 / 2014-11-25\n\nbrowser: use console.warn() for deprecation calls\nbrowser: more jsdocs\n\n\n\n1.0.0 / 2014-04-30\n\ninitial commit"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/secp256k1/API.html#api-reference-v4.x",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/secp256k1/API.html#api-reference-v4.x",
    "title": "3327 Research",
    "section": "API Reference (v4.x)",
    "text": "API Reference (v4.x)\n\nFunctions work with Uint8Array. While Buffer is awesome, current version for browsers (feross/buffer) is out of date (compare to Node.js Buffer) and in future difference probably will be only bigger. But because Buffer extends Uint8Array, you can pass and receive Buffers easily. Also, work with native Uint8Array reduce final build size, if you do not use Buffer in your browser application.\nCustom type for data output. It’s possible pass Buffer or Object which inherits Uint8Array to function for data output. Of course length should match, or you can pass function which accept number of bytes and return instance with specified length.\nIn place operations (follow bitcoin-core/secp256k1 API):\n\nprivateKeyNegate\nprivateKeyTweakAdd\nprivateKeyTweakMul\nsignatureNormalize\n\n\nIf you need new instance this can be easily done with creating it before pass to functions. For example:\nconst newPrivateKey = secp256k1.privateKeyNegate(Buffer.from(privateKey))\n\n\n.contextRandomize(seed: Uint8Array): void\n.privateKeyVerify(privateKey: Uint8Array): boolean\n.privateKeyNegate(privateKey: Uint8Array): Uint8Array\n.privateKeyTweakAdd(privateKey: Uint8Array, tweak: Uint8Array): Uint8Array\n.privateKeyTweakMul(privateKey: Uint8Array, tweak: Uint8Array): Uint8Array\n.publicKeyVerify(publicKey: Uint8Array): boolean\n.publicKeyCreate(privateKey: Uint8Array, compressed: boolean = true, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\n.publicKeyConvert(publicKey: Uint8Array, compressed: boolean = true, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\n.publicKeyNegate(publicKey: Uint8Array, compressed: boolean = true, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\n.publicKeyCombine(publicKeys: Uint8Array[], compressed: boolean = true, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\n.publicKeyTweakAdd(publicKey: Uint8Array, tweak: Uint8Array, compressed: boolean = true, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\n.publicKeyTweakMul(publicKey: Uint8Array, tweak: Uint8Array, compressed: boolean = true, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\n.signatureNormalize(signature: Uint8Array): Uint8Array\n.signatureExport(signature, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\n.signatureImport(signature, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\n.ecdsaSign(message: Uint8Array, privateKey: Uint8Array, { data, noncefn }: { data?: Uint8Array, noncefn?: ((message: Uint8Array, privateKey: Uint8Array, algo: null, data: Uint8Array, counter: number) => Uint8Array) } = {}, output: Uint8Array | ((len: number) => Uint8Array)): { signature: Uint8Array, recid: number }\n.ecdsaVerify(signature: Uint8Array, message: Uint8Array, publicKey: Uint8Array): boolean\n.ecdsaRecover(signature: Uint8Array, recid: number, message: Uint8Array, compressed: boolean = true, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\n.ecdh(publicKey: Uint8Array, privateKey: Uint8Array, { data, xbuf, ybuf, hashfn }: { data?: Uint8Array, xbuf?: Uint8Array, ybuf?: Uint8Array, hashfn?: ((x: Uint8Array, y: Uint8Array, data: Uint8Array) => Uint8Array) } = {}, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\n\n\n.contextRandomize(seed: Uint8Array): void\nUpdates the context randomization to protect against side-channel leakage, seed should be Uint8Array with length 32.\n\n\n.privateKeyVerify(privateKey: Uint8Array): boolean\nVerify a private key.\n\n\n.privateKeyNegate(privateKey: Uint8Array): Uint8Array\nNegate a private key in place and return result.\n\n\n.privateKeyTweakAdd(privateKey: Uint8Array, tweak: Uint8Array): Uint8Array\nTweak a private key in place by adding tweak to it.\n\n\n.privateKeyTweakMul(privateKey: Uint8Array, tweak: Uint8Array): Uint8Array\nTweak a private key in place by multiplying it by a tweak.\n\n\n.publicKeyVerify(publicKey: Uint8Array): boolean\nVerify a public key.\n\n\n.publicKeyCreate(privateKey: Uint8Array, compressed: boolean = true, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\nCompute the public key for a secret key.\n\n\n.publicKeyConvert(publicKey: Uint8Array, compressed: boolean = true, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\nReserialize public key to another format.\n\n\n.publicKeyNegate(publicKey: Uint8Array, compressed: boolean = true, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\nNegates a public key in place.\n\n\n.publicKeyCombine(publicKeys: Uint8Array[], compressed: boolean = true, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\nAdd a number of public keys together.\n\n\n.publicKeyTweakAdd(publicKey: Uint8Array, tweak: Uint8Array, compressed: boolean = true, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\nTweak a public key by adding tweak times the generator to it.\n\n\n.publicKeyTweakMul(publicKey: Uint8Array, tweak: Uint8Array, compressed: boolean = true, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\nTweak a public key by multiplying it by a tweak value.\n\n\n.signatureNormalize(signature: Uint8Array): Uint8Array\nConvert a signature to a normalized lower-S form in place.\n\n\n.signatureExport(signature, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\nExport an ECDSA signature to DER format.\n\n\n.signatureImport(signature, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\nParse a DER ECDSA signature.\n\n\n.ecdsaSign(message: Uint8Array, privateKey: Uint8Array, { data, noncefn }: { data?: Uint8Array, noncefn?: ((message: Uint8Array, privateKey: Uint8Array, algo: null, data: Uint8Array, counter: number) => Uint8Array) } = {}, output: Uint8Array | ((len: number) => Uint8Array)): { signature: Uint8Array, recid: number }\nCreate an ECDSA signature.\n\n\n.ecdsaVerify(signature: Uint8Array, message: Uint8Array, publicKey: Uint8Array): boolean\nVerify an ECDSA signature.\n\n\n.ecdsaRecover(signature: Uint8Array, recid: number, message: Uint8Array, compressed: boolean = true, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\nRecover an ECDSA public key from a signature.\n\n\n.ecdh(publicKey: Uint8Array, privateKey: Uint8Array, { data, xbuf, ybuf, hashfn }: { data?: Uint8Array, xbuf?: Uint8Array, ybuf?: Uint8Array, hashfn?: ((x: Uint8Array, y: Uint8Array, data: Uint8Array) => Uint8Array) } = {}, output: Uint8Array | ((len: number) => Uint8Array) = (len) => new Uint8Array(len)): Uint8Array\nCompute an EC Diffie-Hellman secret in constant time."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/secp256k1/src/secp256k1/SECURITY.html#reporting-a-vulnerability",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/secp256k1/src/secp256k1/SECURITY.html#reporting-a-vulnerability",
    "title": "3327 Research",
    "section": "Reporting a Vulnerability",
    "text": "Reporting a Vulnerability\nTo report security issues send an email to secp256k1-security@bitcoincore.org (not for support).\nThe following keys may be used to communicate sensitive information to developers:\n\n\n\nName\nFingerprint\n\n\n\n\nPieter Wuille\n133E AC17 9436 F14A 5CF1 B794 860F EB80 4E66 9320\n\n\nAndrew Poelstra\n699A 63EF C17A D3A9 A34C FFC0 7AD0 A91C 40BD 0091\n\n\nTim Ruffing\n09E0 3F87 1092 E40E 106E 902B 33BC 86AB 80FF 5516\n\n\n\nYou can import a key by running the following command with that individual’s fingerprint: gpg --recv-keys \"<fingerprint>\" Ensure that you put quotes around fingerprints containing spaces."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object.getownpropertydescriptors/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object.getownpropertydescriptors/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "2.1.3 / 2021-10-03\n\n[readme] remove travis badge; add actions and codecov badges\n[Deps] update es-abstract\n[meta] use prepublishOnly script for npm 7+\n[Dev Deps] update eslint, @ljharb/eslint-config, @es-shims/api, aud, tape\n[actions] update workflows\n[actions] use node/install instead of node/run; use codecov action\n\n\n\n2.1.2 / 2021-02-20\n\n[Deps] update call-bind, es-abstract\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, functions-have-names, has-strict-mode, tape\n[meta] do not publish github action workflow files\n[meta] gitignore coverage output\n[actions] update workflows\n\n\n\n2.1.1 / 2020-11-26\n\n[Fix] do not mutate the native function when present\n[Deps] update es-abstract; use call-bind where applicable\n[meta] remove unused Makefile and associated utilities\n[Dev Deps] update eslint, @ljharb/eslint-config, tape, functions-have-names; add aud\n[actions] add Require Allow Edits workflow\n[actions] switch Automatic Rebase workflow to pull_request_target event\n[Tests] migrate tests to Github Actions\n[Tests] run nyc on all tests\n[Tests] add implementation test; run es-shim-api in postlint; use tape runner\n[Tests] only audit prod deps\n\n\n\n2.1.0 / 2019-12-12\n\n[New] add auto entry point\n[Refactor] use split-up es-abstract (78% bundle size decrease)\n[readme] fix repo URLs, remove testling\n[Docs] Fix formatting in the README (#30)\n[Deps] update define-properties, es-abstract\n[Dev Deps] update eslint, @ljharb/eslint-config, functions-have-names, covert, replace, semver, tape, @es-shims/api; add safe-publish-latest\n[meta] add funding field\n[meta] Only apps should have lockfiles.\n[Tests] use shared travis-ci configs\n[Tests] use functions-have-names\n[Tests] use npx aud instead of nsp or npm audit with hoops\n[Tests] remove jscs\n[actions] add automatic rebasing / merge commit blocking\n\n\n\n2.0.3 / 2016-07-26\n\n[Fix] Update implementation to not return undefined descriptors\n[Deps] update es-abstract\n[Dev Deps] update eslint, @ljharb/eslint-config, @es-shims/api, jscs, nsp, tape, semver\n[Dev Deps] remove unused eccheck script + dep\n[Tests] up to node v6.3, v5.12, v4.4\n[Tests] use pretest/posttest for linting/security\nUpdate to stage 4\n\n\n\n2.0.2 / 2016-01-27\n\n[Fix] ensure that Object.getOwnPropertyDescriptors does not fail when Object.prototype has a poisoned setter (#1, #2)\n\n\n\n2.0.1 / 2016-01-27\n\n[Deps] move @es-shims/api to dev deps\n\n\n\n2.0.0 / 2016-01-27\n\n[Breaking] implement the es-shims API\n[Deps] update define-properties, es-abstract\n[Dev Deps] update tape, jscs, nsp, eslint, @ljharb/eslint-config, semver\n[Tests] fix npm upgrades in older nodes\n[Tests] up to node v5.5\n[Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG\n\n\n\n1.0.4 / 2015-07-20\n\n[Tests] Test on io.js v2.4\n[Deps, Dev Deps] Update define-properties, tape, eslint, semver\n\n\n\n1.0.3 / 2015-06-28\n\nIncrease robustness by caching Array#{concat, reduce}\n[Deps] Update define_properties\n[Dev Deps] Update eslint, semver, nsp\n[Tests] Test up to io.js v2.3\n\n\n\n1.0.2 / 2015-05-23\n\nUpdate es-abstract, tape, eslint, jscs, semver, covert\nTest up to io.js v2.0\n\n\n\n1.0.1 / 2015-03-20\n\nUpdate es-abstract, editorconfig-tools, nsp, eslint, semver, replace\n\n\n\n1.0.0 / 2015-02-17\n\nv1.0.0"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-symbols/CHANGELOG.html#v1.0.2---2021-02-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-symbols/CHANGELOG.html#v1.0.2---2021-02-27",
    "title": "3327 Research",
    "section": "v1.0.2 - 2021-02-27",
    "text": "v1.0.2 - 2021-02-27\n\nFixed\n\n[Fix] use a universal way to get the original Symbol #11\n\n\n\nCommits\n\n[Tests] migrate tests to Github Actions 90ae798\n[meta] do not publish github action workflow files 29e60a1\n[Tests] run nyc on all tests 8476b91\n[readme] fix repo URLs, remove defunct badges 126288e\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog, core-js, get-own-property-symbols d84bdfa\n[Tests] fix linting errors 0df3070\n[actions] add “Allow Edits” workflow 1e6bc29\n[Dev Deps] update eslint, @ljharb/eslint-config, tape 36cea2a\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, tape 1278338\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, tape 1493254\n[Dev Deps] update eslint, @ljharb/eslint-config, core-js b090bf2\n[actions] switch Automatic Rebase workflow to pull_request_target event 4addb7a\n[Dev Deps] update auto-changelog, tape 81d0baf\n[Dev Deps] update auto-changelog; add aud 1a4e561\n[readme] remove unused testling URLs 3000941\n[Tests] only audit prod deps 692e974\n[Dev Deps] update @ljharb/eslint-config 51c946c"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-symbols/CHANGELOG.html#v1.0.1---2019-11-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-symbols/CHANGELOG.html#v1.0.1---2019-11-16",
    "title": "3327 Research",
    "section": "v1.0.1 - 2019-11-16",
    "text": "v1.0.1 - 2019-11-16\n\nCommits\n\n[Tests] use shared travis-ci configs ce396c9\n[Tests] up to node v12.4, v11.15, v10.15, v9.11, v8.15, v7.10, v6.17, v4.9; use nvm install-latest-npm 0690732\n[meta] add auto-changelog 2163d0b\n[Dev Deps] update eslint, @ljharb/eslint-config, core-js, safe-publish-latest, tape 8e0951f\n[actions] add automatic rebasing / merge commit blocking b09cdb7\n[Dev Deps] update eslint, @ljharb/eslint-config, safe-publish-latest, core-js, get-own-property-symbols, tape 1dd42cd\n[meta] create FUNDING.yml aa57a17\nOnly apps should have lockfiles a2d8bea\n[Tests] use npx aud instead of nsp or npm audit with hoops 9e96cb7\n[meta] add funding field a0b32cf\n[Dev Deps] update safe-publish-latest cb9f0a5"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-symbols/CHANGELOG.html#v1.0.0---2016-09-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-symbols/CHANGELOG.html#v1.0.0---2016-09-19",
    "title": "3327 Research",
    "section": "v1.0.0 - 2016-09-19",
    "text": "v1.0.0 - 2016-09-19\n\nCommits\n\nTests. ecb6eb9\npackage.json 88a337c\nInitial commit 42e1e55\nInitial implementation. 33f5cc6\nread me 01f1170"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/CHANGELOG.html#unreleased",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/CHANGELOG.html#unreleased",
    "title": "3327 Research",
    "section": "Unreleased",
    "text": "Unreleased"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "4.0.0",
    "text": "4.0.0\n\nAdded\n\nBREAKING: Add subpath exports (#214, #211)\n\nThis is breaking because it prevents the import of modules that are not exposed as subpath exports.\n\nAdd salt to the EIP-712 domain type (#176)\nAdd additional unit tests (#146, #164, #167, #169, #172, #177, #180, #170, #171, #178, #173, #182, #184, #185, #187)\nImprove documentation (#157, #177, #174, #180, #178, #181, #186, #212, #207, #213)\n\n\n\nChanged\n\nBREAKING: Consolidate signTypedData and recoverTypedSignature functions (#156)\n\nThe functions signTypedDataLegacy, signTypedData, and signTypedData_v4 have been replaced with a single signTypedData function with a version parameter. The version parameter determines which type of signature you get.\n\nIf you used signTypedDataLegacy, switch to signTypedData with the version V1.\nIf you used signTypedData, switch to signTypedData with the version V3.\nIf you used signTypedData_v4, switch to signTypedData with the version V4.\n\nThe functions recoverTypedSignatureLegacy, recoverTypedSignature, and recoverTypedSignature_v4 have been replaced with a single recoverTypedSignature function.\n\nIf you used recoverTypedSignatureLegacy, switch to recoverTypedMessage with the version V1.\nIf you used recoverTypedMessage, switch to recoverTypedMessage with the version V3.\nIf you used recoverTypedSignature_v4, switch to recoverTypedMessage with the version V4.\n\n\nBREAKING: Rename TypedDataUtils.sign to TypedDataUtils.eip712Hash (#104)\n\nThis function never actually signed anything. It just created a hash that was later signed. The new name better reflects what the function does.\n\nBREAKING: Move package under @metamask npm organization (#162)\n\nUpdate your require and import statements to import @metamask/eth-sig-util rather than eth-sig-util.\n\nBREAKING: Simplify function type signatures (#198)\n\nThis is only a breaking change for TypeScript projects that were importing types used by the function signatures. The types should be far simpler now.\nThe TypedData has been updated to be more restrictive (it only allows valid typed data now), and it was renamed to TypedDataV1\n\nBREAKING: Replace MsgParams parameters with “options” parameters (#204)\n\nThis affects the following functions:\n\npersonalSign\nrecoverPersonalSignature\nextractPublicKey\nencrypt\nencryptSafely\ndecrypt\ndecryptSafely\nsignTypedData\nrecoverTypedSignature\n\nAll parameters are passed in as a single “options” object now, instead of the MsgParams type that was used for most of these functions previously. Read each function signature carefully to ensure you are correctly passing in parameters.\npersonalSign example:\n\nPreviously it was called like this: personalSign(privateKey, { data })\nNow it is called like this: personalSign({ privateKey, data })\n\n\nBREAKING: Rename Version type to SignTypedDataVersion (#218)\nBREAKING: Rename EIP712TypedData type to TypedDataV1Field (#218)\nAdd signTypedData version validation (#201)\nAdd validation to check that parameters aren’t nullish (#205)\nEnable inline sourcemaps (#159)\nUpdate ethereumjs-util to v6 (#138, #195)\nAllow TypedDataUtils functions to be called unbound (#152)\nUpdate minimum tweetnacl-util version (#155)\nAdd Solidity types to JSON schema for signTypedData (#189)\nReplace README API docs with generated docs (#213)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "3.0.1 - 2021-02-04",
    "text": "3.0.1 - 2021-02-04\n\nChanged\n\nUpdate ethereumjs-abi (#96)\nRemove unused dependencies (#117)\nUpdate minimum tweetnacl to latest version (#123)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "3.0.0 - 2020-11-09",
    "text": "3.0.0 - 2020-11-09\n\nChanged\n\n[BREAKING] Migrate to TypeScript (#74)\nFix package metadata (#81\nSwitch from Node.js v8 to Node.js v10 (#76 and #80)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "2.5.4 - 2021-02-04",
    "text": "2.5.4 - 2021-02-04\n\nChanged\n\nUpdate ethereumjs-abi (#121)\nRemove unused dependencies (#120)\nUpdate minimum tweetnacl to latest version (#124)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/CHANGELOG.html#withdrawn",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/CHANGELOG.html#withdrawn",
    "title": "3327 Research",
    "section": "2.5.3 - 2020-03-16 [WITHDRAWN]",
    "text": "2.5.3 - 2020-03-16 [WITHDRAWN]\n\nChanged\n\n[BREAKING] Migrate to TypeScript (#74)\nFix package metadata (#81\nSwitch from Node.js v8 to Node.js v10 (#76 and #80)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "6.2.1 - 2020-07-17",
    "text": "6.2.1 - 2020-07-17\nThis release replaces the native secp256k1 and keccak dependencies with ethereum-cryptopgraphy which doesn’t need native compilation."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "6.2.0 - 2019-11-06",
    "text": "6.2.0 - 2019-11-06\nThis release comes with a new file structure, related functionality is now broken down into separate files (like account.js) allowing for more oversight and modular integration. All functionality is additionally exposed through an aggregating index.js file, so this version remains backwards-compatible.\nOverview on the new structure:\n\naccount: Private/public key and address-related functionality (creation, validation, conversion)\nbyte: Byte-related helper and conversion functions\nconstants: Exposed constants (e.g. KECCAK256_NULL_S for the string representation of the Keccak-256 hash of null)\nhash: Hash functions\nobject: Helper function for creating a binary object (DEPRECATED)\nsignature: Signing, signature validation, conversion, recovery\n\nSee associated PRs #182 and #179.\nFeatures\n\naccount: Added EIP-1191 address checksum algorithm support for toChecksumAddress(), PR #204\n\nBug Fixes\n\nbytes: toBuffer() conversion function now throws if strings aren’t 0x-prefixed hex values making the behavior of toBuffer() more predictable respectively less error-prone (you might generally want to check cases in your code where you eventually allowed non-0x-prefixed input before), PR #197\n\nDependencies / Environment\n\nDropped Node 6, added Node 11 and 12 to officially supported Node versions, PR #207\nDropped safe-buffer dependency, PR #182\nUpdated rlp dependency from v2.0.0 to v2.2.3 (TypeScript improvements for RLP hash functionality), PR #187\nMade @types/bn.js a dependency instead of a devDependency, PR #205\nUpdated keccak256 dependency from v1.4.0 to v2.0.0, PR #168"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "6.1.0 - 2019-02-12",
    "text": "6.1.0 - 2019-02-12\nFirst TypeScript based release of the library, now also including a type declaration file distributed along with the package published, see PR #170.\nBug Fixes\n\nFixed a bug in isValidSignature() not correctly returning false if passed an s-value greater than secp256k1n/2 on homestead or later. If you use the method signature with more than three arguments (so not just passing in v, r, s and use it like isValidSignature(v, r, s) and omit the optional args) please read the thread from PR #171 carefully and check your code.\n\nDevelopment\n\nUpdated @types/node to Node 11 types, PR #175\nChanged browser from Chrome to ChromeHeadless, PR #156"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "6.0.0 - 2018-10-08",
    "text": "6.0.0 - 2018-10-08\n\nSupport for EIP-155 replay protection by adding an optional chainId parameter to ecsign(), ecrecover(), toRpcSig() and isValidSignature(), if present the\nnew signature format relying on the chainId is used, see PR #143\nNew generateAddress2() for CREATE2 opcode (EIP-1014) address creation (Constantinople HF), see PR #146\n[BREAKING] Fixed signature to comply with Geth and Parity in toRpcSig() changing v from 0/1 to 27/28, this changes the resulting signature buffer, see PR #139\n[BREAKING] Remove deprecated sha3-named constants and methods (see v5.2.0 release), see PR #154"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "5.2.0 - 2018-04-27",
    "text": "5.2.0 - 2018-04-27\n\nRename all sha3 hash related constants and functions to keccak, see this EIP discussion for context (tl;dr: Ethereum uses a slightly different hash algorithm then in the official SHA-3 standard)\nRenamed constants:\n\nSHA3_NULL_S -> KECCAK256_NULL_S\nSHA3_NULL -> KECCAK256_NULL\nSHA3_RLP_ARRAY_S -> KECCAK256_RLP_ARRAY_S\nSHA3_RLP_ARRAY -> KECCAK256_RLP_ARRAY\nSHA3_RLP_S -> KECCAK256_RLP_S\nSHA3_RLP -> KECCAK256_RLP\n\nRenamed functions:\n\nsha3() -> keccak() (number of bits determined in arguments)\n\nNew keccak256() alias function for keccak(a, 256)\nThe usage of the sha-named versions is now DEPRECATED and the related constants and functions will be removed on the next major release v6.0.0"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "5.1.5 - 2018-02-28",
    "text": "5.1.5 - 2018-02-28\n\nFix browserify issue leading to 3rd-party build problems, PR #119"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "5.1.4 - 2018-02-03",
    "text": "5.1.4 - 2018-02-03\n\nMoved to ES5 Node distribution version for easier toolchain integration, PR #114\nUpdated isPrecompile() with Byzantium precompile address range, PR #115"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "5.1.3 - 2018-01-03",
    "text": "5.1.3 - 2018-01-03\n\nES6 syntax updates\nDropped Node 5 support\nMoved babel to dev dependencies, switched to env preset\nUsage of safe-buffer instead of Node Buffer\nDo not allow capital 0X as valid address in isValidAddress()\nNew methods zeroAddress() and isZeroAddress()\nUpdated dependencies"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "5.1.2 - 2017-05-31",
    "text": "5.1.2 - 2017-05-31\n\nAdd browserify for ES2015 compatibility\nFix hex validation"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "5.1.1 - 2017-02-10",
    "text": "5.1.1 - 2017-02-10\n\nUse hex utils from ethjs-util\nMove secp vars into functions\nDependency updates"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "5.1.0 - 2017-02-04",
    "text": "5.1.0 - 2017-02-04\n\nFix toRpcSig() function\nUpdated Buffer creation (Buffer.from)\nDependency updates\nFix npm error\nUse keccak package instead of keccakjs\nHelpers for eth_sign RPC call"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "5.0.1 - 2016-11-08",
    "text": "5.0.1 - 2016-11-08\n\nFix bufferToHex()"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "5.0.0 - 2016-11-08",
    "text": "5.0.0 - 2016-11-08\n\nAdded isValidSignature() (ECDSA signature validation)\nChange v param in ecrecover() from Buffer to int (breaking change!)\nFix property alias for setting with initial parameters\nReject invalid signature lengths for fromRpcSig()\nFix sha3() width param (byte -> bit)\nFix overflow bug in bufferToInt()"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "4.5.0 - 2016-17-12",
    "text": "4.5.0 - 2016-17-12\n\nIntroduced toMessageSig() and fromMessageSig()"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#older-releases",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/CHANGELOG.html#older-releases",
    "title": "3327 Research",
    "section": "Older releases:",
    "text": "Older releases:\n\n4.4.1 - 2016-05-20\n4.4.0 - 2016-04-26\n4.3.1 - 2016-04-25\n4.3.0 - 2016-03-23\n4.2.0 - 2016-03-18\n4.1.0 - 2016-03-08\n4.0.0 - 2016-02-02\n3.0.0 - 2016-01-20"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "2.0.1 / 2016-06-22",
    "text": "2.0.1 / 2016-06-22\n\nadded LICENSE file."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "2.0.0 / 2016-04-11",
    "text": "2.0.0 / 2016-04-11\n\nrewritten, license change BSD-3 to MIT. #13\nstream support #13"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "1.0.1 / 2015-05-05",
    "text": "1.0.1 / 2015-05-05\n\nstandard formatting"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "1.0.0 / 2015-01-14",
    "text": "1.0.0 / 2015-01-14\n\nupdated dev deps\nadded more test fixtures\nupdated readme with usage, testing, etc\nmoved from https://github.com/cryptocoinjs/ripemd160 to https://github.com/crypto-browserify/ripemd160"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "0.2.1 / 2014-12-31",
    "text": "0.2.1 / 2014-12-31\n\nmade license clear in package.json\ndeleted Makefile, moved targets to package.json\nremoved terst for assert"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "0.2.0 / 2014-03-09",
    "text": "0.2.0 / 2014-03-09\n\nremoved bower.json and component.json\nchanged 4 spacing to 2\nreturns Buffer type now, input must be Array, Uint8Array, Buffer, or string\nremove deps: convert-hex and convert-string"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "0.1.0 / 2013-11-20",
    "text": "0.1.0 / 2013-11-20\n\nchanged package name\nremoved AMD support"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "0.0.2 / 2013-11-06",
    "text": "0.0.2 / 2013-11-06\n\nfixed component.json file"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ripemd160/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "0.0.1 / 2013-11-03",
    "text": "0.0.1 / 2013-11-03\n\ninitial release"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/internal-slot/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/internal-slot/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "Changelog\nAll notable changes to this project will be documented in this file. Dates are displayed in UTC.\nGenerated by auto-changelog.\n\nv1.0.3\n\n26 January 2021\n\n\n[Tests] use shared travis-ci configs 0ef2263\n[Tests] migrate tests to Github Actions 6253915\n[meta] do not publish github action workflow files ef94e55\n[Tests] run nyc on all tests; use tape runner 917d6ca\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog, object-inspect, tape 8dcb6fe\n[actions] add “Allow Edits” workflow 7aa3e86\n[Refactor] use get-intrinsic instead of es-abstract; update side-channel 11ad17d\n[readme] remove travis badge 5b75452\n[actions] switch Automatic Rebase workflow to pull_request_target event d531688\n[Dev Deps] update @ljharb/eslint-config, tape c76fa91\n[Dev Deps] update eslint, tape e733ccd\n[Dev Deps] update auto-changelog; add aud df20bf5\n[meta] fix autochangelog e89e6f1\n[Tests] only audit prod deps 71317b9\n[Deps] update es-abstract c17ccf4\n[Dev Deps] update tape d81ae03\n[Deps] update es-abstract b56303b\n[Deps] update es-abstract 9996d1c\n\n\n\nv1.0.2\n\n20 December 2019\n\n\n[Deps] update es-abstract, side-channel 5c9df03\n[Dev Deps] update @ljharb/eslint-config, tape 7820f98\n\n\n\nv1.0.1\n\n1 December 2019\n\n\n[Refactor] use side-channel package d38639f\n[actions] add automatic rebasing / merge commit blocking 74267e6\n[Dev Deps] update eslint, @ljharb/eslint-config, auto-changelog, object-inspect, safe-publish-latest b042eef\n[Deps] update es-abstract 98cf4e8\n\n\n\nv1.0.0\n\n20 October 2019\n\n\nTests b50fa41\nimplementation c5a59f3\nInitial commit 15ebe4d\nreadme 382a3f5\nnpm init d5e7c97\n[meta] add FUNDING.yml 685b608\n[meta] add auto-changelog, safe-publish-latest f8fdf1c\n[Tests] add npm run lint baaaa09\nOnly apps should have lockfiles dfa7efa"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/slash/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/slash/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install slash"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/slash/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/slash/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst path = require('path');\nconst slash = require('slash');\n\nconst string = path.join('foo', 'bar');\n// Unix    => foo/bar\n// Windows => foo\\\\bar\n\nslash(string);\n// Unix    => foo/bar\n// Windows => foo/bar"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/slash/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/slash/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nslash(path)\nType: string\nAccepts a Windows backslash path and returns a path with forward slashes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/slash/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/slash/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/raw-body/HISTORY.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/raw-body/HISTORY.html",
    "title": "3327 Research",
    "section": "",
    "text": "2.5.0 / 2022-02-21\n\nPrevent loss of async hooks context\nPrevent hanging when stream is not readable\ndeps: http-errors@2.0.0\n\ndeps: depd@2.0.0\ndeps: statuses@2.0.1\n\n\n\n\n2.4.3 / 2022-02-14\n\ndeps: bytes@3.1.2\n\n\n\n2.4.2 / 2021-11-16\n\ndeps: bytes@3.1.1\ndeps: http-errors@1.8.1\n\ndeps: setprototypeof@1.2.0\ndeps: toidentifier@1.0.1\n\n\n\n\n2.4.1 / 2019-06-25\n\ndeps: http-errors@1.7.3\n\ndeps: inherits@2.0.4\n\n\n\n\n2.4.0 / 2019-04-17\n\ndeps: bytes@3.1.0\n\nAdd petabyte (pb) support\n\ndeps: http-errors@1.7.2\n\nSet constructor name when possible\ndeps: setprototypeof@1.1.1\ndeps: statuses@‘>= 1.5.0 < 2’\n\ndeps: iconv-lite@0.4.24\n\nAdded encoding MIK\n\n\n\n\n2.3.3 / 2018-05-08\n\ndeps: http-errors@1.6.3\n\ndeps: depd@~1.1.2\ndeps: setprototypeof@1.1.0\ndeps: statuses@‘>= 1.3.1 < 2’\n\ndeps: iconv-lite@0.4.23\n\nFix loading encoding with year appended\nFix deprecation warnings on Node.js 10+\n\n\n\n\n2.3.2 / 2017-09-09\n\ndeps: iconv-lite@0.4.19\n\nFix ISO-8859-1 regression\nUpdate Windows-1255\n\n\n\n\n2.3.1 / 2017-09-07\n\ndeps: bytes@3.0.0\ndeps: http-errors@1.6.2\n\ndeps: depd@1.1.1\n\nperf: skip buffer decoding on overage chunk\n\n\n\n2.3.0 / 2017-08-04\n\nAdd TypeScript definitions\nUse http-errors for standard emitted errors\ndeps: bytes@2.5.0\ndeps: iconv-lite@0.4.18\n\nAdd support for React Native\nAdd a warning if not loaded as utf-8\nFix CESU-8 decoding in Node.js 8\nImprove speed of ISO-8859-1 encoding\n\n\n\n\n2.2.0 / 2017-01-02\n\ndeps: iconv-lite@0.4.15\n\nAdded encoding MS-31J\nAdded encoding MS-932\nAdded encoding MS-936\nAdded encoding MS-949\nAdded encoding MS-950\nFix GBK/GB18030 handling of Euro character\n\n\n\n\n2.1.7 / 2016-06-19\n\ndeps: bytes@2.4.0\nperf: remove double-cleanup on happy path\n\n\n\n2.1.6 / 2016-03-07\n\ndeps: bytes@2.3.0\n\nDrop partial bytes on all parsed units\nFix parsing byte string that looks like hex\n\n\n\n\n2.1.5 / 2015-11-30\n\ndeps: bytes@2.2.0\ndeps: iconv-lite@0.4.13\n\n\n\n2.1.4 / 2015-09-27\n\nFix masking critical errors from iconv-lite\ndeps: iconv-lite@0.4.12\n\nFix CESU-8 decoding in Node.js 4.x\n\n\n\n\n2.1.3 / 2015-09-12\n\nFix sync callback when attaching data listener causes sync read\n\nNode.js 0.10 compatibility issue\n\n\n\n\n2.1.2 / 2015-07-05\n\nFix error stack traces to skip makeError\ndeps: iconv-lite@0.4.11\n\nAdd encoding CESU-8\n\n\n\n\n2.1.1 / 2015-06-14\n\nUse unpipe module for unpiping requests\n\n\n\n2.1.0 / 2015-05-28\n\ndeps: iconv-lite@0.4.10\n\nImproved UTF-16 endianness detection\nLeading BOM is now removed when decoding\nThe encoding UTF-16 without BOM now defaults to UTF-16LE when detection fails\n\n\n\n\n2.0.2 / 2015-05-21\n\ndeps: bytes@2.1.0\n\nSlight optimizations\n\n\n\n\n2.0.1 / 2015-05-10\n\nFix a false-positive when unpiping in Node.js 0.8\n\n\n\n2.0.0 / 2015-05-08\n\nReturn a promise without callback instead of thunk\ndeps: bytes@2.0.1\n\nunits no longer case sensitive when parsing\n\n\n\n\n1.3.4 / 2015-04-15\n\nFix hanging callback if request aborts during read\ndeps: iconv-lite@0.4.8\n\nAdd encoding alias UNICODE-1-1-UTF-7\n\n\n\n\n1.3.3 / 2015-02-08\n\ndeps: iconv-lite@0.4.7\n\nGracefully support enumerables on Object.prototype\n\n\n\n\n1.3.2 / 2015-01-20\n\ndeps: iconv-lite@0.4.6\n\nFix rare aliases of single-byte encodings\n\n\n\n\n1.3.1 / 2014-11-21\n\ndeps: iconv-lite@0.4.5\n\nFix Windows-31J and X-SJIS encoding support\n\n\n\n\n1.3.0 / 2014-07-20\n\nFully unpipe the stream on error\n\nFixes Cannot switch to old mode now error on Node.js 0.10+\n\n\n\n\n1.2.3 / 2014-07-20\n\ndeps: iconv-lite@0.4.4\n\nAdded encoding UTF-7\n\n\n\n\n1.2.2 / 2014-06-19\n\nSend invalid encoding error to callback\n\n\n\n1.2.1 / 2014-06-15\n\ndeps: iconv-lite@0.4.3\n\nAdded encodings UTF-16BE and UTF-16 with BOM\n\n\n\n\n1.2.0 / 2014-06-13\n\nPassing string as options interpreted as encoding\nSupport all encodings from iconv-lite\n\n\n\n1.1.7 / 2014-06-12\n\nuse string_decoder module from npm\n\n\n\n1.1.6 / 2014-05-27\n\ncheck encoding for old streams1\nsupport node.js < 0.10.6\n\n\n\n1.1.5 / 2014-05-14\n\nbump bytes\n\n\n\n1.1.4 / 2014-04-19\n\nallow true as an option\nbump bytes\n\n\n\n1.1.3 / 2014-03-02\n\nfix case when length=null\n\n\n\n1.1.2 / 2013-12-01\n\nbe less strict on state.encoding check\n\n\n\n1.1.1 / 2013-11-27\n\nadd engines\n\n\n\n1.1.0 / 2013-11-27\n\nadd err.statusCode and err.type\nallow for encoding option to be true\npause the stream instead of dumping on error\nthrow if the stream’s encoding is set\n\n\n\n1.0.1 / 2013-11-19\n\ndont support streams1, throw if dev set encoding\n\n\n\n1.0.0 / 2013-11-17\n\nrename expected option to length\n\n\n\n0.2.0 / 2013-11-15\n\nrepublish\n\n\n\n0.1.1 / 2013-11-15\n\nuse bytes\n\n\n\n0.1.0 / 2013-11-11\n\ngenerator support\n\n\n\n0.0.3 / 2013-10-10\n\nupdate repo\n\n\n\n0.0.2 / 2013-09-14\n\ndump stream on bad headers\nlisten to events after defining received and buffers\n\n\n\n0.0.1 / 2013-09-14\n\nInitial release"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/raw-body/SECURITY.html#reporting-a-bug",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/raw-body/SECURITY.html#reporting-a-bug",
    "title": "3327 Research",
    "section": "Reporting a Bug",
    "text": "Reporting a Bug\nThe raw-body team and community take all security bugs seriously. Thank you for improving the security of Express. We appreciate your efforts and responsible disclosure and will make every effort to acknowledge your contributions.\nReport security bugs by emailing the current owners of raw-body. This information can be found in the npm registry using the command npm owner ls raw-body. If unsure or unable to get the information from the above, open an issue in the project issue tracker asking for the current contact information.\nTo ensure the timely response to your report, please ensure that the entirety of the report is contained within the email body and not solely behind a web link or an attachment.\nAt least one owner will acknowledge your email within 48 hours, and will send a more detailed response within 48 hours indicating the next steps in handling your report. After the initial reply to your report, the owners will endeavor to keep you informed of the progress towards a fix and full announcement, and may ask for additional information or guidance."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yn/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yn/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install yn"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yn/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yn/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst yn = require('yn');\n\nyn('y');\n//=> true\n\nyn('NO');\n//=> false\n\nyn(true);\n//=> true\n\nyn('abomasum');\n//=> null\n\nyn('abomasum', {default: false});\n//=> false\n\nyn('mo', {lenient: true});\n//=> false\nUnrecognized values return null."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yn/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yn/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nyn(input, options)\n\ninput\nType: any\nValue that should be converted.\n\n\noptions\nType: Object\n\nlenient\nType: boolean Default: false\nUse a key distance-based score to leniently accept typos of yes and no.\n\n\ndefault\nType: boolean Default: null\nDefault value if no match was found."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yn/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yn/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "6.2.0",
    "text": "6.2.0\n\nCoerce numbers to strings when passed to semver.coerce()\nAdd rtl option to coerce from right to left"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "6.1.3",
    "text": "6.1.3\n\nHandle X-ranges properly in includePrerelease mode"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "6.1.2",
    "text": "6.1.2\n\nDo not throw when testing invalid version strings"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "6.1.1",
    "text": "6.1.1\n\nAdd options support for semver.coerce()\nHandle undefined version passed to Range.test"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "6.1.0",
    "text": "6.1.0\n\nAdd semver.compareBuild function\nSupport * in semver.intersects"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "6.0",
    "text": "6.0\n\nFix intersects logic.\nThis is technically a bug fix, but since it is also a change to behavior that may require users updating their code, it is marked as a major version increment."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "5.7",
    "text": "5.7\n\nAdd minVersion method"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "5.6",
    "text": "5.6\n\nMove boolean loose param to an options object, with backwards-compatibility protection.\nAdd ability to opt out of special prerelease version handling with the includePrerelease option flag."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "5.5",
    "text": "5.5\n\nAdd version coercion capabilities"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "5.4",
    "text": "5.4\n\nAdd intersection checking"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "5.3",
    "text": "5.3\n\nAdd minSatisfying method"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "5.2",
    "text": "5.2\n\nAdd prerelease(v) that returns prerelease components"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "5.1",
    "text": "5.1\n\nAdd Backus-Naur for ranges\nRemove excessively cute inspection methods"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/semver/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "5.0",
    "text": "5.0\n\nRemove AMD/Browserified build artifacts\nFix ltr and gtr when using the * range\nFix for range * with a prerelease identifier"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/http-errors/HISTORY.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/http-errors/HISTORY.html",
    "title": "3327 Research",
    "section": "",
    "text": "2.0.0 / 2021-12-17\n\nDrop support for Node.js 0.6\nRemove I'mateapot export; use ImATeapot instead\nRemove support for status being non-first argument\nRename UnorderedCollection constructor to TooEarly\ndeps: depd@2.0.0\n\nReplace internal eval usage with Function constructor\nUse instance methods on process to check for listeners\n\ndeps: statuses@2.0.1\n\nFix messaging casing of 418 I'm a Teapot\nRemove code 306\nRename 425 Unordered Collection to standard 425 Too Early\n\n\n\n\n2021-11-14 / 1.8.1\n\ndeps: toidentifier@1.0.1\n\n\n\n2020-06-29 / 1.8.0\n\nAdd isHttpError export to determine if value is an HTTP error\ndeps: setprototypeof@1.2.0\n\n\n\n2019-06-24 / 1.7.3\n\ndeps: inherits@2.0.4\n\n\n\n2019-02-18 / 1.7.2\n\ndeps: setprototypeof@1.1.1\n\n\n\n2018-09-08 / 1.7.1\n\nFix error creating objects in some environments\n\n\n\n2018-07-30 / 1.7.0\n\nSet constructor name when possible\nUse toidentifier module to make class names\ndeps: statuses@‘>= 1.5.0 < 2’\n\n\n\n2018-03-29 / 1.6.3\n\ndeps: depd@~1.1.2\n\nperf: remove argument reassignment\n\ndeps: setprototypeof@1.1.0\ndeps: statuses@‘>= 1.4.0 < 2’\n\n\n\n2017-08-04 / 1.6.2\n\ndeps: depd@1.1.1\n\nRemove unnecessary Buffer loading\n\n\n\n\n2017-02-20 / 1.6.1\n\ndeps: setprototypeof@1.0.3\n\nFix shim for old browsers\n\n\n\n\n2017-02-14 / 1.6.0\n\nAccept custom 4xx and 5xx status codes in factory\nAdd deprecation message to \"I'mateapot\" export\nDeprecate passing status code as anything except first argument in factory\nDeprecate using non-error status codes\nMake message property enumerable for HttpErrors\n\n\n\n2016-11-16 / 1.5.1\n\ndeps: inherits@2.0.3\n\nFix issue loading in browser\n\ndeps: setprototypeof@1.0.2\ndeps: statuses@‘>= 1.3.1 < 2’\n\n\n\n2016-05-18 / 1.5.0\n\nSupport new code 421 Misdirected Request\nUse setprototypeof module to replace __proto__ setting\ndeps: statuses@‘>= 1.3.0 < 2’\n\nAdd 421 Misdirected Request\nperf: enable strict mode\n\nperf: enable strict mode\n\n\n\n2016-01-28 / 1.4.0\n\nAdd HttpError export, for err instanceof createError.HttpError\ndeps: inherits@2.0.1\ndeps: statuses@‘>= 1.2.1 < 2’\n\nFix message for status 451\nRemove incorrect nginx status code\n\n\n\n\n2015-02-02 / 1.3.1\n\nFix regression where status can be overwritten in createError props\n\n\n\n2015-02-01 / 1.3.0\n\nConstruct errors using defined constructors from createError\nFix error names that are not identifiers\n\ncreateError[\"I'mateapot\"] is now createError.ImATeapot\n\nSet a meaningful name property on constructed errors\n\n\n\n2014-12-09 / 1.2.8\n\nFix stack trace from exported function\nRemove arguments.callee usage\n\n\n\n2014-10-14 / 1.2.7\n\nRemove duplicate line\n\n\n\n2014-10-02 / 1.2.6\n\nFix expose to be true for ClientError constructor\n\n\n\n2014-09-28 / 1.2.5\n\ndeps: statuses@1\n\n\n\n2014-09-21 / 1.2.4\n\nFix dependency version to work with old npms\n\n\n\n2014-09-21 / 1.2.3\n\ndeps: statuses@~1.1.0\n\n\n\n2014-09-21 / 1.2.2\n\nFix publish error\n\n\n\n2014-09-21 / 1.2.1\n\nSupport Node.js 0.6\nUse inherits instead of util\n\n\n\n2014-09-09 / 1.2.0\n\nFix the way inheriting functions\nSupport expose being provided in properties argument\n\n\n\n2014-09-08 / 1.1.0\n\nDefault status to 500\nSupport provided error to extend\n\n\n\n2014-09-08 / 1.0.1\n\nFix accepting string message\n\n\n\n2014-09-08 / 1.0.0\n\nInitial release"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/define-properties/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/define-properties/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "1.1.3 / 2018-08-14\n\n[Refactor] use a for loop instead of foreach to make for smaller bundle sizes\n[Robustness] cache Array.prototype.concat and Object.defineProperty\n[Deps] update object-keys\n[Dev Deps] update eslint, @ljharb/eslint-config, nsp, tape, jscs; remove unused eccheck script + dep\n[Tests] use pretest/posttest for linting/security\n[Tests] fix npm upgrades on older nodes\n\n\n\n1.1.2 / 2015-10-14\n\n[Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG\n[Deps] Update object-keys\n[Dev Deps] update jscs, tape, eslint, @ljharb/eslint-config, nsp\n[Tests] up to io.js v3.3, node v4.2\n\n\n\n1.1.1 / 2015-07-21\n\n[Deps] Update object-keys\n[Dev Deps] Update tape, eslint\n[Tests] Test on io.js v2.4\n\n\n\n1.1.0 / 2015-07-01\n\n[New] Add support for symbol-valued properties.\n[Dev Deps] Update nsp, eslint\n[Tests] Test up to io.js v2.3\n\n\n\n1.0.3 / 2015-05-30\n\nUsing a more reliable check for supported property descriptors.\n\n\n\n1.0.2 / 2015-05-23\n\nTest up to io.js v2.0\nUpdate tape, jscs, nsp, eslint, object-keys, editorconfig-tools, covert\n\n\n\n1.0.1 / 2015-01-06\n\nUpdate object-keys to fix ES3 support\n\n\n\n1.0.0 / 2015-01-04\n\nv1.0.0"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/readme.html#news",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/readme.html#news",
    "title": "3327 Research",
    "section": "News",
    "text": "News\n\n2021/Jun/22 add index.d.ts\n2021/Mar/02 improve performance\n2020/Nov/10 setup function has changed.\nadd mulVec(xVec, yVec) where xVec is an array of G1 or G2 and yVec is an array of Fr, which returns sum of xVec[i] yVec[i].\nG1.setHashOf is compatible with hash-to-curve-09 BLS12381G1_XMD:SHA-256_SSWU_RO_\nsupport only BN254, ZKSNARK, BLS12-381 to remove mcl_c512.js\nadd mcl.precomputedMillerLoop2 and mcl.precomputedMillerLoop2mixed"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/readme.html#how-to-use",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/readme.html#how-to-use",
    "title": "3327 Research",
    "section": "How to use",
    "text": "How to use\nThe version v0.6.0 breaks backward compatibility of the entry point.\n\nNode.js : const mcl = require('mcl-wasm')\nReact : const mcl = require('mcl-wasm/browser')\nHTML : <script src=\"https://herumi.github.io/mcl-wasm/browser/mcl.js\"></script>"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/readme.html#for-node.js",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/readme.html#for-node.js",
    "title": "3327 Research",
    "section": "for Node.js",
    "text": "for Node.js\nnode test/test.js"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/readme.html#browser-demo",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/readme.html#browser-demo",
    "title": "3327 Research",
    "section": "browser demo",
    "text": "browser demo\nID-based encryption"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/readme.html#init",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/readme.html#init",
    "title": "3327 Research",
    "section": "init",
    "text": "init\n// Ethereum 2.0 spec mode\nmcl.init(mcl.BLS12_381)\n  .then(() => {\n    mcl.setETHserialization(true) // Ethereum serialization\n    mcl.setMapToMode(mcl.IRTF) // for G2.setHashOf(msg)\n    ...\n  })"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/readme.html#string-conversion",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/readme.html#string-conversion",
    "title": "3327 Research",
    "section": "string conversion",
    "text": "string conversion\na = new mcl.Fr()\na.setStr('255') // set 255\na.setStr('0xff') // set 0xff = 255\na.setStr('ff', 16) // set ff as hex-string\n\na.getStr() // '255'\na.getStr(16) // 'ff'"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/readme.html#serialization",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/readme.html#serialization",
    "title": "3327 Research",
    "section": "serialization",
    "text": "serialization\n// byte array serialization\nb.deserialize(a.serialize()) // b.isEqualTo(a)\n// hex string of serialization()\nb.deserializeHexStr(a.serializeToHexStr())\n// serialization like Ethereum 2.0 only for BLS12-381\nmcl.setETHserialization(true)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/readme.html#deserialization",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/readme.html#deserialization",
    "title": "3327 Research",
    "section": "deserialization",
    "text": "deserialization\n/*\n  it is big cost to to verify the order\n  call once after init() if you want to disable it\n  cf. sub group problem\n*/\nmcl.verifyOrderG1(false)\nmcl.verifyOrderG2(false)\nsee test.js"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/browser/readme.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mcl-wasm/browser/readme.html",
    "title": "3327 Research",
    "section": "",
    "text": "browser demo\nHow to build browser/mcl.js.\ncd browser\nnpm install webpack webpack-cli --save-dev\nnpx webpack\npython3 -m http.server"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install ansi-styles"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst style = require('ansi-styles');\n\nconsole.log(`${style.green.open}Hello world!${style.green.close}`);\n\n\n// Color conversion between 16/256/truecolor\n// NOTE: If conversion goes to 16 colors or 256 colors, the original color\n//       may be degraded to fit that color palette. This means terminals\n//       that do not support 16 million colors will best-match the\n//       original color.\nconsole.log(style.bgColor.ansi.hsl(120, 80, 72) + 'Hello world!' + style.bgColor.close);\nconsole.log(style.color.ansi256.rgb(199, 20, 250) + 'Hello world!' + style.color.close);\nconsole.log(style.color.ansi16m.hex('#ABCDEF') + 'Hello world!' + style.color.close);"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\nEach style has an open and close property."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#styles",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#styles",
    "title": "3327 Research",
    "section": "Styles",
    "text": "Styles\n\nModifiers\n\nreset\nbold\ndim\nitalic (Not widely supported)\nunderline\ninverse\nhidden\nstrikethrough (Not widely supported)\n\n\n\nColors\n\nblack\nred\ngreen\nyellow\nblue\nmagenta\ncyan\nwhite\ngray (“bright black”)\nredBright\ngreenBright\nyellowBright\nblueBright\nmagentaBright\ncyanBright\nwhiteBright\n\n\n\nBackground colors\n\nbgBlack\nbgRed\nbgGreen\nbgYellow\nbgBlue\nbgMagenta\nbgCyan\nbgWhite\nbgBlackBright\nbgRedBright\nbgGreenBright\nbgYellowBright\nbgBlueBright\nbgMagentaBright\nbgCyanBright\nbgWhiteBright"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#advanced-usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#advanced-usage",
    "title": "3327 Research",
    "section": "Advanced usage",
    "text": "Advanced usage\nBy default, you get a map of styles, but the styles are also available as groups. They are non-enumerable so they don’t show up unless you access them explicitly. This makes it easier to expose only a subset in a higher-level module.\n\nstyle.modifier\nstyle.color\nstyle.bgColor\n\n\nExample\nconsole.log(style.color.green.open);\nRaw escape codes (i.e. without the CSI escape prefix \\u001B[ and render mode postfix m) are available under style.codes, which returns a Map with the open codes as keys and close codes as values.\n\n\nExample\nconsole.log(style.codes.get(36));\n//=> 39"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#million-truecolor-support",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#million-truecolor-support",
    "title": "3327 Research",
    "section": "256 / 16 million (TrueColor) support",
    "text": "256 / 16 million (TrueColor) support\nansi-styles uses the color-convert package to allow for converting between various colors and ANSI escapes, with support for 256 and 16 million colors.\nTo use these, call the associated conversion function with the intended output, for example:\nstyle.color.ansi.rgb(100, 200, 15); // RGB to 16 color ansi foreground code\nstyle.bgColor.ansi.rgb(100, 200, 15); // RGB to 16 color ansi background code\n\nstyle.color.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code\nstyle.bgColor.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code\n\nstyle.color.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color foreground code\nstyle.bgColor.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color background code"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nansi-escapes - ANSI escape codes for manipulating the terminal"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#maintainers",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#maintainers",
    "title": "3327 Research",
    "section": "Maintainers",
    "text": "Maintainers\n\nSindre Sorhus\nJosh Junon"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-styles/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright © 2013-present Rod Vagg and Contributors.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "5.1.0 - 2019-10-04",
    "text": "5.1.0 - 2019-10-04\n\nChanged\n\nUpgrade hallmark devDependency from ^1.0.0 to ^2.0.0 (#196) (@vweevers)\nUpgrade standard devDependency from ^13.0.1 to ^14.0.0 (#195) (@vweevers)\n\n\n\nAdded\n\nAdd manifest (Level/community#83) (#198) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "5.0.0 - 2019-08-18",
    "text": "5.0.0 - 2019-08-18\n\nChanged\n\nUpgrade abstract-leveldown from ~6.0.1 to ~6.1.0 (#194) (@vweevers)\nUpgrade safe-buffer from ~5.1.1 to ~5.2.0 (#187) (@vweevers)\nUpgrade hallmark devDependency from ^0.1.0 to ^1.0.0 (#189) (@vweevers)\nUpgrade standard devDependency from ^12.0.0 to ^13.0.1 (#188) (@vweevers)\n\n\n\nAdded\n\nOpt-in to new clear() tests (#194) (@vweevers)\n\n\n\nRemoved\n\nDrop support of key & value types other than string and Buffer (#191, #192) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "4.1.0 - 2019-06-28",
    "text": "4.1.0 - 2019-06-28\n\nChanged\n\nUpgrade nyc devDependency from ^13.2.0 to ^14.0.0 (#182) (@vweevers)\n\n\n\nAdded\n\nSupport seeking (#184) (@MeirionHughes)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "4.0.0 - 2019-03-29",
    "text": "4.0.0 - 2019-03-29\n\nChanged\n\nUpgrade abstract-leveldown from ~5.0.0 to ~6.0.1 (#174) (@vweevers)\nInvoke abstract tests from single function (#174) (@vweevers)\nUse level-concat-iterator and testCommon.factory() in custom tests (#174) (@vweevers)\nDon’t use falsy or undefined as not-defined signal (#174) (@vweevers) (@vweevers)\nUpgrade standard devDependency from ^11.0.0 to ^12.0.0 (#173) (@ralphtheninja)\nUpgrade airtap devDependency from ^0.0.5 to ^2.0.0 (#161, #163, #168, #172, #177) (@vweevers)\nTweak copyright years for less maintenance (760b375) (@ralphtheninja)\nApply common project tweaks (#178, #179) (@vweevers)\n\n\n\nAdded\n\nAdd nyc and browser code coverage (#169, #180) (@vweevers)\nAdd Sauce Labs logo to README (#165) (@ralphtheninja)\nDocument that nullish values are now also rejected (#174) (@vweevers)\nTest negative and positive Infinity as keys (#174) (@vweevers)\n\n\n\nRemoved\n\nRemove contributors from package.json (80b3e3a) (@ralphtheninja)\nRemove node 9 (0de8721) (@ralphtheninja)\nRemove now irrelevant serialization of nullish values (#174) (@vweevers)\nRemove dummy location from abstract-leveldown constructor call (#174) (@vweevers)\nRemove rimraf devDependency (#174) (@vweevers)\n\n\n\nFixed\n\nFix link references in UPGRADING.md for latest remark (f111a6f) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "3.0.0 - 2018-05-22",
    "text": "3.0.0 - 2018-05-22\n\nAdded\n\nAdd node 9 and 10 to Travis (@vweevers, @ralphtheninja)\n\n\n\nChanged\n\nUpgrade abstract-leveldown to 5.0.0 (@ralphtheninja)\nUpgrade standard to 11.0.0 (@ralphtheninja)\nTweak readme (@ralphtheninja)\nUse airtap instead of zuul (@vweevers)\nSwitch to plain MIT license (@vweevers)\n\n\n\nRemoved\n\nRemove TypeScript typings (@ralphtheninja)\nRemove TypeScript tests (@vweevers)\nRemove node 4 from Travis (@ralphtheninja)\nRemove deprecated JWT addon from Travis (@vweevers)\nRemove obsolete --stderr flag (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "2.0.0 - 2018-02-11",
    "text": "2.0.0 - 2018-02-11\n\nAdded\n\nRun test suite with TypeScript in addition to Node.js (@vweevers)\nAdd UPGRADING.md (@vweevers)\nAdd CHANGELOG.md (@vweevers)\nREADME: explain types and snapshot guarantees (@vweevers)\nREADME: add level badge (@ralphtheninja)\nREADME: add node version badge (@ralphtheninja)\n\n\n\nChanged\n\nUpdate abstract-leveldown to 4.0.0 (@vweevers)\nPerform serialization through idiomatic _serializeKey and _serializeValue (@vweevers)\nDon’t stringify anything except nullish values (@vweevers)\nUse Buffer.isBuffer() instead of AbstractLevelDOWN#isBuffer (@vweevers)\nREADME: update instantiation instructions for latest levelup (@kumavis)\nREADME: rename “database” to “store” (@ralphtheninja)\nREADME: simplify example and prefer ES6 (@vweevers)\nConfigure Greenkeeper to ignore updates to @types/node (@ralphtheninja)\n\n\n\nFixed\n\nDon’t clone Buffer in iterator (@vweevers)\nStringify Buffer.from() argument in iterator (@vweevers)\nREADME: use SVG rather than PNG badge for Travis (@ralphtheninja)\nREADME: link to abstract-leveldown (@vweevers)\nREADME: normalize markdown headers (@ralphtheninja)\nREADME: fix license typos (@ralphtheninja)\nREADME: fix code example (@ralphtheninja)\nRename iterator#_end to fix conflict with abstract-leveldown (@vweevers)\nSet zuul --concurrency to 1 to avoid hitting Sauce Labs limit (@vweevers)\nTest on Android 6.0 instead of latest (7.1) due to Sauce Labs issue (@vweevers)\n\n\n\nRemoved\n\nRemove global store (@vweevers)\nRemove skipping of falsy elements in MemDOWN#batch (@vweevers)\nRemove obsolete benchmarks (@vweevers)\nRemove obsolete testBuffer from test.js (@vweevers)\nRemove redundant testCommon parameter from most tests (@vweevers)\nRemove unnecessary rimraf replacement for Browserify (@vweevers)\nREADME: remove Greenkeeper badge (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright © 2013-present Rod Vagg and Contributors.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "6.2.3 - 2020-04-03",
    "text": "6.2.3 - 2020-04-03\n\nChanged\n\nUpgrade airtap devDependency from ^2.0.0 to ^3.0.0 (#360) (@vweevers)\n\n\n\nFixed\n\nAdd buffer and immediate for browsers (#355, #362, #363) (@Raynos, @hugomrdias, @vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "6.2.2 - 2019-10-21",
    "text": "6.2.2 - 2019-10-21\n\nAdded\n\nAdd more range tests (#353) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "6.2.1 - 2019-10-01",
    "text": "6.2.1 - 2019-10-01\n\nFixed\n\nFix manifest-test to open & close its db (#352) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "6.2.0 - 2019-09-30",
    "text": "6.2.0 - 2019-09-30\n\nChanged\n\nUpgrade hallmark devDependency from ^1.0.0 to ^2.0.0 (#349) (@vweevers)\nUpgrade standard devDependency from ^13.0.1 to ^14.0.0 (#348) (@vweevers)\n\n\n\nAdded\n\nAdd manifest (Level/community#83) (#351) (@vweevers)\nDocument mandatory methods (#350) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "6.1.1 - 2019-08-18",
    "text": "6.1.1 - 2019-08-18\n\nFixed\n\nRemove process.emitWarning because it breaks AppVeyor builds (8e963c3) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "6.1.0 - 2019-08-18",
    "text": "6.1.0 - 2019-08-18\n\nChanged\n\nUpgrade hallmark devDependency from ^0.1.0 to ^1.0.0 (#343) (@vweevers)\nUpgrade standard devDependency from ^12.0.0 to ^13.0.1 (#341) (@vweevers)\n\n\n\nAdded\n\nAdd clear() method to delete all entries or a range (#310) (@vweevers).\n\nHistorical Note The clear() method is experimental and optional for the time being. Please see the README for details."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "6.0.3 - 2019-04-26",
    "text": "6.0.3 - 2019-04-26\n\nChanged\n\nUpgrade nyc devDependency from ^13.2.0 to ^14.0.0 (#334) (@vweevers)\n\n\n\nFixed\n\nFix and test asynchronicity of empty batch (#337) (@vweevers)\nFix Level badge (8993257) (@vweevers)\nRemove link to dead website (c0abe28) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "6.0.2 - 2019-03-30",
    "text": "6.0.2 - 2019-03-30\n\nChanged\n\nUpgrade sinon devDependency from ^6.0.0 to ^7.2.4 (#330) (@ralphtheninja)\nUpgrade nyc devDependency from ^12.0.2 to ^13.2.0 (#327) (@vweevers)\nUpgrade airtap devDependency from 0.1.0 to ^2.0.0 (#323) (@vweevers)\nApply common project tweaks (#324, #325) (@vweevers)\n\n\n\nFixed\n\nFix subtests by adding t.plan() (#329) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "6.0.1 - 2018-12-27",
    "text": "6.0.1 - 2018-12-27\n\nChanged\n\nUpgrade hallmark devDependency from 0.0.2 to 0.1.0 (#316) (@vweevers)\nSplit v6 upgrade guide into sections for consumers and implementors (@vweevers)\n\n\n\nFixed\n\nRemove range tests that assumed zero-length strings or Buffers meant “not defined” (#319) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "6.0.0 - 2018-10-20",
    "text": "6.0.0 - 2018-10-20\nIf you are upgrading, please consult the Upgrade Guide.\n\nChanged\n\nUpgrade airtap devDependency from 0.0.5 to 0.1.0 (#229, #231, #245, 029f56a, #252) (@vweevers, @ralphtheninja)\nUpgrade sinon devDependency from ^5.0.0 to ^6.0.0 (#232) (@ralphtheninja)\nUpgrade standard devDependency from ^11.0.0 to ^12.0.0 (#303) (@ralphtheninja)\nReject nullish values (#277) (@vweevers)\nMake default _serializeKey and _serializeValue identity functions (#277) (@vweevers)\nDon’t coerce keys to strings to check if they’re empty, instead check arrays explicitly (#277) (@vweevers)\nMake db property mandatory and public on iterator and chained batch (#257, #309) (@vweevers)\nAlign AbstractChainedBatch#_clear with _put and _del (#257) (@vweevers)\nAdd AbstractChainedBatch#_write with options (#257) (@vweevers)\nUse level-concat-iterator instead of collectEntries (#246) (@ralphtheninja)\nDocument API and test suite (#251, #290, #295, #296, #305) (@vweevers)\nExport test suite as a single function (#271, #293, #297) (@vweevers, @ralphtheninja)\nUse factory function to create db instances in test suite (#258, #268, #282) (@ralphtheninja, @vweevers)\nIsolate snapshot tests so that they can be skipped (#239, #274) (@vweevers, @ralphtheninja)\nIsolate openAdvanced tests so that they can be skipped (#271) (@vweevers)\nRename abstract/ to test/ (#253) (@vweevers)\nRefactor internal test methods to have the same signature (test, testCommon) (#268, #275) (@ralphtheninja)\nPrefer exports.* over module.exports.* (#276) (@ralphtheninja)\nTweak copyright years for less maintenance (0b2949a) (@ralphtheninja)\n\n\n\nAdded\n\nAdd iterator#seek() (#237, #302, #307) (@vweevers, @ralphtheninja)\nAdd nyc and coveralls devDependencies for code coverage (#253) (@vweevers)\nAdd setUp and tearDown to all sub tests (#279, #289) (@ralphtheninja)\nAdd test for implementations that cannot support snapshots (#239) (@vweevers)\nAdd hallmark devDependency for Markdown style and contributors (#312) (@vweevers)\n\n\n\nRemoved\n\nRemove location (#258) (@ralphtheninja)\nRemove lastLocation, cleanup, rimraf (#249) (@vweevers)\nRemove IE10 from Sauce Labs test matrix (#312) (@vweevers)\nRemove node 9 from Travis (0b52395) (@ralphtheninja)\nRemove tests that assumed support of boolean and NaN keys (#277) (@vweevers)\nRemove range tests that assumed null meant “not defined” (#277) (@vweevers)\nRemove sync test from test/put-test.js (#300) (@ralphtheninja)\nRemove empty errorValues() test (#273) (@ralphtheninja)\nRemove default testCommon parameter (#264, #271) (@vweevers)\nRemove contributors from package.json (542f350) (@ralphtheninja)\nRemove copyright headers from code (a36c04f) (@ralphtheninja)\n\n\n\nFixed\n\nMake sure all t.throw tests check error messages correctly (#286) (@ralphtheninja)\nCheck options objects properly for null (#257, #288) (@ralphtheninja, @vweevers)\nSerialize range options same as keys (#277) (@vweevers)\nAllow nullish and empty range options (#277) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "5.0.0 - 2018-05-22",
    "text": "5.0.0 - 2018-05-22\n\nChanged\n\nUpgrade sinon to ^5.0.0 (@ralphtheninja)\nTweak README (@ralphtheninja)\nReplace const with var to support IE10 (@vweevers)\n\n\n\nAdded\n\nAdd node 10 to Travis (@ralphtheninja)\nAdd airtap for browser tests (@vweevers)\n\n\n\nRemoved\n\nRemove node 4, 5 and 7 from Travis (@ralphtheninja)\nRemove TypeScript tests (@vweevers)\nRemove TypeScript typings (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "4.0.3 - 2018-02-21",
    "text": "4.0.3 - 2018-02-21\n\nChanged\n\nUpgrade ts-node to ^5.0.0 (@zixia)\nUpgrade standard to ^11.0.0 (@ralphtheninja)\n\n\n\nFixed\n\nRemove invalid TypeScript from Batch (@Tapppi)\nAdd JSDoc to incorrectly inferred TypeScript types (@Tapppi)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "4.0.2 - 2018-02-09",
    "text": "4.0.2 - 2018-02-09\n\nFixed\n\nFix iterator#next to return this (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "4.0.1 - 2018-02-09",
    "text": "4.0.1 - 2018-02-09\n\nAdded\n\nRun test suite in TypeScript in addition to Node.js (@vweevers)\nAdd TypeScript smoke test (@vweevers)\nAdd TypeScript readme section with stability badge (@vweevers)\n\n\n\nRemoved\n\nRemove obsolete parameters from tests (@vweevers)\n\n\n\nFixed\n\nUpdate TypeScript typings for v4 (@vweevers)\nUse ES6 classes in tests to please TypeScript (@vweevers)\nDefine default methods on prototype to please TypeScript (@vweevers)\n\nHistorical Note This was released as a patch because it only changed tests and TypeScript typings (which are marked experimental and don’t follow semver)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "4.0.0 - 2018-01-20",
    "text": "4.0.0 - 2018-01-20\n\nChanged\n\nIgnore empty range options in AbstractLevelDOWN#_setupIteratorOptions (@ralphtheninja)\nMake testCommon.js the default value for testCommon parameter (@ralphtheninja)\nUse Buffer.isBuffer() instead of AbstractLevelDOWN#isBuffer (@ralphtheninja)\nCleanup iterator tests (#161) (@ralphtheninja)\nPass test function as a parameter instead of setting local global (@ralphtheninja)\nAssert batch type is 'put' or 'del' (@vweevers)\nAssert batch array elements are objects (@vweevers)\n\n\n\nAdded\n\nAdd standard for linting (#150) (@ralphtheninja)\nTest that callbacks are called asynchronously (@vweevers)\nTest serialization extensibility (@vweevers)\nAdd @vweevers to contributors (@ralphtheninja)\nAdd upgrade guide in UPGRADING.md (@ralphtheninja)\nAdd node 9 to Travis (@ralphtheninja)\n\n\n\nRemoved\n\nRemove isLevelDOWN function and corresponding tests (@ralphtheninja)\nRemove AbstractLevelDOWN#approximateSize method and corresponding tests (@ralphtheninja)\nRemove testBuffer in abstract/put-get-del-test.js (@ralphtheninja)\nRemove object value test in abstract/put-test.js (@vweevers)\nRemove serialize buffer tests (@vweevers)\nRemove serialize object tests (@vweevers)\nRemove BufferType parameter in abstract/put-get-del-test.js, use Buffer (@ralphtheninja)\n\n\n\nFixed\n\nEnsure stores are closed properly (fixes problems on Windows) (@ralphtheninja)\nCall back errors on next tick to avoid zalgo (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "3.0.0 - 2017-11-04",
    "text": "3.0.0 - 2017-11-04\n\nAdded\n\nAdd node version badge (@vweevers)\n\n\n\nRemoved\n\nDrop support for 0.12. Cause for new major version! (@vweevers)\n\n\n\nFixed\n\nFix errors in index.d.ts (@sandersn)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "2.7.2 - 2017-10-11",
    "text": "2.7.2 - 2017-10-11\n\nChanged\n\nUpdate README with new style (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "2.7.1 - 2017-09-30",
    "text": "2.7.1 - 2017-09-30\n\nChanged\n\nRefactor typings as ES2015 module (@MeirionHughes)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "2.7.0 - 2017-09-12",
    "text": "2.7.0 - 2017-09-12\n\nAdded\n\nAdd TypeScript definitions in index.d.ts (@MeirionHughes)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "2.6.3 - 2017-09-05",
    "text": "2.6.3 - 2017-09-05\n\nChanged\n\nUpgrade dependencies (@ralphtheninja)\nConvert nullish values to empty strings (@bigeasy)\nUse t.equal(a, b) instead of t.ok(a === b) (@bigeasy)\nRelax tests for serializing object in abstract/chained-batch-test.js (@ralphtheninja)\n\n\n\nAdded\n\nAdd GreenKeeper (@ralphtheninja)\nTest key/value serialization (@bigeasy)\nTest undefined value serializing to empty string (@ralphtheninja)\n\n\n\nFixed\n\nDocument .status property (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "2.6.2 - 2017-07-30",
    "text": "2.6.2 - 2017-07-30\n\nChanged\n\nUpgrade dependencies and float devDependencies (@ralphtheninja)\nUpdate copyright years (@ralphtheninja)\nUpdate node versions on Travis (@ralphtheninja)\n\n\n\nAdded\n\nTest serialization extensibility (@juliangruber)\n\n\n\nFixed\n\nFix put test on object serialization (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "2.6.1 - 2016-09-12",
    "text": "2.6.1 - 2016-09-12\n\nFixed\n\nFix null case in default value serializer (fixes problems in 2.6.0) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "2.6.0 - 2016-03-10",
    "text": "2.6.0 - 2016-03-10\n\nChanged\n\nUse proto delegation to patch methods on db (@deanlandolt)\nAllow serialization functions to return buffers (@deanlandolt)\n\n\n\nAdded\n\nAdd collectBatchOps function to buffer _put and _del inputs in abstract/chained-batch-test.js (@deanlandolt)\n\n\n\nRemoved\n\nRemove unnecessary initialization hackery in abstract/chained-batch-test.js (@deanlandolt)\n\nHistorical Note This release was a breaking change. See @juliangruber’s comment for more information."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-23",
    "title": "3327 Research",
    "section": "2.5.0 - 2016-05-01",
    "text": "2.5.0 - 2016-05-01\n\nChanged\n\nUpgrade dependencies and add more node versions to Travis (@ralphtheninja)\n\n\n\nAdded\n\nAdd dependency badge to README (@ralphtheninja)\nAdd AbstractLevelDOWN#_serializeKey (@juliangruber)\nAdd AbstractLevelDOWN#_serializeValue (@juliangruber)\nAdd AbstractChainedBatch#_serializeKey (@juliangruber)\nAdd AbstractChainedBatch#_serializeValue (@juliangruber)\nTest _serialize with object and buffer (@juliangruber)\n\n\n\nRemoved\n\nRemove stringification of keys and values (@juliangruber)\nRemove .toBuffer (@juliangruber)\n\n\n\nFixed\n\nUpdate memdown url (@ralphtheninja)\nAbstractLevelDOWN#._checkKey does not take three parameters (@ralphtheninja)\nOnly show build status for the master branch (@watson)\nFix minor typos in README (@timkuijsten)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-24",
    "title": "3327 Research",
    "section": "2.4.1 - 2015-08-29",
    "text": "2.4.1 - 2015-08-29\n\nFixed\n\nRemove use of const (@nolanlawson)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-25",
    "title": "3327 Research",
    "section": "2.4.0 - 2015-05-19",
    "text": "2.4.0 - 2015-05-19\n\nAdded\n\nAdd .status property to AbstractLevelDOWN (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-26",
    "title": "3327 Research",
    "section": "2.3.1 - 2015-05-18",
    "text": "2.3.1 - 2015-05-18\n\nAdded\n\nLink to level/community (@ralphtheninja)\n\n\n\nRemoved\n\nExtract Contributors section from README into level/community (@ralphtheninja)\n\n\n\nFixed\n\nDocument isLevelDown function (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-27",
    "title": "3327 Research",
    "section": "2.3.0 - 2015-05-18",
    "text": "2.3.0 - 2015-05-18\n\nChanged\n\nUse t.equal(a, b) instead of t.ok(a === b) (@juliangruber)\nExport API from index.js (@ralphtheninja)\n\n\n\nAdded\n\nImport isLevelDOWN function to is-leveldown.js (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-28",
    "title": "3327 Research",
    "section": "2.2.2 - 2015-05-13",
    "text": "2.2.2 - 2015-05-13\n\nFixed\n\nRevert changes to location in 2.2.1 (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-29",
    "title": "3327 Research",
    "section": "2.2.1 - 2015-05-12",
    "text": "2.2.1 - 2015-05-12\n\nFixed\n\nCopy paste error gave wrong test description (@ralphtheninja)\nt.throws() is different for tape (@ralphtheninja)\nAssert location is not an empty string (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-30",
    "title": "3327 Research",
    "section": "2.2.0 - 2015-05-10",
    "text": "2.2.0 - 2015-05-10\n\nAdded\n\nTest { sync: true } option in abstract/put-test.js (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-31",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-31",
    "title": "3327 Research",
    "section": "2.1.4 - 2015-04-28",
    "text": "2.1.4 - 2015-04-28\n\nFixed\n\nUse t.equal() with tape (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-32",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-32",
    "title": "3327 Research",
    "section": "2.1.3 - 2015-04-28",
    "text": "2.1.3 - 2015-04-28\n\nChanged\n\nChange from tap to tape (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-33",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-33",
    "title": "3327 Research",
    "section": "2.1.2 - 2015-04-27",
    "text": "2.1.2 - 2015-04-27\n\nChanged\n\nConvert buffer to string so we can compare (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-34",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-34",
    "title": "3327 Research",
    "section": "2.1.1 - 2015-04-27",
    "text": "2.1.1 - 2015-04-27\n\nChanged\n\nUpdate logo and copyright (@ralphtheninja)\n\n\n\nAdded\n\nAdd @ralphtheninja to contributors (@ralphtheninja)\nAdd 0.12 and iojs to Travis (@ralphtheninja)\n\n\n\nFixed\n\nInclude .nonErrorValues() test in abstract/put-get-del-test.js (@hden)\nrvagg/node-abstract-leveldown moved to level/abstract-leveldown (@ralphtheninja)\nFix Travis for 0.8 (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-35",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-35",
    "title": "3327 Research",
    "section": "2.1.0 - 2014-11-09",
    "text": "2.1.0 - 2014-11-09\n\nChanged\n\nUse setTimeout instead of process.nextTick (@bigeasy)\n\n\n\nAdded\n\nAdd @watson to contributors (@rvagg)\n\n\n\nFixed\n\nDon’t fail if no value is returned by ._get (@watson)\nUse error test function when testing for errors (@watson)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-36",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-36",
    "title": "3327 Research",
    "section": "2.0.3 - 2014-10-02",
    "text": "2.0.3 - 2014-10-02\nNo change."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-37",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-37",
    "title": "3327 Research",
    "section": "2.0.2 - 2014-10-02",
    "text": "2.0.2 - 2014-10-02\n\nAdded\n\nTest atomic batch operations (@calvinmetcalf)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-38",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-38",
    "title": "3327 Research",
    "section": "2.0.1 - 2014-09-01",
    "text": "2.0.1 - 2014-09-01\n\nChanged\n\nSet default values for options to .open, .get, .put, .del and .batch (@watson)\nUpdate pattern for setting default options for the iterator (@watson)\nAllow boolean options to be falsy/truthy (@watson)\n\n\n\nRemoved\n\nRemove default options that are too LevelDOWN specific (@watson)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-39",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-39",
    "title": "3327 Research",
    "section": "2.0.0 - 2014-08-26",
    "text": "2.0.0 - 2014-08-26\n\nChanged\n\nSwitch to allowing writes of empty values, null, undefined, '', [] and empty buffer (@juliangruber)\nRename AbstractLevelDOWN#_checkKeyValue to AbstractLevelDOWN#_checkKey (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-40",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-40",
    "title": "3327 Research",
    "section": "1.0.0 - 2014-08-24",
    "text": "1.0.0 - 2014-08-24\n\nChanged\n\nEnsure Boolean iterator options are Boolean (@watson)\n\n\n\nAdded\n\nTest that an error is thrown when location isn’t a string (@calvinmetcalf)\nTest opening and closing the store (@calvinmetcalf)\nTest iterator with limit set to 0 (@watson)\nAdd more tests to abstract/batch-test.js (@calvinmetcalf)\nSet default values of iterator options (@watson)\nAccount for batch options that are null (@calvinmetcalf)\n\n\n\nRemoved\n\nRemove options.start hackery (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-41",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-41",
    "title": "3327 Research",
    "section": "0.12.4 - 2014-08-20",
    "text": "0.12.4 - 2014-08-20\n\nChanged\n\nChange license to plain MIT (@andrewrk)\n\n\n\nAdded\n\nTest that simple-iterator returns buffers (@kesla)\nTest implicit snapshots (@kesla)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-42",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-42",
    "title": "3327 Research",
    "section": "0.12.3 - 2014-06-27",
    "text": "0.12.3 - 2014-06-27\n\nChanged\n\nUpgrade xtend dependency (@andrewrk)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-43",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-43",
    "title": "3327 Research",
    "section": "0.12.2 - 2014-04-26",
    "text": "0.12.2 - 2014-04-26\n\nChanged\n\nHave isTypedArray check for existence of ArrayBuffer and Uint8Array constructors before usage (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-44",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-44",
    "title": "3327 Research",
    "section": "0.12.1 - 2014-04-26",
    "text": "0.12.1 - 2014-04-26\n\nChanged\n\nSet default BufferType in abstract/put-get-del-test.js to Buffer instead of ArrayBuffer (@maxogden)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-45",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-45",
    "title": "3327 Research",
    "section": "0.12.0 - 2014-03-12",
    "text": "0.12.0 - 2014-03-12\n\nChanged\n\nRevert to pure Buffer and remove usage of Uint16Array (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-46",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-46",
    "title": "3327 Research",
    "section": "0.11.4 - 2014-03-11",
    "text": "0.11.4 - 2014-03-11\n\nRemoved\n\nRemove duplicate call to t.end() (@maxogden)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-47",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-47",
    "title": "3327 Research",
    "section": "0.11.3 - 2014-01-26",
    "text": "0.11.3 - 2014-01-26\n\nChanged\n\nLoosen the buffer type check (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-48",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-48",
    "title": "3327 Research",
    "section": "0.11.2 - 2013-12-05",
    "text": "0.11.2 - 2013-12-05\n\nAdded\n\nAdd npm badges (@rvagg)\n\n\n\nFixed\n\nFix iterator tests in test.js (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-49",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-49",
    "title": "3327 Research",
    "section": "0.11.1 - 2013-11-15",
    "text": "0.11.1 - 2013-11-15\n\nChanged\n\nAdjust abstract/approximate-size-test.js to account for snappy compression (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-50",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-50",
    "title": "3327 Research",
    "section": "0.11.0 - 2013-10-14",
    "text": "0.11.0 - 2013-10-14\n\nAdded\n\nNormalize iterator() options with AbstractLevelDOWN#_setupIteratorOptions (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-51",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-51",
    "title": "3327 Research",
    "section": "0.10.2 - 2013-09-06",
    "text": "0.10.2 - 2013-09-06\n\nChanged\n\nRefactor duplicated versions of isTypedArray into abstract/util.js (@rvagg)\nRefactor duplicated versions of 'NotFound' checks into abstract/util.js, fixed too-strict version in get-test.js (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-52",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-52",
    "title": "3327 Research",
    "section": "0.10.1 - 2013-08-29",
    "text": "0.10.1 - 2013-08-29\n\nChanged\n\nRelax check for Not Found error message to be case insensitive in get-test.js (@rvagg)\n\n\n\nAdded\n\nAdd @substack to contributors (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-53",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-53",
    "title": "3327 Research",
    "section": "0.10.0 - 2013-08-19",
    "text": "0.10.0 - 2013-08-19\n\nAdded\n\nTest gt, gte, lt and lte ranges (@dominictarr)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-54",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-54",
    "title": "3327 Research",
    "section": "0.9.0 - 2013-08-11",
    "text": "0.9.0 - 2013-08-11\n\nChanged\n\nMake AbstractChainedBatch extensible (@kesla)\nExport AbstractChainedBatch from abstract-leveldown.js (@kesla)\n\n\n\nAdded\n\nTest simultaneous get’s (@kesla)\nTest AbstractChainedBatch extensibility (@kesla)\n\n\n\nFixed\n\nFix broken test assertion in abstract/get-test.js (@rvagg)\nFix tests that weren’t running properly (@kesla)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-55",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-55",
    "title": "3327 Research",
    "section": "0.8.2 - 2013-08-02",
    "text": "0.8.2 - 2013-08-02\nNo changes. Merely published changes made in 0.8.1."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-56",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-56",
    "title": "3327 Research",
    "section": "0.8.1 - 2013-08-02",
    "text": "0.8.1 - 2013-08-02\n\nChanged\n\nRemove use of const in testCommon.js (@rvagg)\n\nHistorical Note The version in package.json was changed from 0.7.4 to 0.8.1. The 0.8.1 tag exists but this version was never published to npm."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-57",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-57",
    "title": "3327 Research",
    "section": "0.8.0 - 2013-08-02",
    "text": "0.8.0 - 2013-08-02\n\nChanged\n\nUse process.browser check instead of process.title == 'browser' (@rvagg)\n\n\n\nAdded\n\nAdd BufferType parameter to abstract/put-get-del-test.js for bops support (@rvagg)\nAdd isTypedArray function which checks ArrayBuffer or Uint8Array for bops support (@rvagg)\n\n\n\nFixed\n\nFix cleanup function not calling back when browserified (@rvagg)\n\nHistorical Note It seems the version in package.json was never changed to 0.8.0 in the git history, even though the 0.8.0 tag exists. Most likely package.json was modified locally during npm publish but was never committed."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-58",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-58",
    "title": "3327 Research",
    "section": "0.7.4 - 2013-08-02",
    "text": "0.7.4 - 2013-08-02\n\nFixed\n\nFix problems related to browserify and rimraf (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-59",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-59",
    "title": "3327 Research",
    "section": "0.7.3 - 2013-07-26",
    "text": "0.7.3 - 2013-07-26\n\nAdded\n\nAdd @pgte to contributors (@rvagg)\nTest iterator with limit set to -1 (@kesla)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-60",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-60",
    "title": "3327 Research",
    "section": "0.7.2 - 2013-07-08",
    "text": "0.7.2 - 2013-07-08\n\nChanged\n\nFreeze chained batch state after .write() has been called (@rvagg)\nMake NotFound error case insensitive (@rvagg)\nUse self rather than binding functions to this (@juliangruber)\n\n\n\nAdded\n\nAdd AbstractChainedBatch#_checkWritten (@rvagg)\nTest delete on non-existent key (@rvagg)\nTest iterator with start after database end (@juliangruber)\n\n\n\nFixed\n\nDon’t coerce values to strings in browser (@maxogden)\nMake tests work in node and browser (@maxogden)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-61",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-61",
    "title": "3327 Research",
    "section": "0.7.1 - 2013-05-15",
    "text": "0.7.1 - 2013-05-15\n\nChanged\n\nAdjust tests to be browserable (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-62",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-62",
    "title": "3327 Research",
    "section": "0.7.0 - 2013-05-14",
    "text": "0.7.0 - 2013-05-14\n\nAdded\n\nAdd AbstractChainedBatch#clear (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-63",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-63",
    "title": "3327 Research",
    "section": "0.6.1 - 2013-05-14",
    "text": "0.6.1 - 2013-05-14\n\nChanged\n\nMake AbstractIterator call back with an error instead of throwing on nexting and ending (@mcollina)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-64",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-64",
    "title": "3327 Research",
    "section": "0.6.0 - 2013-05-14",
    "text": "0.6.0 - 2013-05-14\n\nChanged\n\nSplit t.deepEqual() into multiple t.equal() in abstract/iterator-test.js (@rvagg)\nMake AbstractIterator call back with an error instead of throwing on nexting and ending (@mcollina)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-65",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-65",
    "title": "3327 Research",
    "section": "0.5.0 - 2013-05-14",
    "text": "0.5.0 - 2013-05-14\n\nChanged\n\nMake iterator.end(cb) and iterator.next(cb) call back with an error instead of throwing (@mcollina)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-66",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-66",
    "title": "3327 Research",
    "section": "0.4.0 - 2013-05-14",
    "text": "0.4.0 - 2013-05-14\n\nChanged\n\nMove AbstractIterator from abstract-leveldown.js to abstract-iterator.js (@rvagg)\n\n\n\nAdded\n\nAdd AbstractChainedBatch (@rvagg)\nAdd AbstractLevelDOWN#_chainedBatch (@rvagg)\nAdd abstract/batch-test.js and abstract/chained-batch-test.js (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-67",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-67",
    "title": "3327 Research",
    "section": "0.4.0-1 - 2013-05-14",
    "text": "0.4.0-1 - 2013-05-14\n\nAdded\n\nAdd @No9 and @mcollina to contributors (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-68",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-68",
    "title": "3327 Research",
    "section": "0.3.0 - 2013-05-04",
    "text": "0.3.0 - 2013-05-04\n\nChanged\n\nUse this._checkKeyValue() instead of local function (@rvagg)\nUse this._isBuffer() instead of Buffer.isBuffer() (@rvagg)\n\n\n\nAdded\n\nRestore test for opening the database without options (@rvagg)\nAdd AbstractLevelDOWN#_isBuffer so it can be overridden (@rvagg)\nAdd AbstractLevelDOWN#_checkKeyValue so it can be overridden (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-69",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-69",
    "title": "3327 Research",
    "section": "0.2.3 - 2013-05-04",
    "text": "0.2.3 - 2013-05-04\n\nRemoved\n\nRemove test for opening the database without options (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-70",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-70",
    "title": "3327 Research",
    "section": "0.2.2 - 2013-05-04",
    "text": "0.2.2 - 2013-05-04\n\nChanged\n\nSplit .open() tests into .open() and .openAdvanced() (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-71",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-71",
    "title": "3327 Research",
    "section": "0.2.1 - 2013-05-04",
    "text": "0.2.1 - 2013-05-04\n\nChanged\n\nConvert values to string in abstract/put-get-del-test.js if Buffer is undefined (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-72",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-72",
    "title": "3327 Research",
    "section": "0.2.0 - 2013-05-04",
    "text": "0.2.0 - 2013-05-04\n\nChanged\n\nConvert values to string in abstract/get-test.js if Buffer is undefined (@rvagg)\nDon’t stringify keys and values in abstract/iterator-test.js (@maxogden)\n\n\n\nAdded\n\nAdd process.browser check for start and end keys in browser (@maxogden)\nAdd levelup contributors (@rvagg)\n\n\n\nFixed\n\nFix tape compatibility issues (@maxogden)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-73",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-73",
    "title": "3327 Research",
    "section": "0.1.0 - 2013-04-23",
    "text": "0.1.0 - 2013-04-23\n\nAdded\n\nImport abstract tests from leveldown (@maxogden)\n\n\n\nFixed\n\nClarify README (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-74",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-74",
    "title": "3327 Research",
    "section": "0.0.2 - 2013-03-18",
    "text": "0.0.2 - 2013-03-18\n\nChanged\n\nExport checkKeyValue (@rvagg)\n\n\n\nAdded\n\nAdd node 0.10 to Travis (@rvagg)\nAdd Buffer.isBuffer() checks to keys and values (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-75",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-75",
    "title": "3327 Research",
    "section": "0.0.1 - 2013-03-18",
    "text": "0.0.1 - 2013-03-18\n\nAdded\n\nAdd checkKeyValue function for more complete error checking (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-76",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CHANGELOG.html#section-76",
    "title": "3327 Research",
    "section": "0.0.0 - 2013-03-15",
    "text": "0.0.0 - 2013-03-15\nFirst release. :seedling:"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CONTRIBUTORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/CONTRIBUTORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "Contributors\n\n\n\nName\nGitHub\nSocial\n\n\n\n\nRod Vagg\n@rvagg\n@rvagg@twitter\n\n\nVincent Weevers\n@vweevers\n@vweevers@twitter\n\n\nLars-Magnus Skog\n@ralphtheninja\n@ralph@social.weho.st\n\n\nJulian Gruber\n@juliangruber\n@juliangruber@twitter\n\n\nDavid Björklund\n@kesla\n@david_bjorklund@twitter\n\n\nMax Ogden\n@maxogden\n@maxogden@twitter\n\n\nThomas Watson Steen\n\n\n\n\nAlan Gutierrez\n@bigeasy\n@bigeasy@twitter\n\n\nDean Landolt\n@deanlandolt\n\n\n\nCalvin Metcalf\n@calvinmetcalf\n\n\n\nMeirion Hughes\n@MeirionHughes\n\n\n\nMatteo Collina\n@mcollina\n@matteocollina@twitter\n\n\nAndrew Kelley\n@andrewrk\n\n\n\nTapani Moilanen\n@Tapppi\n\n\n\nDominic Tarr\n@dominictarr\n@dominictarr@twitter\n\n\nHao-kang Den\n\n\n\n\nHugo Dias\n\n\n\n\nJake Verbaten\n@Raynos\n@raynos@twitter\n\n\nKyle Robinson Young\n@shama\n@shamakry@twitter\n\n\nNathan Shively-Sanders\n@sandersn\n\n\n\nNolan Lawson\n@nolanlawson\n@nolan@toot.cafe\n\n\nTim Kuijsten\n@timkuijsten\n@timkuijsten@mastodon.social\n\n\nTim Oxley\n@timoxley\n@secoif@twitter"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/UPGRADING.html#table-of-contents",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/UPGRADING.html#table-of-contents",
    "title": "3327 Research",
    "section": "Table of Contents",
    "text": "Table of Contents\n\n\nClick to expand\n\n\nv6\nv5\nv4\nv3"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/UPGRADING.html#v6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/UPGRADING.html#v6",
    "title": "3327 Research",
    "section": "v6",
    "text": "v6\nThis release brings a major refactoring of the test suite, decouples abstract-leveldown from disk-based implementations and solves long-standing issues around serialization and type support. Because the changes are substantial, this guide has two sections:\n\nChanges to public API - for consumers of any implementation.\nChanges to private API - intended for implementors.\n\n\nChanges to public API\n\nNullish values are rejected\nIn addition to rejecting null and undefined as keys, abstract-leveldown now also rejects these types as values, due to preexisting significance in streams and iterators.\nBefore this, the behavior of these types depended on a large number of factors: _serializeValue and type support of the underlying storage, whether get(), iterator() or a stream was used to retrieve values, the keys and asBuffer options of iterator() and finally, which encoding was selected.\n\n\nRange options are serialized\nPreviously, range options like lt were passed through as-is, unlike keys.\n\n\nThe rules for range options have been relaxed\nBecause null, undefined, zero-length strings and zero-length buffers are significant types in encodings like bytewise and charwise, they became valid as range options. In fact, any type is now valid. This means db.iterator({ gt: undefined }) is not the same as db.iterator({}).\nFurthermore, abstract-leveldown makes no assumptions about the meaning of these types. Range tests that assumed null meant “not defined” have been removed.\n\n\nZero-length array keys are rejected\nThough this was already the case because _checkKey stringified its input before checking the length, that behavior has been replaced with an explicit Array.isArray() check and a new error message.\n\n\nNo longer assumes support of boolean and NaN keys\nA test that asserted boolean and NaN keys were valid has been removed.\n\n\nBrowser support\nIE10 has been dropped.\n\n\n\nChanges to private API\n\nlocation was removed\nAbstractLevelDOWN is no longer associated with a location. It’s up to the implementation to handle it if it’s required.\nIf your implementation has a location and you previously did:\nfunction YourDOWN (location) {\n  AbstractLevelDOWN.call(this, location)\n}\nYou must now do:\nfunction YourDOWN (location) {\n  this.location = location\n  AbstractLevelDOWN.call(this)\n}\nBe sure to include appropriate type checks. If you relied on the default AbstractLevelDOWN behavior that would be:\nif (typeof location !== 'string') {\n  throw new Error('constructor requires a location string argument')\n}\n\n\nAbstract test suite has moved to a single entry point\nInstead of including test files individually, you can and should include the test suite with one require() statement. If you previously did:\nconst test = require('tape')\nconst testCommon = require('abstract-leveldown/testCommon')\nconst YourDOWN = require('.')\n\nrequire('abstract-leveldown/abstract/get-test').all(YourDOWN, test, testCommon)\nrequire('abstract-leveldown/abstract/put-test').all(YourDOWN, test, testCommon)\n\n// etc\nYou must now do:\nconst test = require('tape')\nconst suite = require('abstract-leveldown/test')\nconst YourDOWN = require('.')\n\nsuite({\n  test: test,\n  factory: function () {\n    return new YourDOWN()\n  }\n})\nThe input to the test suite is a new form of testCommon. Should you need to reuse testCommon for your own (additional) tests, use the included utility to create a testCommon with defaults:\nconst test = require('tape')\nconst suite = require('abstract-leveldown/test')\nconst YourDOWN = require('.')\n\nconst testCommon = suite.common({\n  test: test,\n  factory: function () {\n    return new YourDOWN()\n  }\n})\n\nsuite(testCommon)\nAs part of removing location, the abstract tests no longer use testCommon.location(). Instead an implementation must implement factory() which must return a unique and isolated database instance. This allows implementations to pass options to their constructor.\nThe testCommon.cleanup method has been removed. Because factory() returns a unique database instance, cleanup should no longer be necessary. The testCommon.lastLocation method has also been removed as there is no remaining use of it in abstract tests.\nPreviously, implementations using the default testCommon had to include rimraf in their devDependencies and browser-based implementations had to exclude rimraf from browserify builds. This is no longer the case.\nIf your implementation is disk-based we recommend using tempy (or similar) to create unique temporary directories. Together with factory() your setup could now look something like:\nconst test = require('tape')\nconst tempy = require('tempy')\nconst suite = require('abstract-leveldown/test')\nconst YourDOWN = require('.')\n\nsuite({\n  test: test,\n  factory: function () {\n    return new YourDOWN(tempy.directory())\n  }\n})\n\n\nThe collectEntries utility has moved\nThe testCommon.collectEntries method has moved to the npm package level-concat-iterator. If your (additional) tests depend on collectEntries and you previously did:\ntestCommon.collectEntries(iterator, function (err, entries) {})\nYou must now do:\nconst concat = require('level-concat-iterator')\nconcat(iterator, function (err, entries) {})\n\n\nSetup and teardown became noops\nBecause cleanup is no longer necessary, the testCommon.setUp and testCommon.tearDown methods are now noops by default. If you do need to perform (a)synchronous work before or after each test, setUp and tearDown can be overridden:\nsuite({\n  // ..\n  setUp: function (t) {\n    t.end()\n  },\n  tearDown: function (t) {\n    t.end()\n  }\n})\n\n\nOptional tests have been separated\nIf your implementation does not support snapshots or other optional features, the relevant tests may be skipped. For example:\nsuite({\n  // ..\n  snapshots: false\n})\nPlease see the README for a list of options. Note that some of these have replaced process.browser checks.\n\n\nIterator must have a db reference\nThe db argument of the AbstractIterator constructor became mandatory, as well as a public db property on the instance. Its existence is not new; the test suite now asserts that your implementation also has it.\n\n\nSeeking became part of official API\nIf your implementation previously defined the public iterator.seek(target), it must now define the private iterator._seek(target). The new public API is equal to the reference implementation of leveldown except for two differences:\n\nThe target argument is not type checked, this is up to the implementation.\nThe target argument is passed through db._serializeKey.\n\nPlease see the README for details.\n\n\nChained batch has been refactored\n\nThe default _clear method is no longer a noop; instead it clears the operations queued by _put and/or _del\nThe _write method now takes an options object as its first argument\nThe db argument of the AbstractChainedBatch constructor became mandatory, as well as a public db property on the instance, which was previously named _db.\n\n\n\nDefault _serializeKey and _serializeValue became identity functions\nThey return whatever is given. Previously they were opinionated and mostly geared towards string- and Buffer-based storages. Implementations that didn’t already define their own serialization should now do so, according to the types that they support. Please refer to the README for recommended behavior."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/UPGRADING.html#v5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/UPGRADING.html#v5",
    "title": "3327 Research",
    "section": "v5",
    "text": "v5\nDropped support for node 4. No other breaking changes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/UPGRADING.html#v4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/UPGRADING.html#v4",
    "title": "3327 Research",
    "section": "v4",
    "text": "v4\n\ndefault testCommon parameter\nThe testCommon parameter will now default to abstract-leveldown/testCommon.js. You can omit this parameter, unless your implementation needs a custom version.\nIf your code today looks something like:\nconst test = require('tape')\nconst testCommon = require('abstract-leveldown/testCommon')\nconst leveldown = require('./your-leveldown')\nconst abstract = require('abstract-leveldown/abstract/get-test')\n\nabstract.all(leveldown, test, testCommon)\nYou can simplify it to:\nconst test = require('tape')\nconst leveldown = require('./your-leveldown')\nconst abstract = require('abstract-leveldown/abstract/get-test')\n\nabstract.all(leveldown, test)\n\n\ntestBuffer parameter removed\nThe abstract/put-get-del-test.js previously took a custom testBuffer parameter. After an analysis of various implementations we came to the conclusion that the parameter has no use.\nIf your implementation is using this abstract test, change from:\nconst test = require('tape')\nconst testCommon = require('abstract-leveldown/testCommon')\nconst leveldown = require('./your-leveldown')\nconst fs = require('fs')\nconst path = require('path')\nconst testBuffer = fs.readFileSync(path.join(__dirname, 'data/testdata.bin'))\nconst abstract = require('abstract-leveldown/abstract/put-get-del-test')\n\nabstract.all(leveldown, test, testBuffer, testCommon)\nto:\nconst test = require('tape')\nconst testCommon = require('abstract-leveldown/testCommon')\nconst leveldown = require('./your-leveldown')\nconst abstract = require('abstract-leveldown/abstract/put-get-del-test')\n\nabstract.all(leveldown, test, testCommon)\nor if testCommon is also redundant, to:\nconst test = require('tape')\nconst leveldown = require('./your-leveldown')\nconst abstract = require('abstract-leveldown/abstract/put-get-del-test')\n\nabstract.all(leveldown, test)\n\n\n.approximateSize method removed\nThe .approximateSize method has been removed from the public API. It is heavily related to LevelDB and more often than not, other stores lack the native primitives to implement this. If you did implement the internal _approximateSize method, that is now dead code. To preserve the method in your public API, rename it to approximateSize and also take care of the initialization code. Look to leveldown for inspiration.\nAlso, the corresponding abstract tests have been removed, so your implementation can no longer require abstract/approximate-size-test.\n\n\n._isBuffer method removed\nBecause Buffer is available in all environments nowadays, there is no need for alternatives like typed arrays. It is preferred to use Buffer and Buffer.isBuffer() directly.\n\n\nisLevelDOWN function removed\nThis was a legacy function.\n\n\nranges-test.js renamed\nWe have refactored a lot of the tests. Specifically the iterator tests were split in two and in that process we renamed ranges-test.js to iterator-range-test.js.\nIf your implementation is using these tests then change from:\nconst abstract = require('abstract-leveldown/abstract/ranges-test')\nto:\nconst abstract = require('abstract-leveldown/abstract/iterator-range-test')"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/UPGRADING.html#v3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/node_modules/abstract-leveldown/UPGRADING.html#v3",
    "title": "3327 Research",
    "section": "v3",
    "text": "v3\nNo changes to the API. New major version because support for node 0.12 was dropped."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/CONTRIBUTORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/CONTRIBUTORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "Contributors\n\n\n\nName\nGitHub\nSocial\n\n\n\n\nLars-Magnus Skog\n@ralphtheninja\n@ralph@social.weho.st\n\n\nVincent Weevers\n@vweevers\n@vweevers@twitter\n\n\nRod Vagg\n@rvagg\n@rvagg@twitter\n\n\nNolan Lawson\n@nolanlawson\n@nolan@toot.cafe\n\n\nCalvin Metcalf\n@calvinmetcalf\n\n\n\nJulian Gruber\n@juliangruber\n@juliangruber@twitter\n\n\nMeirion Hughes\n@MeirionHughes\n\n\n\nMichael Hart\n@mhart\n@hichaelmart@twitter\n\n\nMathias Buus\n@mafintosh\n@mafintosh@twitter\n\n\nDominic Tarr\n@dominictarr\n@dominictarr@twitter\n\n\nMax Ogden\n@maxogden\n@maxogden@twitter\n\n\nkumavis\n@kumavis\n\n\n\nTim Oxley\n@timoxley\n@secoif@twitter\n\n\nMarco Oliveira\n@marcooliveira\n@sonicspot@twitter\n\n\nKirill Fomichev\n@fanatid\n\n\n\nWill White\n@willwhite"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/UPGRADING.html#v5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/UPGRADING.html#v5",
    "title": "3327 Research",
    "section": "v5",
    "text": "v5\nSupport of keys & values other than strings and Buffers has been dropped. Internally memdown now stores keys & values as Buffers which solves a number of compatibility issues (#186). If you pass in a key or value that isn’t a string or Buffer, it will be irreversibly stringified."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/UPGRADING.html#v4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/UPGRADING.html#v4",
    "title": "3327 Research",
    "section": "v4",
    "text": "v4\nThis is an upgrade to abstract-leveldown@6 which solves long-standing issues around serialization and type support.\n\nRange options are now serialized\nPreviously, range options like lt were passed through as-is by abstract-leveldown, unlike keys. This makes no difference for memdown as it does not serialize anything.\n\n\nThe rules for range options have been relaxed\nBecause null, undefined, zero-length strings and zero-length buffers are significant types in encodings like bytewise and charwise, they became valid as range options in abstract-leveldown. This means db.iterator({ gt: undefined }) is not the same as db.iterator({}).\nFor memdown, when used by itself, the behavior of null, undefined, zero-length strings and zero-length buffers is undefined.\n\n\nNullish values are rejected\nIn addition to rejecting null and undefined as keys, abstract-leveldown now also rejects these types as values, due to preexisting significance in streams and iterators.\n\n\nZero-length array keys are rejected\nThough this was already the case, abstract-leveldown has replaced the behavior with an explicit Array.isArray() check and a new error message.\n\n\nBrowser support\nIE10 has been dropped."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/UPGRADING.html#v3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/UPGRADING.html#v3",
    "title": "3327 Research",
    "section": "v3",
    "text": "v3\nDropped support for node 4. No other breaking changes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/UPGRADING.html#v2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/memdown/UPGRADING.html#v2",
    "title": "3327 Research",
    "section": "v2",
    "text": "v2\nThis release drops Node.js 0.12, brings memdown up to par with latest levelup (v2) and abstract-leveldown (v4), simplifies serialization and removes global state.\n\nTargets latest levelup\nUsage has changed to:\nconst levelup = require('levelup')\nconst memdown = require('memdown')\n\nconst db = levelup(memdown())\nFrom the old:\nconst db = levelup('mydb', { db: memdown })\n\n\nNo stringification of keys and values\nThis means that in addition to Buffers, you can store any JS type without the need for encoding-down. This release also makes behavior consistent in Node.js and browsers. Please refer to the README for a detailed explanation.\n\n\nNo global state or location argument\nIf you previously did this to make a global store:\nconst db = levelup('mydb', { db: memdown })\nYou must now attach the store to a global yourself (if you desire global state):\nconst db = window.mydb = levelup(memdown())\n\n\nNo null batch operations\nInstead of skipping null operations, db.batch([null]) will throw an error courtesy of abstract-leveldown."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/hardhat/sample-projects/basic/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/hardhat/sample-projects/basic/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "Sample project’s license\nThis is free and unencumbered software released into the public domain.\nAnyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.\nIn jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nFor more information, please refer to https://unlicense.org"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-bigints/CHANGELOG.html#v1.0.1---2020-12-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-bigints/CHANGELOG.html#v1.0.1---2020-12-13",
    "title": "3327 Research",
    "section": "v1.0.1 - 2020-12-13",
    "text": "v1.0.1 - 2020-12-13\n\nCommits\n\n[Tests] use shared travis-ci configs 46a0d6b\n[Tests] migrate tests to Github Actions 91a38fa\n[meta] do not publish github action workflow files 69aacba\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog, tape 64e2c08\n[Tests] run nyc on all tests; use tape runner 8009375\n[actions] add automatic rebasing / merge commit blocking e599917\n[actions] add “Allow Edits” workflow bd0126e\n[readme] remove travis badge 8e02a73\n[Dev Deps] update eslint, @ljharb/eslint-config, auto-changelog, safe-publish-latest 95859f2\n[Dev Deps] update auto-changelog, in-publish, tape 0588f41\n[Dev Deps] update eslint, @ljharb/eslint-config, tape 5b024a6\n[meta] add version scripts 4788d61\n[actions] switch Automatic Rebase workflow to pull_request_target event be0e0de\n[Dev Deps] update auto-changelog; add aud 13a8d1b\n[actions] fix action name f873d9a\n[meta] add funding field 1b51f49\n[Dev Deps] update auto-changelog 2322461\n[Tests] only audit prod deps aabdade"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-bigints/CHANGELOG.html#v1.0.0---2019-08-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/has-bigints/CHANGELOG.html#v1.0.0---2019-08-10",
    "title": "3327 Research",
    "section": "v1.0.0 - 2019-08-10",
    "text": "v1.0.0 - 2019-08-10\n\nCommits\n\n[Tests] add .travis.yml 9730412\nInitial commit 65f7c38\n[Tests] add tests e374a78\nreadme 5d39092\nnpm init 1be2e3d\nimplementation b7bc812\n[Tests] add linting 04533be\n[meta] create FUNDING.yml cf824a7\nOnly apps should have lockfiles 64e8242"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/growl/History.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/growl/History.html",
    "title": "3327 Research",
    "section": "",
    "text": "1.10.5 / 2018-04-04\n\nFix callbacks not receiving errors (#72) [chadrickman]\n\n\n\n1.10.4 / 2018-01-29\n\nFix notifications on linux when using notify-send (#70) [hmshwt]\n\n\n\n1.9.3 / 2016-09-05\n\nfixed command injection vulnerability\n\n\n\n1.7.0 / 2012-12-30\n\nsupport transient notifications in Gnome\n\n\n\n1.6.1 / 2012-09-25\n\nrestore compatibility with node < 0.8 [fgnass]\n\n\n\n1.6.0 / 2012-09-06\n\nadd notification center support [drudge]\n\n\n\n1.5.1 / 2012-04-08\n\nMerge pull request #16 from KyleAMathews/patch-1\nFixes #15\n\n\n\n1.5.0 / 2012-02-08\n\nAdded windows support [perfusorius]\n\n\n\n1.4.1 / 2011-12-28\n\nFixed: dont exit(). Closes #9\n\n\n\n1.4.0 / 2011-12-17\n\nChanged API: growl.notify() -> growl()\n\n\n\n1.3.0 / 2011-12-17\n\nAdded support for Ubuntu/Debian/Linux users [niftylettuce]\nFixed: send notifications even if title not specified [alessioalex]\n\n\n\n1.2.0 / 2011-10-06\n\nAdd support for priority.\n\n\n\n1.1.0 / 2011-03-15\n\nAdded optional callbacks\nAdded parsing of version\n\n\n\n1.0.1 / 2010-03-26\n\nFixed; sys.exec -> child_process.exec to support latest node\n\n\n\n1.0.0 / 2010-03-19\n\nInitial release"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/growl/Readme.html#installation",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/growl/Readme.html#installation",
    "title": "3327 Research",
    "section": "Installation",
    "text": "Installation\n\nInstall\n\n\nMac OS X (Darwin):\nInstall growlnotify(1). On OS X 10.8, Notification Center is supported using terminal-notifier. To install:\n$ sudo gem install terminal-notifier\nInstall npm and run:\n$ npm install growl\n\n\nUbuntu (Linux):\nInstall notify-send through the libnotify-bin package:\n$ sudo apt-get install libnotify-bin\nInstall npm and run:\n$ npm install growl\n\n\nWindows:\nDownload and install Growl for Windows\nDownload growlnotify - IMPORTANT : Unpack growlnotify to a folder that is present in your path!\nInstall npm and run:\n$ npm install growl"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/growl/Readme.html#examples",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/growl/Readme.html#examples",
    "title": "3327 Research",
    "section": "Examples",
    "text": "Examples\nCallback functions are optional\nvar growl = require('growl')\ngrowl('You have mail!')\ngrowl('5 new messages', { sticky: true })\ngrowl('5 new emails', { title: 'Email Client', image: 'Safari', sticky: true })\ngrowl('Message with title', { title: 'Title'})\ngrowl('Set priority', { priority: 2 })\ngrowl('Show Safari icon', { image: 'Safari' })\ngrowl('Show icon', { image: 'path/to/icon.icns' })\ngrowl('Show image', { image: 'path/to/my.image.png' })\ngrowl('Show png filesystem icon', { image: 'png' })\ngrowl('Show pdf filesystem icon', { image: 'article.pdf' })\ngrowl('Show pdf filesystem icon', { image: 'article.pdf' }, function(err){\n  // ... notified\n})"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/growl/Readme.html#options",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/growl/Readme.html#options",
    "title": "3327 Research",
    "section": "Options",
    "text": "Options\n\ntitle\n\nnotification title\n\nname\n\napplication name\n\npriority\n\npriority for the notification (default is 0)\n\nsticky\n\nweither or not the notification should remainin until closed\n\nimage\n\nAuto-detects the context:\n\npath to an icon sets –iconpath\npath to an image sets –image\ncapitalized word sets –appIcon\nfilename uses extname as –icon\notherwise treated as –icon\n\n\nexec\n\nmanually specify a shell command instead\n\nappends message to end of shell command\nor, replaces %s with message\noptionally prepends title (example: title: message)\nexamples: {exec: 'tmux display-message'}, {exec: 'echo \"%s\" > messages.log}"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/growl/Readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/growl/Readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\n(The MIT License)\nCopyright (c) 2009 TJ Holowaychuk tj@vision-media.ca Copyright (c) 2016 Joshua Boy Nicolai Appelman joshua@jbna.nl\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ‘Software’), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED ‘AS IS’, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/side-channel/CHANGELOG.html#v1.0.4---2020-12-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/side-channel/CHANGELOG.html#v1.0.4---2020-12-29",
    "title": "3327 Research",
    "section": "v1.0.4 - 2020-12-29",
    "text": "v1.0.4 - 2020-12-29\n\nCommits\n\n[Tests] migrate tests to Github Actions 10909cb\n[Refactor] Use a linked list rather than an array, and move accessed nodes to the beginning 195613f\n[meta] do not publish github action workflow files 290ec29\n[Tests] run nyc on all tests; use tape runner ea6d030\n[actions] add “Allow Edits” workflow d464d8f\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog 02daca8\n[Refactor] use call-bind and get-intrinsic instead of es-abstract e09d481\n[Deps] update object.assign ee83aa8\n[actions] update rebase action to use checkout v2 7726b0b"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/side-channel/CHANGELOG.html#v1.0.3---2020-08-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/side-channel/CHANGELOG.html#v1.0.3---2020-08-23",
    "title": "3327 Research",
    "section": "v1.0.3 - 2020-08-23",
    "text": "v1.0.3 - 2020-08-23\n\nCommits\n\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog, tape 1f10561\n[Deps] update es-abstract, object-inspect bc20159\n[Dev Deps] update @ljharb/eslint-config, tape b9b2b22\n[Dev Deps] update eslint, @ljharb/eslint-config, tape 7055ab4\n[Dev Deps] update auto-changelog; add aud d278c37\n[actions] switch Automatic Rebase workflow to pull_request_target event 3bcf982\n[Tests] only audit prod deps 18d01c4\n[Deps] update es-abstract 6ab096d\n[Dev Deps] update tape 9dc174c\n[Deps] update es-abstract 431d0f0\n[Deps] update es-abstract 49869fd\n[meta] Add package.json to package’s exports 77d9cdc"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/side-channel/CHANGELOG.html#v1.0.2---2019-12-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/side-channel/CHANGELOG.html#v1.0.2---2019-12-20",
    "title": "3327 Research",
    "section": "v1.0.2 - 2019-12-20",
    "text": "v1.0.2 - 2019-12-20\n\nCommits\n\n[Dev Deps] update @ljharb/eslint-config, tape 4a526df\n[Deps] update es-abstract d4f6e62"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/side-channel/CHANGELOG.html#v1.0.1---2019-12-01",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/side-channel/CHANGELOG.html#v1.0.1---2019-12-01",
    "title": "3327 Research",
    "section": "v1.0.1 - 2019-12-01",
    "text": "v1.0.1 - 2019-12-01\n\nCommits\n\n[Fix] add missing “exports” d212907"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/side-channel/CHANGELOG.html#v1.0.0---2019-12-01",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/side-channel/CHANGELOG.html#v1.0.0---2019-12-01",
    "title": "3327 Research",
    "section": "v1.0.0 - 2019-12-01",
    "text": "v1.0.0 - 2019-12-01\n\nCommits\n\nInitial implementation dbebd3a\nInitial tests 73bdefe\nInitial commit 43c03e1\nnpm init 5c090a7\n[meta] add auto-changelog a5c4e56\n[actions] add automatic rebasing / merge commit blocking bab1683\n[meta] add funding field; create FUNDING.yml 63d7aea\n[Tests] add npm run lint 46a5a81\nOnly apps should have lockfiles 8b16b03\n[meta] add safe-publish-latest 2f098ef"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/concat-map/README.html#concatmapxs-fn",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/concat-map/README.html#concatmapxs-fn",
    "title": "3327 Research",
    "section": "concatMap(xs, fn)",
    "text": "concatMap(xs, fn)\nReturn an array of concatenated elements by calling fn(x, i) for each element x and each index i in the array xs.\nWhen fn(x, i) returns an array, its result will be concatenated with the result array. If fn(x, i) returns anything else, that value will be pushed onto the end of the result array."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "0.6.8 - 2019-08-13",
    "text": "0.6.8 - 2019-08-13\n\nAdded support for arrays in Solidity tight packing ABI.solidityPack() function, PR #82"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "0.6.7 - 2019-03-18",
    "text": "0.6.7 - 2019-03-18\n\nAdded support/CI testing for Node 10, 11, PR #77\nDropped support for Node 4, 6, PR #77\nUpdated ethereumjs-util dependency to v6.0.0, bn.js to 4.11.8, PR #77\nUpdated dev dependency versions, PR #77"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "0.6.6 - 2019-01-16",
    "text": "0.6.6 - 2019-01-16\n\nInclude size of fixed-size array in offset for dynamic type, PR #60\nReplaced problematic for..in loops with C-style loops, PR #68\nUpdated ethereumjs-util dependency to v5.0.0, PR #59\nRun CI tests on currently supported Node versions, PR #61"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "0.6.5 - 2017-12-07",
    "text": "0.6.5 - 2017-12-07\n\nFix tight packing for ABI.soliditySHA3\nFix ABI.solidityPack early return on bytes32 input\nSupport for multi dim / dynamic arrays\nSupport addresses starting with zeroes"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "0.6.4 - 2016-08-29",
    "text": "0.6.4 - 2016-08-29\n\nFix length calculation for static arrays and skip enough bytes after them"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "0.6.3 - 2016-08-10",
    "text": "0.6.3 - 2016-08-10\n\nSupport for the (u)fixedMxN datatype\nFix conversion of type shorthands (int, uint, fixed, ufixed)\nSerpent fixes\nOther bug fixes / improvements"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "0.6.2 - 2016-06-01",
    "text": "0.6.2 - 2016-06-01\n\nMinor improvements and bug fixes\nAdditional tests"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "0.6.1 - 2016-05-19",
    "text": "0.6.1 - 2016-05-19\n\nProperly decode fixed-length arrays"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "0.6.0 - 2016-04-26",
    "text": "0.6.0 - 2016-04-26\n\nIntroduce ABI.stringify\nRemove signature handling form rawEncode/rawDecode\nAdded ABI.simpleEncode and ABI.simpleDecode\nExport methodID and eventID\nVarious improvements"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#older-releases",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/CHANGELOG.html#older-releases",
    "title": "3327 Research",
    "section": "Older releases:",
    "text": "Older releases:\n\n0.5.1 - 2016-04-12\n0.5.0 - 2016-03-25\n0.4.0 - 2015-12-17\n0.3.0 - 2015-11-30\n0.2.0 - 2015-11-25\n0.1.0 - 2015-11-23"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "6.2.1 - 2020-07-17",
    "text": "6.2.1 - 2020-07-17\nThis release replaces the native secp256k1 and keccak dependencies with ethereum-cryptopgraphy which doesn’t need native compilation."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "6.2.0 - 2019-11-06",
    "text": "6.2.0 - 2019-11-06\nThis release comes with a new file structure, related functionality is now broken down into separate files (like account.js) allowing for more oversight and modular integration. All functionality is additionally exposed through an aggregating index.js file, so this version remains backwards-compatible.\nOverview on the new structure:\n\naccount: Private/public key and address-related functionality (creation, validation, conversion)\nbyte: Byte-related helper and conversion functions\nconstants: Exposed constants (e.g. KECCAK256_NULL_S for the string representation of the Keccak-256 hash of null)\nhash: Hash functions\nobject: Helper function for creating a binary object (DEPRECATED)\nsignature: Signing, signature validation, conversion, recovery\n\nSee associated PRs #182 and #179.\nFeatures\n\naccount: Added EIP-1191 address checksum algorithm support for toChecksumAddress(), PR #204\n\nBug Fixes\n\nbytes: toBuffer() conversion function now throws if strings aren’t 0x-prefixed hex values making the behavior of toBuffer() more predictable respectively less error-prone (you might generally want to check cases in your code where you eventually allowed non-0x-prefixed input before), PR #197\n\nDependencies / Environment\n\nDropped Node 6, added Node 11 and 12 to officially supported Node versions, PR #207\nDropped safe-buffer dependency, PR #182\nUpdated rlp dependency from v2.0.0 to v2.2.3 (TypeScript improvements for RLP hash functionality), PR #187\nMade @types/bn.js a dependency instead of a devDependency, PR #205\nUpdated keccak256 dependency from v1.4.0 to v2.0.0, PR #168"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "6.1.0 - 2019-02-12",
    "text": "6.1.0 - 2019-02-12\nFirst TypeScript based release of the library, now also including a type declaration file distributed along with the package published, see PR #170.\nBug Fixes\n\nFixed a bug in isValidSignature() not correctly returning false if passed an s-value greater than secp256k1n/2 on homestead or later. If you use the method signature with more than three arguments (so not just passing in v, r, s and use it like isValidSignature(v, r, s) and omit the optional args) please read the thread from PR #171 carefully and check your code.\n\nDevelopment\n\nUpdated @types/node to Node 11 types, PR #175\nChanged browser from Chrome to ChromeHeadless, PR #156"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "6.0.0 - 2018-10-08",
    "text": "6.0.0 - 2018-10-08\n\nSupport for EIP-155 replay protection by adding an optional chainId parameter to ecsign(), ecrecover(), toRpcSig() and isValidSignature(), if present the\nnew signature format relying on the chainId is used, see PR #143\nNew generateAddress2() for CREATE2 opcode (EIP-1014) address creation (Constantinople HF), see PR #146\n[BREAKING] Fixed signature to comply with Geth and Parity in toRpcSig() changing v from 0/1 to 27/28, this changes the resulting signature buffer, see PR #139\n[BREAKING] Remove deprecated sha3-named constants and methods (see v5.2.0 release), see PR #154"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "5.2.0 - 2018-04-27",
    "text": "5.2.0 - 2018-04-27\n\nRename all sha3 hash related constants and functions to keccak, see this EIP discussion for context (tl;dr: Ethereum uses a slightly different hash algorithm then in the official SHA-3 standard)\nRenamed constants:\n\nSHA3_NULL_S -> KECCAK256_NULL_S\nSHA3_NULL -> KECCAK256_NULL\nSHA3_RLP_ARRAY_S -> KECCAK256_RLP_ARRAY_S\nSHA3_RLP_ARRAY -> KECCAK256_RLP_ARRAY\nSHA3_RLP_S -> KECCAK256_RLP_S\nSHA3_RLP -> KECCAK256_RLP\n\nRenamed functions:\n\nsha3() -> keccak() (number of bits determined in arguments)\n\nNew keccak256() alias function for keccak(a, 256)\nThe usage of the sha-named versions is now DEPRECATED and the related constants and functions will be removed on the next major release v6.0.0"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "5.1.5 - 2018-02-28",
    "text": "5.1.5 - 2018-02-28\n\nFix browserify issue leading to 3rd-party build problems, PR #119"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "5.1.4 - 2018-02-03",
    "text": "5.1.4 - 2018-02-03\n\nMoved to ES5 Node distribution version for easier toolchain integration, PR #114\nUpdated isPrecompile() with Byzantium precompile address range, PR #115"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "5.1.3 - 2018-01-03",
    "text": "5.1.3 - 2018-01-03\n\nES6 syntax updates\nDropped Node 5 support\nMoved babel to dev dependencies, switched to env preset\nUsage of safe-buffer instead of Node Buffer\nDo not allow capital 0X as valid address in isValidAddress()\nNew methods zeroAddress() and isZeroAddress()\nUpdated dependencies"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "5.1.2 - 2017-05-31",
    "text": "5.1.2 - 2017-05-31\n\nAdd browserify for ES2015 compatibility\nFix hex validation"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "5.1.1 - 2017-02-10",
    "text": "5.1.1 - 2017-02-10\n\nUse hex utils from ethjs-util\nMove secp vars into functions\nDependency updates"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "5.1.0 - 2017-02-04",
    "text": "5.1.0 - 2017-02-04\n\nFix toRpcSig() function\nUpdated Buffer creation (Buffer.from)\nDependency updates\nFix npm error\nUse keccak package instead of keccakjs\nHelpers for eth_sign RPC call"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "5.0.1 - 2016-11-08",
    "text": "5.0.1 - 2016-11-08\n\nFix bufferToHex()"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "5.0.0 - 2016-11-08",
    "text": "5.0.0 - 2016-11-08\n\nAdded isValidSignature() (ECDSA signature validation)\nChange v param in ecrecover() from Buffer to int (breaking change!)\nFix property alias for setting with initial parameters\nReject invalid signature lengths for fromRpcSig()\nFix sha3() width param (byte -> bit)\nFix overflow bug in bufferToInt()"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "4.5.0 - 2016-17-12",
    "text": "4.5.0 - 2016-17-12\n\nIntroduced toMessageSig() and fromMessageSig()"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#older-releases",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/CHANGELOG.html#older-releases",
    "title": "3327 Research",
    "section": "Older releases:",
    "text": "Older releases:\n\n4.4.1 - 2016-05-20\n4.4.0 - 2016-04-26\n4.3.1 - 2016-04-25\n4.3.0 - 2016-03-23\n4.2.0 - 2016-03-18\n4.1.0 - 2016-03-08\n4.0.0 - 2016-02-02\n3.0.0 - 2016-01-20"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which-module/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which-module/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "Change Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n # 2.0.0 (2017-05-01)\n\nFeatures\n\nremove Node < 4 from official testing/support (#22) (ee7aff4)\n\n\n\nBREAKING CHANGES\n\nNode 0.10 or 0.12 no longer supported, please update to Node 4+ or use which-module@1.0.0\n\n # 1.0.0 (2016-06-06)\n\n\nFeatures\n\ninitial code (08074cd)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/get-symbol-description/CHANGELOG.html#v1.0.0---2021-08-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/get-symbol-description/CHANGELOG.html#v1.0.0---2021-08-17",
    "title": "3327 Research",
    "section": "v1.0.0 - 2021-08-17",
    "text": "v1.0.0 - 2021-08-17\n\nCommits\n\nInitial commit: pulled from es-abstract 6e34a05\nInitial commit 3862092\n[meta] do not publish github action workflow files 9d1e2b9\nnpm init 5051b32\nOnly apps should have lockfiles b866d1c"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/minimalistic-assert/readme.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/minimalistic-assert/readme.html",
    "title": "3327 Research",
    "section": "",
    "text": "minimalistic-assert\nvery minimalistic assert module."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "Change Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n\n5.0.0 (2019-04-10)\n\nBug Fixes\n\nUpdate wrap-ansi to fix compatibility with latest versions of chalk. (#60) (7bf79ae)\n\n\n\nBREAKING CHANGES\n\nDrop support for node < 6.\n\n # 4.1.0 (2018-04-23)\n\n\nFeatures\n\nadd resetOutput method (#57) (7246902)\n\n # 4.0.0 (2017-12-18)\n\n\nBug Fixes\n\ndowngrades strip-ansi to version 3.0.1 (#54) (5764c46)\nset env variable FORCE_COLOR. (#56) (7350e36)\n\n\n\nChores\n\ndrop support for node < 4 (#53) (b105376)\n\n\n\nFeatures\n\nadd fallback for window width (#45) (d064922)\n\n\n\nBREAKING CHANGES\n\nofficially drop support for Node < 4\n\n # 3.2.0 (2016-04-11)\n\n\nBug Fixes\n\nreduces tarball size (acc6c33)\n\n\n\nFeatures\n\nadds standard-version for release management (ff84e32)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/strip-ansi/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/strip-ansi/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install strip-ansi"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/strip-ansi/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/strip-ansi/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst stripAnsi = require('strip-ansi');\n\nstripAnsi('\\u001B[4mUnicorn\\u001B[0m');\n//=> 'Unicorn'\n\nstripAnsi('\\u001B]8;;https://github.com\\u0007Click\\u001B]8;;\\u0007');\n//=> 'Click'"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/strip-ansi/readme.html#security",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/strip-ansi/readme.html#security",
    "title": "3327 Research",
    "section": "Security",
    "text": "Security\nTo report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/strip-ansi/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/strip-ansi/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nstrip-ansi-cli - CLI for this module\nstrip-ansi-stream - Streaming version of this module\nhas-ansi - Check if a string has ANSI escape codes\nansi-regex - Regular expression for matching ANSI escape codes\nchalk - Terminal string styling done right"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/strip-ansi/readme.html#maintainers",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/strip-ansi/readme.html#maintainers",
    "title": "3327 Research",
    "section": "Maintainers",
    "text": "Maintainers\n\nSindre Sorhus\nJosh Junon"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/strip-ansi/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/strip-ansi/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/ansi-regex/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/ansi-regex/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install ansi-regex"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/ansi-regex/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/ansi-regex/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst ansiRegex = require('ansi-regex');\n\nansiRegex().test('\\u001B[4mcake\\u001B[0m');\n//=> true\n\nansiRegex().test('cake');\n//=> false\n\n'\\u001B[4mcake\\u001B[0m'.match(ansiRegex());\n//=> ['\\u001B[4m', '\\u001B[0m']\n\n'\\u001B[4mcake\\u001B[0m'.match(ansiRegex({onlyFirst: true}));\n//=> ['\\u001B[4m']\n\n'\\u001B]8;;https://github.com\\u0007click\\u001B]8;;\\u0007'.match(ansiRegex());\n//=> ['\\u001B]8;;https://github.com\\u0007', '\\u001B]8;;\\u0007']"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/ansi-regex/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/ansi-regex/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nansiRegex(options)\nReturns a regex for matching ANSI escape codes.\n\noptions\n\nonlyFirst\nType: boolean Default: false (Matches any ANSI escape codes in a string)\nMatch only the first ANSI escape."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/ansi-regex/readme.html#faq",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/ansi-regex/readme.html#faq",
    "title": "3327 Research",
    "section": "FAQ",
    "text": "FAQ\n\nWhy do you test for codes not in the ECMA 48 standard?\nSome of the codes we run as a test are codes that we acquired finding various lists of non-standard or manufacturer specific codes. We test for both standard and non-standard codes, as most of them follow the same or similar format and can be safely matched in strings without the risk of removing actual string content. There are a few non-standard control codes that do not follow the traditional format (i.e. they end in numbers) thus forcing us to exclude them from the test because we cannot reliably match them.\nOn the historical side, those ECMA standards were established in the early 90’s whereas the VT100, for example, was designed in the mid/late 70’s. At that point in time, control codes were still pretty ungoverned and engineers used them for a multitude of things, namely to activate hardware ports that may have been proprietary. Somewhere else you see a similar ‘anarchy’ of codes is in the x86 architecture for processors; there are a ton of “interrupts” that can mean different things on certain brands of processors, most of which have been phased out."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/ansi-regex/readme.html#security",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/ansi-regex/readme.html#security",
    "title": "3327 Research",
    "section": "Security",
    "text": "Security\nTo report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/ansi-regex/readme.html#maintainers",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/ansi-regex/readme.html#maintainers",
    "title": "3327 Research",
    "section": "Maintainers",
    "text": "Maintainers\n\nSindre Sorhus\nJosh Junon"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/ansi-regex/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/ansi-regex/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/string-width/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/string-width/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install string-width"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/string-width/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/string-width/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst stringWidth = require('string-width');\n\nstringWidth('古');\n//=> 2\n\nstringWidth('\\u001b[1m古\\u001b[22m');\n//=> 2\n\nstringWidth('a');\n//=> 1\n\nstringWidth('\\u001B]8;;https://github.com\\u0007Click\\u001B]8;;\\u0007');\n// => 5"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/string-width/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/string-width/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nstring-width-cli - CLI for this module\nstring-length - Get the real length of a string\nwidest-line - Get the visual width of the widest line in a string"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/string-width/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cliui/node_modules/string-width/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright © 2013-present Rod Vagg and Contributors.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "5.3.0 - 2019-10-04",
    "text": "5.3.0 - 2019-10-04\n\nAdded\n\nAdd manifest (Level/community#83) (#79) (@vweevers)\nInclude abstract test suite (#77) (@vweevers)\n\n\n\nFixed\n\nPass db to AbstractIterator (#77) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "5.2.1 - 2019-09-17",
    "text": "5.2.1 - 2019-09-17\n\nFixed\n\nCreate iterators in order and add type property for reachdown (#75) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "5.2.0 - 2019-09-06",
    "text": "5.2.0 - 2019-09-06\n\nChanged\n\nUpgrade abstract-leveldown from ~6.0.0 to ~6.1.0 (#72) (@vweevers)\nUpgrade hallmark devDependency from ^0.1.0 to ^2.0.0 (#70, #74) (@vweevers)\nUpgrade standard devDependency from ^12.0.0 to ^14.0.0 (#69, #73) (@vweevers)\n\n\n\nAdded\n\nDefer db.clear() and db.compactRange() (#72)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "5.1.0 - 2019-06-22",
    "text": "5.1.0 - 2019-06-22\n\nChanged\n\nUpdate nyc devDependency from ^13.2.0 to ^14.0.0 (#66) (@vweevers)\n\n\n\nAdded\n\nSupport seeking (#68) (@MeirionHughes)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "5.0.1 - 2019-03-31",
    "text": "5.0.1 - 2019-03-31\n\nChanged\n\nUpgrade nyc devDependency from ^12.0.2 to ^13.2.0 (#63) (@vweevers)\nApply common project tweaks (#61, #62, c4d169e) (@vweevers)\n\n\n\nFixed\n\nFix subtests by adding t.plan() (#65) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "5.0.0 - 2018-12-21",
    "text": "5.0.0 - 2018-12-21\n\nChanged\n\nUpgrade abstract-leveldown dependency from ~5.0.0 to ~6.0.0 (@ralphtheninja)\nUpgrade standard devDependency from ^11.0.0 to ^12.0.0 (@ralphtheninja)\nTweak copyright years for less maintenance (@ralphtheninja)\n\n\n\nAdded\n\nAdd nyc and coveralls (@ralphtheninja)\n\n\n\nRemoved\n\nRemove contributors from package.json (@ralphtheninja)\nRemove node 9 (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "4.0.2 - 2018-05-30",
    "text": "4.0.2 - 2018-05-30\n\nChanged\n\nReplace util.inherits with inherits module (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "4.0.1 - 2018-05-22",
    "text": "4.0.1 - 2018-05-22\n\nChanged\n\nUpgrade abstract-leveldown to 5.0.0 (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "4.0.0 - 2018-05-13",
    "text": "4.0.0 - 2018-05-13\n\nAdded\n\nAdd node 10 to Travis (@ralphtheninja)\n\n\n\nChanged\n\nUpgrade to standard@11.0.0 (@ralphtheninja)\n\n\n\nRemoved\n\nRemove node 4 from Travis (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "3.0.0 - 2018-02-08",
    "text": "3.0.0 - 2018-02-08\n\nAdded\n\nAdd 9 to travis (@ralphtheninja)\n\n\n\nChanged\n\nUpgrade to abstract-leveldown@4.0.0 (@ralphtheninja)\n\n\n\nRemoved\n\nRemove DeferredLevelDOWN.prototype._isBuffer, no longer needed since we use Buffer.isBuffer() (@ralphtheninja)\n\n\n\nFixed\n\nDefer approximateSize() separately (@ralphtheninja)\nFix broken link in README and clean up old .jshintrc (@ralphtheninja)\n\nHistorical Note abstract-leveldown@4.0.0 dropped approximateSize() so we needed to defer this method separately for stores that support it."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "2.0.3 - 2017-11-04",
    "text": "2.0.3 - 2017-11-04\n\nAdded\n\nAdd 4 to travis (@vweevers)\nAdd node badge (@vweevers)\n\n\n\nChanged\n\nUpgrade to abstract-leveldown@3.0.0 (@vweevers)\n\nHistorical Note abstract-leveldown@3.0.0 dropped support for node 0.12 and didn’t have any breaking changes to api or behavior, hence a new patch version."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "2.0.2 - 2017-10-06",
    "text": "2.0.2 - 2017-10-06\n\nAdded\n\nAdd standard for linting (@ralphtheninja)\n\n\n\nChanged\n\nUse svg instead of png for travis badge (@ralphtheninja)\nUpdate to new badge setup (@ralphtheninja)\n\n\n\nFixed\n\n_serializeKey() and _serializeValue() should not modify keys or values (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "2.0.1 - 2017-09-12",
    "text": "2.0.1 - 2017-09-12\n\nAdded\n\nAdd Greenkeeper badge (@ralphtheninja)\nAdd 6 and 8 to travis (@ralphtheninja)\n\n\n\nChanged\n\nUpgrade to abstract-leveldown@2.7.0 (@ralphtheninja)\n\n\n\nRemoved\n\nRemove 0.8, 0.10 and 0.11 from travis (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "2.0.0 - 2017-07-30",
    "text": "2.0.0 - 2017-07-30\n\nChanged\n\nUpdate dependencies (@ralphtheninja)\nUpdate copyright years (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "2.0.0-2 - 2015-05-28",
    "text": "2.0.0-2 - 2015-05-28\n\nFixed\n\nFix .iterator() after db is opened (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "2.0.0-1 - 2015-05-28",
    "text": "2.0.0-1 - 2015-05-28\nNo changes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "2.0.0-0 - 2015-05-27",
    "text": "2.0.0-0 - 2015-05-27\n\nChanged\n\nUpgrade to abstract-leveldown@2.4.0 for .status (@juliangruber)\nChange api to leveldown api (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "1.2.2 - 2017-07-30",
    "text": "1.2.2 - 2017-07-30\n\nAdded\n\nAdd 4, 6 and 7 to travis (@juliangruber)\nAdd 8 to travis (@ralphtheninja)\n\n\n\nChanged\n\nUpdate tape and abstract-leveldown dependencies (@juliangruber)\n\n\n\nRemoved\n\nRemove 0.10 from travis (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "1.2.1 - 2015-08-14",
    "text": "1.2.1 - 2015-08-14\n\nAdded\n\nAdd 0.12, 2.5 and 3.0 to travis (@juliangruber)\n\n\n\nRemoved\n\nRemove 0.8 and 0.11 from travis (@juliangruber)\n\n\n\nFixed\n\nFix iterator after setDb case (@substack)\nFix broken travis link (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "1.2.0 - 2015-05-28",
    "text": "1.2.0 - 2015-05-28\n\nChanged\n\nUpgrade to abstract-leveldown@2.4.0 for .status (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "1.1.0 - 2015-05-22",
    "text": "1.1.0 - 2015-05-22\n\nChanged\n\nExport DeferredIterator (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "1.0.0 - 2015-04-28",
    "text": "1.0.0 - 2015-04-28\n\nChanged\n\nUpgrade to abstract-leveldown@2.1.2 (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "0.3.0 - 2015-04-16",
    "text": "0.3.0 - 2015-04-16\n\nAdded\n\nAdd support for deferred iterators (@juliangruber)\n\n\n\nChanged\n\nChange to plain MIT license (@andrewrk)\nUpdate logo and copyright (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-23",
    "title": "3327 Research",
    "section": "0.2.0 - 2014-04-26",
    "text": "0.2.0 - 2014-04-26\n\nRemoved\n\nRemove bops and replace with Buffer (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-24",
    "title": "3327 Research",
    "section": "0.1.0 - 2013-10-14",
    "text": "0.1.0 - 2013-10-14\n\nChanged\n\nlocation passed to AbstractLevelDOWN constructor is optional (@rvagg)\n\n\n\nRemoved\n\nRemove npm-dl badge (@rvagg)\n\n\n\nFixed\n\nFix broken travis badge (@rvagg)\nFix links from rvagg/ to Level/ (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-25",
    "title": "3327 Research",
    "section": "0.0.1 - 2013-09-30",
    "text": "0.0.1 - 2013-09-30\n\nAdded\n\nAdd tests (@rvagg)\nAdd node 0.10 and 0.11 to travis (@rvagg)\n\n\n\nChanged\n\nUpdate documentation (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CHANGELOG.html#section-26",
    "title": "3327 Research",
    "section": "0.0.0 - 2013-09-17",
    "text": "0.0.0 - 2013-09-17\n:seedling: First release. (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright © 2013-present Rod Vagg and Contributors.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "6.2.3 - 2020-04-03",
    "text": "6.2.3 - 2020-04-03\n\nChanged\n\nUpgrade airtap devDependency from ^2.0.0 to ^3.0.0 (#360) (@vweevers)\n\n\n\nFixed\n\nAdd buffer and immediate for browsers (#355, #362, #363) (@Raynos, @hugomrdias, @vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "6.2.2 - 2019-10-21",
    "text": "6.2.2 - 2019-10-21\n\nAdded\n\nAdd more range tests (#353) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "6.2.1 - 2019-10-01",
    "text": "6.2.1 - 2019-10-01\n\nFixed\n\nFix manifest-test to open & close its db (#352) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "6.2.0 - 2019-09-30",
    "text": "6.2.0 - 2019-09-30\n\nChanged\n\nUpgrade hallmark devDependency from ^1.0.0 to ^2.0.0 (#349) (@vweevers)\nUpgrade standard devDependency from ^13.0.1 to ^14.0.0 (#348) (@vweevers)\n\n\n\nAdded\n\nAdd manifest (Level/community#83) (#351) (@vweevers)\nDocument mandatory methods (#350) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "6.1.1 - 2019-08-18",
    "text": "6.1.1 - 2019-08-18\n\nFixed\n\nRemove process.emitWarning because it breaks AppVeyor builds (8e963c3) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "6.1.0 - 2019-08-18",
    "text": "6.1.0 - 2019-08-18\n\nChanged\n\nUpgrade hallmark devDependency from ^0.1.0 to ^1.0.0 (#343) (@vweevers)\nUpgrade standard devDependency from ^12.0.0 to ^13.0.1 (#341) (@vweevers)\n\n\n\nAdded\n\nAdd clear() method to delete all entries or a range (#310) (@vweevers).\n\nHistorical Note The clear() method is experimental and optional for the time being. Please see the README for details."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "6.0.3 - 2019-04-26",
    "text": "6.0.3 - 2019-04-26\n\nChanged\n\nUpgrade nyc devDependency from ^13.2.0 to ^14.0.0 (#334) (@vweevers)\n\n\n\nFixed\n\nFix and test asynchronicity of empty batch (#337) (@vweevers)\nFix Level badge (8993257) (@vweevers)\nRemove link to dead website (c0abe28) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "6.0.2 - 2019-03-30",
    "text": "6.0.2 - 2019-03-30\n\nChanged\n\nUpgrade sinon devDependency from ^6.0.0 to ^7.2.4 (#330) (@ralphtheninja)\nUpgrade nyc devDependency from ^12.0.2 to ^13.2.0 (#327) (@vweevers)\nUpgrade airtap devDependency from 0.1.0 to ^2.0.0 (#323) (@vweevers)\nApply common project tweaks (#324, #325) (@vweevers)\n\n\n\nFixed\n\nFix subtests by adding t.plan() (#329) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "6.0.1 - 2018-12-27",
    "text": "6.0.1 - 2018-12-27\n\nChanged\n\nUpgrade hallmark devDependency from 0.0.2 to 0.1.0 (#316) (@vweevers)\nSplit v6 upgrade guide into sections for consumers and implementors (@vweevers)\n\n\n\nFixed\n\nRemove range tests that assumed zero-length strings or Buffers meant “not defined” (#319) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "6.0.0 - 2018-10-20",
    "text": "6.0.0 - 2018-10-20\nIf you are upgrading, please consult the Upgrade Guide.\n\nChanged\n\nUpgrade airtap devDependency from 0.0.5 to 0.1.0 (#229, #231, #245, 029f56a, #252) (@vweevers, @ralphtheninja)\nUpgrade sinon devDependency from ^5.0.0 to ^6.0.0 (#232) (@ralphtheninja)\nUpgrade standard devDependency from ^11.0.0 to ^12.0.0 (#303) (@ralphtheninja)\nReject nullish values (#277) (@vweevers)\nMake default _serializeKey and _serializeValue identity functions (#277) (@vweevers)\nDon’t coerce keys to strings to check if they’re empty, instead check arrays explicitly (#277) (@vweevers)\nMake db property mandatory and public on iterator and chained batch (#257, #309) (@vweevers)\nAlign AbstractChainedBatch#_clear with _put and _del (#257) (@vweevers)\nAdd AbstractChainedBatch#_write with options (#257) (@vweevers)\nUse level-concat-iterator instead of collectEntries (#246) (@ralphtheninja)\nDocument API and test suite (#251, #290, #295, #296, #305) (@vweevers)\nExport test suite as a single function (#271, #293, #297) (@vweevers, @ralphtheninja)\nUse factory function to create db instances in test suite (#258, #268, #282) (@ralphtheninja, @vweevers)\nIsolate snapshot tests so that they can be skipped (#239, #274) (@vweevers, @ralphtheninja)\nIsolate openAdvanced tests so that they can be skipped (#271) (@vweevers)\nRename abstract/ to test/ (#253) (@vweevers)\nRefactor internal test methods to have the same signature (test, testCommon) (#268, #275) (@ralphtheninja)\nPrefer exports.* over module.exports.* (#276) (@ralphtheninja)\nTweak copyright years for less maintenance (0b2949a) (@ralphtheninja)\n\n\n\nAdded\n\nAdd iterator#seek() (#237, #302, #307) (@vweevers, @ralphtheninja)\nAdd nyc and coveralls devDependencies for code coverage (#253) (@vweevers)\nAdd setUp and tearDown to all sub tests (#279, #289) (@ralphtheninja)\nAdd test for implementations that cannot support snapshots (#239) (@vweevers)\nAdd hallmark devDependency for Markdown style and contributors (#312) (@vweevers)\n\n\n\nRemoved\n\nRemove location (#258) (@ralphtheninja)\nRemove lastLocation, cleanup, rimraf (#249) (@vweevers)\nRemove IE10 from Sauce Labs test matrix (#312) (@vweevers)\nRemove node 9 from Travis (0b52395) (@ralphtheninja)\nRemove tests that assumed support of boolean and NaN keys (#277) (@vweevers)\nRemove range tests that assumed null meant “not defined” (#277) (@vweevers)\nRemove sync test from test/put-test.js (#300) (@ralphtheninja)\nRemove empty errorValues() test (#273) (@ralphtheninja)\nRemove default testCommon parameter (#264, #271) (@vweevers)\nRemove contributors from package.json (542f350) (@ralphtheninja)\nRemove copyright headers from code (a36c04f) (@ralphtheninja)\n\n\n\nFixed\n\nMake sure all t.throw tests check error messages correctly (#286) (@ralphtheninja)\nCheck options objects properly for null (#257, #288) (@ralphtheninja, @vweevers)\nSerialize range options same as keys (#277) (@vweevers)\nAllow nullish and empty range options (#277) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "5.0.0 - 2018-05-22",
    "text": "5.0.0 - 2018-05-22\n\nChanged\n\nUpgrade sinon to ^5.0.0 (@ralphtheninja)\nTweak README (@ralphtheninja)\nReplace const with var to support IE10 (@vweevers)\n\n\n\nAdded\n\nAdd node 10 to Travis (@ralphtheninja)\nAdd airtap for browser tests (@vweevers)\n\n\n\nRemoved\n\nRemove node 4, 5 and 7 from Travis (@ralphtheninja)\nRemove TypeScript tests (@vweevers)\nRemove TypeScript typings (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "4.0.3 - 2018-02-21",
    "text": "4.0.3 - 2018-02-21\n\nChanged\n\nUpgrade ts-node to ^5.0.0 (@zixia)\nUpgrade standard to ^11.0.0 (@ralphtheninja)\n\n\n\nFixed\n\nRemove invalid TypeScript from Batch (@Tapppi)\nAdd JSDoc to incorrectly inferred TypeScript types (@Tapppi)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "4.0.2 - 2018-02-09",
    "text": "4.0.2 - 2018-02-09\n\nFixed\n\nFix iterator#next to return this (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "4.0.1 - 2018-02-09",
    "text": "4.0.1 - 2018-02-09\n\nAdded\n\nRun test suite in TypeScript in addition to Node.js (@vweevers)\nAdd TypeScript smoke test (@vweevers)\nAdd TypeScript readme section with stability badge (@vweevers)\n\n\n\nRemoved\n\nRemove obsolete parameters from tests (@vweevers)\n\n\n\nFixed\n\nUpdate TypeScript typings for v4 (@vweevers)\nUse ES6 classes in tests to please TypeScript (@vweevers)\nDefine default methods on prototype to please TypeScript (@vweevers)\n\nHistorical Note This was released as a patch because it only changed tests and TypeScript typings (which are marked experimental and don’t follow semver)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "4.0.0 - 2018-01-20",
    "text": "4.0.0 - 2018-01-20\n\nChanged\n\nIgnore empty range options in AbstractLevelDOWN#_setupIteratorOptions (@ralphtheninja)\nMake testCommon.js the default value for testCommon parameter (@ralphtheninja)\nUse Buffer.isBuffer() instead of AbstractLevelDOWN#isBuffer (@ralphtheninja)\nCleanup iterator tests (#161) (@ralphtheninja)\nPass test function as a parameter instead of setting local global (@ralphtheninja)\nAssert batch type is 'put' or 'del' (@vweevers)\nAssert batch array elements are objects (@vweevers)\n\n\n\nAdded\n\nAdd standard for linting (#150) (@ralphtheninja)\nTest that callbacks are called asynchronously (@vweevers)\nTest serialization extensibility (@vweevers)\nAdd @vweevers to contributors (@ralphtheninja)\nAdd upgrade guide in UPGRADING.md (@ralphtheninja)\nAdd node 9 to Travis (@ralphtheninja)\n\n\n\nRemoved\n\nRemove isLevelDOWN function and corresponding tests (@ralphtheninja)\nRemove AbstractLevelDOWN#approximateSize method and corresponding tests (@ralphtheninja)\nRemove testBuffer in abstract/put-get-del-test.js (@ralphtheninja)\nRemove object value test in abstract/put-test.js (@vweevers)\nRemove serialize buffer tests (@vweevers)\nRemove serialize object tests (@vweevers)\nRemove BufferType parameter in abstract/put-get-del-test.js, use Buffer (@ralphtheninja)\n\n\n\nFixed\n\nEnsure stores are closed properly (fixes problems on Windows) (@ralphtheninja)\nCall back errors on next tick to avoid zalgo (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "3.0.0 - 2017-11-04",
    "text": "3.0.0 - 2017-11-04\n\nAdded\n\nAdd node version badge (@vweevers)\n\n\n\nRemoved\n\nDrop support for 0.12. Cause for new major version! (@vweevers)\n\n\n\nFixed\n\nFix errors in index.d.ts (@sandersn)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "2.7.2 - 2017-10-11",
    "text": "2.7.2 - 2017-10-11\n\nChanged\n\nUpdate README with new style (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "2.7.1 - 2017-09-30",
    "text": "2.7.1 - 2017-09-30\n\nChanged\n\nRefactor typings as ES2015 module (@MeirionHughes)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "2.7.0 - 2017-09-12",
    "text": "2.7.0 - 2017-09-12\n\nAdded\n\nAdd TypeScript definitions in index.d.ts (@MeirionHughes)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "2.6.3 - 2017-09-05",
    "text": "2.6.3 - 2017-09-05\n\nChanged\n\nUpgrade dependencies (@ralphtheninja)\nConvert nullish values to empty strings (@bigeasy)\nUse t.equal(a, b) instead of t.ok(a === b) (@bigeasy)\nRelax tests for serializing object in abstract/chained-batch-test.js (@ralphtheninja)\n\n\n\nAdded\n\nAdd GreenKeeper (@ralphtheninja)\nTest key/value serialization (@bigeasy)\nTest undefined value serializing to empty string (@ralphtheninja)\n\n\n\nFixed\n\nDocument .status property (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "2.6.2 - 2017-07-30",
    "text": "2.6.2 - 2017-07-30\n\nChanged\n\nUpgrade dependencies and float devDependencies (@ralphtheninja)\nUpdate copyright years (@ralphtheninja)\nUpdate node versions on Travis (@ralphtheninja)\n\n\n\nAdded\n\nTest serialization extensibility (@juliangruber)\n\n\n\nFixed\n\nFix put test on object serialization (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "2.6.1 - 2016-09-12",
    "text": "2.6.1 - 2016-09-12\n\nFixed\n\nFix null case in default value serializer (fixes problems in 2.6.0) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "2.6.0 - 2016-03-10",
    "text": "2.6.0 - 2016-03-10\n\nChanged\n\nUse proto delegation to patch methods on db (@deanlandolt)\nAllow serialization functions to return buffers (@deanlandolt)\n\n\n\nAdded\n\nAdd collectBatchOps function to buffer _put and _del inputs in abstract/chained-batch-test.js (@deanlandolt)\n\n\n\nRemoved\n\nRemove unnecessary initialization hackery in abstract/chained-batch-test.js (@deanlandolt)\n\nHistorical Note This release was a breaking change. See @juliangruber’s comment for more information."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-23",
    "title": "3327 Research",
    "section": "2.5.0 - 2016-05-01",
    "text": "2.5.0 - 2016-05-01\n\nChanged\n\nUpgrade dependencies and add more node versions to Travis (@ralphtheninja)\n\n\n\nAdded\n\nAdd dependency badge to README (@ralphtheninja)\nAdd AbstractLevelDOWN#_serializeKey (@juliangruber)\nAdd AbstractLevelDOWN#_serializeValue (@juliangruber)\nAdd AbstractChainedBatch#_serializeKey (@juliangruber)\nAdd AbstractChainedBatch#_serializeValue (@juliangruber)\nTest _serialize with object and buffer (@juliangruber)\n\n\n\nRemoved\n\nRemove stringification of keys and values (@juliangruber)\nRemove .toBuffer (@juliangruber)\n\n\n\nFixed\n\nUpdate memdown url (@ralphtheninja)\nAbstractLevelDOWN#._checkKey does not take three parameters (@ralphtheninja)\nOnly show build status for the master branch (@watson)\nFix minor typos in README (@timkuijsten)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-24",
    "title": "3327 Research",
    "section": "2.4.1 - 2015-08-29",
    "text": "2.4.1 - 2015-08-29\n\nFixed\n\nRemove use of const (@nolanlawson)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-25",
    "title": "3327 Research",
    "section": "2.4.0 - 2015-05-19",
    "text": "2.4.0 - 2015-05-19\n\nAdded\n\nAdd .status property to AbstractLevelDOWN (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-26",
    "title": "3327 Research",
    "section": "2.3.1 - 2015-05-18",
    "text": "2.3.1 - 2015-05-18\n\nAdded\n\nLink to level/community (@ralphtheninja)\n\n\n\nRemoved\n\nExtract Contributors section from README into level/community (@ralphtheninja)\n\n\n\nFixed\n\nDocument isLevelDown function (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-27",
    "title": "3327 Research",
    "section": "2.3.0 - 2015-05-18",
    "text": "2.3.0 - 2015-05-18\n\nChanged\n\nUse t.equal(a, b) instead of t.ok(a === b) (@juliangruber)\nExport API from index.js (@ralphtheninja)\n\n\n\nAdded\n\nImport isLevelDOWN function to is-leveldown.js (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-28",
    "title": "3327 Research",
    "section": "2.2.2 - 2015-05-13",
    "text": "2.2.2 - 2015-05-13\n\nFixed\n\nRevert changes to location in 2.2.1 (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-29",
    "title": "3327 Research",
    "section": "2.2.1 - 2015-05-12",
    "text": "2.2.1 - 2015-05-12\n\nFixed\n\nCopy paste error gave wrong test description (@ralphtheninja)\nt.throws() is different for tape (@ralphtheninja)\nAssert location is not an empty string (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-30",
    "title": "3327 Research",
    "section": "2.2.0 - 2015-05-10",
    "text": "2.2.0 - 2015-05-10\n\nAdded\n\nTest { sync: true } option in abstract/put-test.js (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-31",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-31",
    "title": "3327 Research",
    "section": "2.1.4 - 2015-04-28",
    "text": "2.1.4 - 2015-04-28\n\nFixed\n\nUse t.equal() with tape (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-32",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-32",
    "title": "3327 Research",
    "section": "2.1.3 - 2015-04-28",
    "text": "2.1.3 - 2015-04-28\n\nChanged\n\nChange from tap to tape (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-33",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-33",
    "title": "3327 Research",
    "section": "2.1.2 - 2015-04-27",
    "text": "2.1.2 - 2015-04-27\n\nChanged\n\nConvert buffer to string so we can compare (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-34",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-34",
    "title": "3327 Research",
    "section": "2.1.1 - 2015-04-27",
    "text": "2.1.1 - 2015-04-27\n\nChanged\n\nUpdate logo and copyright (@ralphtheninja)\n\n\n\nAdded\n\nAdd @ralphtheninja to contributors (@ralphtheninja)\nAdd 0.12 and iojs to Travis (@ralphtheninja)\n\n\n\nFixed\n\nInclude .nonErrorValues() test in abstract/put-get-del-test.js (@hden)\nrvagg/node-abstract-leveldown moved to level/abstract-leveldown (@ralphtheninja)\nFix Travis for 0.8 (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-35",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-35",
    "title": "3327 Research",
    "section": "2.1.0 - 2014-11-09",
    "text": "2.1.0 - 2014-11-09\n\nChanged\n\nUse setTimeout instead of process.nextTick (@bigeasy)\n\n\n\nAdded\n\nAdd @watson to contributors (@rvagg)\n\n\n\nFixed\n\nDon’t fail if no value is returned by ._get (@watson)\nUse error test function when testing for errors (@watson)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-36",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-36",
    "title": "3327 Research",
    "section": "2.0.3 - 2014-10-02",
    "text": "2.0.3 - 2014-10-02\nNo change."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-37",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-37",
    "title": "3327 Research",
    "section": "2.0.2 - 2014-10-02",
    "text": "2.0.2 - 2014-10-02\n\nAdded\n\nTest atomic batch operations (@calvinmetcalf)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-38",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-38",
    "title": "3327 Research",
    "section": "2.0.1 - 2014-09-01",
    "text": "2.0.1 - 2014-09-01\n\nChanged\n\nSet default values for options to .open, .get, .put, .del and .batch (@watson)\nUpdate pattern for setting default options for the iterator (@watson)\nAllow boolean options to be falsy/truthy (@watson)\n\n\n\nRemoved\n\nRemove default options that are too LevelDOWN specific (@watson)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-39",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-39",
    "title": "3327 Research",
    "section": "2.0.0 - 2014-08-26",
    "text": "2.0.0 - 2014-08-26\n\nChanged\n\nSwitch to allowing writes of empty values, null, undefined, '', [] and empty buffer (@juliangruber)\nRename AbstractLevelDOWN#_checkKeyValue to AbstractLevelDOWN#_checkKey (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-40",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-40",
    "title": "3327 Research",
    "section": "1.0.0 - 2014-08-24",
    "text": "1.0.0 - 2014-08-24\n\nChanged\n\nEnsure Boolean iterator options are Boolean (@watson)\n\n\n\nAdded\n\nTest that an error is thrown when location isn’t a string (@calvinmetcalf)\nTest opening and closing the store (@calvinmetcalf)\nTest iterator with limit set to 0 (@watson)\nAdd more tests to abstract/batch-test.js (@calvinmetcalf)\nSet default values of iterator options (@watson)\nAccount for batch options that are null (@calvinmetcalf)\n\n\n\nRemoved\n\nRemove options.start hackery (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-41",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-41",
    "title": "3327 Research",
    "section": "0.12.4 - 2014-08-20",
    "text": "0.12.4 - 2014-08-20\n\nChanged\n\nChange license to plain MIT (@andrewrk)\n\n\n\nAdded\n\nTest that simple-iterator returns buffers (@kesla)\nTest implicit snapshots (@kesla)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-42",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-42",
    "title": "3327 Research",
    "section": "0.12.3 - 2014-06-27",
    "text": "0.12.3 - 2014-06-27\n\nChanged\n\nUpgrade xtend dependency (@andrewrk)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-43",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-43",
    "title": "3327 Research",
    "section": "0.12.2 - 2014-04-26",
    "text": "0.12.2 - 2014-04-26\n\nChanged\n\nHave isTypedArray check for existence of ArrayBuffer and Uint8Array constructors before usage (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-44",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-44",
    "title": "3327 Research",
    "section": "0.12.1 - 2014-04-26",
    "text": "0.12.1 - 2014-04-26\n\nChanged\n\nSet default BufferType in abstract/put-get-del-test.js to Buffer instead of ArrayBuffer (@maxogden)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-45",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-45",
    "title": "3327 Research",
    "section": "0.12.0 - 2014-03-12",
    "text": "0.12.0 - 2014-03-12\n\nChanged\n\nRevert to pure Buffer and remove usage of Uint16Array (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-46",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-46",
    "title": "3327 Research",
    "section": "0.11.4 - 2014-03-11",
    "text": "0.11.4 - 2014-03-11\n\nRemoved\n\nRemove duplicate call to t.end() (@maxogden)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-47",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-47",
    "title": "3327 Research",
    "section": "0.11.3 - 2014-01-26",
    "text": "0.11.3 - 2014-01-26\n\nChanged\n\nLoosen the buffer type check (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-48",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-48",
    "title": "3327 Research",
    "section": "0.11.2 - 2013-12-05",
    "text": "0.11.2 - 2013-12-05\n\nAdded\n\nAdd npm badges (@rvagg)\n\n\n\nFixed\n\nFix iterator tests in test.js (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-49",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-49",
    "title": "3327 Research",
    "section": "0.11.1 - 2013-11-15",
    "text": "0.11.1 - 2013-11-15\n\nChanged\n\nAdjust abstract/approximate-size-test.js to account for snappy compression (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-50",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-50",
    "title": "3327 Research",
    "section": "0.11.0 - 2013-10-14",
    "text": "0.11.0 - 2013-10-14\n\nAdded\n\nNormalize iterator() options with AbstractLevelDOWN#_setupIteratorOptions (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-51",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-51",
    "title": "3327 Research",
    "section": "0.10.2 - 2013-09-06",
    "text": "0.10.2 - 2013-09-06\n\nChanged\n\nRefactor duplicated versions of isTypedArray into abstract/util.js (@rvagg)\nRefactor duplicated versions of 'NotFound' checks into abstract/util.js, fixed too-strict version in get-test.js (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-52",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-52",
    "title": "3327 Research",
    "section": "0.10.1 - 2013-08-29",
    "text": "0.10.1 - 2013-08-29\n\nChanged\n\nRelax check for Not Found error message to be case insensitive in get-test.js (@rvagg)\n\n\n\nAdded\n\nAdd @substack to contributors (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-53",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-53",
    "title": "3327 Research",
    "section": "0.10.0 - 2013-08-19",
    "text": "0.10.0 - 2013-08-19\n\nAdded\n\nTest gt, gte, lt and lte ranges (@dominictarr)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-54",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-54",
    "title": "3327 Research",
    "section": "0.9.0 - 2013-08-11",
    "text": "0.9.0 - 2013-08-11\n\nChanged\n\nMake AbstractChainedBatch extensible (@kesla)\nExport AbstractChainedBatch from abstract-leveldown.js (@kesla)\n\n\n\nAdded\n\nTest simultaneous get’s (@kesla)\nTest AbstractChainedBatch extensibility (@kesla)\n\n\n\nFixed\n\nFix broken test assertion in abstract/get-test.js (@rvagg)\nFix tests that weren’t running properly (@kesla)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-55",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-55",
    "title": "3327 Research",
    "section": "0.8.2 - 2013-08-02",
    "text": "0.8.2 - 2013-08-02\nNo changes. Merely published changes made in 0.8.1."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-56",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-56",
    "title": "3327 Research",
    "section": "0.8.1 - 2013-08-02",
    "text": "0.8.1 - 2013-08-02\n\nChanged\n\nRemove use of const in testCommon.js (@rvagg)\n\nHistorical Note The version in package.json was changed from 0.7.4 to 0.8.1. The 0.8.1 tag exists but this version was never published to npm."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-57",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-57",
    "title": "3327 Research",
    "section": "0.8.0 - 2013-08-02",
    "text": "0.8.0 - 2013-08-02\n\nChanged\n\nUse process.browser check instead of process.title == 'browser' (@rvagg)\n\n\n\nAdded\n\nAdd BufferType parameter to abstract/put-get-del-test.js for bops support (@rvagg)\nAdd isTypedArray function which checks ArrayBuffer or Uint8Array for bops support (@rvagg)\n\n\n\nFixed\n\nFix cleanup function not calling back when browserified (@rvagg)\n\nHistorical Note It seems the version in package.json was never changed to 0.8.0 in the git history, even though the 0.8.0 tag exists. Most likely package.json was modified locally during npm publish but was never committed."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-58",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-58",
    "title": "3327 Research",
    "section": "0.7.4 - 2013-08-02",
    "text": "0.7.4 - 2013-08-02\n\nFixed\n\nFix problems related to browserify and rimraf (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-59",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-59",
    "title": "3327 Research",
    "section": "0.7.3 - 2013-07-26",
    "text": "0.7.3 - 2013-07-26\n\nAdded\n\nAdd @pgte to contributors (@rvagg)\nTest iterator with limit set to -1 (@kesla)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-60",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-60",
    "title": "3327 Research",
    "section": "0.7.2 - 2013-07-08",
    "text": "0.7.2 - 2013-07-08\n\nChanged\n\nFreeze chained batch state after .write() has been called (@rvagg)\nMake NotFound error case insensitive (@rvagg)\nUse self rather than binding functions to this (@juliangruber)\n\n\n\nAdded\n\nAdd AbstractChainedBatch#_checkWritten (@rvagg)\nTest delete on non-existent key (@rvagg)\nTest iterator with start after database end (@juliangruber)\n\n\n\nFixed\n\nDon’t coerce values to strings in browser (@maxogden)\nMake tests work in node and browser (@maxogden)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-61",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-61",
    "title": "3327 Research",
    "section": "0.7.1 - 2013-05-15",
    "text": "0.7.1 - 2013-05-15\n\nChanged\n\nAdjust tests to be browserable (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-62",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-62",
    "title": "3327 Research",
    "section": "0.7.0 - 2013-05-14",
    "text": "0.7.0 - 2013-05-14\n\nAdded\n\nAdd AbstractChainedBatch#clear (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-63",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-63",
    "title": "3327 Research",
    "section": "0.6.1 - 2013-05-14",
    "text": "0.6.1 - 2013-05-14\n\nChanged\n\nMake AbstractIterator call back with an error instead of throwing on nexting and ending (@mcollina)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-64",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-64",
    "title": "3327 Research",
    "section": "0.6.0 - 2013-05-14",
    "text": "0.6.0 - 2013-05-14\n\nChanged\n\nSplit t.deepEqual() into multiple t.equal() in abstract/iterator-test.js (@rvagg)\nMake AbstractIterator call back with an error instead of throwing on nexting and ending (@mcollina)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-65",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-65",
    "title": "3327 Research",
    "section": "0.5.0 - 2013-05-14",
    "text": "0.5.0 - 2013-05-14\n\nChanged\n\nMake iterator.end(cb) and iterator.next(cb) call back with an error instead of throwing (@mcollina)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-66",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-66",
    "title": "3327 Research",
    "section": "0.4.0 - 2013-05-14",
    "text": "0.4.0 - 2013-05-14\n\nChanged\n\nMove AbstractIterator from abstract-leveldown.js to abstract-iterator.js (@rvagg)\n\n\n\nAdded\n\nAdd AbstractChainedBatch (@rvagg)\nAdd AbstractLevelDOWN#_chainedBatch (@rvagg)\nAdd abstract/batch-test.js and abstract/chained-batch-test.js (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-67",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-67",
    "title": "3327 Research",
    "section": "0.4.0-1 - 2013-05-14",
    "text": "0.4.0-1 - 2013-05-14\n\nAdded\n\nAdd @No9 and @mcollina to contributors (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-68",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-68",
    "title": "3327 Research",
    "section": "0.3.0 - 2013-05-04",
    "text": "0.3.0 - 2013-05-04\n\nChanged\n\nUse this._checkKeyValue() instead of local function (@rvagg)\nUse this._isBuffer() instead of Buffer.isBuffer() (@rvagg)\n\n\n\nAdded\n\nRestore test for opening the database without options (@rvagg)\nAdd AbstractLevelDOWN#_isBuffer so it can be overridden (@rvagg)\nAdd AbstractLevelDOWN#_checkKeyValue so it can be overridden (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-69",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-69",
    "title": "3327 Research",
    "section": "0.2.3 - 2013-05-04",
    "text": "0.2.3 - 2013-05-04\n\nRemoved\n\nRemove test for opening the database without options (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-70",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-70",
    "title": "3327 Research",
    "section": "0.2.2 - 2013-05-04",
    "text": "0.2.2 - 2013-05-04\n\nChanged\n\nSplit .open() tests into .open() and .openAdvanced() (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-71",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-71",
    "title": "3327 Research",
    "section": "0.2.1 - 2013-05-04",
    "text": "0.2.1 - 2013-05-04\n\nChanged\n\nConvert values to string in abstract/put-get-del-test.js if Buffer is undefined (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-72",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-72",
    "title": "3327 Research",
    "section": "0.2.0 - 2013-05-04",
    "text": "0.2.0 - 2013-05-04\n\nChanged\n\nConvert values to string in abstract/get-test.js if Buffer is undefined (@rvagg)\nDon’t stringify keys and values in abstract/iterator-test.js (@maxogden)\n\n\n\nAdded\n\nAdd process.browser check for start and end keys in browser (@maxogden)\nAdd levelup contributors (@rvagg)\n\n\n\nFixed\n\nFix tape compatibility issues (@maxogden)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-73",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-73",
    "title": "3327 Research",
    "section": "0.1.0 - 2013-04-23",
    "text": "0.1.0 - 2013-04-23\n\nAdded\n\nImport abstract tests from leveldown (@maxogden)\n\n\n\nFixed\n\nClarify README (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-74",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-74",
    "title": "3327 Research",
    "section": "0.0.2 - 2013-03-18",
    "text": "0.0.2 - 2013-03-18\n\nChanged\n\nExport checkKeyValue (@rvagg)\n\n\n\nAdded\n\nAdd node 0.10 to Travis (@rvagg)\nAdd Buffer.isBuffer() checks to keys and values (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-75",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-75",
    "title": "3327 Research",
    "section": "0.0.1 - 2013-03-18",
    "text": "0.0.1 - 2013-03-18\n\nAdded\n\nAdd checkKeyValue function for more complete error checking (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-76",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CHANGELOG.html#section-76",
    "title": "3327 Research",
    "section": "0.0.0 - 2013-03-15",
    "text": "0.0.0 - 2013-03-15\nFirst release. :seedling:"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CONTRIBUTORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/CONTRIBUTORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "Contributors\n\n\n\nName\nGitHub\nSocial\n\n\n\n\nRod Vagg\n@rvagg\n@rvagg@twitter\n\n\nVincent Weevers\n@vweevers\n@vweevers@twitter\n\n\nLars-Magnus Skog\n@ralphtheninja\n@ralph@social.weho.st\n\n\nJulian Gruber\n@juliangruber\n@juliangruber@twitter\n\n\nDavid Björklund\n@kesla\n@david_bjorklund@twitter\n\n\nMax Ogden\n@maxogden\n@maxogden@twitter\n\n\nThomas Watson Steen\n\n\n\n\nAlan Gutierrez\n@bigeasy\n@bigeasy@twitter\n\n\nDean Landolt\n@deanlandolt\n\n\n\nCalvin Metcalf\n@calvinmetcalf\n\n\n\nMeirion Hughes\n@MeirionHughes\n\n\n\nMatteo Collina\n@mcollina\n@matteocollina@twitter\n\n\nAndrew Kelley\n@andrewrk\n\n\n\nTapani Moilanen\n@Tapppi\n\n\n\nDominic Tarr\n@dominictarr\n@dominictarr@twitter\n\n\nHao-kang Den\n\n\n\n\nHugo Dias\n\n\n\n\nJake Verbaten\n@Raynos\n@raynos@twitter\n\n\nKyle Robinson Young\n@shama\n@shamakry@twitter\n\n\nNathan Shively-Sanders\n@sandersn\n\n\n\nNolan Lawson\n@nolanlawson\n@nolan@toot.cafe\n\n\nTim Kuijsten\n@timkuijsten\n@timkuijsten@mastodon.social\n\n\nTim Oxley\n@timoxley\n@secoif@twitter"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/UPGRADING.html#table-of-contents",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/UPGRADING.html#table-of-contents",
    "title": "3327 Research",
    "section": "Table of Contents",
    "text": "Table of Contents\n\n\nClick to expand\n\n\nv6\nv5\nv4\nv3"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/UPGRADING.html#v6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/UPGRADING.html#v6",
    "title": "3327 Research",
    "section": "v6",
    "text": "v6\nThis release brings a major refactoring of the test suite, decouples abstract-leveldown from disk-based implementations and solves long-standing issues around serialization and type support. Because the changes are substantial, this guide has two sections:\n\nChanges to public API - for consumers of any implementation.\nChanges to private API - intended for implementors.\n\n\nChanges to public API\n\nNullish values are rejected\nIn addition to rejecting null and undefined as keys, abstract-leveldown now also rejects these types as values, due to preexisting significance in streams and iterators.\nBefore this, the behavior of these types depended on a large number of factors: _serializeValue and type support of the underlying storage, whether get(), iterator() or a stream was used to retrieve values, the keys and asBuffer options of iterator() and finally, which encoding was selected.\n\n\nRange options are serialized\nPreviously, range options like lt were passed through as-is, unlike keys.\n\n\nThe rules for range options have been relaxed\nBecause null, undefined, zero-length strings and zero-length buffers are significant types in encodings like bytewise and charwise, they became valid as range options. In fact, any type is now valid. This means db.iterator({ gt: undefined }) is not the same as db.iterator({}).\nFurthermore, abstract-leveldown makes no assumptions about the meaning of these types. Range tests that assumed null meant “not defined” have been removed.\n\n\nZero-length array keys are rejected\nThough this was already the case because _checkKey stringified its input before checking the length, that behavior has been replaced with an explicit Array.isArray() check and a new error message.\n\n\nNo longer assumes support of boolean and NaN keys\nA test that asserted boolean and NaN keys were valid has been removed.\n\n\nBrowser support\nIE10 has been dropped.\n\n\n\nChanges to private API\n\nlocation was removed\nAbstractLevelDOWN is no longer associated with a location. It’s up to the implementation to handle it if it’s required.\nIf your implementation has a location and you previously did:\nfunction YourDOWN (location) {\n  AbstractLevelDOWN.call(this, location)\n}\nYou must now do:\nfunction YourDOWN (location) {\n  this.location = location\n  AbstractLevelDOWN.call(this)\n}\nBe sure to include appropriate type checks. If you relied on the default AbstractLevelDOWN behavior that would be:\nif (typeof location !== 'string') {\n  throw new Error('constructor requires a location string argument')\n}\n\n\nAbstract test suite has moved to a single entry point\nInstead of including test files individually, you can and should include the test suite with one require() statement. If you previously did:\nconst test = require('tape')\nconst testCommon = require('abstract-leveldown/testCommon')\nconst YourDOWN = require('.')\n\nrequire('abstract-leveldown/abstract/get-test').all(YourDOWN, test, testCommon)\nrequire('abstract-leveldown/abstract/put-test').all(YourDOWN, test, testCommon)\n\n// etc\nYou must now do:\nconst test = require('tape')\nconst suite = require('abstract-leveldown/test')\nconst YourDOWN = require('.')\n\nsuite({\n  test: test,\n  factory: function () {\n    return new YourDOWN()\n  }\n})\nThe input to the test suite is a new form of testCommon. Should you need to reuse testCommon for your own (additional) tests, use the included utility to create a testCommon with defaults:\nconst test = require('tape')\nconst suite = require('abstract-leveldown/test')\nconst YourDOWN = require('.')\n\nconst testCommon = suite.common({\n  test: test,\n  factory: function () {\n    return new YourDOWN()\n  }\n})\n\nsuite(testCommon)\nAs part of removing location, the abstract tests no longer use testCommon.location(). Instead an implementation must implement factory() which must return a unique and isolated database instance. This allows implementations to pass options to their constructor.\nThe testCommon.cleanup method has been removed. Because factory() returns a unique database instance, cleanup should no longer be necessary. The testCommon.lastLocation method has also been removed as there is no remaining use of it in abstract tests.\nPreviously, implementations using the default testCommon had to include rimraf in their devDependencies and browser-based implementations had to exclude rimraf from browserify builds. This is no longer the case.\nIf your implementation is disk-based we recommend using tempy (or similar) to create unique temporary directories. Together with factory() your setup could now look something like:\nconst test = require('tape')\nconst tempy = require('tempy')\nconst suite = require('abstract-leveldown/test')\nconst YourDOWN = require('.')\n\nsuite({\n  test: test,\n  factory: function () {\n    return new YourDOWN(tempy.directory())\n  }\n})\n\n\nThe collectEntries utility has moved\nThe testCommon.collectEntries method has moved to the npm package level-concat-iterator. If your (additional) tests depend on collectEntries and you previously did:\ntestCommon.collectEntries(iterator, function (err, entries) {})\nYou must now do:\nconst concat = require('level-concat-iterator')\nconcat(iterator, function (err, entries) {})\n\n\nSetup and teardown became noops\nBecause cleanup is no longer necessary, the testCommon.setUp and testCommon.tearDown methods are now noops by default. If you do need to perform (a)synchronous work before or after each test, setUp and tearDown can be overridden:\nsuite({\n  // ..\n  setUp: function (t) {\n    t.end()\n  },\n  tearDown: function (t) {\n    t.end()\n  }\n})\n\n\nOptional tests have been separated\nIf your implementation does not support snapshots or other optional features, the relevant tests may be skipped. For example:\nsuite({\n  // ..\n  snapshots: false\n})\nPlease see the README for a list of options. Note that some of these have replaced process.browser checks.\n\n\nIterator must have a db reference\nThe db argument of the AbstractIterator constructor became mandatory, as well as a public db property on the instance. Its existence is not new; the test suite now asserts that your implementation also has it.\n\n\nSeeking became part of official API\nIf your implementation previously defined the public iterator.seek(target), it must now define the private iterator._seek(target). The new public API is equal to the reference implementation of leveldown except for two differences:\n\nThe target argument is not type checked, this is up to the implementation.\nThe target argument is passed through db._serializeKey.\n\nPlease see the README for details.\n\n\nChained batch has been refactored\n\nThe default _clear method is no longer a noop; instead it clears the operations queued by _put and/or _del\nThe _write method now takes an options object as its first argument\nThe db argument of the AbstractChainedBatch constructor became mandatory, as well as a public db property on the instance, which was previously named _db.\n\n\n\nDefault _serializeKey and _serializeValue became identity functions\nThey return whatever is given. Previously they were opinionated and mostly geared towards string- and Buffer-based storages. Implementations that didn’t already define their own serialization should now do so, according to the types that they support. Please refer to the README for recommended behavior."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/UPGRADING.html#v5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/UPGRADING.html#v5",
    "title": "3327 Research",
    "section": "v5",
    "text": "v5\nDropped support for node 4. No other breaking changes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/UPGRADING.html#v4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/UPGRADING.html#v4",
    "title": "3327 Research",
    "section": "v4",
    "text": "v4\n\ndefault testCommon parameter\nThe testCommon parameter will now default to abstract-leveldown/testCommon.js. You can omit this parameter, unless your implementation needs a custom version.\nIf your code today looks something like:\nconst test = require('tape')\nconst testCommon = require('abstract-leveldown/testCommon')\nconst leveldown = require('./your-leveldown')\nconst abstract = require('abstract-leveldown/abstract/get-test')\n\nabstract.all(leveldown, test, testCommon)\nYou can simplify it to:\nconst test = require('tape')\nconst leveldown = require('./your-leveldown')\nconst abstract = require('abstract-leveldown/abstract/get-test')\n\nabstract.all(leveldown, test)\n\n\ntestBuffer parameter removed\nThe abstract/put-get-del-test.js previously took a custom testBuffer parameter. After an analysis of various implementations we came to the conclusion that the parameter has no use.\nIf your implementation is using this abstract test, change from:\nconst test = require('tape')\nconst testCommon = require('abstract-leveldown/testCommon')\nconst leveldown = require('./your-leveldown')\nconst fs = require('fs')\nconst path = require('path')\nconst testBuffer = fs.readFileSync(path.join(__dirname, 'data/testdata.bin'))\nconst abstract = require('abstract-leveldown/abstract/put-get-del-test')\n\nabstract.all(leveldown, test, testBuffer, testCommon)\nto:\nconst test = require('tape')\nconst testCommon = require('abstract-leveldown/testCommon')\nconst leveldown = require('./your-leveldown')\nconst abstract = require('abstract-leveldown/abstract/put-get-del-test')\n\nabstract.all(leveldown, test, testCommon)\nor if testCommon is also redundant, to:\nconst test = require('tape')\nconst leveldown = require('./your-leveldown')\nconst abstract = require('abstract-leveldown/abstract/put-get-del-test')\n\nabstract.all(leveldown, test)\n\n\n.approximateSize method removed\nThe .approximateSize method has been removed from the public API. It is heavily related to LevelDB and more often than not, other stores lack the native primitives to implement this. If you did implement the internal _approximateSize method, that is now dead code. To preserve the method in your public API, rename it to approximateSize and also take care of the initialization code. Look to leveldown for inspiration.\nAlso, the corresponding abstract tests have been removed, so your implementation can no longer require abstract/approximate-size-test.\n\n\n._isBuffer method removed\nBecause Buffer is available in all environments nowadays, there is no need for alternatives like typed arrays. It is preferred to use Buffer and Buffer.isBuffer() directly.\n\n\nisLevelDOWN function removed\nThis was a legacy function.\n\n\nranges-test.js renamed\nWe have refactored a lot of the tests. Specifically the iterator tests were split in two and in that process we renamed ranges-test.js to iterator-range-test.js.\nIf your implementation is using these tests then change from:\nconst abstract = require('abstract-leveldown/abstract/ranges-test')\nto:\nconst abstract = require('abstract-leveldown/abstract/iterator-range-test')"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/UPGRADING.html#v3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/node_modules/abstract-leveldown/UPGRADING.html#v3",
    "title": "3327 Research",
    "section": "v3",
    "text": "v3\nNo changes to the API. New major version because support for node 0.12 was dropped."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CONTRIBUTORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/CONTRIBUTORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "Contributors\n\n\n\nName\nGitHub\nSocial\n\n\n\n\nLars-Magnus Skog\n@ralphtheninja\n@ralph@social.weho.st\n\n\nVincent Weevers\n@vweevers\n@vweevers@twitter\n\n\nJulian Gruber\n@juliangruber\n@juliangruber@twitter\n\n\nRod Vagg\n@rvagg\n@rvagg@twitter\n\n\nMeirion Hughes\n@MeirionHughes\n\n\n\nAndrew Kelley\n@andrewrk"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/UPGRADING.html#v5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/UPGRADING.html#v5",
    "title": "3327 Research",
    "section": "v5",
    "text": "v5\nUpgraded abstract-leveldown to v6.0.0. Please see the corresponding changelog entry for more information."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/UPGRADING.html#v4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/UPGRADING.html#v4",
    "title": "3327 Research",
    "section": "v4",
    "text": "v4\nDropped support for node 4. No other breaking changes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/UPGRADING.html#v3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/deferred-leveldown/UPGRADING.html#v3",
    "title": "3327 Research",
    "section": "v3",
    "text": "v3\n\n.batch(array) enforces objects\nThis major release contains an upgrade to abstract-leveldown with a breaking change for the array version of .batch(). This change ensures all elements in the batch array are objects.\nIf you previously passed arrays to .batch() that contained undefined or null, they would be silently ignored. Now this will produce an error."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rustbn.js/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rustbn.js/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "0.2.0 - 2018-07-19",
    "text": "0.2.0 - 2018-07-19\n\nAdded successful test case for each operation, PR#19\nBetter Javascript API, PR#20 - breaking change\nSupport for Rust 1.24, PR#22"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rustbn.js/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rustbn.js/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "0.1.2 - 2018-02-09",
    "text": "0.1.2 - 2018-02-09\n\nAdded Cargo flag to avoid generated code catching all exceptions, PR #11\nMore robust build with sed validation, PR #14\nFixed license and authors in package.json, PR #15"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rustbn.js/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rustbn.js/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "0.1.1 - 2017-10-26",
    "text": "0.1.1 - 2017-10-26\n\nAvoid exceptions and return an emtpy value instead\nAdded cargo config to set flag NO_DYNAMIC_EXECUTION = 1 to avoid introducing the eval function"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rustbn.js/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/rustbn.js/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "[0.1.0] - 2017-10-11",
    "text": "[0.1.0] - 2017-10-11\n\nInitial release"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-escapes/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-escapes/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install ansi-escapes"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-escapes/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-escapes/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst ansiEscapes = require('ansi-escapes');\n\n// Moves the cursor two rows up and to the left\nprocess.stdout.write(ansiEscapes.cursorUp(2) + ansiEscapes.cursorLeft);\n//=> '\\u001B[2A\\u001B[1000D'"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-escapes/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-escapes/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\ncursorTo(x, y?)\nSet the absolute position of the cursor. x0 y0 is the top left of the screen.\n\n\ncursorMove(x, y?)\nSet the position of the cursor relative to its current position.\n\n\ncursorUp(count)\nMove cursor up a specific amount of rows. Default is 1.\n\n\ncursorDown(count)\nMove cursor down a specific amount of rows. Default is 1.\n\n\ncursorForward(count)\nMove cursor forward a specific amount of columns. Default is 1.\n\n\ncursorBackward(count)\nMove cursor backward a specific amount of columns. Default is 1.\n\n\ncursorLeft\nMove cursor to the left side.\n\n\ncursorSavePosition\nSave cursor position.\n\n\ncursorRestorePosition\nRestore saved cursor position.\n\n\ncursorGetPosition\nGet cursor position.\n\n\ncursorNextLine\nMove cursor to the next line.\n\n\ncursorPrevLine\nMove cursor to the previous line.\n\n\ncursorHide\nHide cursor.\n\n\ncursorShow\nShow cursor.\n\n\neraseLines(count)\nErase from the current cursor position up the specified amount of rows.\n\n\neraseEndLine\nErase from the current cursor position to the end of the current line.\n\n\neraseStartLine\nErase from the current cursor position to the start of the current line.\n\n\neraseLine\nErase the entire current line.\n\n\neraseDown\nErase the screen from the current line down to the bottom of the screen.\n\n\neraseUp\nErase the screen from the current line up to the top of the screen.\n\n\neraseScreen\nErase the screen and move the cursor the top left position.\n\n\nscrollUp\nScroll display up one line.\n\n\nscrollDown\nScroll display down one line.\n\n\nclearScreen\nClear the terminal screen. (Viewport)\n\n\nclearTerminal\nClear the whole terminal, including scrollback buffer. (Not just the visible part of it)\n\n\nbeep\nOutput a beeping sound.\n\n\nlink(text, url)\nCreate a clickable link.\nSupported terminals. Use supports-hyperlinks to detect link support.\n\n\nimage(filePath, options?)\nDisplay an image.\nCurrently only supported on iTerm2 >=3\nSee term-img for a higher-level module.\n\ninput\nType: Buffer\nBuffer of an image. Usually read in with fs.readFile().\n\n\noptions\nType: object\n\nwidth\n\n\nheight\nType: string | number\nThe width and height are given as a number followed by a unit, or the word “auto”.\n\nN: N character cells.\nNpx: N pixels.\nN%: N percent of the session’s width or height.\nauto: The image’s inherent size will be used to determine an appropriate dimension.\n\n\n\npreserveAspectRatio\nType: boolean\nDefault: true\n\n\n\n\niTerm.setCwd(path?)\nType: string\nDefault: process.cwd()\nInform iTerm2 of the current directory to help semantic history and enable Cmd-clicking relative paths.\n\n\niTerm.annotation(message, options?)\nCreates an escape code to display an “annotation” in iTerm2.\nAn annotation looks like this when shown:\n\nSee the iTerm Proprietary Escape Codes documentation for more information.\n\nmessage\nType: string\nThe message to display within the annotation.\nThe | character is disallowed and will be stripped.\n\n\noptions\nType: object\n\nlength\nType: number\nDefault: The remainder of the line\nNonzero number of columns to annotate.\n\n\nx\nType: number\nDefault: Cursor position\nStarting X coordinate.\nMust be used with y and length.\n\n\ny\nType: number\nDefault: Cursor position\nStarting Y coordinate.\nMust be used with x and length.\n\n\nisHidden\nType: boolean\nDefault: false\nCreate a “hidden” annotation.\nAnnotations created this way can be shown using the “Show Annotations” iTerm command."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-escapes/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/ansi-escapes/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nansi-styles - ANSI escape codes for styling strings in the terminal\n\n\n\n<b>\n    <a href=\"https://tidelift.com/subscription/pkg/npm-ansi-escapes?utm_source=npm-ansi-escapes&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n</b>\n<br>\n<sub>\n    Tidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n</sub>"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "13.3.0 (2019-06-10)",
    "text": "13.3.0 (2019-06-10)\n\nBug Fixes\n\ndeps: yargs-parser update addressing several parsing bugs (#1357) (e230d5b)\n\n\n\nFeatures\n\ni18n: swap out os-locale dependency for simple inline implementation (#1356) (4dfa19b)\nsupport defaultDescription for positional arguments (812048c)\n\n\n\n13.2.4 (2019-05-13)\n\n\nBug Fixes\n\ni18n: rename unclear ‘implication failed’ to ‘missing dependent arguments’ (#1317) (bf46813)\n\n\n\n13.2.3 (2019-05-05)\n\n\nBug Fixes\n\ndeps: upgrade cliui for compatibility with latest chalk. (#1330) (b20db65)\naddress issues with dutch translation (#1316) (0295132)\n\n\n\nTests\n\naccept differently formatted output (#1327) (c294d1b)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "13.2.2 (2019-03-06)",
    "text": "13.2.2 (2019-03-06)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "13.2.1 (2019-02-18)",
    "text": "13.2.1 (2019-02-18)\n\nBug Fixes\n\nadd zsh script to files array (3180224)\nsupport options/sub-commands in zsh completion (0a96394)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/strip-ansi/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/strip-ansi/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install strip-ansi"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/strip-ansi/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/strip-ansi/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst stripAnsi = require('strip-ansi');\n\nstripAnsi('\\u001B[4mUnicorn\\u001B[0m');\n//=> 'Unicorn'\n\nstripAnsi('\\u001B]8;;https://github.com\\u0007Click\\u001B]8;;\\u0007');\n//=> 'Click'"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/strip-ansi/readme.html#security",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/strip-ansi/readme.html#security",
    "title": "3327 Research",
    "section": "Security",
    "text": "Security\nTo report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/strip-ansi/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/strip-ansi/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nstrip-ansi-cli - CLI for this module\nstrip-ansi-stream - Streaming version of this module\nhas-ansi - Check if a string has ANSI escape codes\nansi-regex - Regular expression for matching ANSI escape codes\nchalk - Terminal string styling done right"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/strip-ansi/readme.html#maintainers",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/strip-ansi/readme.html#maintainers",
    "title": "3327 Research",
    "section": "Maintainers",
    "text": "Maintainers\n\nSindre Sorhus\nJosh Junon"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/strip-ansi/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/strip-ansi/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-locate/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-locate/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install p-locate"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-locate/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-locate/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nHere we find the first file that exists on disk, in array order.\nconst pathExists = require('path-exists');\nconst pLocate = require('p-locate');\n\nconst files = [\n    'unicorn.png',\n    'rainbow.png', // Only this one actually exists on disk\n    'pony.png'\n];\n\n(async () => {\n    const foundPath = await pLocate(files, file => pathExists(file));\n\n    console.log(foundPath);\n    //=> 'rainbow'\n})();\nThe above is just an example. Use locate-path if you need this."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-locate/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-locate/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\npLocate(input, tester, options)\nReturns a Promise that is fulfilled when tester resolves to true or the iterable is done, or rejects if any of the promises reject. The fulfilled value is the current iterable value or undefined if tester never resolved to true.\n\ninput\nType: Iterable<Promise|any>\n\n\ntester(element)\nType: Function\nExpected to return a Promise<boolean> or boolean.\n\n\noptions\nType: Object\n\nconcurrency\nType: number Default: Infinity Minimum: 1\nNumber of concurrently pending promises returned by tester.\n\n\npreserveOrder\nType: boolean Default: true\nPreserve input order when searching.\nDisable this to improve performance if you don’t care about the order."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-locate/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-locate/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\np-map - Map over promises concurrently\np-filter - Filter promises concurrently\np-any - Wait for any promise to be fulfilled\nMore…"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-locate/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-locate/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-limit/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-limit/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install p-limit"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-limit/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-limit/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst pLimit = require('p-limit');\n\nconst limit = pLimit(1);\n\nconst input = [\n    limit(() => fetchSomething('foo')),\n    limit(() => fetchSomething('bar')),\n    limit(() => doSomething())\n];\n\n(async () => {\n    // Only one promise is run at once\n    const result = await Promise.all(input);\n    console.log(result);\n})();"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-limit/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-limit/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\npLimit(concurrency)\nReturns a limit function.\n\nconcurrency\nType: number\nMinimum: 1\nDefault: Infinity\nConcurrency limit.\n\n\n\nlimit(fn, …args)\nReturns the promise returned by calling fn(...args).\n\nfn\nType: Function\nPromise-returning/async function.\n\n\nargs\nAny arguments to pass through to fn.\nSupport for passing arguments on to the fn is provided in order to be able to avoid creating unnecessary closures. You probably don’t need this optimization unless you’re pushing a lot of functions.\n\n\n\nlimit.activeCount\nThe number of promises that are currently running.\n\n\nlimit.pendingCount\nThe number of promises that are waiting to run (i.e. their internal fn was not called yet).\n\n\nlimit.clearQueue()\nDiscard pending promises that are waiting to run.\nThis might be useful if you want to teardown the queue at the end of your program’s lifecycle or discard any function calls referencing an intermediary state of your app.\nNote: This does not cancel promises that are already running."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-limit/readme.html#faq",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-limit/readme.html#faq",
    "title": "3327 Research",
    "section": "FAQ",
    "text": "FAQ\n\nHow is this different from the p-queue package?\nThis package is only about limiting the number of concurrent executions, while p-queue is a fully featured queue implementation with lots of different options, introspection, and ability to pause the queue."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-limit/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-limit/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\np-queue - Promise queue with concurrency control\np-throttle - Throttle promise-returning & async functions\np-debounce - Debounce promise-returning & async functions\np-all - Run promise-returning & async functions concurrently with optional limited concurrency\nMore…\n\n\n\n<b>\n    <a href=\"https://tidelift.com/subscription/pkg/npm-p-limit?utm_source=npm-p-limit&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n</b>\n<br>\n<sub>\n    Tidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n</sub>"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/find-up/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/find-up/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install find-up"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/find-up/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/find-up/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\n/\n└── Users\n        └── sindresorhus\n                ├── unicorn.png\n                └── foo\n                        └── bar\n                                ├── baz\n                                └── example.js\nexample.js\nconst findUp = require('find-up');\n\n(async () => {\n    console.log(await findUp('unicorn.png'));\n    //=> '/Users/sindresorhus/unicorn.png'\n\n    console.log(await findUp(['rainbow.png', 'unicorn.png']));\n    //=> '/Users/sindresorhus/unicorn.png'\n})();"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/find-up/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/find-up/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nfindUp(filename, options)\nReturns a Promise for either the filepath or null if it couldn’t be found.\n\n\nfindUp([filenameA, filenameB], options)\nReturns a Promise for either the first filepath found (by respecting the order) or null if none could be found.\n\n\nfindUp.sync(filename, options)\nReturns a filepath or null.\n\n\nfindUp.sync([filenameA, filenameB], options)\nReturns the first filepath found (by respecting the order) or null.\n\nfilename\nType: string\nFilename of the file to find.\n\n\noptions\nType: Object\n\ncwd\nType: string Default: process.cwd()\nDirectory to start from."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/find-up/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/find-up/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nfind-up-cli - CLI for this module\npkg-up - Find the closest package.json file\npkg-dir - Find the root directory of an npm package\nresolve-from - Resolve the path of a module like require.resolve() but from a given path"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/find-up/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/find-up/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/ansi-regex/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/ansi-regex/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install ansi-regex"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/ansi-regex/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/ansi-regex/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst ansiRegex = require('ansi-regex');\n\nansiRegex().test('\\u001B[4mcake\\u001B[0m');\n//=> true\n\nansiRegex().test('cake');\n//=> false\n\n'\\u001B[4mcake\\u001B[0m'.match(ansiRegex());\n//=> ['\\u001B[4m', '\\u001B[0m']\n\n'\\u001B[4mcake\\u001B[0m'.match(ansiRegex({onlyFirst: true}));\n//=> ['\\u001B[4m']\n\n'\\u001B]8;;https://github.com\\u0007click\\u001B]8;;\\u0007'.match(ansiRegex());\n//=> ['\\u001B]8;;https://github.com\\u0007', '\\u001B]8;;\\u0007']"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/ansi-regex/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/ansi-regex/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nansiRegex(options)\nReturns a regex for matching ANSI escape codes.\n\noptions\n\nonlyFirst\nType: boolean Default: false (Matches any ANSI escape codes in a string)\nMatch only the first ANSI escape."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/ansi-regex/readme.html#faq",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/ansi-regex/readme.html#faq",
    "title": "3327 Research",
    "section": "FAQ",
    "text": "FAQ\n\nWhy do you test for codes not in the ECMA 48 standard?\nSome of the codes we run as a test are codes that we acquired finding various lists of non-standard or manufacturer specific codes. We test for both standard and non-standard codes, as most of them follow the same or similar format and can be safely matched in strings without the risk of removing actual string content. There are a few non-standard control codes that do not follow the traditional format (i.e. they end in numbers) thus forcing us to exclude them from the test because we cannot reliably match them.\nOn the historical side, those ECMA standards were established in the early 90’s whereas the VT100, for example, was designed in the mid/late 70’s. At that point in time, control codes were still pretty ungoverned and engineers used them for a multitude of things, namely to activate hardware ports that may have been proprietary. Somewhere else you see a similar ‘anarchy’ of codes is in the x86 architecture for processors; there are a ton of “interrupts” that can mean different things on certain brands of processors, most of which have been phased out."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/ansi-regex/readme.html#security",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/ansi-regex/readme.html#security",
    "title": "3327 Research",
    "section": "Security",
    "text": "Security\nTo report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/ansi-regex/readme.html#maintainers",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/ansi-regex/readme.html#maintainers",
    "title": "3327 Research",
    "section": "Maintainers",
    "text": "Maintainers\n\nSindre Sorhus\nJosh Junon"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/ansi-regex/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/ansi-regex/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/string-width/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/string-width/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install string-width"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/string-width/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/string-width/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst stringWidth = require('string-width');\n\nstringWidth('古');\n//=> 2\n\nstringWidth('\\u001b[1m古\\u001b[22m');\n//=> 2\n\nstringWidth('a');\n//=> 1\n\nstringWidth('\\u001B]8;;https://github.com\\u0007Click\\u001B]8;;\\u0007');\n// => 5"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/string-width/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/string-width/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nstring-width-cli - CLI for this module\nstring-length - Get the real length of a string\nwidest-line - Get the visual width of the widest line in a string"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/string-width/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/string-width/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-try/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-try/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install p-try"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-try/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-try/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst pTry = require('p-try');\n\n(async () => {\n    try {\n        const value = await pTry(() => {\n            return synchronousFunctionThatMightThrow();\n        });\n        console.log(value);\n    } catch (error) {\n        console.error(error);\n    }\n})();"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-try/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-try/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\npTry(fn, …arguments)\nReturns a Promise resolved with the value of calling fn(...arguments). If the function throws an error, the returned Promise will be rejected with that error.\nSupport for passing arguments on to the fn is provided in order to be able to avoid creating unnecessary closures. You probably don’t need this optimization unless you’re pushing a lot of functions.\n\nfn\nThe function to run to start the promise chain.\n\n\narguments\nArguments to pass to fn."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-try/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-try/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\np-finally - Promise#finally() ponyfill - Invoked when the promise is settled regardless of outcome\nMore…"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-try/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/p-try/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/locate-path/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/locate-path/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install locate-path"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/locate-path/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/locate-path/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nHere we find the first file that exists on disk, in array order.\nconst locatePath = require('locate-path');\n\nconst files = [\n    'unicorn.png',\n    'rainbow.png', // Only this one actually exists on disk\n    'pony.png'\n];\n\n(async () => {\n    console(await locatePath(files));\n    //=> 'rainbow'\n})();"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/locate-path/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/locate-path/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nlocatePath(input, options)\nReturns a Promise for the first path that exists or undefined if none exists.\n\ninput\nType: Iterable<string>\nPaths to check.\n\n\noptions\nType: Object\n\nconcurrency\nType: number Default: Infinity Minimum: 1\nNumber of concurrently pending promises.\n\n\npreserveOrder\nType: boolean Default: true\nPreserve input order when searching.\nDisable this to improve performance if you don’t care about the order.\n\n\ncwd\nType: string Default: process.cwd()\nCurrent working directory.\n\n\n\n\nlocatePath.sync(input, options)\nReturns the first path that exists or undefined if none exists.\n\ninput\nType: Iterable<string>\nPaths to check.\n\n\noptions\nType: Object\n\ncwd\nSame as above."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/locate-path/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/locate-path/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\npath-exists - Check if a path exists"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/locate-path/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/yargs/node_modules/locate-path/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-boolean-object/CHANGELOG.html#v1.1.2---2021-08-05",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-boolean-object/CHANGELOG.html#v1.1.2---2021-08-05",
    "title": "3327 Research",
    "section": "v1.1.2 - 2021-08-05",
    "text": "v1.1.2 - 2021-08-05\n\nCommits\n\n[Refactor] use has-tostringtag to behave correctly in the presence of symbol shams 6d319ea\n[Dev Deps] update auto-changelog, core-js, eslint, tape 4f85bef"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-boolean-object/CHANGELOG.html#v1.1.1---2021-05-07",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-boolean-object/CHANGELOG.html#v1.1.1---2021-05-07",
    "title": "3327 Research",
    "section": "v1.1.1 - 2021-05-07",
    "text": "v1.1.1 - 2021-05-07\n\nCommits\n\n[actions] use node/install instead of node/run; use codecov action 7201c41\n[Tests] run tests with core-js as well 9590e61\n[meta] do not publish github action workflow files 341472b\n[readme] update repo URLs; remove travis badge 9fdbbc6\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, tape 1cd35c9\n[readme] add actions and codecov badges 03769fe\n[Dev Deps] update eslint, @ljharb/eslint-config, tape db6598c\n[Fix] do not use Object.prototype.toString when Symbol.toStringTag is shammed e0b8a9f\n[readme] remove defunct testling badge 986a621\n[meta] use prepublishOnly script for npm 7+ 7bb3b29\n[Deps] update call-bind 3af6a71\n[meta] do not publish corejs test file d911f03\n[actions] update workflows 9bb3d90"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-boolean-object/CHANGELOG.html#v1.1.0---2020-12-05",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-boolean-object/CHANGELOG.html#v1.1.0---2020-12-05",
    "title": "3327 Research",
    "section": "v1.1.0 - 2020-12-05",
    "text": "v1.1.0 - 2020-12-05\n\nCommits\n\n[Tests] migrate tests to Github Actions 6cdb652\n[Tests] run nyc on all tests 9a33076\n[Tests] add .editorconfig bb401c0\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog, tape 5cb2405\n[Robustness] use call-bind to avoid a dependency on .call 76d87ae\n[actions] add “Allow Edits” workflow 337206a\n[Dev Deps] update eslint, @ljharb/eslint-config, tape 11f0481\n[Dev Deps] update eslint, @ljharb/eslint-config, tape b9602c8\n[Dev Deps] update auto-changelog, tape; add aud 999e9e2\n[actions] switch Automatic Rebase workflow to pull_request_target event bbb6728"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-boolean-object/CHANGELOG.html#v1.0.1---2019-12-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-boolean-object/CHANGELOG.html#v1.0.1---2019-12-18",
    "title": "3327 Research",
    "section": "v1.0.1 - 2019-12-18",
    "text": "v1.0.1 - 2019-12-18\n\nCommits\n\n[Tests] use shared travis-ci configs a1778b8\nUpdate eslint; use my personal shared eslint config. 2c42c50\n[Tests] remove jscs 3807025\n[Tests] up to node v8.4, v7.10, v6.11, v5.12, v4.8; improve matrix; newer npm breaks in older node; improve scripts. a02b986\n[Dev Deps] update eslint, @ljharb/eslint-config, is, jscs, nsp, semver, tape d9030a9\nUpdate eslint, nsp a1b6388\n[Tests] up to node v10.0, v9.11, v8.11, v6.14, v4.9; use nvm install-latest-npm 17a0fd3\n[Tests] up to node v12.10, v11.15, v10.16, v8.16, v6.17 0b1818f\n[meta] remove unused Makefile and associated utilities 33dc0ae\nUpdate covert, jscs, eslint, semver 7e513c1\n[Tests] up to node v11.4, v10.14, v8.14, v6.15 992b849\n[meta] add auto-changelog 63d71b8\nUpdate tape, eslint, semver 76aea69\nUpdate tape, jscs, eslint, @ljharb/eslint-config a6cbec0\n[Dev Deps] update eslint, @ljharb/eslint-config, replace, semver, tape; add safe-publish-latest 7cf6bb0\n[Dev Deps] update eslint, @ljharb/eslint-config, safe-publish-latest 57d713c\n[actions] add automatic rebasing / merge commit blocking f7a2bdb\n[meta] create FUNDING.yml 9765e73\n[Dev Deps] update eslint, @ljharb/eslint-config, is, replace, semver, tape 5c16b56\n[Dev Deps] update tape, jscs, eslint, @ljharb/eslint-config 5717aad\n[Dev Deps] update is, jscs, nsp, eslint, @ljharb/eslint-config, semver 80b924d\n[Dev Deps] update jscs 2e5479e\nTest up to io.js v2.2 93379a4\n[Tests] remove nsp; use npm audit; allow to fail for now 36ae30a\n[Tests] up to io.js v3.3, node v4.1 ef76976\n[Tests] use npx aud instead of nsp or npm audit with hoops a1182bd\n[Dev Deps] update eslint, @ljharb/eslint-config, covert, tape 4f79b47\n[Tests] up to node v10.3 5e96464\n[Dev Deps] update eslint, nsp, semver, tape e1eb3fa\nOnly apps should have lockfiles. c7f301f\n[meta] add funding field fad0366\n[Dev Deps] update eslint, @ljharb/eslint-config 80d39d9\n[Tests] use eclint instead of editorconfig-tools 980e91b\n[Dev Deps] Update tape, eslint 9960830\nTest up to io.js v3.0 a3c3cd0\n[Dev Deps] update tape 217fbd6\n[Tests] only audit prod deps 89284ee\n[Performance] only use toStringTag code path when the value has that property 2863bc5\n[Dev Deps] update replace 53e72a5\n[Enhancement] slight optimization for null a90a3c4\n[Dev Deps] update tape 9377bd5\nSwitch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. 3085530\nTest on io.js v2.4 8af335c\nTest on io.js v2.3 1eb3424"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-boolean-object/CHANGELOG.html#v1.0.0---2015-04-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-boolean-object/CHANGELOG.html#v1.0.0---2015-04-28",
    "title": "3327 Research",
    "section": "v1.0.0 - 2015-04-28",
    "text": "v1.0.0 - 2015-04-28\n\nCommits\n\nDotfiles 6b9b998\nmake release d5e50b3\npackage.json 117676a\nRead me ef327a7\nInitial commit 2346886\nTests 67211f8\nImplementation 2d88bd6"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.1.4---2021-08-05",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.1.4---2021-08-05",
    "title": "3327 Research",
    "section": "v1.1.4 - 2021-08-05",
    "text": "v1.1.4 - 2021-08-05\n\nCommits\n\n[Dev Deps] update auto-changelog, core-js, eslint, tape 4b17cad\n[Refactor] use has-tostringtag to behave correctly in the presence of symbol shams 2dad4af"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.1.3---2021-05-07",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.1.3---2021-05-07",
    "title": "3327 Research",
    "section": "v1.1.3 - 2021-05-07",
    "text": "v1.1.3 - 2021-05-07\n\nCommits\n\n[actions] use node/install instead of node/run; use codecov action c681ab9\n[Fix] do not use Object.prototype.toString when Symbol.toStringTag is shammed ca019fd\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, tape 605a66f\n[readme] add actions and codecov badges 8d7c6f0\n[meta] use prepublishOnly script for npm 7+ 8e50e91\n[Deps] update has-symbols 4742c81"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.1.2---2021-02-01",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.1.2---2021-02-01",
    "title": "3327 Research",
    "section": "v1.1.2 - 2021-02-01",
    "text": "v1.1.2 - 2021-02-01\n\nCommits\n\n[Tests] migrate tests to Github Actions cc1686e\n[readme] fix repo URLs; remove travis badge d1d1da6\n[meta] do not publish github action workflow files 9f84b99\n[Tests] run nyc on all tests c37aab9\n[Robustness] use call-bind fbb61bf\n[actions] add “Allow Edits” workflow 9022b53\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog d60f28f\n[Dev Deps] update eslint, @ljharb/eslint-config, tape 2c35c43\n[actions] switch Automatic Rebase workflow to pull_request_target event 1009e25\n[meta] gitignore coverage output 3b5fa9e\n[actions] update workflows 1843ef6"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.1.1---2020-08-03",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.1.1---2020-08-03",
    "title": "3327 Research",
    "section": "v1.1.1 - 2020-08-03",
    "text": "v1.1.1 - 2020-08-03\n\nCommits\n\n[Performance] Re-add lastIndex check to improve performance d8495cd\n[Dev Deps] update auto-changelog, eslint 778fa6b"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.1.0---2020-06-03",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.1.0---2020-06-03",
    "title": "3327 Research",
    "section": "v1.1.0 - 2020-06-03",
    "text": "v1.1.0 - 2020-06-03\n\nCommits\n\n[New] use badStringifier‑based RegExp detection 31eff67\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, tape fc91458\n[Dev Deps] update eslint, @ljharb/eslint-config, tape; add safe-publish-latest d43ed83\n[Dev Deps] update auto-changelog, tape; add aud 56647d1\n[meta] only run aud on prod deps e0865b8"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.0.5---2019-12-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.0.5---2019-12-15",
    "title": "3327 Research",
    "section": "v1.0.5 - 2019-12-15",
    "text": "v1.0.5 - 2019-12-15\n\nCommits\n\n[Tests] use shared travis-ci configs af728b2\n[Tests] remove jscs 1b8cfe8\n[meta] add auto-changelog c3131d8\n[Tests] up to node v8.1, v7.10, v6.11, v4.8; newer npm fails on older nodes 660b658\n[Tests] up to node v9.3, v8.9, v6.12; use nvm install-latest-npm; pin included builds to LTS 7c25218\n[Tests] up to node v12.10, v11.15, v10.16, v8.16, v6.17 fa95547\n[meta] remove unused Makefile and associated utilities 9fd2a29\n[Tests] up to node v11.3, v10.14, v8.14, v6.15 7f2ac41\n[Tests] up to node v10.0, v9.11, v8.11, v6.14, v4.9 6fa2b0f\n[Dev Deps] update eslint, @ljharb/eslint-config 697e1de\n[actions] add automatic rebasing / merge commit blocking ad86dc9\n[Dev Deps] update eslint, @ljharb/eslint-config, jscs, nsp, replace, semver, tape 5c99c8e\n[Dev Deps] update eslint, @ljharb/eslint-config, replace, semver, tape bb63686\n[Dev Deps] update eslint, @ljharb/eslint-config@, replace, semver, tape ddf3670\n[Dev Deps] update tape, nsp, eslint, @ljharb/eslint-config e7b5a62\n[Dev Deps] update eslint, @ljharb/eslint-config, covert, tape c803db5\n[Tests] switch from nsp to npm audit b7239be\n[Dev Deps] update eslint, nsp, semver, tape 347ee6c\nOnly apps should have lockfiles. 3866575\n[Tests] use npx aud instead of nsp or npm audit with hoops d099a39\n[meta] add funding field 741aecd\n[Tests] use eclint instead of editorconfig-tools bc6aa75\n[Tests] on node v10.1 262226f\n[Dev Deps] update eslint 31fd719\n[Deps] update has e9e25a3\n[Dev Deps] update replace aeeb968\n[Tests] set audit level 2a6290e\n[Tests] remove nsp fc74c2b"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.0.4---2017-02-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.0.4---2017-02-18",
    "title": "3327 Research",
    "section": "v1.0.4 - 2017-02-18",
    "text": "v1.0.4 - 2017-02-18\n\nFixed\n\n[Fix] ensure that lastIndex is not mutated #3\n\n\n\nCommits\n\nUpdate eslint, tape, semver; use my personal shared eslint config c4a41c3\n[Tests] on all node minors; improve test matrix 58d7508\n[Dev Deps] update tape, jscs, nsp, eslint, @ljharb/eslint-config, semver 7290076\nUpdate covert, jscs, eslint, semver dabc729\nUpdate eslint a946b05\nUpdate tape, jscs, eslint, @ljharb/eslint-config 1744dde\n[Refactor] when try/catch is needed, bail early if the value lacks an own lastIndex data property. 288ad93\nUpdate editorconfig-tools, eslint, semver, replace 4d895c6\nUpdate eslint, tape, semver f387f03\nAll grade A-supported node/iojs versions now ship with an npm that understands ^. 55e480f\n[Dev Deps] update jscs, nsp, eslint, @ljharb/eslint-config, semver 89d9528\n[Dev Deps] update jscs eb222a8\n[Tests] up to io.js v3.3, node v4.1 c65429c\nUpdate nsp, eslint c60fbd8\nUpdate eslint, semver 6a62116\n[Tests] on node v7.5, v4.7 e764651\nTest up to io.js v2.1 3bf326a\nTest on the latest io.js versions. 693d047\n[Refactor] use an early return instead of a ternary. 31eaca2\nTest on io.js v2.2 c18c55a\nRun travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures. a1c237d\n[Dev Deps] update eslint, @ljharb/eslint-config aa3ea0f\n[Dev Deps] update eslint, @ljharb/eslint-config d97831d\n[Dev Deps] Update tape, eslint 95e6def\nUpdate eslint, nsp 3844c93\nUpdate tape, jscs 0d6dac8\nFix tests for faked @@toStringTag 2ebef9f\nTest up to io.js v3.0 ec1d2d4\n[Refactor] bail earlier when the value is falsy. a9e333e\n[Dev Deps] update tape 8cdcaae\nSwitch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. 281c4ef\nTest on io.js v2.4 4d54c68\nTest on io.js v2.3 23170f5\nTest on iojs-v1.6 4487ad0"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.0.3---2015-01-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.0.3---2015-01-29",
    "title": "3327 Research",
    "section": "v1.0.3 - 2015-01-29",
    "text": "v1.0.3 - 2015-01-29\n\nCommits\n\nUpdate npm run scripts. dc528dd\nAdd toStringTag tests. f48a83a\nIf @@toStringTag is not present, use the old-school Object#toString test. 50b0ffd"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.0.2---2015-01-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.0.2---2015-01-29",
    "title": "3327 Research",
    "section": "v1.0.2 - 2015-01-29",
    "text": "v1.0.2 - 2015-01-29\n\nCommits\n\nmake release a1de7ec\nImprove optimization by separating the try/catch, and bailing out early when not typeof “object”. 5ab7632"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.0.1---2015-01-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.0.1---2015-01-28",
    "title": "3327 Research",
    "section": "v1.0.1 - 2015-01-28",
    "text": "v1.0.1 - 2015-01-28\n\nCommits\n\nUsing my standard jscs.json file 1f1733a\nAdding npm run lint 51ea70f\nUse RegExp#exec to test if something is a regex, which works even with ES6 @@toStringTag. 042c8c7\nAdding license and downloads badges 366d619\nUse SVG badges instead of PNG 6a32e4f\nUpdate tape, jscs f1b9462\nUpdate jscs 1bff23f\nUpdate tape, jscs c22ea2e\nUpdate tape, jscs b0479db\nUse consistent quotes 1a6e347\nMake travis builds faster. 090a4ea\nUpdate tape 7d76129\nLock covert to v1.0.0. 9a90b03\nUpdating tape bfbc7f5\nUpdating jscs 13ad511\nUpdating jscs cda1945\nUpdating jscs de96c99\nRunning linter as part of tests 2cb6567\nUpdating covert a56ae74\nUpdating tape ffe47f7"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.0.0---2014-05-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v1.0.0---2014-05-19",
    "title": "3327 Research",
    "section": "v1.0.0 - 2014-05-19",
    "text": "v1.0.0 - 2014-05-19\n\nCommits\n\nMake sure old and unstable nodes don’t break Travis 05da747\ntoString is a reserved var name in old Opera 885c48c\nUpdating deps 2ca0e79\nUpdating tape. 9678435\nUpdating covert c3bb898\nUpdating tape 7811708\nTesting on node 0.6 again dec36ae\nRun code coverage as part of tests e6f4ebe"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v0.0.0---2014-01-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-regex/CHANGELOG.html#v0.0.0---2014-01-15",
    "title": "3327 Research",
    "section": "v0.0.0 - 2014-01-15",
    "text": "v0.0.0 - 2014-01-15\n\nCommits\n\npackage.json aa60d43\nread me 861e944\nInitial commit d0cdd71\nTests. b533f74\nImplementation. 3c9a8c0\nTravis CI 742c440"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cookie/HISTORY.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/cookie/HISTORY.html",
    "title": "3327 Research",
    "section": "",
    "text": "0.4.2 / 2022-02-02\n\npref: read value only when assigning in parse\npref: remove unnecessary regexp in parse\n\n\n\n0.4.1 / 2020-04-21\n\nFix maxAge option to reject invalid values\n\n\n\n0.4.0 / 2019-05-15\n\nAdd SameSite=None support\n\n\n\n0.3.1 / 2016-05-26\n\nFix sameSite: true to work with draft-7 clients\n\ntrue now sends SameSite=Strict instead of SameSite\n\n\n\n\n0.3.0 / 2016-05-26\n\nAdd sameSite option\n\nReplaces firstPartyOnly option, never implemented by browsers\n\nImprove error message when encode is not a function\nImprove error message when expires is not a Date\n\n\n\n0.2.4 / 2016-05-20\n\nperf: enable strict mode\nperf: use for loop in parse\nperf: use string concatination for serialization\n\n\n\n0.2.3 / 2015-10-25\n\nFix cookie Max-Age to never be a floating point number\n\n\n\n0.2.2 / 2015-09-17\n\nFix regression when setting empty cookie value\n\nEase the new restriction, which is just basic header-level validation\n\nFix typo in invalid value errors\n\n\n\n0.2.1 / 2015-09-17\n\nThrow on invalid values provided to serialize\n\nEnsures the resulting string is a valid HTTP header value\n\n\n\n\n0.2.0 / 2015-08-13\n\nAdd firstPartyOnly option\nThrow better error for invalid argument to parse\nperf: hoist regular expression\n\n\n\n0.1.5 / 2015-09-17\n\nFix regression when setting empty cookie value\n\nEase the new restriction, which is just basic header-level validation\n\nFix typo in invalid value errors\n\n\n\n0.1.4 / 2015-09-17\n\nThrow better error for invalid argument to parse\nThrow on invalid values provided to serialize\n\nEnsures the resulting string is a valid HTTP header value\n\n\n\n\n0.1.3 / 2015-05-19\n\nReduce the scope of try-catch deopt\nRemove argument reassignments\n\n\n\n0.1.2 / 2014-04-16\n\nRemove unnecessary files from npm package\n\n\n\n0.1.1 / 2014-02-23\n\nFix bad parse when cookie value contained a comma\nFix support for maxAge of 0\n\n\n\n0.1.0 / 2013-05-01\n\nAdd decode option\nAdd encode option\n\n\n\n0.0.6 / 2013-04-08\n\nIgnore cookie parts missing =\n\n\n\n0.0.5 / 2012-10-29\n\nReturn raw cookie value if value unescape errors\n\n\n\n0.0.4 / 2012-06-21\n\nUse encode/decodeURIComponent for cookie encoding/decoding\n\nImprove server/client interoperability\n\n\n\n\n0.0.3 / 2012-06-06\n\nOnly escape special characters per the cookie RFC\n\n\n\n0.0.2 / 2012-06-01\n\nFix maxAge option to not throw error\n\n\n\n0.0.1 / 2012-05-28\n\nAdd more tests\n\n\n\n0.0.0 / 2012-05-28\n\nInitial release"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "0.5.6",
    "text": "0.5.6\n\nFix for regression when people were using numbers as names in source maps. See #236."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "0.5.5",
    "text": "0.5.5\n\nFix “regression” of unsupported, implementation behavior that half the world happens to have come to depend on. See #235.\nFix regression involving function hoisting in SpiderMonkey. See #233."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "0.5.4",
    "text": "0.5.4\n\nLarge performance improvements to source-map serialization. See #228 and #229."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "0.5.3",
    "text": "0.5.3\n\nDo not include unnecessary distribution files. See commit ef7006f8d1647e0a83fdc60f04f5a7ca54886f86."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "0.5.2",
    "text": "0.5.2\n\nInclude browser distributions of the library in package.json’s files. See issue #212."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "0.5.1",
    "text": "0.5.1\n\nFix latent bugs in IndexedSourceMapConsumer.prototype._parseMappings. See ff05274becc9e6e1295ed60f3ea090d31d843379."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "0.5.0",
    "text": "0.5.0\n\nNode 0.8 is no longer supported.\nUse webpack instead of dryice for bundling.\nBig speedups serializing source maps. See pull request #203.\nFix a bug with SourceMapConsumer.prototype.sourceContentFor and sources that explicitly start with the source root. See issue #199."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "0.4.4",
    "text": "0.4.4\n\nFix an issue where using a SourceMapGenerator after having created a SourceMapConsumer from it via SourceMapConsumer.fromSourceMap failed. See issue #191.\nFix an issue with where SourceMapGenerator would mistakenly consider different mappings as duplicates of each other and avoid generating them. See issue #192."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "0.4.3",
    "text": "0.4.3\n\nA very large number of performance improvements, particularly when parsing source maps. Collectively about 75% of time shaved off of the source map parsing benchmark!\nFix a bug in SourceMapConsumer.prototype.allGeneratedPositionsFor and fuzzy searching in the presence of a column option. See issue #177.\nFix a bug with joining a source and its source root when the source is above the root. See issue #182.\nAdd the SourceMapConsumer.prototype.hasContentsOfAllSources method to determine when all sources’ contents are inlined into the source map. See issue #190."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "0.4.2",
    "text": "0.4.2\n\nAdd an .npmignore file so that the benchmarks aren’t pulled down by dependent projects. Issue #169.\nAdd an optional column argument to SourceMapConsumer.prototype.allGeneratedPositionsFor and better handle lines with no mappings. Issues #172 and #173."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "0.4.1",
    "text": "0.4.1\n\nFix accidentally defining a global variable. #170."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "0.4.0",
    "text": "0.4.0\n\nThe default direction for fuzzy searching was changed back to its original direction. See #164.\nThere is now a bias option you can supply to SourceMapConsumer to control the fuzzy searching direction. See #167.\nAbout an 8% speed up in parsing source maps. See #159.\nAdded a benchmark for parsing and generating source maps."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "0.3.0",
    "text": "0.3.0\n\nChange the default direction that searching for positions fuzzes when there is not an exact match. See #154.\nSupport for environments using json2.js for JSON serialization. See #156."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "0.2.0",
    "text": "0.2.0\n\nSupport for consuming “indexed” source maps which do not have any remote sections. See pull request #127. This introduces a minor backwards incompatibility if you are monkey patching SourceMapConsumer.prototype methods."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "0.1.43",
    "text": "0.1.43\n\nPerformance improvements for SourceMapGenerator and SourceNode. See issue #148 for some discussion and issues #150, #151, and #152 for implementations."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "0.1.42",
    "text": "0.1.42\n\nFix an issue where SourceNodes from different versions of the source-map library couldn’t be used in conjunction with each other. See issue #142."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "0.1.41",
    "text": "0.1.41\n\nFix a bug with getting the source content of relative sources with a “./” prefix. See issue #145 and Bug 1090768.\nAdd the SourceMapConsumer.prototype.computeColumnSpans method to compute the column span of each mapping.\nAdd the SourceMapConsumer.prototype.allGeneratedPositionsFor method to find all generated positions associated with a given original source and line."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "0.1.40",
    "text": "0.1.40\n\nPerformance improvements for parsing source maps in SourceMapConsumer."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "0.1.39",
    "text": "0.1.39\n\nFix a bug where setting a source’s contents to null before any source content had been set before threw a TypeError. See issue #131."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "0.1.38",
    "text": "0.1.38\n\nFix a bug where finding relative paths from an empty path were creating absolute paths. See issue #129."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "0.1.37",
    "text": "0.1.37\n\nFix a bug where if the source root was an empty string, relative source paths would turn into absolute source paths. Issue #124."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "0.1.36",
    "text": "0.1.36\n\nAllow the names mapping property to be an empty string. Issue #121."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "0.1.35",
    "text": "0.1.35\n\nA third optional parameter was added to SourceNode.fromStringWithSourceMap to specify a path that relative sources in the second parameter should be relative to. Issue #105.\nIf no file property is given to a SourceMapGenerator, then the resulting source map will no longer have a null file property. The property will simply not exist. Issue #104.\nFixed a bug where consecutive newlines were ignored in SourceNodes. Issue #116."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-23",
    "title": "3327 Research",
    "section": "0.1.34",
    "text": "0.1.34\n\nMake SourceNode work with windows style (“”) newlines. Issue #103.\nFix bug involving source contents and the SourceMapGenerator.prototype.applySourceMap. Issue #100."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-24",
    "title": "3327 Research",
    "section": "0.1.33",
    "text": "0.1.33\n\nFix some edge cases surrounding path joining and URL resolution.\nAdd a third parameter for relative path to SourceMapGenerator.prototype.applySourceMap.\nFix issues with mappings and EOLs."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-25",
    "title": "3327 Research",
    "section": "0.1.32",
    "text": "0.1.32\n\nFixed a bug where SourceMapConsumer couldn’t handle negative relative columns (issue 92).\nFixed test runner to actually report number of failed tests as its process exit code.\nFixed a typo when reporting bad mappings (issue 87)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-26",
    "title": "3327 Research",
    "section": "0.1.31",
    "text": "0.1.31\n\nDelay parsing the mappings in SourceMapConsumer until queried for a source location.\nSupport Sass source maps (which at the time of writing deviate from the spec in small ways) in SourceMapConsumer."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-27",
    "title": "3327 Research",
    "section": "0.1.30",
    "text": "0.1.30\n\nDo not join source root with a source, when the source is a data URI.\nExtend the test runner to allow running single specific test files at a time.\nPerformance improvements in SourceNode.prototype.walk and SourceMapConsumer.prototype.eachMapping.\nSource map browser builds will now work inside Workers.\nBetter error messages when attempting to add an invalid mapping to a SourceMapGenerator."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-28",
    "title": "3327 Research",
    "section": "0.1.29",
    "text": "0.1.29\n\nAllow duplicate entries in the names and sources arrays of source maps (usually from TypeScript) we are parsing. Fixes github issue 72."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-29",
    "title": "3327 Research",
    "section": "0.1.28",
    "text": "0.1.28\n\nSkip duplicate mappings when creating source maps from SourceNode; github issue 75."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-30",
    "title": "3327 Research",
    "section": "0.1.27",
    "text": "0.1.27\n\nDon’t throw an error when the file property is missing in SourceMapConsumer, we don’t use it anyway."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-31",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-31",
    "title": "3327 Research",
    "section": "0.1.26",
    "text": "0.1.26\n\nFix SourceNode.fromStringWithSourceMap for empty maps. Fixes github issue 70."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-32",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-32",
    "title": "3327 Research",
    "section": "0.1.25",
    "text": "0.1.25\n\nMake compatible with browserify"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-33",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-33",
    "title": "3327 Research",
    "section": "0.1.24",
    "text": "0.1.24\n\nFix issue with absolute paths and file:// URIs. See https://bugzilla.mozilla.org/show_bug.cgi?id=885597"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-34",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-34",
    "title": "3327 Research",
    "section": "0.1.23",
    "text": "0.1.23\n\nFix issue with absolute paths and sourcesContent, github issue 64."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-35",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-35",
    "title": "3327 Research",
    "section": "0.1.22",
    "text": "0.1.22\n\nIgnore duplicate mappings in SourceMapGenerator. Fixes github issue 21."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-36",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-36",
    "title": "3327 Research",
    "section": "0.1.21",
    "text": "0.1.21\n\nFixed handling of sources that start with a slash so that they are relative to the source root’s host."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-37",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-37",
    "title": "3327 Research",
    "section": "0.1.20",
    "text": "0.1.20\n\nFixed github issue #43: absolute URLs aren’t joined with the source root anymore."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-38",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-38",
    "title": "3327 Research",
    "section": "0.1.19",
    "text": "0.1.19\n\nUsing Travis CI to run tests."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-39",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-39",
    "title": "3327 Research",
    "section": "0.1.18",
    "text": "0.1.18\n\nFixed a bug in the handling of sourceRoot."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-40",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-40",
    "title": "3327 Research",
    "section": "0.1.17",
    "text": "0.1.17\n\nAdded SourceNode.fromStringWithSourceMap."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-41",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-41",
    "title": "3327 Research",
    "section": "0.1.16",
    "text": "0.1.16\n\nAdded missing documentation.\nFixed the generating of empty mappings in SourceNode."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-42",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-42",
    "title": "3327 Research",
    "section": "0.1.15",
    "text": "0.1.15\n\nAdded SourceMapGenerator.applySourceMap."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-43",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-43",
    "title": "3327 Research",
    "section": "0.1.14",
    "text": "0.1.14\n\nThe sourceRoot is now handled consistently."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-44",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-44",
    "title": "3327 Research",
    "section": "0.1.13",
    "text": "0.1.13\n\nAdded SourceMapGenerator.fromSourceMap."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-45",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-45",
    "title": "3327 Research",
    "section": "0.1.12",
    "text": "0.1.12\n\nSourceNode now generates empty mappings too."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-46",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-46",
    "title": "3327 Research",
    "section": "0.1.11",
    "text": "0.1.11\n\nAdded name support to SourceNode."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-47",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/source-map/CHANGELOG.html#section-47",
    "title": "3327 Research",
    "section": "0.1.10",
    "text": "0.1.10\n\nAdded sourcesContent support to the customer and generator."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/AUTHORS.html#tweetnacl",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/AUTHORS.html#tweetnacl",
    "title": "3327 Research",
    "section": "TweetNaCl",
    "text": "TweetNaCl\n\nBernard van Gastel\nDaniel J. Bernstein http://cr.yp.to/djb.html\nPeter Schwabe http://www.cryptojedi.org/users/peter/\nSjaak Smetsers http://www.cs.ru.nl/~sjakie/\nTanja Lange http://hyperelliptic.org/tanja\nWesley Janssen"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/AUTHORS.html#poly1305-donna",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/AUTHORS.html#poly1305-donna",
    "title": "3327 Research",
    "section": "Poly1305-donna",
    "text": "Poly1305-donna\n\nAndrew Moon (@floodyberry)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v1.0.3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v1.0.3",
    "title": "3327 Research",
    "section": "v1.0.3",
    "text": "v1.0.3\nIMPORTANT BUG FIX. Due to a bug in calculating carry in modulo reduction that used bit operations on integers larger than 32 bits, nacl.sign or nacl.sign.detached could have created incorrect signatures.\nThis only affects signing, not verification.\nThanks to @valerini on GitHub for finding and reporting the bug."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v1.0.2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v1.0.2",
    "title": "3327 Research",
    "section": "v1.0.2",
    "text": "v1.0.2\nExported more internal undocumented functions for third-party projects that rely on low-level interface, (something users of TweetNaCl shouldn’t care about)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v1.0.1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v1.0.1",
    "title": "3327 Research",
    "section": "v1.0.1",
    "text": "v1.0.1\nUpdated documentation and typings."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v1.0.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v1.0.0",
    "title": "3327 Research",
    "section": "v1.0.0",
    "text": "v1.0.0\nNo code changes from v1.0.0-rc.1."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v1.0.0-rc.1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v1.0.0-rc.1",
    "title": "3327 Research",
    "section": "v1.0.0-rc.1",
    "text": "v1.0.0-rc.1\n\nIMPORTANT! In previous versions, nacl.secretbox.open, nacl.box.open, and nacl.box.after returned false when opening failed (for example, when using incorrect key, nonce, or when input was maliciously or accidentally modified after encryption). This version instead returns null.\nThe usual way to check for this condition:\nif (!result) { ... }\nis correct and will continue to work.\nHowever, direct comparison with false:\nif (result == false) { ... }\nit will no longer work and will not detect failure. Please check your code for this condition.\n(nacl.sign.open always returned null, so it is not affected.)\nArguments type check now uses instanceof Uint8Array instead of Object.prototype.toString.\nRemoved deprecation checks for nacl.util (moved to a separate package in v0.14.0).\nRemoved deprecation checks for the old signature API (changed in v0.10.0).\nImproved benchmarking."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.14.5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.14.5",
    "title": "3327 Research",
    "section": "v0.14.5",
    "text": "v0.14.5\n\nFixed incomplete return types in TypeScript typings.\nReplaced COPYING.txt with LICENSE file, which now has public domain dedication text from The Unlicense. License fields in package.json and bower.json have been set to “Unlicense”. The project was and will be in the public domain – this change just makes it easier for automated tools to know about this fact by using the widely recognized and SPDX-compatible template for public domain dedication."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.14.4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.14.4",
    "title": "3327 Research",
    "section": "v0.14.4",
    "text": "v0.14.4\n\nAdded TypeScript type definitions (contributed by @AndSDev).\nImproved benchmarking code."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.14.3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.14.3",
    "title": "3327 Research",
    "section": "v0.14.3",
    "text": "v0.14.3\nFixed a bug in the fast version of Poly1305 and brought it back.\nThanks to @floodyberry for promptly responding and fixing the original C code:\n\n“The issue was not properly detecting if st->h was >= 2^130 - 5, coupled with [testing mistake] not catching the failure. The chance of the bug affecting anything in the real world is essentially zero luckily, but it’s good to have it fixed.”\n\nhttps://github.com/floodyberry/poly1305-donna/issues/2#issuecomment-202698577"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.14.2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.14.2",
    "title": "3327 Research",
    "section": "v0.14.2",
    "text": "v0.14.2\nSwitched Poly1305 fast version back to original (slow) version due to a bug."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.14.1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.14.1",
    "title": "3327 Research",
    "section": "v0.14.1",
    "text": "v0.14.1\nNo code changes, just tweaked packaging and added COPYING.txt."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.14.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.14.0",
    "title": "3327 Research",
    "section": "v0.14.0",
    "text": "v0.14.0\n\nBreaking change! All functions from nacl.util have been removed. These functions are no longer available:\nnacl.util.decodeUTF8\nnacl.util.encodeUTF8\nnacl.util.decodeBase64\nnacl.util.encodeBase64\nIf want to continue using them, you can include https://github.com/dchest/tweetnacl-util-js package:\n<script src=\"nacl.min.js\"></script>\n<script src=\"nacl-util.min.js\"></script>\nor\nvar nacl = require('tweetnacl');\nnacl.util = require('tweetnacl-util');\nHowever it is recommended to use better packages that have wider compatibility and better performance. Functions from nacl.util were never intended to be robust solution for string conversion and were included for convenience: cryptography library is not the right place for them.\nCurrently calling these functions will throw error pointing to tweetnacl-util-js (in the next version this error message will be removed).\nImproved detection of available random number generators, making it possible to use nacl.randomBytes and related functions in Web Workers without changes.\nChanges to testing (see README)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.13.3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.13.3",
    "title": "3327 Research",
    "section": "v0.13.3",
    "text": "v0.13.3\nNo code changes.\n\nReverted license field in package.json to “Public domain”.\nFixed typo in README."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.13.2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.13.2",
    "title": "3327 Research",
    "section": "v0.13.2",
    "text": "v0.13.2\n\nFixed undefined variable bug in fast version of Poly1305. No worries, this bug was never triggered.\nSpecified CC0 public domain dedication.\nUpdated development dependencies."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.13.1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.13.1",
    "title": "3327 Research",
    "section": "v0.13.1",
    "text": "v0.13.1\n\nExclude crypto and buffer modules from browserify builds."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.13.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.13.0",
    "title": "3327 Research",
    "section": "v0.13.0",
    "text": "v0.13.0\n\nMade nacl-fast the default version in NPM package. Now require(\"tweetnacl\") will use fast version; to get the original version, use require(\"tweetnacl/nacl.js\").\nCleanup temporary array after generating random bytes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.12.2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.12.2",
    "title": "3327 Research",
    "section": "v0.12.2",
    "text": "v0.12.2\n\nImproved performance of curve operations, making nacl.scalarMult, nacl.box, nacl.sign and related functions up to 3x faster in nacl-fast version."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.12.1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.12.1",
    "title": "3327 Research",
    "section": "v0.12.1",
    "text": "v0.12.1\n\nSignificantly improved performance of Salsa20 (~1.5x faster) and Poly1305 (~3.5x faster) in nacl-fast version."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.12.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.12.0",
    "title": "3327 Research",
    "section": "v0.12.0",
    "text": "v0.12.0\n\nInstead of using the given secret key directly, TweetNaCl.js now copies it to a new array in nacl.box.keyPair.fromSecretKey and nacl.sign.keyPair.fromSecretKey."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.11.2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.11.2",
    "title": "3327 Research",
    "section": "v0.11.2",
    "text": "v0.11.2\n\nAdded new constant: nacl.sign.seedLength."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.11.1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.11.1",
    "title": "3327 Research",
    "section": "v0.11.1",
    "text": "v0.11.1\n\nEven faster hash for both short and long inputs (in nacl-fast)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.11.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.11.0",
    "title": "3327 Research",
    "section": "v0.11.0",
    "text": "v0.11.0\n\nImplement nacl.sign.keyPair.fromSeed to enable creation of sign key pairs deterministically from a 32-byte seed. (It behaves like libsodium’s crypto_sign_seed_keypair: the seed becomes a secret part of the secret key.)\nFast version now has an improved hash implementation that is 2x-5x faster.\nFixed benchmarks, which may have produced incorrect measurements."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.10.1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.10.1",
    "title": "3327 Research",
    "section": "v0.10.1",
    "text": "v0.10.1\n\nExported undocumented nacl.lowlevel.crypto_core_hsalsa20."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.10.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.10.0",
    "title": "3327 Research",
    "section": "v0.10.0",
    "text": "v0.10.0\n\nSignature API breaking change! nacl.sign and nacl.sign.open now deal with signed messages, and new nacl.sign.detached and nacl.sign.detached.verify are available.\n\nPreviously, nacl.sign returned a signature, and nacl.sign.open accepted a message and “detached” signature. This was unlike NaCl’s API, which dealt with signed messages (concatenation of signature and message).\nThe new API is:\n  nacl.sign(message, secretKey) -> signedMessage\n  nacl.sign.open(signedMessage, publicKey) -> message | null\nSince detached signatures are common, two new API functions were introduced:\n  nacl.sign.detached(message, secretKey) -> signature\n  nacl.sign.detached.verify(message, signature, publicKey) -> true | false\n(Note that it’s verify, not open, and it returns a boolean value, unlike open, which returns an “unsigned” message.)\n\nNPM package now comes without test directory to keep it small."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.9.2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.9.2",
    "title": "3327 Research",
    "section": "v0.9.2",
    "text": "v0.9.2\n\nImproved documentation.\nFast version: increased theoretical message size limit from 2^32-1 to 2^52 bytes in Poly1305 (and thus, secretbox and box). However this has no impact in practice since JavaScript arrays or ArrayBuffers are limited to 32-bit indexes, and most implementations won’t allocate more than a gigabyte or so. (Obviously, there are no tests for the correctness of implementation.) Also, it’s not recommended to use messages that large without splitting them into smaller packets anyway."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.9.1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/CHANGELOG.html#v0.9.1",
    "title": "3327 Research",
    "section": "v0.9.1",
    "text": "v0.9.1\n\nInitial release"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/PULL_REQUEST_TEMPLATE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/tweetnacl/PULL_REQUEST_TEMPLATE.html",
    "title": "3327 Research",
    "section": "",
    "text": "Important!\nIf your contribution is not trivial (not a typo fix, etc.), we can only accept it if you dedicate your copyright for the contribution to the public domain. Make sure you understand what it means (see http://unlicense.org/)! If you agree, please add yourself to AUTHORS.md file, and include the following text to your pull request description or a comment in it:\n\nI dedicate any and all copyright interest in this software to the\npublic domain. I make this dedication for the benefit of the public at\nlarge and to the detriment of my heirs and successors. I intend this\ndedication to be an overt act of relinquishment in perpetuity of all\npresent and future rights to this software under copyright law.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any\nmeans."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "4.0.0 / 2016-12-3",
    "text": "4.0.0 / 2016-12-3\n\ndecode now returns a Buffer again, to avoid potential cryptographic errors. Daniel Cousens / #21"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "3.0.0 / 2015-08-18",
    "text": "3.0.0 / 2015-08-18\n\nrefactored module into generic base-x."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "2.0.1 / 2014-12-23",
    "text": "2.0.1 / 2014-12-23\n\nperformance boost in encode() #10"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "2.0.0 / 2014-10-03",
    "text": "2.0.0 / 2014-10-03\n\ndecode now returns an Array instead of Buffer to keep things simple. Daniel Cousens / #9"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "1.2.1 / 2014-07-24",
    "text": "1.2.1 / 2014-07-24\n\nspeed optimizations Daniel Cousens / #8"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "1.2.0 / 2014-06-29",
    "text": "1.2.0 / 2014-06-29\n\nremoved bigi dep, implemented direct byte conversion Jared Deckard / #6"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "1.1.0 / 2014-06-26",
    "text": "1.1.0 / 2014-06-26\n\nuser Buffer internally for calculations, providing cleaner code and a performance increase. Daniel Cousens"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "1.0.0 / 2014-05-27",
    "text": "1.0.0 / 2014-05-27\n\nremoved binstring dep, Buffer now only input to encode() and output of decode()\nupdate bigi from ~0.3.0 to ^1.1.0\nadded travis-ci support\nadded coveralls support\nmodified tests and library to handle fixture style testing (thanks to bitcoinjs-lib devs and Daniel Cousens)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "0.3.0 / 2014-02-24",
    "text": "0.3.0 / 2014-02-24\n\nduck type input to encode and change output of decode to Buffer."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "0.2.1 / 2014-02-24",
    "text": "0.2.1 / 2014-02-24\n\nremoved bower and component support. Closes #1\nconvert from 4 spaces to 2"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "0.2.0 / 2013-12-07",
    "text": "0.2.0 / 2013-12-07\n\nrenamed from cryptocoin-base58 to bs58"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "0.1.0 / 2013-11-20",
    "text": "0.1.0 / 2013-11-20\n\nremoved AMD support"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/bs58/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "0.0.1 / 2013-11-04",
    "text": "0.0.1 / 2013-11-04\n\ninitial release"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-environment-flags/node_modules/semver/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-environment-flags/node_modules/semver/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "5.7",
    "text": "5.7\n\nAdd minVersion method"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-environment-flags/node_modules/semver/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-environment-flags/node_modules/semver/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "5.6",
    "text": "5.6\n\nMove boolean loose param to an options object, with backwards-compatibility protection.\nAdd ability to opt out of special prerelease version handling with the includePrerelease option flag."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-environment-flags/node_modules/semver/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-environment-flags/node_modules/semver/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "5.5",
    "text": "5.5\n\nAdd version coercion capabilities"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-environment-flags/node_modules/semver/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-environment-flags/node_modules/semver/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "5.4",
    "text": "5.4\n\nAdd intersection checking"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-environment-flags/node_modules/semver/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-environment-flags/node_modules/semver/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "5.3",
    "text": "5.3\n\nAdd minSatisfying method"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-environment-flags/node_modules/semver/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-environment-flags/node_modules/semver/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "5.2",
    "text": "5.2\n\nAdd prerelease(v) that returns prerelease components"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-environment-flags/node_modules/semver/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-environment-flags/node_modules/semver/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "5.1",
    "text": "5.1\n\nAdd Backus-Naur for ranges\nRemove excessively cute inspection methods"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-environment-flags/node_modules/semver/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/node-environment-flags/node_modules/semver/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "5.0",
    "text": "5.0\n\nRemove AMD/Browserified build artifacts\nFix ltr and gtr when using the * range\nFix for range * with a prerelease identifier"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-keys/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-keys/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "1.1.1 / 2019-04-06\n\n[Fix] exclude deprecated Firefox keys (#53)\n\n\n\n1.1.0 / 2019-02-10\n\n[New] [Refactor] move full implementation to implementation entry point\n[Refactor] only evaluate the implementation if Object.keys is not present\n[Tests] up to node v11.8, v10.15, v8.15, v6.16\n[Tests] remove jscs\n[Tests] switch to npm audit from nsp\n\n\n\n1.0.12 / 2018-06-18\n\n[Fix] avoid accessing window.applicationCache, to avoid issues with latest Chrome on HTTP (#46)\n\n\n\n1.0.11 / 2016-07-05\n\n[Fix] exclude keys regarding the style (eg. pageYOffset) on window to avoid reflow (#32)\n\n\n\n1.0.10 / 2016-07-04\n\n[Fix] exclude height and width keys on window to avoid reflow (#31)\n[Fix] In IE 6, window.external makes Object.keys throw\n[Tests] up to node v6.2, v5.10, v4.4\n[Tests] use pretest/posttest for linting/security\n[Dev Deps] update tape, jscs, nsp, eslint, @ljharb/eslint-config\n[Dev Deps] remove unused eccheck script + dep\n\n\n\n1.0.9 / 2015-10-19\n\n[Fix] Blacklist ‘frame’ property on window (#16, #17)\n[Dev Deps] update jscs, eslint, @ljharb/eslint-config\n\n\n\n1.0.8 / 2015-10-14\n\n[Fix] wrap automation equality bug checking in try/catch, per es5-shim#327\n[Fix] Blacklist ‘window.frameElement’ per es5-shim#322\n[Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG\n[Tests] up to io.js v3.3, node v4.2\n[Dev Deps] update eslint, tape, @ljharb/eslint-config, jscs\n\n\n\n1.0.7 / 2015-07-18\n\n[Fix] A proper fix for 176f03335e90d5c8d0d8125a99f27819c9b9cdad / https://github.com/es-shims/es5-shim/issues/275 that doesn’t break dontEnum/constructor fixes in IE 8.\n[Fix] Remove deprecation message in Chrome by touching deprecated window properties (#15)\n[Tests] Improve test output for automation equality bugfix\n[Tests] Test on io.js v2.4\n\n\n\n1.0.6 / 2015-07-09\n\n[Fix] Use an object lookup rather than ES5’s indexOf (#14)\n[Tests] ES3 browsers don’t have Array.isArray\n[Tests] Fix no-shadow rule, as well as an IE 8 bug caused by engine NFE shadowing bugs.\n\n\n\n1.0.5 / 2015-07-03\n\n[Fix] Fix a flabbergasting IE 8 bug where localStorage.constructor.prototype === localStorage throws\n[Tests] Test up to io.js v2.3\n[Dev Deps] Update nsp, eslint\n\n\n\n1.0.4 / 2015-05-23\n\nFix a Safari 5.0 bug with Object.keys not working with arguments\nTest on latest node and io.js\nUpdate jscs, tape, eslint, nsp, is, editorconfig-tools, covert\n\n\n\n1.0.3 / 2015-01-06\n\nRevert “Make object-keys more robust against later environment tampering” to maintain ES3 compliance\n\n\n\n1.0.2 / 2014-12-28\n\nUpdate lots of dev dependencies\nTweaks to README\nMake object-keys more robust against later environment tampering\n\n\n\n1.0.1 / 2014-09-03\n\nUpdate URLs and badges in README\n\n\n\n1.0.0 / 2014-08-26\n\nv1.0.0\n\n\n\n0.6.1 / 2014-08-25\n\nv0.6.1\nUpdating dependencies (tape, covert, is)\nUpdate badges in readme\nUse separate var statements\n\n\n\n0.6.0 / 2014-04-23\n\nv0.6.0\nUpdating dependencies (tape, covert)\nMake sure boxed primitives, and arguments objects, work properly in ES3 browsers\nImprove test matrix: test all node versions, but only latest two stables are a failure\nRemove internal foreach shim.\n\n\n\n0.5.1 / 2014-03-09\n\n0.5.1\nUpdating dependencies (tape, covert, is)\nRemoving forEach from the module (but keeping it in tests)\n\n\n\n0.5.0 / 2014-01-30\n\n0.5.0\nExplicitly returning the shim, instead of returning native Object.keys when present\nAdding a changelog.\nCleaning up IIFE wrapping\nTesting on node 0.4 through 0.11\n\n\n\n0.4.0 / 2013-08-14\n\nv0.4.0\nIn Chrome 4-10 and Safari 4, typeof (new RegExp) === ‘function’\nIf it’s a string, make sure to use charAt instead of brackets.\nOnly use Function#call if necessary.\nMaking sure the context tests actually run.\nBetter function detection\nAdding the android browser\nFixing testling files\nUpdating tape\nRemoving the “is” dependency.\nMaking an isArguments shim.\nAdding a local forEach shim and tests.\nUpdating paths.\nMoving the shim test.\nv0.3.0\n\n\n\n0.3.0 / 2013-05-18\n\nREADME tweak.\nFixing constructor enum issue. Fixes #5.\nAdding a test for #5\nUpdating readme.\nUpdating dependencies.\nGiving credit to lodash.\nMake sure that a prototype’s constructor property is not enumerable. Fixes #3.\nAdding additional tests to handle arguments objects, and to skip “prototype” in functions. Fixes #2.\nFixing a typo on this test for #3.\nAdding node 0.10 to travis.\nAdding an IE < 9 test per #3\nAdding an iOS 5 mobile Safari test per #2\nMoving “indexof” and “is” to be dev dependencies.\nMaking sure the shim works with functions.\nFlattening the tests.\n\n\n\n0.2.0 / 2013-05-10\n\nv0.2.0\nObject.keys should work with arrays.\n\n\n\n0.1.8 / 2013-05-10\n\nv0.1.8\nUpgrading dependencies.\nUsing a simpler check.\nFixing a bug in hasDontEnumBug browsers.\nUsing the newest tape!\nFixing this error test.\n“undefined” is probably a reserved word in ES3.\nBetter test message.\n\n\n\n0.1.7 / 2013-04-17\n\nUpgrading “is” once more.\nThe key “null” is breaking some browsers.\n\n\n\n0.1.6 / 2013-04-17\n\nv0.1.6\nUpgrading “is”\n\n\n\n0.1.5 / 2013-04-14\n\nBumping version.\nAdding more testling browsers.\nUpdating “is”\n\n\n\n0.1.4 / 2013-04-08\n\nUsing “is” instead of “is-extended”.\n\n\n\n0.1.3 / 2013-04-07\n\nUsing “foreach” instead of my own shim.\nRemoving “tap”; I’ll just wait for “tape” to fix its node 0.10 bug.\n\n\n\n0.1.2 / 2013-04-03\n\nAdding dependency status; moving links to an index at the bottom.\nUpgrading is-extended; version 0.1.2\nAdding an npm version badge.\n\n\n\n0.1.1 / 2013-04-01\n\nAdding Travis CI.\nBumping the version.\nAdding indexOf since IE sucks.\nAdding a forEach shim since older browsers don’t have Array#forEach.\nUpgrading tape - 0.3.2 uses Array#map\nUsing explicit end instead of plan.\nCan’t test with Array.isArray in older browsers.\nUsing is-extended.\nFixing testling files.\nJSHint/JSLint-ing.\nRemoving an unused object.\nUsing strict mode.\n\n\n\n0.1.0 / 2013-03-30\n\nChanging the exports should have meant a higher version bump.\nOops, fixing the repo URL.\nAdding more tests.\n0.0.2\nMerge branch ‘export_one_thing’; closes #1\nMove shim export to a separate file."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-hex-prefix/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/strip-hex-prefix/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "0.0.1 – strip-hex-prefix\n\nBasic testing\nBasic docs\nLicense\nlinting\nbasic exports"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/statuses/HISTORY.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/statuses/HISTORY.html",
    "title": "3327 Research",
    "section": "",
    "text": "2.0.1 / 2021-01-03\n\nFix returning values from Object.prototype\n\n\n\n2.0.0 / 2020-04-19\n\nDrop support for Node.js 0.6\nFix messaging casing of 418 I'm a Teapot\nRemove code 306\nRemove status[code] exports; use status.message[code]\nRemove status[msg] exports; use status.code[msg]\nRename 425 Unordered Collection to standard 425 Too Early\nRename STATUS_CODES export to message\nReturn status message for statuses(code) when given code\n\n\n\n1.5.0 / 2018-03-27\n\nAdd 103 Early Hints\n\n\n\n1.4.0 / 2017-10-20\n\nAdd STATUS_CODES export\n\n\n\n1.3.1 / 2016-11-11\n\nFix return type in JSDoc\n\n\n\n1.3.0 / 2016-05-17\n\nAdd 421 Misdirected Request\nperf: enable strict mode\n\n\n\n1.2.1 / 2015-02-01\n\nFix message for status 451\n\n451 Unavailable For Legal Reasons\n\n\n\n\n1.2.0 / 2014-09-28\n\nAdd 208 Already Repored\nAdd 226 IM Used\nAdd 306 (Unused)\nAdd 415 Unable For Legal Reasons\nAdd 508 Loop Detected\n\n\n\n1.1.1 / 2014-09-24\n\nAdd missing 308 to codes.json\n\n\n\n1.1.0 / 2014-09-21\n\nAdd codes.json for universal support\n\n\n\n1.0.4 / 2014-08-20\n\nPackage cleanup\n\n\n\n1.0.3 / 2014-06-08\n\nAdd 308 to .redirect category\n\n\n\n1.0.2 / 2014-03-13\n\nAdd .retry category\n\n\n\n1.0.1 / 2014-03-12\n\nInitial release"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string-width/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string-width/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install string-width"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string-width/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string-width/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst stringWidth = require('string-width');\n\nstringWidth('古');\n//=> 2\n\nstringWidth('\\u001b[1m古\\u001b[22m');\n//=> 2\n\nstringWidth('a');\n//=> 1"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string-width/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string-width/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nstring-width-cli - CLI for this module\nstring-length - Get the real length of a string\nwidest-line - Get the visual width of the widest line in a string"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string-width/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/string-width/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright © 2012-present Contributors.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "4.0.2 - 2019-10-05",
    "text": "4.0.2 - 2019-10-05\n\nChanged\n\nUpgrade hallmark devDependency from ^0.1.0 to ^2.0.0 (#58, #61) (@vweevers)\nUpgrade standard devDependency from ^12.0.0 to ^14.0.0 (#57, #60) (@vweevers)\nUpgrade nyc devDependency from ^13.2.0 to ^14.0.0 (#55) (@vweevers)\nTweak tests (#62) (@vweevers)\n\n\n\nAdded\n\nTest that stream keeps a reference to the iterator (16a4dd5) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "4.0.1 - 2019-03-30",
    "text": "4.0.1 - 2019-03-30\n\nChanged\n\nUpgrade leveldown devDependency from ^4.0.0 to ^5.0.0 (#52) (@vweevers)\nUpgrade nyc devDependency from ^12.0.2 to ^13.2.0 (#51) (@vweevers)\nApply common project tweaks (#49, #50, fece33a, b3b3b6c) (@vweevers)\n\n\n\nFixed\n\nFix reference to undefined definition in CHANGELOG.md (aa88961) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "4.0.0 - 2018-12-17",
    "text": "4.0.0 - 2018-12-17\n\nChanged\n\nUpgrade through2 devDependency from ^2.0.0 to ^3.0.0 (@vweevers)\nUpgrade readable-stream dependency from ^2.0.5 to ^3.0.2 (@ralphtheninja)\nUpgrade standard devDependency from ^11.0.0 to ^12.0.0 (@ralphtheninja)\n\n\n\nAdded\n\nAdd nyc and coveralls (#39) (@ralphtheninja)\n\n\n\nRemoved\n\nRemove node 9 (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "3.0.1 - 2018-10-18",
    "text": "3.0.1 - 2018-10-18\n\nFixed\n\nBump readable-stream from ^2.0 to ^2.3 to prevent npm dedupe and ensure it has #destroy() (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "3.0.0 - 2018-06-28",
    "text": "3.0.0 - 2018-06-28\n\nChanged\n\nProper destroy (#34) (@vweevers)\n\n\n\nRemoved\n\nRemove node 4 (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "2.0.3 - 2018-06-28",
    "text": "2.0.3 - 2018-06-28\n\nFixed\n\nRevert proper destroy (#34) (@ralphtheninja)\n\nHistorical Note The previous release was meant to restore node 4 and included an additional change by mistake."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "2.0.2 - 2018-06-28",
    "text": "2.0.2 - 2018-06-28\n\nChanged\n\nRestore node 4 (@ralphtheninja)\nProper destroy (#34) (@vweevers)\n\nHistorical Note We made a mistake releasing v2.0.1 with the engines field in package.json set to node 6 as minimal version. This caused problems for users of yarn. We therefore released v2.0.2 which restored node 4 and a new major directly after this."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "2.0.1 - 2018-06-10",
    "text": "2.0.1 - 2018-06-10\n\nChanged\n\nUpgrade leveldown devDependency from ^1.4.1 to ^4.0.0 (@ralphtheninja)\nUpgrade standard devDependency from ^10.0.3 to ^11.0.0 (@ralphtheninja)\n\n\n\nAdded\n\nAdd node 9 and 10 to Travis (@ralphtheninja)\nAdd UPGRADING.md (@ralphtheninja)\n\n\n\nRemoved\n\nRemove node 7 from Travis (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "2.0.0 - 2017-08-28",
    "text": "2.0.0 - 2017-08-28\n\nChanged\n\nUpgrade readable-stream from ^1.0.33 to ^2.0.5 (@greenkeeper, @ralphtheninja)\nUpgrade tape devDependency from ^3.5.0 to ^4.4.0 (@greenkeeper, @ralphtheninja)\nUpgrade through2 devDependency from ^0.6.3 to ^2.0.0 (@greenkeeper, @ralphtheninja)\nUpgrade leveldown devDependency from ^0.10.4 to ^1.4.1 (@juliangruber)\nUpdate copyright year to 2017 (@ralphtheninja)\nUpdate README example using standard (@ralphtheninja)\n\n\n\nAdded\n\nAdd node 6 to Travis (@greenkeeper, @juliangruber)\nAdd node 7 and 8 to Travis (@ralphtheninja)\nAdd Greenkeeper (@ralphtheninja)\nAdd standard (@ralphtheninja)\nTest .destroy() during and after iterator.next() (@ralphtheninja)\n\n\n\nRemoved\n\nRemove node 0.10, 0.12 and iojs from Travis (@greenkeeper, @juliangruber)\nRemove encodings (@ralphtheninja)\nRemove Makefile (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "1.3.1 - 2015-08-17",
    "text": "1.3.1 - 2015-08-17\n\nChanged\n\nUpdate .repository path in package.json (@timoxley)\n\n\n\nFixed\n\nUse level-codec from npm (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "1.3.0 - 2015-05-05",
    "text": "1.3.0 - 2015-05-05\n\nFixed\n\nEmit 'close' after 'error' (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "1.2.0 - 2015-05-04",
    "text": "1.2.0 - 2015-05-04\n\nAdded\n\nAdd .decoder option to constructor for decoding keys and values (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "1.1.1 - 2015-03-29",
    "text": "1.1.1 - 2015-03-29\n\nAdded\n\nEnable Travis and add node 0.10, 0.12 and iojs (@ralphtheninja)\nAdd MIT license (@ralphtheninja)\n\n\n\nFixed\n\nFix race condition in .destroy() (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "1.1.0 - 2015-03-29",
    "text": "1.1.0 - 2015-03-29\n\nAdded\n\nAdd .destroy() (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "1.0.0 - 2015-03-29",
    "text": "1.0.0 - 2015-03-29\n:seedling: Initial release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CONTRIBUTORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/CONTRIBUTORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "Contributors\n\n\n\nName\nGitHub\nSocial\n\n\n\n\nLars-Magnus Skog\n@ralphtheninja\n@ralph@social.weho.st\n\n\nJulian Gruber\n@juliangruber\n@juliangruber@twitter\n\n\nVincent Weevers\n@vweevers\n@vweevers@twitter\n\n\nTim Oxley\n@timoxley\n@secoif@twitter"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/UPGRADING.html#v4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/UPGRADING.html#v4",
    "title": "3327 Research",
    "section": "v4",
    "text": "v4\nUpgraded to readable-stream@3 which contains several substantial changes and improvements. Since level-iterator-stream derives from readable-stream we decided to bump major as well."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/UPGRADING.html#v3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/UPGRADING.html#v3",
    "title": "3327 Research",
    "section": "v3",
    "text": "v3\nRemoved support for node 4."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/UPGRADING.html#v2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-iterator-stream/UPGRADING.html#v2",
    "title": "3327 Research",
    "section": "v2",
    "text": "v2\nEncodings were factored out from levelup into encoding-down and in that process they were removed from this module as well. For more information, please check the corresponding CHANGELOG.md for:\n\nlevelup\nencoding-down\n\nIf your code relies on options.decoder for decoding keys and values you need to handle this yourself, e.g. by a transform stream or similar.\nSupport for node 0.10, 0.12 and iojs was also dropped."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "2.3.6 - 2020-07-02",
    "text": "2.3.6 - 2020-07-02\n\nChanged\n\nUpgraded ansi-colors dependency to v4, thanks to @trySound, #297."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "2.3.5 - 2020-04-07",
    "text": "2.3.5 - 2020-04-07\n\nFixed\n\nPR #259 fixed typing numbers in the autocomplete prompt, which fixes #112, #199, and #237\nPR #266 add the template property to the SnippetPromptOptions TypeScript interface"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "2.3.4 - 2020-01-13",
    "text": "2.3.4 - 2020-01-13\n\nAdded\n\nMultiSelectPrompt new example for result option.\n\n\n\nFixed\n\nUpdated typings to use EventEmitter class from events directly due to changes in @types/node."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "2.3.3 - 2020-01-13",
    "text": "2.3.3 - 2020-01-13\n\nAdded\n\nBooleanPrompt new example for header option.\n\n\n\nFixed\n\nusing await in keypress and returning the number result in the array type fixes an issue with tests failing only on Travis\nautocomplete highlighting issue\nTypos in some documentation and example comments.\nSyntax errors in example code on the README.md."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "2.3.2 - 2019-09-17",
    "text": "2.3.2 - 2019-09-17\n\nAdded\n\nAuthPrompt type for creating authentication based prompts.\nBasicAuth prompt as an example of creating an authentication prompt using basic username/password authentication\nExamples for different authentication prompts.\nQuizPrompt\n\n\n\nFixed\n\nMore examples were updated to fix any known bugs.\nCouple of fixes to the editable and autocomplete prompts.\nDocumentation updates to highlight options available to some prompts."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "2.3.1 - 2019-07-12",
    "text": "2.3.1 - 2019-07-12\n\nFixed\n\nSeveral examples were updated to align with latest code changes and to fix small bugs found in the implementation of the example.\nSome bugs found from updating examples were fixed.\nUpdates to documentation to provide more information on how to use prompts and the options available."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "2.1.0 - 2018-11-29",
    "text": "2.1.0 - 2018-11-29\n\nFixed\n\nSeveral improvements were made for handling custom format, result and initial functions defined on the options."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "2.0.7 - 2018-11-14",
    "text": "2.0.7 - 2018-11-14\n\nFixed\n\nvalidate function now properly accepts false as a return value, thanks to @g-plane.\n\n\n\nAdded\n\nAdds support for ctrl+n to add choices\nAdds support for options.required on all prompts. Uses the built-in validate() function, allowing this functionality to be overridden or customized.\nAdds support for options.scroll to disable scrolling in array prompts.\nAdds support for options.onRun, which is called when prompt.run() is called, after the readline instance is created.\nAdds support for options.history on the Input and Text prompts.\nAdds support for options.term to set the terminal, thanks to @tunnckoCore. At the moment this is only used in a couple of edge cases with the Survey and Scale prompts to check if the terminal is Hyper.\noptions.skip may now be a Boolean, thanks to @tunnckoCore"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/enquirer/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "2.0.0 - 2018-11-07",
    "text": "2.0.0 - 2018-11-07\n\nChanged\nEnquire 2.0 is a bottom-up complete re-write:\n\nSeveral prompts that were previously published as individual packages will be included in Enquirer itself.\nWhy? - As users, we didn’t like having to add commonly-used prompts as plugins. Enquirer 2.0 will still support custom prompts as plugins, but many prompts will also be built-in.\nEnquirer will only have a single dependency, https://github.com/doowb/ansi-colors, which itself has no other dependencies). This will make Enquirer easier to maintain and faster for users.\nMethods for registering “questions” have been removed. While it was nice to be able to preregister questions that could be called upon later, this is something that is better left to implementors, as it’s relatively trivial to do with custom code.\noptions.default is now options.initial\n\n\n\nAdded\n\nMany prompts that were previously separate packages are now bundled into Enquirer itself."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-callable/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-callable/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "1.2.4 / 2021-08-05\n\n[Fix] use has-tostringtag approach to behave correctly in the presence of symbol shams\n[readme] fix repo URLs\n[readme] add actions and codecov badges\n[readme] remove defunct badges\n[meta] ignore eclint checking coverage output\n[meta] use prepublishOnly script for npm 7+\n[actions] use node/install instead of node/run; use codecov action\n[actions] remove unused workflow file\n[Tests] run nyc on all tests; use tape runner\n[Tests] use available-typed-arrays, for-each, has-symbols, object-inspect\n[Dev Deps] update available-typed-arrays, eslint, @ljharb/eslint-config, aud, object-inspect, tape\n\n\n\n1.2.3 / 2021-01-31\n\n[Fix] document.all is callable (do not use document.all!)\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, tape\n[Tests] migrate tests to Github Actions\n[actions] add “Allow Edits” workflow\n[actions] switch Automatic Rebase workflow to pull_request_target event\n\n\n\n1.2.2 / 2020-09-21\n\n[Fix] include actual fix from 579179e\n[Dev Deps] update eslint\n\n\n\n1.2.1 / 2020-09-09\n\n[Fix] phantomjs‘ Reflect.apply does not throw properly on a bad array-like\n[Dev Deps] update eslint, @ljharb/eslint-config\n[meta] fix eclint error\n\n\n\n1.2.0 / 2020-06-02\n\n[New] use Reflect.apply‑based callability detection\n[readme] add install instructions (#55)\n[meta] only run aud on prod deps\n[Dev Deps] update eslint, @ljharb/eslint-config, tape, make-arrow-function, make-generator-function; add aud, safe-publish-latest, make-async-function\n[Tests] add tests for function proxies (#53, #25)\n\n\n\n1.1.5 / 2019-12-18\n\n[meta] remove unused Makefile and associated utilities\n[meta] add funding field; add FUNDING.yml\n[Dev Deps] update eslint, @ljharb/eslint-config, semver, tape, covert, rimraf\n[Tests] use shared travis configs\n[Tests] use eccheck over editorconfig-tools\n[Tests] use npx aud instead of nsp or npm audit with hoops\n[Tests] remove jscs\n[actions] add automatic rebasing / merge commit blocking\n\n\n\n1.1.4 / 2018-07-02\n\n[Fix] improve class and arrow function detection (#30, #31)\n[Tests] on all latest node minors; improve matrix\n[Dev Deps] update all dev deps\n\n\n\n1.1.3 / 2016-02-27\n\n[Fix] ensure “class “ doesn’t screw up “class” detection\n[Tests] up to node v5.7, v4.3\n[Dev Deps] update to eslint v2, @ljharb/eslint-config, jscs\n\n\n\n1.1.2 / 2016-01-15\n\n[Fix] Make sure comments don’t screw up “class” detection (#4)\n[Tests] up to node v5.3\n[Tests] Add parallelshell, run both --es-staging and stock tests at once\n[Dev Deps] update tape, jscs, nsp, eslint, @ljharb/eslint-config\n[Refactor] convert isNonES6ClassFn into isES6ClassFn\n\n\n\n1.1.1 / 2015-11-30\n\n[Fix] do not throw when a non-function has a function in its [[Prototype]] (#2)\n[Dev Deps] update tape, eslint, @ljharb/eslint-config, jscs, nsp, semver\n[Tests] up to node v5.1\n[Tests] no longer allow node 0.8 to fail.\n[Tests] fix npm upgrades in older nodes\n\n\n\n1.1.0 / 2015-10-02\n\n[Fix] Some browsers report TypedArray constructors as typeof object\n[New] return false for “class” constructors, when possible.\n[Tests] up to io.js v3.3, node v4.1\n[Dev Deps] update eslint, editorconfig-tools, nsp, tape, semver, jscs, covert, make-arrow-function\n[Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG\n\n\n\n1.0.4 / 2015-01-30\n\nIf @@toStringTag is not present, use the old-school Object#toString test.\n\n\n\n1.0.3 / 2015-01-29\n\nAdd tests to ensure arrow functions are callable.\nRefactor to aid optimization of non-try/catch code.\n\n\n\n1.0.2 / 2015-01-29\n\nFix broken package.json\n\n\n\n1.0.1 / 2015-01-29\n\nAdd early exit for typeof not “function”\n\n\n\n1.0.0 / 2015-01-29\n\nInitial release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-concat-iterator/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-concat-iterator/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright © 2018-present Contributors.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-concat-iterator/CHANGELOG.html#unreleasedunreleased",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-concat-iterator/CHANGELOG.html#unreleasedunreleased",
    "title": "3327 Research",
    "section": "Unreleased",
    "text": "Unreleased"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-concat-iterator/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-concat-iterator/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "2.0.1 - 2019-04-01",
    "text": "2.0.1 - 2019-04-01\n\nChanged\n\nUpgrade standard devDependency from ^11.0.1 to ^12.0.1 (6b957cf) (@vweevers)\nApply common project tweaks (#12, #13, 0c1d4e0) (@vweevers)\n\n\n\nAdded\n\nAdd nyc and coveralls (#11, a3e312a) (@ralphtheninja, @vweevers)\n\n\n\nRemoved\n\nRemove node 9 from travis (0347b82) (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-concat-iterator/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-concat-iterator/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "2.0.0 - 2018-06-27",
    "text": "2.0.0 - 2018-06-27\n\nChanged\n\nDetect end by checking key and value (@vweevers)\nUse level in example instead of leveldown (@ralphtheninja)\nEnd iterator if next errors (@ralphtheninja)\n\n\n\nRemoved\n\nRemove custom nextTick parameter (@ralphtheninja)\n\n\n\nAdded\n\nAdd homepage and repository to package.json (@ralphtheninja)\nAdd UPGRADING.md (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-concat-iterator/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-concat-iterator/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "1.0.0 - 2018-06-24",
    "text": "1.0.0 - 2018-06-24\n:seedling: Initial release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-concat-iterator/CONTRIBUTORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-concat-iterator/CONTRIBUTORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "Contributors\n\n\n\nName\nGitHub\nSocial\n\n\n\n\nLars-Magnus Skog\n@ralphtheninja\n@ralph@social.weho.st\n\n\nVincent Weevers\n@vweevers\n@vweevers@twitter"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-concat-iterator/UPGRADING.html#v2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-concat-iterator/UPGRADING.html#v2",
    "title": "3327 Research",
    "section": "v2",
    "text": "v2\nThe nextTick parameter was removed."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/log-symbols/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/log-symbols/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install log-symbols"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/log-symbols/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/log-symbols/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst logSymbols = require('log-symbols');\n\nconsole.log(logSymbols.success, 'Finished successfully!');\n// On good OSes:  ✔ Finished successfully!\n// On Windows:    √ Finished successfully!"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/log-symbols/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/log-symbols/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nlogSymbols\n\ninfo\n\n\nsuccess\n\n\nwarning\n\n\nerror"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/log-symbols/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/log-symbols/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\nfigures - Unicode symbols with Windows CMD fallbacks\npy-log-symbols - Python port\nlog-symbols - Ruby port"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/log-symbols/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/log-symbols/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-try/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-try/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install --save p-try"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-try/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-try/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst pTry = require('p-try');\n\npTry(() => {\n    return synchronousFunctionThatMightThrow();\n}).then(value => {\n    console.log(value);\n}).catch(error => {\n    console.error(error);\n});"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-try/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-try/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\np-finally - Promise#finally() ponyfill - Invoked when the promise is settled regardless of outcome\nMore…"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-try/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/p-try/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/camelcase/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/camelcase/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install camelcase"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/camelcase/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/camelcase/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst camelCase = require('camelcase');\n\ncamelCase('foo-bar');\n//=> 'fooBar'\n\ncamelCase('foo_bar');\n//=> 'fooBar'\n\ncamelCase('Foo-Bar');\n//=> 'fooBar'\n\ncamelCase('Foo-Bar', {pascalCase: true});\n//=> 'FooBar'\n\ncamelCase('--foo.bar', {pascalCase: false});\n//=> 'fooBar'\n\ncamelCase('foo bar');\n//=> 'fooBar'\n\nconsole.log(process.argv[3]);\n//=> '--foo-bar'\ncamelCase(process.argv[3]);\n//=> 'fooBar'\n\ncamelCase(['foo', 'bar']);\n//=> 'fooBar'\n\ncamelCase(['__foo__', '--bar'], {pascalCase: true});\n//=> 'FooBar'"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/camelcase/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/camelcase/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\ncamelCase(input, options)\n\ninput\nType: string string[]\nString to convert to camel case.\n\n\noptions\nType: Object\n\npascalCase\nType: boolean Default: false\nUppercase the first character: foo-bar → FooBar"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/camelcase/readme.html#security",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/camelcase/readme.html#security",
    "title": "3327 Research",
    "section": "Security",
    "text": "Security\nTo report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/camelcase/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/camelcase/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\ndecamelize - The inverse of this module\nuppercamelcase - Like this module, but to PascalCase instead of camelCase\ntitleize - Capitalize every word in string\nhumanize-string - Convert a camelized/dasherized/underscored string into a humanized one"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/camelcase/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/camelcase/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright (c) 2010-2020 Robert Kieffer and other contributors\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "8.3.0 (2020-07-27)",
    "text": "8.3.0 (2020-07-27)\n\nFeatures\n\nadd parse/stringify/validate/version/NIL APIs (#479) (0e6c10b), closes #475 #478 #480 #481 #180"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "8.2.0 (2020-06-23)",
    "text": "8.2.0 (2020-06-23)\n\nFeatures\n\nimprove performance of v1 string representation (#453) (0ee0b67)\nremove deprecated v4 string parameter (#454) (88ce3ca), closes #437\nsupport jspm (#473) (e9f2587)\n\n\n\nBug Fixes\n\nprepare package exports for webpack 5 (#468) (8d6e6a5)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "8.1.0 (2020-05-20)",
    "text": "8.1.0 (2020-05-20)\n\nFeatures\n\nimprove v4 performance by reusing random number array (#435) (bf4af0d)\noptimize V8 performance of bytesToUuid (#434) (e156415)\n\n\n\nBug Fixes\n\nexport package.json required by react-native and bundlers (#449) (be1c8fe), closes ai/nanoevents#44 #444"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "8.0.0 (2020-04-29)",
    "text": "8.0.0 (2020-04-29)\n\n⚠ BREAKING CHANGES\n\nFor native ECMAScript Module (ESM) usage in Node.js only named exports are exposed, there is no more default export.\n-import uuid from 'uuid';\n-console.log(uuid.v4()); // -> 'cd6c3b08-0adc-4f4b-a6ef-36087a1c9869'\n+import { v4 as uuidv4 } from 'uuid';\n+uuidv4(); // ⇨ '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d'\nDeep requiring specific algorithms of this library like require('uuid/v4'), which has been deprecated in uuid@7, is no longer supported.\nInstead use the named exports that this module exports.\nFor ECMAScript Modules (ESM):\n-import uuidv4 from 'uuid/v4';\n+import { v4 as uuidv4 } from 'uuid';\nuuidv4();\nFor CommonJS:\n-const uuidv4 = require('uuid/v4');\n+const { v4: uuidv4 } = require('uuid');\nuuidv4();\n\n\n\nFeatures\n\nnative Node.js ES Modules (wrapper approach) (#423) (2d9f590), closes #245 #419 #342\nremove deep requires (#426) (daf72b8)\n\n\n\nBug Fixes\n\nadd CommonJS syntax example to README quickstart section (#417) (e0ec840)\n\n\n\n7.0.3 (2020-03-31)\n\n\nBug Fixes\n\nmake deep require deprecation warning work in browsers (#409) (4b71107), closes #408\n\n\n\n7.0.2 (2020-03-04)\n\n\nBug Fixes\n\nmake access to msCrypto consistent (#393) (8bf2a20)\nsimplify link in deprecation warning (#391) (bb2c8e4)\nupdate links to match content in readme (#386) (44f2f86)\n\n\n\n7.0.1 (2020-02-25)\n\n\nBug Fixes\n\nclean up esm builds for node and browser (#383) (59e6a49)\nprovide browser versions independent from module system (#380) (4344a22), closes #378"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "7.0.0 (2020-02-24)",
    "text": "7.0.0 (2020-02-24)\n\n⚠ BREAKING CHANGES\n\nThe default export, which used to be the v4() method but which was already discouraged in v3.x of this library, has been removed.\nExplicitly note that deep imports of the different uuid version functions are deprecated and no longer encouraged and that ECMAScript module named imports should be used instead. Emit a deprecation warning for people who deep-require the different algorithm variants.\nRemove builtin support for insecure random number generators in the browser. Users who want that will have to supply their own random number generator function.\nRemove support for generating v3 and v5 UUIDs in Node.js<4.x\nConvert code base to ECMAScript Modules (ESM) and release CommonJS build for node and ESM build for browser bundlers.\n\n\n\nFeatures\n\nadd UMD build to npm package (#357) (4e75adf), closes #345\nadd various es module and CommonJS examples (b238510)\nensure that docs are up-to-date in CI (ee5e77d)\nhybrid CommonJS & ECMAScript modules build (a3f078f)\nremove insecure fallback random number generator (3a5842b), closes #173\nremove support for pre Node.js v4 Buffer API (#356) (b59b5c5)\nrename repository to github:uuidjs/uuid (#351) (c37a518), closes #338\n\n\n\nBug Fixes\n\nadd deep-require proxies for local testing and adjust tests (#365) (7fedc79)\nadd note about removal of default export (#372) (12749b7), closes #370\ndeprecated deep requiring of the different algorithm versions (#361) (c0bdf15)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "3.4.0 (2020-01-16)",
    "text": "3.4.0 (2020-01-16)\n\nFeatures\n\nrename repository to github:uuidjs/uuid (#351) (e2d7314), closes #338"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "3.3.3 (2019-08-19)",
    "text": "3.3.3 (2019-08-19)\n\nBug Fixes\n\nno longer run ci tests on node v4\nupgrade dependencies"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "3.3.2 (2018-06-28)",
    "text": "3.3.2 (2018-06-28)\n\nBug Fixes\n\ntypo (305d877)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "3.3.1 (2018-06-28)",
    "text": "3.3.1 (2018-06-28)\n\nBug Fixes\n\nfix #284 by setting function name in try-catch (f2a60f2)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "3.2.1 (2018-01-16)",
    "text": "3.2.1 (2018-01-16)\n\nBug Fixes\n\nuse msCrypto if available. Fixes #241 (#247) (1fef18b)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CONTRIBUTING.html#testing",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CONTRIBUTING.html#testing",
    "title": "3327 Research",
    "section": "Testing",
    "text": "Testing\nnpm test"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CONTRIBUTING.html#releasing",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/uuid/CONTRIBUTING.html#releasing",
    "title": "3327 Research",
    "section": "Releasing",
    "text": "Releasing\nReleases are supposed to be done from master, version bumping is automated through standard-version:\nnpm run release -- --dry-run  # verify output manually\nnpm run release               # follow the instructions from the output of this command"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/set-blocking/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/set-blocking/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "Change Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n # 2.0.0 (2016-05-17)\n\nFeatures\n\nadd an isTTY check (#3) (66ce277)\n\n\n\nBREAKING CHANGES\n\nstdio/stderr will not be set to blocking if isTTY === false\n\n # 1.0.0 (2016-05-14)\n\n\nFeatures\n\nimplemented shim for stream._handle.setBlocking (6bde0c0)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-hex-prefixed/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-hex-prefixed/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "0.0.1 – is-hex-prefixed\n\nBasic testing\nBasic docs\nLicense\nlinting\nbasic exports"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright © 2012-present Contributors.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#unreleasedunreleased",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#unreleasedunreleased",
    "title": "3327 Research",
    "section": "Unreleased",
    "text": "Unreleased"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "2.0.1 - 2019-04-05",
    "text": "2.0.1 - 2019-04-05\n\nChanged\n\nUpgrade standard devDependency from ^11.0.0 to ^12.0.0 (#19) (@ralphtheninja)\nApply common project tweaks (#20, #21) (@vweevers)\nTweak license (b61e01b) (@ralphtheninja)\nTweak copyright years for less maintenance (772e911) (@ralphtheninja)\n\n\n\nAdded\n\nAdd nyc and coveralls (#18, #22) (@ralphtheninja, @vweevers)\n\n\n\nRemoved\n\nRemove node 9 from travis (9254882) (@ralphtheninja)\nRemove experimental typings (0ad3b37) (@vweevers)\nRemove contributors from package.json (29e1ae1) (@ralphtheninja)\nRemove copyright headers from code (f5e5e40) (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "2.0.0 - 2018-05-13",
    "text": "2.0.0 - 2018-05-13\n\nChanged\n\nTweak readme, add npm and node badges (f80d1b7) (@ralphtheninja)\nUpgrade standard devDependency from ^10.0.3 to ^11.0.0 (#12) (@ralphtheninja)\n\n\n\nAdded\n\nAdd node 10 (b002756) (@ralphtheninja)\n\n\n\nRemoved\n\nDrop node 0.12, 4, 5 and 7 (b002756, 150a3c6) (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "1.1.2 - 2017-11-13",
    "text": "1.1.2 - 2017-11-13\n\nChanged\n\nUpdate README style (#11) (@ralphtheninja)\n\n\n\nAdded\n\nAdd standard devDependency (#10) (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "1.1.1 - 2017-09-10",
    "text": "1.1.1 - 2017-09-10\n\nFixed\n\nFix error cause argument in typings (#9) (@MeirionHughes)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "1.1.0 - 2017-09-10",
    "text": "1.1.0 - 2017-09-10\n\nChanged\n\nTweak README (64b4842) (@ralphtheninja)\n\n\n\nAdded\n\nAdd basic typings (#8) (@MeirionHughes)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "1.0.5 - 2017-08-15",
    "text": "1.0.5 - 2017-08-15\n\nChanged\n\nUpdate copyright year from 2015 to 2017 (#7) (@ralphtheninja)\n\n\n\nAdded\n\nAdd node 4, 5, 6, 7 and 8 (#7) (@ralphtheninja)\nAdd Greenkeeper (#3, #6) (@ralphtheninja)\n\n\n\nRemoved\n\nDrop node 0.10 and iojs (#7) (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "1.0.4 - 2015-08-25",
    "text": "1.0.4 - 2015-08-25\n\nAdded\n\nDocument API (#2) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "1.0.3 - 2015-03-21",
    "text": "1.0.3 - 2015-03-21\n\nFixed\n\nAdd node 0.10 to travis (fcc758c) (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "1.0.2 - 2015-03-21",
    "text": "1.0.2 - 2015-03-21\n\nChanged\n\nTweak README to have same style as codec (d5e0cba) (@ralphtheninja)\n\n\n\nAdded\n\nAdd travis (5f6d1cd, 58690fa, 36c3199) (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "1.0.1 - 2015-03-20",
    "text": "1.0.1 - 2015-03-20\n:seedling: Initial release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CONTRIBUTORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/CONTRIBUTORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "Contributors\n\n\n\nName\nGitHub\nSocial\n\n\n\n\nLars-Magnus Skog\n@ralphtheninja\n@ralph@social.weho.st\n\n\nVincent Weevers\n@vweevers\n@vweevers@twitter\n\n\nMeirion Hughes\n@MeirionHughes\n\n\n\nJulian Gruber\n@juliangruber\n@juliangruber@twitter"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/UPGRADING.html#v2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-errors/UPGRADING.html#v2",
    "title": "3327 Research",
    "section": "v2",
    "text": "v2\nDropped node 0.12, 4, 5 and 7."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-string/CHANGELOG.html#v1.0.7---2021-08-05",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-string/CHANGELOG.html#v1.0.7---2021-08-05",
    "title": "3327 Research",
    "section": "v1.0.7 - 2021-08-05",
    "text": "v1.0.7 - 2021-08-05\n\nCommits\n\n[Refactor] use has-tostringtag to behave correctly in the presence of symbol shams d973ffd\n[Dev Deps] update auto-changelog, core-js, eslint, tape 4bfaabf"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-string/CHANGELOG.html#v1.0.6---2021-05-07",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-string/CHANGELOG.html#v1.0.6---2021-05-07",
    "title": "3327 Research",
    "section": "v1.0.6 - 2021-05-07",
    "text": "v1.0.6 - 2021-05-07\n\nCommits\n\n[Tests] migrate tests to Github Actions c7790c8\n[actions] use node/install instead of node/run; use codecov action 1e52bbd\n[Fix] do not use Object.prototype.toString when Symbol.toStringTag is shammed 83337eb\n[meta] do not publish github action workflow files b25aea2\n[readme] update badges 759ccd9\n[Tests] run nyc on all tests dc02f70\n[Dev Deps] update eslint, @ljharb/eslint-config, auto-changelog, tape; add aud a0f76fa\n[actions] add “Allow Edits” workflow 9ec3902\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, tape 57fbe21\n[Dev Deps] update eslint, @ljharb/eslint-config, tape 191e55f\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, auto-changelog 1ea2b81\n[Dev Deps] update eslint, @ljharb/eslint-config, tape 105d1b9\n[Dev Deps] update auto-changelog, tape; add aud 114cfad\n[meta] use prepublishOnly script for npm 7+ fc38f26\n[meta] gitignore coverage output 3419127\n[actions] update rebase action to use checkout v2 334eca0\n[actions] switch Automatic Rebase workflow to pull_request_target event 7a332e9\n[meta] remove explicit audit level config 04630b1"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-string/CHANGELOG.html#v1.0.5---2019-12-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-string/CHANGELOG.html#v1.0.5---2019-12-18",
    "title": "3327 Research",
    "section": "v1.0.5 - 2019-12-18",
    "text": "v1.0.5 - 2019-12-18\n\nCommits\n\n[Tests] use shared travis-ci configs 4121d6b\n[Tests] up to node v12.4, v11.15, v10.15, v9.11, v8.15, v7.10, v6.17, v5.12, v4.9; use nvm install-latest-npm e7a3e89\nUpdate eslint, tape, semver; use my personal shared eslint config 6c380a7\n[Tests] remove jscs 3d49592\nUpdate is, tape, covert, jscs, editorconfig-tools, eslint, nsp, semver. cc6983d\n[meta] add auto-changelog b857897\n[meta] remove unused Makefile and associated utilities 3f0f51c\n[Dev Deps] update eslint, @ljharb/eslint-config, is, covert, tape, semver 9d4a95e\nUpdate eslint e861b4b\nUpdate tape, jscs, eslint, @ljharb/eslint-config 172e2dd\nTest on node and io.js latest. fd426cd\n[Dev Deps] update eslint, @ljharb/eslint-config, safe-publish-latest 23bdf83\n[actions] add automatic rebasing / merge commit blocking 96153c0\n[meta] create FUNDING.yml 66ae246\n[Dev Deps] update is, jscs, nsp, eslint, @ljharb/eslint-config, semver 817361a\n[Dev Deps] update eslint, @ljharb/eslint-config, safe-publish-latest, semver, tape fc35d3f\n[Dev Deps] update jscs 886767e\n[Tests] use npx aud instead of nsp or npm audit with hoops 3410922\n[Tests] up to io.js v3.3, node v4.1 4d6c73b\nUpdate nsp, eslint b11de49\nUpdate eslint, semver 0777977\nOnly apps should have lockfiles 78b49ff\n[meta] add funding field 81328a6\n[Dev Deps] update eslint, tape fc9a225\n[Tests] use eclint instead of editorconfig-tools 59c2c61\n[Dev Deps] Update tape, eslint a429816\nTest on io.js v2.2 08b476e\nTest up to io.js v3.0 22637ef\n[meta] add safe-publish-latest 20ccb48\n[Dev Deps] update tape 06b58a0\nSwitch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. ea7cf84\nTest on io.js v2.4 66ec3ea\nTest on io.js v2.3 ca6e796\nFix tests for faked @@toStringTag 3cce832"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-string/CHANGELOG.html#v1.0.4---2015-01-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-string/CHANGELOG.html#v1.0.4---2015-01-29",
    "title": "3327 Research",
    "section": "v1.0.4 - 2015-01-29",
    "text": "v1.0.4 - 2015-01-29\n\nCommits\n\nIf @@toStringTag is not present, use the old-school Object#toString test. 30675ec"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-string/CHANGELOG.html#v1.0.3---2015-01-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-string/CHANGELOG.html#v1.0.3---2015-01-29",
    "title": "3327 Research",
    "section": "v1.0.3 - 2015-01-29",
    "text": "v1.0.3 - 2015-01-29\n\nCommits\n\nRefactor to aid optimization of non-try/catch code. 9b2772a"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-string/CHANGELOG.html#v1.0.2---2015-01-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-string/CHANGELOG.html#v1.0.2---2015-01-29",
    "title": "3327 Research",
    "section": "v1.0.2 - 2015-01-29",
    "text": "v1.0.2 - 2015-01-29\n\nCommits\n\nFix broken package.json dc921d3"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-string/CHANGELOG.html#v1.0.1---2015-01-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-string/CHANGELOG.html#v1.0.1---2015-01-29",
    "title": "3327 Research",
    "section": "v1.0.1 - 2015-01-29",
    "text": "v1.0.1 - 2015-01-29\n\nCommits\n\nFix eslint config. c4e05bd\nAdd early exits for typeof “string”, or typeof not “object”. 82f41d3"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-string/CHANGELOG.html#v1.0.0---2015-01-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/is-string/CHANGELOG.html#v1.0.0---2015-01-29",
    "title": "3327 Research",
    "section": "v1.0.0 - 2015-01-29",
    "text": "v1.0.0 - 2015-01-29\n\nCommits\n\nDotfiles. 45bc9dd\nmake release 23707f5\npackage.json 575ad81\nRead me 3f67c9a\nInitial commit 2c26a7a\nTests. 38c987b\nImplementation. 0471d59"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/io-ts/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/io-ts/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "Changelog\n\nTags:\n\n[New Feature]\n[Bug Fix]\n[Breaking Change]\n[Documentation]\n[Internal]\n[Polish]\n[Experimental]\n[Deprecation]\n\n\nNote: Gaps between patch versions are faulty/broken releases. Note: A feature tagged as Experimental is in a high state of flux, you’re at risk of it changing without notice.\n\n\n1.10.4\n\nPolish\n\nremove unneeded internal code (@gcanti)\n\n\n\n\n1.10.3\n\nBug Fix\n\nrevert 1.10.0 compatibility, fix #344 (@gcanti)\n\n\n\n\n1.10.2\n\nBug Fix\n\nmove fp-ts back to dependencies (@gcanti)\n\n\n\n\n1.10.1\n\nBug Fix\n\nhandle strict, exact and refinement codecs when optimizing tagged unions, fix #339 (@gcanti)\n\n\n\n\n1.10.0\n\nNew Feature\n\nmake io-ts compatible with both fp-ts@1.x, fp-ts@2.x (@gcanti)\n\n\n\n\n1.9.0\n\nNew Feature\n\nunion is now able to detect and optimize tagged unions (@gcanti)\n\nDeprecation\n\ndeprecate taggedUnion in favour of union (@gcanti)\n\n\n\n\n1.8.6\noutput ES modules to better support tree-shaking, closes #326 (@gcanti)\n\n\n1.8.5\n\nBug Fix\n\nchange how types and output types are retrieved in IntersectionC and TupleC, fix #315 (@gcanti)\n\n\n\n\n1.8.4\n\nPolish\n\nautobind decode method (@gcanti)\n\n\n\n\n1.8.3\n\nPolish\n\nadd stripInternal flag to tsconfig.json (@gcanti)\nhandle NaN in PathReporter (@gcanti)\nthrow if union encoding doesn’t find a usable codec (@leemhenson)\n\nDeprecation\n\ndeprecate NeverType (@gcanti)\ndeprecate FunctionType (@gcanti)\n\n\n\n\n1.8.2\n\nBug Fix\n\nalign the runtime behavior of Exact.is with the type system, fix #288 (@gcanti)\n\n\n\n\n1.8.1\n\nNew Feature\n\nadd brand combinator (@gcanti, @lostintime)\nadd Int codec (@gcanti)\nexact strips additional properties while decoding / encoding (@gcanti)\nun-deprecate strict combinator, is now an alias of exact(type(...)) (@gcanti)\n\nBug Fix\n\nfix wrong context keys for tagged unions (@gcanti)\n\nDeprecation\n\ndeprecate refinement combinator in favour of brand (@gcanti)\ndeprecate Integer codec in favour of Int (@gcanti)\ndeprecate StrictType class (@gcanti)\ndeprecate StrictC interface (@gcanti)\n\nPolish\n\nmodify the implementation of intersection in order to support combinators that strip additional properties (@gcanti)\ndo not validate the codomain of a key of a record if its domain in invalid (@gcanti)\nnormalize missing message field in ValidationError (@gcanti)\nfix name of recursive codec definitions (@gcanti)\nremove unexpected validation path from partial type, closes #195 (@gcanti)\ndo not leak taggedUnion implementation when tag validation fails (@gcanti)\nadd actual value to all context entries (@gcanti)\nexact now bails out when the value is not an UnknownRecord (@gcanti)\ntuple should not leak the implementation (never usage) (@gcanti)\nexact should not leak the implementation (never usage) (@gcanti)\nuse Number.isInteger in Integer implementation (@gcanti)\nuse the Flow convention to name exact codecs (@gcanti)\n\n\n\n\n1.7.1\n\nDeprecation\n\ndeprecate any (@gcanti)\ndeprecate object (@gcanti)\ndeprecate Dictionary in favour of UnknownRecord (@gcanti)\ndeprecate Array in favour of UnknownArray (@gcanti)\ndeprecate dictionary in favour of record (@gcanti)\n\n\n\n\n1.7.0\n\nNew Feature\n\nbetter support for custom messages, closes #148 (@gcanti)\n\nadd optional message field to ValidationError\nadd message argument to failure\nPathReporter should account for the new field\n\nadd actual optional field to ContextEntry, closes #194 (@gcanti)\n\nDeprecation\n\ndeprecate getValidationError (@gcanti)\ndeprecate getDefaultContext (@gcanti)\n\n\n\n\n1.6.4\n\nBug Fix\n\ngetIndexRecord: getIndexRecord: handle conflicting tags in different positions, ref #263 (@gcanti)\n\nExperimental\n\nadded a warning to the console if a tagged union cannot be created (@gcanti)\nrevert union optimization, needs more work to make it happen (@gcanti)\n\n\n\n\n1.6.3\n\nBug Fix\n\nprevent maximum call stack size exceeded when indexing recursive codecs, closes #259 (@gcanti)\n\n\n\n\n1.6.2\n\nPolish\n\nmake isIndexableCodec more strict (@gcanti)\n\n\n\n\n1.6.1\n\nBug Fix\n\ntaggedUnion should handle sub unions / tagged unions correctly, closes #257 (@gcanti)\n\nExperimental\n\noptimize union with the same algorithm used in taggedUnion (@gcanti)\n\n\n\n\n1.6.0\nImportant. This version requires typescript@3.2.2+\n\nNew Feature\n\nleverage typescript@3.2.2 (@gcanti)\n\nTypeC\nPartialC\nRecordC\nUnionC\nReadonlyC\nStrictC\nTaggedUnionC\n\n\n\n\n\n1.5.3\n\nBug Fix\n\nmissing context info while decoding an intersection, fix #246 (@gcanti)\n\nExperimental\n\nadd intermediary interfaces, closes #165 (@gcanti)\n\nNullC\nUndefinedC\nVoidC\nAnyC\nUnknownC\nNeverC\nStringC\nNumberC\nBooleanC\nUnknownArrayC\nUnknownRecordC\nObjectC\nFunctionC\nRefinementC\nLiteralC\nKeyofC\nArrayC\nTypeC\nPartialC\nRecordC\nUnionC\nIntersectionC\nTupleC\nReadonlyC\nReadonlyArrayC\nStrictC\nTaggedUnionC\nExactC\n\n\nPolishs\n\nuse rest elements in tuple types (typescript@3.0.1 feature) (@gcanti)\nunion should handle zero types (@gcanti)\nintersection should handle zero / one types (@gcanti)\n\nDeprecation\n\ndeprecate clean (@gcanti)\ndeprecate alias (@gcanti)\ndeprecate PropsOf type (@gcanti)\ndeprecate Exact type (@gcanti)\n\n\n\n\n1.5.2\n\nDeprecation\n\ndeprecate Compact type (@gcanti)\n\n\n\n\n1.5.1\n\nPolish\n\nremove useless module augmentation of Array (@gcanti)\n\n\n\n\n1.5.0\n\nNew Feature\n\nadd UnknownType, closes #238 (@gcanti)\n\nDeprecation\n\nThrowReporter is now deprecated (@gcanti)\n\n\n\n\n1.4.2\nuse Compact in intersection signatures as a workaround for #234 (@sledorze)\n\n\n1.4.1\n\nPolish\n\nType.prototype.pipe now allows more types as input, #231 #232 (@sledorze)\n\n\n\n\n1.4.0\n\nNew Feature\n\nuse unknown as mixed (@gcanti)\n\n\n\n\n1.3.4\n\nBug Fix\n\nshould emit expected keys while decoding, fix #214 (@gcanti)\n\n\n\n\n1.3.3\n\nBug Fix\n\nalign TaggedExact definition with siblings, fix #223 (@gcanti)\n\n\n\n\n1.3.2\n\nBug Fix\n\ndictionary type should not allow arrays, fix #218 (@gcanti)\n\n\n\n\n1.3.1\n\nPolish\n\nuse interface instead of type alias (@gcanti)\n\nContext\nErrors\nAny\nMixed\n\n\n\n\n\n1.3.0\n\nNew Feature\n\nadd TaggedUnionType (@gcanti)\n\n\n\n\n1.2.1\n\nPolish\n\nallow recursive types in tagged unions (@gcanti)\n\n\n\n\n1.2.0\n\nNew Feature\n\nadd void runtime type (@gcanti)\n\n\n\n\n1.1.5\n\nBug Fix\n\npartial combinator should preserve additional properties while encoding, fixes #179 (@gcanti)\n\nPolish\n\nuse useIdentity when possible (@gcanti)\n\n\n\n\n1.1.4\n\nInternal\n\nfix broken build with typescript@2.9.1, closes #174 (@gcanti)\n\n\n\n\n1.1.3\n\nInternal\n\nupgrade to typings-checker@2.0.0 (@gcanti)\n\n\n\n\n1.1.2\n\nBug Fix\n\nfix alias implementation (@gcanti)\nhandle exact types in isTagged (@gcanti)\n\n\n\n\n1.1.1\n\nExperimental\n\nadd clean / alias functions, closes #149 (@gcanti)\nadd exact combinator (@gcanti)\n\nthe strict combinator is deprecated\n\nremove optional combinator (@gcanti)\n\nit doesn’t play well with advanced combinators, see here for a discussion\n\n\n\n\n\n1.0.6\n\nBug Fix\n\ntaggedUnion fails to decode when tag values are not string literals, fix #161 (@gcanti)\n\n\n\n\n1.0.5\n\nBug Fix\n\nworkaround for upstream TypeScript bug 14041 (wrong generated declarations) (@gcanti)\n\nInternal\n\noptimize InterfaceType.encode (@gcanti)\nuse definite assignment assertion for phantom fields (@gcanti)\n\n\n\n\n1.0.4\n\nBug Fix\n\nmake Context readonly (@gcanti)\n\nInternal\n\noptimizations, #137 (@gcanti, @sledorze)\n\n\n\n\n1.0.3\n\nInternal\n\noptimizations, #134 (@gcanti, @sledorze)\n\n\n\n\n1.0.2\n\nBug Fix\n\nfix OutputOfPartialProps name (@gcanti)\n\n\n\n\n1.0.1\n\nBug Fix\n\nfix AnyType by extending Type<any> (@gcanti)\n\n\n\n\n1.0.0\n\nBreaking Change\n\nupgrade to fp-ts@1.0.0\nsee https://github.com/gcanti/io-ts/pull/112 (@gcanti)\n\n\n\n\n0.9.8\n\nNew Feature\n\nadd decode and deprecate top level validate (@gcanti)\n\nInternal\n\nwhen checking validations use methods instead of top level functions (@gcanti)\n\n\n\n\n0.9.7\n\nNew Feature\n\nadd taggedUnion combinator (@gcanti, @sledorze)\n\n\n\n\n0.9.6\n\nNew Feature\n\nrecursive combinator\n\nadd support for mutually recursive types, closes #114 (@gcanti)\nmake it safer: RT now must extend Type<mixed, A> (@gcanti)\n\n\n\n\n\n0.9.5\n\nNew Feature\n\nadd mixed type (@gcanti)\nreplace any with mixed in all input type parameters (@gcanti)\n-export class StringType extends Type<any, string> {\n+export class StringType extends Type<mixed, string> {\n}\n\n\n\n\n0.9.4\n\nBug Fix\n\nstrict: should succeed validating an undefined field, closes #106 (@gcanti)\n\n\n\n\n0.9.3\n\nBug Fix\n\nrevert 37c74a5e2038de063a950f9ba8d18b1f132ef450, closes #8 (@gcanti)\n\n\n\n\n0.9.2\n\nNew Feature\n\nadd Decoder / Encoder interfaces (@sledorze, @gcanti)\n\nInternal\n\nperf optimizations (@sledorze, @gcanti)\n\n\n\n\n0.9.1\n\nBug Fix\n\nmake all classes “dumb”, fix #95 (@gcanti)\n\n\n\n\n0.9.0\n\nBreaking Change\n\nremove t.map and t.mapWithName (in general doesn’t look serializable, needs more investigation)\nremove t.prism (in general doesn’t look serializable, needs more investigation)\nchange Type from interface to class and add S type parameter\n\nremove t._A\n\nadd Type#serialize\nadd Type#is (in order to serialize unions and while we’re at it, looks useful anyway)\nremove t.is (now that there’s Type#is is misleading)\n\nExperimental\n\nadd Flowtype support (@gcanti)\n\n\n\n\n0.8.2\n\nNew Feature\n\nadd object type, closes #86 (@gcanti)\n\n\n\n\n0.8.1\n\nNew Feature\n\nadd strict combinator, closes #84 (@phiresky, @gcanti)\n\n\n\n\n0.8.0\n\nBreaking Change\n\nupgrade fp-ts dependency (@gcanti)\n\n\n\n\n0.7.2\n\nBug Fix\n\ntag recursive types, fix #80 (@gcanti)\n\n\n\n\n0.7.1\n\nBug Fix\n\nincorrect compile time type for dictionary, fix #75 (@gcanti)\n\n\n\n\n0.7.0\n\nBreaking Change\n\nupgrade to latest fp-ts (0.5.1) (@gcanti)\n\n\n\n\n0.6.2\n\nNew Feature\n\nadd aliases for null and interface, closes #63 (@gcanti)\n\n\n\n\n0.6.1\n\nInternal\n\nhandle latest fp-ts (0.4.3) (@gcanti)\n\n\n\n\n0.6.0\n\nBreaking Change\n\nupgrade to latest fp-ts (0.4.0) (@gcanti)\n\nInternal\n\nallow for infinite unions (@gcanti)\n\n\n\n\n0.5.1\n\nBug Fix\n\nexport and rename interfaceType to _interface, fix #57 (@gcanti)\n\n\n\n\n0.5.0\n\nBreaking Change\n\nType is now an interface\ntypes no more own a is method, use t.is instead\nunions no more own a fold method\nReporter, PathReporter, ThrowReporter are now top level modules\n\n\n\n\n0.4.0\n\nBreaking Change\n\nupgrade to latest fp-ts (io-ts APIs are not changed though) (@gcanti)\ndrop lib-jsnext folder\n\n\n\n\n0.3.2\n\nBug Fix\n\nremove excess overloadings, fix #43 (@gcanti)\n\n\n\n\n0.3.1\n\nNew Feature\n\nadd mapWithName and Functor instance, fix #37 (@gcanti)\nadd prism combinator, fix #41 (@gcanti)\n\n\n\n\n0.3.0\nThis is a breaking change only if you are using fp-ts APIs\n\nBreaking Change\n\nupgrade to latest fp-ts v0.2 (@gcanti)\n\n\n\n\n0.2.3\n\nInternal\n\nupgrade to fp-ts v0.1 (@gcanti)\n\n\n\n\n0.2.2\n\nNew Feature\n\nadd partial combinator (makes optional props possible)\nadd readonly combinator (values are not frozen in production)\nadd readonlyArray combinator (values are not frozen in production)\nadd never type\n\nBreaking Changes\n\nremove maybe combinator, can be defined in userland as\nexport function maybe<RT extends t.Any>(\n  type: RT,\n  name?: string\n): t.UnionType<[RT, typeof t.null], t.TypeOf<RT> | null> {\n  return t.union([type, t.null], name)\n}\n\nPolish\n\nexport pathReporterFailure function from default reporters\n\nBug Fix\n\nrevert pruning excess properties (see https://github.com/gcanti/io-ts/pull/27 for context)\nrevert intersection combinator accepting only InterfaceTypes\n\nExperimental\n\nPattern matching / catamorphism for unions\n\n\n\n\n0.1.0\n\nNew Feature\n\nadd support for jsnext\nadd Integer type\n\nBreaking Changes\n\nt.Object type. Renamed to t.Dictionary, now accepts arrays so is fully equivalent to { [key: string]: any }.\nt.instanceOf combinator. Removed.\nt.object combinator. Renamed to t.interface. ObjectType to InterfaceType. Excess properties are now pruned.\nmapping combinator. Renamed to dictionary. MappingType to DictionaryType.\nintersection combinator. Due to the new excess property pruning in t.interface now only accept InterfaceTypes.\nAPI isSuccess removed, use either.isRight instead\nAPI isFailure removed, use either.isLeft instead\nAPI fromValidation removed\n\n\n\n\n0.0.2\n\nBug Fix\n\nreverse overloading definitions for unions, intersections and tuples, fix inference bug\n\n\n\n\n0.0.1\nInitial release"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.8.0-2018-08-05",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.8.0-2018-08-05",
    "title": "3327 Research",
    "section": "v0.8.0 / 2018-08-05",
    "text": "v0.8.0 / 2018-08-05\n\nAdded\n\nTypeScript definitions.\n\n\n\nChanged\n\nthrow error if update after finalize"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.7.0-2017-12-01",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.7.0-2017-12-01",
    "title": "3327 Research",
    "section": "v0.7.0 / 2017-12-01",
    "text": "v0.7.0 / 2017-12-01\n\nAdded\n\nAMD support.\nsupport for web worker. #13\n\n\n\nChanged\n\nthrow error if input type is incorrect when cSHAKE and KMAC.\nfreeze hash after finalize."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.6.1-2017-07-03",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.6.1-2017-07-03",
    "title": "3327 Research",
    "section": "v0.6.1 / 2017-07-03",
    "text": "v0.6.1 / 2017-07-03\n\nFixed\n\nTypo on variable kmac_256 type definition. #12"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.6.0-2017-06-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.6.0-2017-06-15",
    "title": "3327 Research",
    "section": "v0.6.0 / 2017-06-15",
    "text": "v0.6.0 / 2017-06-15\n\nAdded\n\ncSHAKE method.\nKMAC method.\nalias methods without underscore like shake128, keccak512.\n\n\n\nChanged\n\nthrow error if input type is incorrect."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.5.7-2016-12-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.5.7-2016-12-30",
    "title": "3327 Research",
    "section": "v0.5.7 / 2016-12-30",
    "text": "v0.5.7 / 2016-12-30\n\nFixed\n\nArrayBuffer detection in old browsers."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.5.6-2016-12-29",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.5.6-2016-12-29",
    "title": "3327 Research",
    "section": "v0.5.6 / 2016-12-29",
    "text": "v0.5.6 / 2016-12-29\n\nFixed\n\nArrayBuffer dosen’t work in Webpack."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.5.5-2016-09-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.5.5-2016-09-26",
    "title": "3327 Research",
    "section": "v0.5.5 / 2016-09-26",
    "text": "v0.5.5 / 2016-09-26\n\nAdded\n\nTypeScript support.\nArrayBuffer method.\n\n\n\nDeprecated\n\nBuffer method."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.5.4-2016-09-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.5.4-2016-09-12",
    "title": "3327 Research",
    "section": "v0.5.4 / 2016-09-12",
    "text": "v0.5.4 / 2016-09-12\n\nFixed\n\nCommonJS detection."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.5.3-2016-09-08",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.5.3-2016-09-08",
    "title": "3327 Research",
    "section": "v0.5.3 / 2016-09-08",
    "text": "v0.5.3 / 2016-09-08\n\nAdded\n\nSome missing files to npm package."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.5.2-2016-06-06",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.5.2-2016-06-06",
    "title": "3327 Research",
    "section": "v0.5.2 / 2016-06-06",
    "text": "v0.5.2 / 2016-06-06\n\nFixed\n\nShake output incorrect in the special length."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.5.1-2015-10-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.5.1-2015-10-27",
    "title": "3327 Research",
    "section": "v0.5.1 / 2015-10-27",
    "text": "v0.5.1 / 2015-10-27\n\nFixed\n\nVersion in package.json and bower.json."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.5.0-2015-09-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.5.0-2015-09-23",
    "title": "3327 Research",
    "section": "v0.5.0 / 2015-09-23",
    "text": "v0.5.0 / 2015-09-23\n\nAdded\n\nHash object with create/update interface."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.4.1-2015-09-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.4.1-2015-09-18",
    "title": "3327 Research",
    "section": "v0.4.1 / 2015-09-18",
    "text": "v0.4.1 / 2015-09-18\n\nAdded\n\nInteger array output.\n\n\n\nFixed\n\nShake output incorrect when it’s greater than 1088."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.4.0-2015-09-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.4.0-2015-09-17",
    "title": "3327 Research",
    "section": "v0.4.0 / 2015-09-17",
    "text": "v0.4.0 / 2015-09-17\n\nAdded\n\nArrayBuffer output.\nShake alogirthms."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.3.1-2015-05-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.3.1-2015-05-22",
    "title": "3327 Research",
    "section": "v0.3.1 / 2015-05-22",
    "text": "v0.3.1 / 2015-05-22\n\nFixed\n\nSome bugs."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.3.0-2015-05-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.3.0-2015-05-21",
    "title": "3327 Research",
    "section": "v0.3.0 / 2015-05-21",
    "text": "v0.3.0 / 2015-05-21\n\nAdded\n\nInteger array input.\nArrayBuffer input."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.2.0-2015-04-04",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.2.0-2015-04-04",
    "title": "3327 Research",
    "section": "v0.2.0 / 2015-04-04",
    "text": "v0.2.0 / 2015-04-04\n\nAdded\n\nNIST’s May 2014 SHA-3 version.\n\n\n\nChanged\n\nRename original methods to keccak."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.1.2-2015-02-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.1.2-2015-02-27",
    "title": "3327 Research",
    "section": "v0.1.2 / 2015-02-27",
    "text": "v0.1.2 / 2015-02-27\n\nChanged\n\nImprove performance."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.1.1-2015-02-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.1.1-2015-02-26",
    "title": "3327 Research",
    "section": "v0.1.1 / 2015-02-26",
    "text": "v0.1.1 / 2015-02-26\n\nChanged\n\nImprove performance."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.1.0-2015-02-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/js-sha3/CHANGELOG.html#v0.1.0-2015-02-23",
    "title": "3327 Research",
    "section": "v0.1.0 / 2015-02-23",
    "text": "v0.1.0 / 2015-02-23\n\nAdded\n\nFirst version implementation."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-supports/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-supports/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright © 2019-present Contributors.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-supports/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-supports/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "1.0.1 - 2019-10-13",
    "text": "1.0.1 - 2019-10-13\n\nAdded\n\nDocument format of additionalMethods (192bc9e) (@vweevers)\n\n\n\nFixed\n\nClone additionalMethods to prevent mutation (#4) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-supports/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-supports/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "1.0.0 - 2019-09-22",
    "text": "1.0.0 - 2019-09-22\n:seedling: Initial release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-supports/CONTRIBUTORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-supports/CONTRIBUTORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "Contributors\n\n\n\nName\nGitHub\nSocial\n\n\n\n\nVincent Weevers\n@vweevers\n@vweevers@twitter"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/buffer-from/readme.html#installation",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/buffer-from/readme.html#installation",
    "title": "3327 Research",
    "section": "Installation",
    "text": "Installation\nnpm install --save buffer-from"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/buffer-from/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/buffer-from/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nconst bufferFrom = require('buffer-from')\n\nconsole.log(bufferFrom([1, 2, 3, 4]))\n//=> <Buffer 01 02 03 04>\n\nconst arr = new Uint8Array([1, 2, 3, 4])\nconsole.log(bufferFrom(arr.buffer, 1, 2))\n//=> <Buffer 02 03>\n\nconsole.log(bufferFrom('test', 'utf8'))\n//=> <Buffer 74 65 73 74>\n\nconst buf = bufferFrom('test')\nconsole.log(bufferFrom(buf))\n//=> <Buffer 74 65 73 74>"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/buffer-from/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/buffer-from/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nbufferFrom(array)\n\narray <Array>\n\nAllocates a new Buffer using an array of octets.\n\n\nbufferFrom(arrayBuffer[, byteOffset[, length]])\n\narrayBuffer <ArrayBuffer> The .buffer property of a TypedArray or ArrayBuffer\nbyteOffset <Integer> Where to start copying from arrayBuffer. Default: 0\nlength <Integer> How many bytes to copy from arrayBuffer. Default: arrayBuffer.length - byteOffset\n\nWhen passed a reference to the .buffer property of a TypedArray instance, the newly created Buffer will share the same allocated memory as the TypedArray.\nThe optional byteOffset and length arguments specify a memory range within the arrayBuffer that will be shared by the Buffer.\n\n\nbufferFrom(buffer)\n\nbuffer <Buffer> An existing Buffer to copy data from\n\nCopies the passed buffer data onto a new Buffer instance.\n\n\nbufferFrom(string[, encoding])\n\nstring <String> A string to encode.\nencoding <String> The encoding of string. Default: 'utf8'\n\nCreates a new Buffer containing the given JavaScript string string. If provided, the encoding parameter identifies the character encoding of string."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/buffer-from/readme.html#see-also",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/buffer-from/readme.html#see-also",
    "title": "3327 Research",
    "section": "See also",
    "text": "See also\n\nbuffer-alloc A ponyfill for Buffer.alloc\nbuffer-alloc-unsafe A ponyfill for Buffer.allocUnsafe"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "[3.0.0] - 2018-04-08",
    "text": "[3.0.0] - 2018-04-08\nv3.0 is a complete refactor, resulting in a faster, smaller codebase, with fewer deps, and a more accurate parser and compiler.\nBreaking Changes\n\nThe undocumented .makeRe method was removed\n\nNon-breaking changes\n\nCaching was removed"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "2.3.2 - 2018-04-08",
    "text": "2.3.2 - 2018-04-08\n\nstart refactoring\ncover sets\nbetter range handling"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "2.3.1 - 2018-02-17",
    "text": "2.3.1 - 2018-02-17\n\nRemove unnecessary escape in Regex. (#14)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "2.3.0 - 2017-10-19",
    "text": "2.3.0 - 2017-10-19\n\nminor code reorganization\noptimize regex\nexpose maxLength option"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "2.2.1 - 2017-05-30",
    "text": "2.2.1 - 2017-05-30\n\ndon’t condense when braces contain extglobs"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "2.2.0 - 2017-05-28",
    "text": "2.2.0 - 2017-05-28\n\nensure word boundaries are preserved\nfixes edge case where extglob characters precede a brace pattern"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "2.1.1 - 2017-04-27",
    "text": "2.1.1 - 2017-04-27\n\nuse snapdragon-node\nhandle edge case\noptimizations, lint"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "2.0.4 - 2017-04-11",
    "text": "2.0.4 - 2017-04-11\n\npass opts to compiler\nminor optimization in create method\nre-write parser handlers to remove negation regex"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "2.0.3 - 2016-12-10",
    "text": "2.0.3 - 2016-12-10\n\nuse split-string\nclear queue at the end\nadds sequences example\nadd unit tests"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "2.0.2 - 2016-10-21",
    "text": "2.0.2 - 2016-10-21\n\nfix comma handling in nested extglobs"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "2.0.1 - 2016-10-20",
    "text": "2.0.1 - 2016-10-20\n\nadd comments\nmore tests, ensure quotes are stripped"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "2.0.0 - 2016-10-19",
    "text": "2.0.0 - 2016-10-19\n\ndon’t expand braces inside character classes\nadd quantifier pattern"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "1.8.5 - 2016-05-21",
    "text": "1.8.5 - 2016-05-21\n\nRefactor (#10)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "1.8.4 - 2016-04-20",
    "text": "1.8.4 - 2016-04-20\n\nfixes https://github.com/jonschlinkert/micromatch/issues/66"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "1.8.0 - 2015-03-18",
    "text": "1.8.0 - 2015-03-18\n\nadds exponent examples, tests\nfixes the first example in https://github.com/jonschlinkert/micromatch/issues/38"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "1.6.0 - 2015-01-30",
    "text": "1.6.0 - 2015-01-30\n\noptimizations, bash mode:\nimprove path escaping"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "1.5.0 - 2015-01-28",
    "text": "1.5.0 - 2015-01-28\n\nMerge pull request #5 from eush77/lib-files"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "1.4.0 - 2015-01-24",
    "text": "1.4.0 - 2015-01-24\n\nadd extglob tests\nexternalize exponent function\nbetter whitespace handling"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "1.3.0 - 2015-01-24",
    "text": "1.3.0 - 2015-01-24\n\nmake regex patterns explicity"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "1.1.0 - 2015-01-11",
    "text": "1.1.0 - 2015-01-11\n\ndon’t create a match group with makeRe"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "1.0.0 - 2014-12-23",
    "text": "1.0.0 - 2014-12-23\n\nMerge commit ‘97b05f5544f8348736a8efaecf5c32bbe3e2ad6e’\nsupport empty brace syntax\nbetter bash coverage\nbetter support for regex strings"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "0.1.4 - 2014-11-14",
    "text": "0.1.4 - 2014-11-14\n\nimprove recognition of bad args, recognize mismatched argument types\nsupport escaping\nremove pathname-expansion\nsupport whitespace in patterns"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/braces/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "[0.1.0]",
    "text": "[0.1.0]\n\nfirst commit"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "1.3.1",
    "text": "1.3.1\n\nupdate deps\nupdate travis"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.3.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.3.0",
    "title": "3327 Research",
    "section": "v1.3.0",
    "text": "v1.3.0\n\nAdd nothrow option to which.sync\nupdate tap"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.14",
    "title": "3327 Research",
    "section": "v1.2.14",
    "text": "v1.2.14\n\nappveyor: drop node 5 and 0.x\ntravis-ci: add node 6, drop 0.x"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.13",
    "title": "3327 Research",
    "section": "v1.2.13",
    "text": "v1.2.13\n\ntest: Pass missing option to pass on windows\nupdate tap\nupdate isexe to 2.0.0\nneveragain.tech pledge request"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.12",
    "title": "3327 Research",
    "section": "v1.2.12",
    "text": "v1.2.12\n\nRemoved unused require"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.11",
    "title": "3327 Research",
    "section": "v1.2.11",
    "text": "v1.2.11\n\nPrevent changelog script from being included in package"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.10",
    "title": "3327 Research",
    "section": "v1.2.10",
    "text": "v1.2.10\n\nUse env.PATH only, not env.Path"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.9",
    "title": "3327 Research",
    "section": "v1.2.9",
    "text": "v1.2.9\n\nfix for paths starting with ../\nRemove unused is-absolute module"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.8",
    "title": "3327 Research",
    "section": "v1.2.8",
    "text": "v1.2.8\n\nbullet items in changelog that contain (but don’t start with) #"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.7",
    "title": "3327 Research",
    "section": "v1.2.7",
    "text": "v1.2.7\n\nstrip ‘update changelog’ changelog entries out of changelog"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.6",
    "title": "3327 Research",
    "section": "v1.2.6",
    "text": "v1.2.6\n\nmake the changelog bulleted"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.5",
    "title": "3327 Research",
    "section": "v1.2.5",
    "text": "v1.2.5\n\nmake a changelog, and keep it up to date\ndon’t include tests in package\nProperly handle relative-path executables\nappveyor\nAttach error code to Not Found error\nMake tests pass on Windows"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.4",
    "title": "3327 Research",
    "section": "v1.2.4",
    "text": "v1.2.4\n\nFix typo"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.3",
    "title": "3327 Research",
    "section": "v1.2.3",
    "text": "v1.2.3\n\nupdate isexe, fix regression in pathExt handling"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.2",
    "title": "3327 Research",
    "section": "v1.2.2",
    "text": "v1.2.2\n\nupdate deps, use isexe module, test windows"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.1",
    "title": "3327 Research",
    "section": "v1.2.1",
    "text": "v1.2.1\n\nSometimes windows PATH entries are quoted\nFixed a bug in the check for group and user mode bits. This bug was introduced during refactoring for supporting strict mode.\ndoc cli"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.2.0",
    "title": "3327 Research",
    "section": "v1.2.0",
    "text": "v1.2.0\n\nAdd support for opt.all and -as cli flags\ntest the bin\nupdate travis\nAllow checking for multiple programs in bin/which\ntap 2"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.1.2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.1.2",
    "title": "3327 Research",
    "section": "v1.1.2",
    "text": "v1.1.2\n\ntravis\nRefactored and fixed undefined error on Windows\nSupport strict mode"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.1.1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.1.1",
    "title": "3327 Research",
    "section": "v1.1.1",
    "text": "v1.1.1\n\ntest +g exes against secondary groups, if available\nUse windows exe semantics on cygwin & msys\ncwd should be first in path on win32, not last\nHandle lower-case ‘env.Path’ on Windows\nUpdate docs\nuse single-quotes"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.1.0",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.1.0",
    "title": "3327 Research",
    "section": "v1.1.0",
    "text": "v1.1.0\n\nAdd tests, depend on is-absolute"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.0.9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.0.9",
    "title": "3327 Research",
    "section": "v1.0.9",
    "text": "v1.0.9\n\nwhich.js: root is allowed to execute files owned by anyone"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.0.8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.0.8",
    "title": "3327 Research",
    "section": "v1.0.8",
    "text": "v1.0.8\n\ndon’t use graceful-fs"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.0.7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.0.7",
    "title": "3327 Research",
    "section": "v1.0.7",
    "text": "v1.0.7\n\nadd license to package.json"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.0.6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#v1.0.6",
    "title": "3327 Research",
    "section": "v1.0.6",
    "text": "v1.0.6\n\nisc license"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "1.0.5",
    "text": "1.0.5\n\nAwful typo"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "1.0.4",
    "text": "1.0.4\n\nTest for path absoluteness properly\nwin: Allow ’’ as a pathext if cmd has a . in it"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "1.0.3",
    "text": "1.0.3\n\nRemove references to execPath\nMake which.sync() work on Windows by honoring the PATHEXT variable.\nMake isExe() always return true on Windows.\nMIT"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "1.0.2",
    "text": "1.0.2\n\nOnly files can be exes"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/which/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "1.0.1",
    "text": "1.0.1\n\nRespect the PATHEXT env for win32 support\nshould 0755 the bin\nbinary\nguts\npackage\n1st"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright © 2012-present Contributors.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "9.0.2 - 2020-06-26",
    "text": "9.0.2 - 2020-06-26\n\nChanged\n\nUpgrade hallmark devDependency from ^0.1.0 to ^2.0.0 (#53, #56) (@vweevers)\nUpgrade standard devDependency from ^12.0.0 to ^14.0.0 (#52, #55) (@vweevers)\nUpgrade nyc devDependency from ^13.2.0 to ^14.0.0 (#50) (@vweevers)\n\n\n\nFixed\n\nAdd buffer dependency for browsers (#58) (@hugomrdias)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "9.0.1 - 2019-04-01",
    "text": "9.0.1 - 2019-04-01\n\nChanged\n\nUpgrade standard devDependency from ^11.0.1 to ^12.0.0 (#38) (@ralphtheninja)\nUpdate description in README and package.json (#47) (@vweevers)\nApply common project tweaks (#39, #40, #41) (@vweevers)\nTweak copyright year for less maintenance (79d2d02) (@ralphtheninja)\n\n\n\nAdded\n\nAdd nyc and coveralls (#36, #44) (@ralphtheninja, @vweevers)\nAdd CHANGELOG.md and UPGRADING.md (#47) (@vweevers)\n\n\n\nRemoved\n\nRemove node 9 from travis (ffe3f92) (@ralphtheninja)\nRemove experimental typings (1cfd23f) (@ralphtheninja)\n\n\n\nFixed\n\nFix subtests by adding t.plan() (#46) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "9.0.0 - 2018-05-12",
    "text": "9.0.0 - 2018-05-12\n\nChanged\n\nUpdate README (#31) (@ralphtheninja)\n\n\n\nAdded\n\nAdd standard (#29) (@ralphtheninja)\nAdd node 9 and 10 (9476e58) (@ralphtheninja)\n\n\n\nRemoved\n\nDrop node 0.12, 4, 5 and 7 (9476e58, #32) (@ralphtheninja)\n\n\n\nFixed\n\nFix constructor to work without new (#30) (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "8.0.0 - 2017-10-21",
    "text": "8.0.0 - 2017-10-21\n\nChanged\n\nRevert “fix utf-8 encoding returning buffers” (#23) (@ralphtheninja)\n\n\n\nAdded\n\nAdd badges to README and stylize “levelup” (#22) (@vweevers)\nDocument encodings and their format in greater detail (#22) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "7.1.0 - 2017-09-12",
    "text": "7.1.0 - 2017-09-12\n\nChanged\n\nUpdate copyright year from 2015 to 2017 (aceb6ff) (@ralphtheninja)\n\n\n\nAdded\n\nAdd basic typings (#18) (@MeirionHughes)\nAdd node 4, 5, 6, 7 and 8 (5c00a1c) (@ralphtheninja)\n\n\n\nRemoved\n\nDrop node 0.10 and iojs (5c00a1c) (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "7.0.1 - 2017-08-14",
    "text": "7.0.1 - 2017-08-14\n\nAdded\n\nAdd Greenkeeper (#17) (@ralphtheninja)\n\n\n\nFixed\n\nUse identity function consistently (#14) (@dcousens)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "7.0.0 - 2017-01-26",
    "text": "7.0.0 - 2017-01-26\n\nFixed\n\nFix utf-8 encoding returning buffers (#12) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "6.2.0 - 2016-02-24",
    "text": "6.2.0 - 2016-02-24\n\nChanged\n\nRename “id” encoding to “none”, add “id” alias (#10) (@juliangruber)\nUpgrade tape devDependency (#9) (@ralphtheninja)\n\n\n\nAdded\n\nDocument available encodings (#10) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "6.1.0 - 2015-10-21",
    "text": "6.1.0 - 2015-10-21\n\nAdded\n\nFallback to legacy encoding option if valueEncoding is not provided (#8) (@dominictarr)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "6.0.0 - 2015-05-04",
    "text": "6.0.0 - 2015-05-04\n\nChanged\n\nReplace createDecodeStream() with createStreamDecoder() (#6) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "5.5.0 - 2015-04-17",
    "text": "5.5.0 - 2015-04-17\n\nAdded\n\nAdd createDecodeStream() (#5) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "5.4.0 - 2015-04-17",
    "text": "5.4.0 - 2015-04-17\n\nChanged\n\nSimplify encodeLtgt() (24f3817) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "5.3.0 - 2015-04-17",
    "text": "5.3.0 - 2015-04-17\n\nAdded\n\nAdd encodeLtgt() (#4) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "5.2.0 - 2015-03-24",
    "text": "5.2.0 - 2015-03-24\n\nChanged\n\nMake all options optional (4f942eb) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "5.1.0 - 2015-03-24",
    "text": "5.1.0 - 2015-03-24\n\nChanged\n\nMake member options optional (0c98ccb) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "5.0.0 - 2015-03-24",
    "text": "5.0.0 - 2015-03-24\nHistorical Note 4.3.0 was meant to be a major release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "4.3.0 - 2015-03-24",
    "text": "4.3.0 - 2015-03-24\n\nChanged\n\nRewrite (37f103e, 054fb3f, f510a90) (@juliangruber)\n\n\n\nAdded\n\nAdd @ralphtheninja to contributors (dd2b9a0) (@juliangruber)\nAdd travis and licensing (#1) (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "4.2.0 - 2015-03-19",
    "text": "4.2.0 - 2015-03-19\n\nFixed\n\nKeep batch .prefix for level-sublevel (f706482) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "4.1.0 - 2015-03-19",
    "text": "4.1.0 - 2015-03-19\n\nFixed\n\nSet batch encodings to binary if {key,value}AsBuffer is true (bcf6feb) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "4.0.1 - 2015-03-19",
    "text": "4.0.1 - 2015-03-19\n\nFixed\n\nSkip falsy objects in walk (270ea17) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "4.0.0 - 2015-03-19",
    "text": "4.0.0 - 2015-03-19\n\nRemoved\n\nRemove default encoding (28a63b2) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "3.1.0 - 2015-03-19",
    "text": "3.1.0 - 2015-03-19\n\nAdded\n\nAdd experimental Codec class (8a189f4) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "3.0.0 - 2015-03-18",
    "text": "3.0.0 - 2015-03-18\n\nRemoved\n\nRemove encoding option in favor of keyEncoding and valueEncoding (9fed84d) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-23",
    "title": "3327 Research",
    "section": "2.0.1 - 2015-03-18",
    "text": "2.0.1 - 2015-03-18\n\nFixed\n\nFix encoding option to only be an alias for valueEncoding (b4de4d1) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-24",
    "title": "3327 Research",
    "section": "2.0.0 - 2015-03-18",
    "text": "2.0.0 - 2015-03-18\n\nChanged\n\nRemove side effects from batch() (bedaa26, 6f5b373, abef01b) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-25",
    "title": "3327 Research",
    "section": "1.2.1 - 2015-03-18",
    "text": "1.2.1 - 2015-03-18\n\nFixed\n\nFix require statements for {key,value}AsBuffer() (71bf7a5) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-26",
    "title": "3327 Research",
    "section": "1.2.0 - 2015-03-18",
    "text": "1.2.0 - 2015-03-18\n\nAdded\n\nAdd {key,value}AsBuffer() (796a540) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-27",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-27",
    "title": "3327 Research",
    "section": "1.1.0 - 2015-03-18",
    "text": "1.1.0 - 2015-03-18\n\nAdded\n\nAdd decode{Key,Value} (029fbd7) (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-28",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CHANGELOG.html#section-28",
    "title": "3327 Research",
    "section": "1.0.1 - 2015-03-18",
    "text": "1.0.1 - 2015-03-18\n:seedling: Initial release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CONTRIBUTORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/CONTRIBUTORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "Contributors\n\n\n\nName\nGitHub\nSocial\n\n\n\n\nJulian Gruber\n@juliangruber\n@juliangruber@twitter\n\n\nLars-Magnus Skog\n@ralphtheninja\n@ralph@social.weho.st\n\n\nVincent Weevers\n@vweevers\n@vweevers@twitter\n\n\nDominic Tarr\n@dominictarr\n@dominictarr@twitter\n\n\nDaniel Cousens\n@dcousens\n\n\n\nHugo Dias\n\n\n\n\nMeirion Hughes\n@MeirionHughes"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/UPGRADING.html#v9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/UPGRADING.html#v9",
    "title": "3327 Research",
    "section": "v9",
    "text": "v9\nDropped node 0.12, 4, 5 and 7."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/UPGRADING.html#v8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/UPGRADING.html#v8",
    "title": "3327 Research",
    "section": "v8",
    "text": "v8\nPreviously the “utf8” decoder always returned a string. This was a workaround for encoding-down that is no longer needed. The return type now depends on the asBuffer option, which is more optimal."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/UPGRADING.html#v7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/UPGRADING.html#v7",
    "title": "3327 Research",
    "section": "v7",
    "text": "v7\nDropped node 0.10 and iojs."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/UPGRADING.html#v6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/UPGRADING.html#v6",
    "title": "3327 Research",
    "section": "v6",
    "text": "v6\nThe createDecodeStream() method (introduced in the last 5.x version) has been replaced with createStreamDecoder()."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/UPGRADING.html#v5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/UPGRADING.html#v5",
    "title": "3327 Research",
    "section": "v5",
    "text": "v5\nThis is a rewrite of both internals and the public API. Please see the README for details."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/UPGRADING.html#v4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/UPGRADING.html#v4",
    "title": "3327 Research",
    "section": "v4",
    "text": "v4\nRemoved default encoding (“utf8”). If you relied on this behavior you must now define it yourself."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/UPGRADING.html#v3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/UPGRADING.html#v3",
    "title": "3327 Research",
    "section": "v3",
    "text": "v3\nRemoved the encoding option in favor of keyEncoding and valueEncoding. Note: it was partially restored in v6.1.0."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/UPGRADING.html#v2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-codec/UPGRADING.html#v2",
    "title": "3327 Research",
    "section": "v2",
    "text": "v2\nThe function signature of batch() has changed from batch(ops, batchOptions, dbOptions) to batch(ops, optionObjects)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.12.0---2021-12-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.12.0---2021-12-18",
    "title": "3327 Research",
    "section": "v1.12.0 - 2021-12-18",
    "text": "v1.12.0 - 2021-12-18\n\nCommits\n\n[New] add numericSeparator boolean option 2d2d537\n[Robustness] cache more prototype methods 191533d\n[New] ensure an Error’s cause is displayed 53bc2ce\n[Dev Deps] update eslint, @ljharb/eslint-config bc164b6\n[Robustness] cache RegExp.prototype.test a314ab8\n[meta] fix auto-changelog settings 5ed0983"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.11.1---2021-12-05",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.11.1---2021-12-05",
    "title": "3327 Research",
    "section": "v1.11.1 - 2021-12-05",
    "text": "v1.11.1 - 2021-12-05\n\nCommits\n\n[meta] add auto-changelog 7dbdd22\n[actions] reuse common workflows c8823bc\n[Dev Deps] update eslint, @ljharb/eslint-config, safe-publish-latest, tape 7532b12\n[Refactor] use has-tostringtag to behave correctly in the presence of symbol shams 94abb5d\n[actions] update codecov uploader 5ed5102\n[Dev Deps] update eslint, tape 37b2ad2\n[meta] add sideEffects flag d341f90"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.11.0---2021-07-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.11.0---2021-07-12",
    "title": "3327 Research",
    "section": "v1.11.0 - 2021-07-12",
    "text": "v1.11.0 - 2021-07-12\n\nCommits\n\n[New] customInspect: add symbol option, to mimic modern util.inspect behavior e973a6e\n[Dev Deps] update eslint 05f1cb3"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.10.3---2021-05-07",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.10.3---2021-05-07",
    "title": "3327 Research",
    "section": "v1.10.3 - 2021-05-07",
    "text": "v1.10.3 - 2021-05-07\n\nCommits\n\n[Fix] handle core-js Symbol shams 4acfc2c\n[readme] update badges 95c323a\n[Dev Deps] update eslint, @ljharb/eslint-config, aud cb38f48"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.10.2---2021-04-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.10.2---2021-04-17",
    "title": "3327 Research",
    "section": "v1.10.2 - 2021-04-17",
    "text": "v1.10.2 - 2021-04-17\n\nCommits\n\n[Fix] use a robust check for a boxed Symbol 87f12d6"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.10.1---2021-04-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.10.1---2021-04-17",
    "title": "3327 Research",
    "section": "v1.10.1 - 2021-04-17",
    "text": "v1.10.1 - 2021-04-17\n\nCommits\n\n[Fix] use a robust check for a boxed bigint d5ca829"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.10.0---2021-04-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.10.0---2021-04-17",
    "title": "3327 Research",
    "section": "v1.10.0 - 2021-04-17",
    "text": "v1.10.0 - 2021-04-17\n\nCommits\n\n[Tests] increase coverage d8abb8a\n[actions] use node/install instead of node/run; use codecov action 4bfec2e\n[New] respect Symbol.toStringTag on objects 799b58f\n[Fix] do not allow Symbol.toStringTag to masquerade as builtins d6c5b37\n[New] add WeakRef support b6d898e\n[meta] do not publish github action workflow files 918cdfc\n[meta] create FUNDING.yml 0bb5fc5\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, tape 22c8dc0\n[meta] use prepublishOnly script for npm 7+ e52ee09\n[Dev Deps] update eslint 7c4e6fd"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.9.0---2020-11-30",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.9.0---2020-11-30",
    "title": "3327 Research",
    "section": "v1.9.0 - 2020-11-30",
    "text": "v1.9.0 - 2020-11-30\n\nCommits\n\n[Tests] migrate tests to Github Actions d262251\n[New] add enumerable own Symbols to plain object output ee60c03\n[Tests] add passing tests 01ac3e4\n[actions] add “Require Allow Edits” action c2d7746\n[Dev Deps] update eslint, @ljharb/eslint-config, aud, core-js 70058de\n[Fix] hex characters in strings should be uppercased, to match node assert 6ab8faa\n[Tests] run nyc on all tests 4c47372\n[Tests] node 0.8 has an unpredictable property order; fix groups test by removing property f192069\n[New] add enumerable properties to Function inspect result, per node’s assert fd38e1b\n[Tests] fix tests for node < 10, due to regex match groups 2ac6462\n[Dev Deps] update eslint, @ljharb/eslint-config 44b59e2\n[Robustness] cache Symbol.prototype.toString f3c2074\n[Dev Deps] update eslint 9411294\n[meta] require-allow-edits no longer requires an explicit github token 36c0220\n[actions] update rebase checkout action to v2 55a39a6\n[actions] switch Automatic Rebase workflow to pull_request_target event f59fd3c\n[Dev Deps] update eslint a492bec"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.8.0---2020-06-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.8.0---2020-06-18",
    "title": "3327 Research",
    "section": "v1.8.0 - 2020-06-18",
    "text": "v1.8.0 - 2020-06-18\n\nFixed\n\n[New] add indent option #27\n\n\n\nCommits\n\n[Tests] add codecov 4324cbb\n[New] add maxStringLength option b3995cb\n[New] add customInspect option, to disable custom inspect methods 28b9179\n[Tests] add Date and RegExp tests 3b28eca\n[actions] add automatic rebasing / merge commit blocking 0d9c6c0\n[Dev Deps] update eslint, @ljharb/eslint-config, core-js, tape; add aud 7c204f2\n[readme] fix repo URLs, remove testling 34ca9a0\n[Fix] when truncating a deep array, note it as [Array] instead of just [Object] f74c82d\n[Dev Deps] update eslint, @ljharb/eslint-config, tape 1a8a5ea\n[Fix] do not be fooled by a function’s own toString method 7cb5c65\n[patch] indicate explicitly that anon functions are anonymous, to match node 81ebdd4\n[Dev Deps] loosen the core-js dep e7472e8\n[Dev Deps] update tape 699827e\n[meta] add safe-publish-latest c5d2868\n[Dev Deps] update @ljharb/eslint-config 9199501"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.7.0---2019-11-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.7.0---2019-11-10",
    "title": "3327 Research",
    "section": "v1.7.0 - 2019-11-10",
    "text": "v1.7.0 - 2019-11-10\n\nCommits\n\n[Tests] use shared travis-ci configs 19899ed\n[Tests] add linting a00f057\n[Tests] lint last file 2698047\n[Tests] up to node v12.7, v11.15, v10.16, v8.16, v6.17 589e87a\n[New] add support for WeakMap and WeakSet 3ddb3e4\n[meta] clean up license so github can detect it properly 27527bb\n[Tests] cover util.inspect.custom 36d47b9\n[Dev Deps] update eslint, @ljharb/eslint-config, core-js, tape b614eaa\n[Tests] fix coverage thresholds 7b7b176\n[Tests] bigint tests now can run on unflagged node 063af31\n[Refactor] add early bailout to isMap and isSet checks fc51047\n[meta] add funding field 7f9953a\n[Tests] Fix invalid strict-mode syntax with hexadecimal a8b5425\n[Dev Deps] update @ljharb/eslint-config 98df157\nadd copyright to LICENSE bb69fd0\n[Tests] use npx aud in posttest 4838353\n[Tests] move 0.6 to allowed failures, because it won‘t build on travis 1bff32a"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.6.0---2018-05-02",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.6.0---2018-05-02",
    "title": "3327 Research",
    "section": "v1.6.0 - 2018-05-02",
    "text": "v1.6.0 - 2018-05-02\n\nCommits\n\n[New] add support for boxed BigInt primitives 356c66a\n[Tests] up to node v10.0, v9.11, v8.11, v6.14, v4.9 c77b65b\n[New] Add support for upcoming BigInt 1ac548e\n[Tests] run bigint tests in CI with –harmony-bigint flag d31b738\n[Dev Deps] update core-js, tape ff9eff6\n[Docs] fix example to use safer-buffer 48cae12"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.5.0---2017-12-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.5.0---2017-12-25",
    "title": "3327 Research",
    "section": "v1.5.0 - 2017-12-25",
    "text": "v1.5.0 - 2017-12-25\n\nCommits\n\n[New] add quoteStyle option f5a72d2\n[Tests] add more test coverage 30ebe4e\n[Tests] require 0.6 to pass 99a008c"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.4.1---2017-12-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.4.1---2017-12-19",
    "title": "3327 Research",
    "section": "v1.4.1 - 2017-12-19",
    "text": "v1.4.1 - 2017-12-19\n\nCommits\n\n[Tests] up to node v9.3, v8.9, v6.12 6674476\n[Fix] inspect(Object(-0)) should be “Object(-0)”, not “Object(0)” d0a031f"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.4.0---2017-10-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.4.0---2017-10-24",
    "title": "3327 Research",
    "section": "v1.4.0 - 2017-10-24",
    "text": "v1.4.0 - 2017-10-24\n\nCommits\n\n[Tests] add npm run coverage 3b48fb2\n[Tests] remove commented-out osx builds 71e24db\n[New] add support for util.inspect.custom, in node only. 20cca77\n[Tests] up to node v8.6; use nvm install-latest-npm to ensure new npm doesn’t break old node 252952d\n[Tests] up to node v8.8 4aa868d\n[Dev Deps] update core-js, tape 59483d1"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.3.0---2017-07-31",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.3.0---2017-07-31",
    "title": "3327 Research",
    "section": "v1.3.0 - 2017-07-31",
    "text": "v1.3.0 - 2017-07-31\n\nFixed\n\n[Fix] Map/Set: work around core-js bug < v2.5.0 #9\n\n\n\nCommits\n\n[New] add support for arrays with additional object keys 0d19937\n[Tests] up to node v8.2, v7.10, v6.11; fix new npm breaking on older nodes e24784a\nOnly apps should have lockfiles c6faebc\n[Dev Deps] update tape 7345a0a"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.2.2---2017-03-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.2.2---2017-03-24",
    "title": "3327 Research",
    "section": "v1.2.2 - 2017-03-24",
    "text": "v1.2.2 - 2017-03-24\n\nCommits\n\n[Tests] up to node v7.7, v6.10, v4.8; improve test matrix a2ddc15\n[Tests] up to node v7.0, v6.9, v5.12, v4.6, io.js v3.3; improve test matrix a48949f\n[Performance] check for primitive types as early as possible. 3b8092a\n[Refactor] remove unneeded elses. 7255034\n[Refactor] avoid recreating lowbyte function every time. 81edd34\n[Fix] differentiate -0 from 0 521d345\n[Refactor] move object key gathering into separate function aca6265\n[Refactor] consolidate wrapping logic for boxed primitives into a function. 4e440cd\n[Robustness] use typeof instead of comparing to literal undefined 5ca6f60\n[Refactor] consolidate Map/Set notations. 4e576e5\n[Tests] ensure that this function remains anonymous, despite ES6 name inference. 7540ae5\n[Refactor] explicitly coerce Error objects to strings. 7f4ca84\n[Refactor] split up var declarations for debuggability 6f2c11e\n[Robustness] cache Object.prototype.toString df44a20\n[Dev Deps] update tape 3ec714e\n[Dev Deps] update tape beb72d9"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.2.1---2016-04-09",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.2.1---2016-04-09",
    "title": "3327 Research",
    "section": "v1.2.1 - 2016-04-09",
    "text": "v1.2.1 - 2016-04-09\n\nFixed\n\n[Fix] fix Boolean false object inspection. #7"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.2.0---2016-04-09",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.2.0---2016-04-09",
    "title": "3327 Research",
    "section": "v1.2.0 - 2016-04-09",
    "text": "v1.2.0 - 2016-04-09\n\nFixed\n\n[New] add support for inspecting String/Number/Boolean objects. #6\n\n\n\nCommits\n\n[Dev Deps] update tape 742caa2"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.1.0---2015-12-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#v1.1.0---2015-12-14",
    "title": "3327 Research",
    "section": "v1.1.0 - 2015-12-14",
    "text": "v1.1.0 - 2015-12-14\n\nMerged\n\n[New] add ES6 Map/Set support. #4\n\n\n\nFixed\n\n[New] add ES6 Map/Set support. #3\n\n\n\nCommits\n\nUpdate travis.yml to test on bunches of iojs and node versions. 4c1fd65\n[Dev Deps] update tape 88a907e"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "1.0.2 - 2015-08-07",
    "text": "1.0.2 - 2015-08-07\n\nCommits\n\n[Fix] Cache Object.prototype.hasOwnProperty in case it’s deleted later. 1d0075d\n[Dev Deps] Update tape ca8d5d7\ngitignore node_modules since this is a reusable modules. ed41407"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "1.0.1 - 2015-07-19",
    "text": "1.0.1 - 2015-07-19\n\nCommits\n\nMake inspect work with symbol primitives and objects, including in node 0.11 and 0.12. ddf1b94\nbump tape 103d674\nuse newer travis config d497276"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "1.0.0 - 2014-08-05",
    "text": "1.0.0 - 2014-08-05\n\nCommits\n\nerror inspect works properly 260a22d\nseen coverage 57269e8\nhtmlelement instance coverage 397ffe1\nmore element coverage 6905cc2\nfailing test for type errors 385b615\nfn name coverage edc906d\nserver-side element test 362d1d3\ncustom inspect fn e89b0f6\nfixed browser test b530882\ndepth test, matches node 1cfd9e0\nexercise hasOwnProperty path 8d753fb\nmore cases covered for errors c5c46a5\nobj key test case b0eceee\ncoverage for explicit depth param e12b91c"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "0.4.0 - 2014-03-21",
    "text": "0.4.0 - 2014-03-21\n\nCommits\n\npassing lowbyte interpolation test b847511\nlowbyte test 4a2b0e1"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "0.3.1 - 2014-03-04",
    "text": "0.3.1 - 2014-03-04\n\nCommits\n\nsort keys a07b19c"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "0.3.0 - 2014-03-04",
    "text": "0.3.0 - 2014-03-04\n\nCommits\n\n[] and {} instead of [ ] and { } 654c44b"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "0.2.0 - 2014-03-04",
    "text": "0.2.0 - 2014-03-04\n\nCommits\n\nfailing holes test 99cdfad\nregex already work e324033\nfailing undef/null test 1f88a00\nholes in the all example 7d345f3\ncheck for .inspect(), fixes Buffer use-case c3f7546\nfixes for holes ce25f73\nweird null behavior 405c1ea\ntape is actually a devDependency, upgrade 703b0ce\nput date in the example a342219\npassing the null test 4ab737e"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "0.1.3 - 2013-07-26",
    "text": "0.1.3 - 2013-07-26\n\nCommits\n\nspecial isElement() check 882768a\noh right old IEs don’t have indexOf either 36d1275"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "0.1.1 - 2013-07-26",
    "text": "0.1.1 - 2013-07-26\n\nCommits\n\ntests! 4422fd9\nfix for ie<9, doesn’t have hasOwnProperty 6b7d611\nfix for all IEs: no f.name 4e0c2f6\nbadges 5ed0d88"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "0.1.0 - 2013-07-26",
    "text": "0.1.0 - 2013-07-26\n\nCommits\n\n[Function] for functions ad5c485"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "0.0.0 - 2013-07-26",
    "text": "0.0.0 - 2013-07-26\n\nCommits\n\nworking browser example 34be6b6\npackage.json etc cad51f2\ndocs complete b80cce2\ncircular example 4b4a7b9\nstring rep 7afb479"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/readme.html#circular",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/readme.html#circular",
    "title": "3327 Research",
    "section": "circular",
    "text": "circular\nvar inspect = require('object-inspect');\nvar obj = { a: 1, b: [3,4] };\nobj.c = obj;\nconsole.log(inspect(obj));"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/readme.html#dom-element",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/readme.html#dom-element",
    "title": "3327 Research",
    "section": "dom element",
    "text": "dom element\nvar inspect = require('object-inspect');\n\nvar d = document.createElement('div');\nd.setAttribute('id', 'beep');\nd.innerHTML = '<b>wooo</b><i>iiiii</i>';\n\nconsole.log(inspect([ d, { a: 3, b : 4, c: [5,6,[7,[8,[9]]]] } ]));\noutput:\n[ <div id=\"beep\">...</div>, { a: 3, b: 4, c: [ 5, 6, [ 7, [ 8, [ ... ] ] ] ] } ]"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/readme.html#var-s-inspectobj-opts",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object-inspect/readme.html#var-s-inspectobj-opts",
    "title": "3327 Research",
    "section": "var s = inspect(obj, opts={})",
    "text": "var s = inspect(obj, opts={})\nReturn a string s with the string representation of obj up to a depth of opts.depth.\nAdditional options: - quoteStyle: must be “single” or “double”, if present. Default 'single' for strings, 'double' for HTML elements. - maxStringLength: must be 0, a positive integer, Infinity, or null, if present. Default Infinity. - customInspect: When true, a custom inspect method function will be invoked (either undere the util.inspect.custom symbol, or the inspect property). When the string 'symbol', only the symbol method will be invoked. Default true. - indent: must be “, null, or a positive integer. Default null. - numericSeparator: must be a boolean, if present. Default false. If true, all numbers will be printed with numeric separators (eg, 1234.5678 will be printed as '1_234.567_8')"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/LICENSE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/LICENSE.html",
    "title": "3327 Research",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright © 2012-present Contributors.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "5.0.1 - 2019-09-08",
    "text": "5.0.1 - 2019-09-08\n\nFixed\n\nBump level-packager to prevent dedupe (for Level/community#79) (baec173) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "5.0.0 - 2019-09-06",
    "text": "5.0.0 - 2019-09-06\n\nChanged\n\nBreaking: Upgrade memdown from ^4.0.0 to ^5.0.0 (#56) (@vweevers)\nUpgrade hallmark devDependency from ^0.1.0 to ^2.0.0 (#54, #58) (@vweevers)\nUpgrade standard devDependency from ^12.0.0 to ^14.0.0 (#53, #57) (@vweevers)\nUpgrade nyc devDependency from ^13.2.0 to ^14.0.0 (#52) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "4.0.0 - 2019-03-30",
    "text": "4.0.0 - 2019-03-30\n\nChanged\n\nUpgrade memdown from ~3.0.0 to ^4.0.0 (35ccf15) (@vweevers)\nUpgrade level-packager from ~4.0.0 to ^5.0.0 (3f3298e) (@vweevers)\nUpgrade standard devDependency from ^11.0.1 to ^12.0.0 (#45) (@ralphtheninja)\nApply common project tweaks (#47, #48) (@vweevers)\n\n\n\nAdded\n\nAdd nyc and coveralls (#44, #49) (@ralphtheninja, @vweevers)\n\n\n\nRemoved\n\nRemove node 9 (f139c37) (@ralphtheninja)\nRemove contributors from package.json (f09b950) (@vweevers)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "3.0.1 - 2018-06-24",
    "text": "3.0.1 - 2018-06-24\n\nChanged\n\nUpgrade level-packager from ~3.0.0 to ~4.0.0 (@ralphtheninja)\nUse proper version range for tape (@ralphtheninja)\nTweak copyright years for less maintenance\nUse abstract tests from level-packager (@ralphtheninja)\n\n\n\nAdded\n\nAdd standard (@ralphtheninja)\n\n\n\nRemoved\n\nRemove .jshintrc (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "3.0.0 - 2018-05-23",
    "text": "3.0.0 - 2018-05-23\n\nChanged\n\nUpgrade memdown to ~3.0.0 (@ralphtheninja)\nUpgrade level-packager to ~3.0.0 (@ralphtheninja)\n\n\n\nAdded\n\nAdd node 10 to Travis (@ralphtheninja)\nAdd UPGRADING.md (@ralphtheninja)\n\n\n\nRemoved\n\nRemove node 4 from Travis (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "2.0.0 - 2018-02-14",
    "text": "2.0.0 - 2018-02-14\n\nChanged\n\nUpgrade memdown to ~2.0.0 (@ralphtheninja)\nUpgrade level-packager to ~2.1.1 (@ralphtheninja)\nREADME: normalize and tweak style (@ralphtheninja)\nREADME: add node badge (@ralphtheninja)\nSwitch to plain MIT license (@ralphtheninja)\n\n\n\nAdded\n\nTravis: add 9 (@ralphtheninja)\n\n\n\nRemoved\n\nTravis: remove 0.12, 5 and 7 (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "1.0.2 - 2017-11-28",
    "text": "1.0.2 - 2017-11-28\n\nChanged\n\nUpdate repository url in package.json (@juliangruber)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "1.0.1 - 2017-10-04",
    "text": "1.0.1 - 2017-10-04\n\nChanged\n\nUpgrade memdown to ~1.4.1 (@ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "1.0.0 - 2017-08-17",
    "text": "1.0.0 - 2017-08-17\n\nChanged\n\nREADME: update logo and copyright (@ralphtheninja)\nREADME: add Greenkeeper badge (@ralphtheninja)\nREADME: update copyright year to 2017 (@ralphtheninja)\nUpgrade memdown to ~1.2.4 (@ralphtheninja)\nUpgrade level-packager to ~1.2.1 (@ralphtheninja)\n\n\n\nAdded\n\nTravis: add 4, 5, 6, 7 and 8 (@ralphtheninja)\n\n\n\nRemoved\n\nTravis: remove 0.8 and 0.10 (@ghostbar, @ralphtheninja)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "0.18.0 - 2013-12-05",
    "text": "0.18.0 - 2013-12-05\n\nChanged\n\nUpgrade memdown to ~0.6.0 (@rvagg)\nUpgrade level-packager to ~0.18.0 (@rvagg)\n\n\n\nAdded\n\nAdd Travis (@rvagg)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "0.17.0 - 2013-10-12",
    "text": "0.17.0 - 2013-10-12\n:seedling: Initial release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CONTRIBUTORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/CONTRIBUTORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "Contributors\n\n\n\nName\nGitHub\nSocial\n\n\n\n\nLars-Magnus Skog\n@ralphtheninja\n@ralph@social.weho.st\n\n\nVincent Weevers\n@vweevers\n@vweevers@twitter\n\n\nRod Vagg\n@rvagg\n@rvagg@twitter\n\n\nJulian Gruber\n@juliangruber\n@juliangruber@twitter\n\n\nJose-Luis Rivas\n@ghostbar"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/UPGRADING.html#v5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/UPGRADING.html#v5",
    "title": "3327 Research",
    "section": "v5",
    "text": "v5\nUpgraded to memdown@5.0.0:\n\nSupport of keys & values other than strings and Buffers has been dropped. Internally memdown now stores keys & values as Buffers which solves a number of compatibility issues (Level/memdown#186). If you pass in a key or value that isn’t a string or Buffer, it will be irreversibly stringified."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/UPGRADING.html#v4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/UPGRADING.html#v4",
    "title": "3327 Research",
    "section": "v4",
    "text": "v4\nUpgraded to memdown@4.0.0 and (through level-packager@5) levelup@4 and encoding-down@6. Please follow these links for more information. A quick summary: range options (e.g. gt) are now serialized the same as keys, { gt: undefined } is not the same as {}, nullish values are now rejected and streams are backed by readable-stream@3.\nSupport of IE10 and node 9 has been dropped."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/UPGRADING.html#v3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/level-mem/UPGRADING.html#v3",
    "title": "3327 Research",
    "section": "v3",
    "text": "v3\nDropped support for node 4. No other breaking changes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/readable-stream/GOVERNANCE.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/readable-stream/GOVERNANCE.html",
    "title": "3327 Research",
    "section": "",
    "text": "Streams Working Group\nThe Node.js Streams is jointly governed by a Working Group (WG) that is responsible for high-level guidance of the project.\nThe WG has final authority over this project including:\n\nTechnical direction\nProject governance and process (including this policy)\nContribution policy\nGitHub repository hosting\nConduct guidelines\nMaintaining the list of additional Collaborators\n\nFor the current list of WG members, see the project README.md.\n\n\nCollaborators\nThe readable-stream GitHub repository is maintained by the WG and additional Collaborators who are added by the WG on an ongoing basis.\nIndividuals making significant and valuable contributions are made Collaborators and given commit-access to the project. These individuals are identified by the WG and their addition as Collaborators is discussed during the WG meeting.\nNote: If you make a significant contribution and are not considered for commit-access log an issue or contact a WG member directly and it will be brought up in the next WG meeting.\nModifications of the contents of the readable-stream repository are made on a collaborative basis. Anybody with a GitHub account may propose a modification via pull request and it will be considered by the project Collaborators. All pull requests must be reviewed and accepted by a Collaborator with sufficient expertise who is able to take full responsibility for the change. In the case of pull requests proposed by an existing Collaborator, an additional Collaborator is required for sign-off. Consensus should be sought if additional Collaborators participate and there is disagreement around a particular modification. See Consensus Seeking Process below for further detail on the consensus model used for governance.\nCollaborators may opt to elevate significant or controversial modifications, or modifications that have not found consensus to the WG for discussion by assigning the WG-agenda tag to a pull request or issue. The WG should serve as the final arbiter where required.\nFor the current list of Collaborators, see the project README.md.\n\n\nWG Membership\nWG seats are not time-limited. There is no fixed size of the WG. However, the expected target is between 6 and 12, to ensure adequate coverage of important areas of expertise, balanced with the ability to make decisions efficiently.\nThere is no specific set of requirements or qualifications for WG membership beyond these rules.\nThe WG may add additional members to the WG by unanimous consensus.\nA WG member may be removed from the WG by voluntary resignation, or by unanimous consensus of all other WG members.\nChanges to WG membership should be posted in the agenda, and may be suggested as any other agenda item (see “WG Meetings” below).\nIf an addition or removal is proposed during a meeting, and the full WG is not in attendance to participate, then the addition or removal is added to the agenda for the subsequent meeting. This is to ensure that all members are given the opportunity to participate in all membership decisions. If a WG member is unable to attend a meeting where a planned membership decision is being made, then their consent is assumed.\nNo more than 1/3 of the WG members may be affiliated with the same employer. If removal or resignation of a WG member, or a change of employment by a WG member, creates a situation where more than 1/3 of the WG membership shares an employer, then the situation must be immediately remedied by the resignation or removal of one or more WG members affiliated with the over-represented employer(s).\n\n\nWG Meetings\nThe WG meets occasionally on a Google Hangout On Air. A designated moderator approved by the WG runs the meeting. Each meeting should be published to YouTube.\nItems are added to the WG agenda that are considered contentious or are modifications of governance, contribution policy, WG membership, or release process.\nThe intention of the agenda is not to approve or review all patches; that should happen continuously on GitHub and be handled by the larger group of Collaborators.\nAny community member or contributor can ask that something be added to the next meeting’s agenda by logging a GitHub Issue. Any Collaborator, WG member or the moderator can add the item to the agenda by adding the WG-agenda tag to the issue.\nPrior to each WG meeting the moderator will share the Agenda with members of the WG. WG members can add any items they like to the agenda at the beginning of each meeting. The moderator and the WG cannot veto or remove items.\nThe WG may invite persons or representatives from certain projects to participate in a non-voting capacity.\nThe moderator is responsible for summarizing the discussion of each agenda item and sends it as a pull request after the meeting.\n\n\nConsensus Seeking Process\nThe WG follows a Consensus Seeking decision-making model.\nWhen an agenda item has appeared to reach a consensus the moderator will ask “Does anyone object?” as a final call for dissent from the consensus.\nIf an agenda item cannot reach a consensus a WG member can call for either a closing vote or a vote to table the issue to the next meeting. The call for a vote must be seconded by a majority of the WG or else the discussion will continue. Simple majority wins.\nNote that changes to WG membership require a majority consensus. See “WG Membership” above."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/readable-stream/CONTRIBUTING.html#moderation-policy",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/readable-stream/CONTRIBUTING.html#moderation-policy",
    "title": "3327 Research",
    "section": "Moderation Policy",
    "text": "Moderation Policy\nThe Node.js Moderation Policy applies to this WG."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/readable-stream/CONTRIBUTING.html#code-of-conduct",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/readable-stream/CONTRIBUTING.html#code-of-conduct",
    "title": "3327 Research",
    "section": "Code of Conduct",
    "text": "Code of Conduct\nThe Node.js Code of Conduct applies to this WG."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/locate-path/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/locate-path/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install --save locate-path"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/locate-path/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/locate-path/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nHere we find the first file that exists on disk, in array order.\nconst locatePath = require('locate-path');\n\nconst files = [\n    'unicorn.png',\n    'rainbow.png', // only this one actually exists on disk\n    'pony.png'\n];\n\nlocatePath(files).then(foundPath => {\n    console.log(foundPath);\n    //=> 'rainbow'\n});"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/locate-path/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/locate-path/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nlocatePath(input, options)\nReturns a Promise for the first path that exists or undefined if none exists.\n\ninput\nType: Iterable<string>\nPaths to check.\n\n\noptions\nType: Object\n\nconcurrency\nType: number Default: Infinity Minimum: 1\nNumber of concurrently pending promises.\n\n\npreserveOrder\nType: boolean Default: true\nPreserve input order when searching.\nDisable this to improve performance if you don’t care about the order.\n\n\ncwd\nType: string Default: process.cwd()\nCurrent working directory.\n\n\n\n\nlocatePath.sync(input, options)\nReturns the first path that exists or undefined if none exists.\n\ninput\nType: Iterable<string>\nPaths to check.\n\n\noptions\nType: Object\n\ncwd\nSame as above."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/locate-path/readme.html#related",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/locate-path/readme.html#related",
    "title": "3327 Research",
    "section": "Related",
    "text": "Related\n\npath-exists - Check if a path exists"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/locate-path/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/locate-path/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Sindre Sorhus"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object.assign/CHANGELOG.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/object.assign/CHANGELOG.html",
    "title": "3327 Research",
    "section": "",
    "text": "4.0.4 / 2017-12-21\n\n[New] add auto entry point (#52)\n[Refactor] Use has-symbols module\n[Deps] update function-bind, object-keys\n[Dev Deps] update @es-shims/api, browserify, nsp, eslint, @ljharb/eslint-config, is\n[Tests] up to node v9.3, v8.9, v6.12; use nvm install-latest-npm; pin included builds to LTS\n\n\n\n4.0.4 / 2016-07-04\n\n[Fix] Cache original getOwnPropertySymbols, and use that when Object.getOwnPropertySymbols is unavailable\n[Deps] update object-keys\n[Dev Deps] update eslint, get-own-property-symbols, core-js, jscs, nsp, browserify, @ljharb/eslint-config, tape, @es-shims/api\n[Tests] up to node v6.2, v5.10, v4.4\n[Tests] run sham tests on node 0.10\n[Tests] use pretest/posttest for linting/security\n\n\n\n4.0.3 / 2015-10-21\n\n[Fix] Support core-js’s Symbol sham (#17)\n[Fix] Ensure that properties removed or made non-enumerable during enumeration are not assigned (#16)\n[Fix] Avoid looking up keys and values more than once\n[Tests] Avoid using reduce so npm run test:shams:corejs passes in node v0.8 (core-js#122)\n[Tests] Refactor to use my conventional structure that separates shimmed, implementation, and common tests\n[Tests] Create npm run test:shams and better organize tests for symbol shams\n[Tests] Remove nsp in favor of requiresafe\n\n\n\n4.0.2 / 2015-10-20\n\n[Fix] Ensure correct property enumeration order, particularly in v8 (#15)\n[Deps] update object-keys, define-properties\n[Dev Deps] update browserify, is, tape, jscs, eslint, @ljharb/eslint-config\n[Tests] up to io.js v3.3, node v4.2\n\n\n\n4.0.1 / 2015-08-16\n\n[Docs] Add Symbol note to readme\n\n\n\n4.0.0 / 2015-08-15\n\n[Breaking] Implement the es-shim API.\n[Robustness] Make implementation robust against later modification of environment methods.\n[Refactor] Move implementation to implementation.js\n[Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG\n[Deps] update object-keys, define-properties\n[Dev Deps] update browserify, tape, eslint, jscs, browserify\n[Tests] Add npm run tests-only\n[Tests] use my personal shared eslint config.\n[Tests] up to io.js v3.0\n\n\n\n3.0.1 / 2015-06-28\n\nCache Object and Array#push to make the shim more robust.\n[Fix] Remove use of Array#filter, which isn’t in ES3.\n[Deps] Update object-keys, define-properties\n[Dev Deps] Update get-own-property-symbols, browserify, eslint, nsp\n[Tests] Test up to io.js v2.3\n[Tests] Adding Object.assign tests for non-object targets, per https://github.com/paulmillr/es6-shim/issues/348\n\n\n\n3.0.0 / 2015-05-20\n\nAttempt to feature-detect Symbols, even if typeof Symbol() !== 'symbol' (#12)\nMake a separate hasSymbols internal module\nUpdate browserify, eslint\n\n\n\n2.0.3 / 2015-06-28\n\nCache Object and Array#push to make the shim more robust.\n[Fix] Remove use of Array#filter, which isn’t in ES3\n[Deps] Update object-keys, define-properties\n[Dev Deps] Update browserify, nsp, eslint\n[Tests] Test up to io.js v2.3\n\n\n\n2.0.2 / 2015-05-20\n\nMake sure .shim is non-enumerable.\nRefactor .shim implementation to use define-properties predicates, rather than deleteing the original.\nUpdate docs to match spec/implementation. (#11)\nAdd npm run eslint\nTest up to io.js v2.0\nUpdate jscs, browserify, covert\n\n\n\n2.0.1 / 2015-04-12\n\nMake sure non-enumerable Symbols are excluded.\n\n\n\n2.0.0 / 2015-04-12\n\nMake sure the shim function overwrites a broken implementation with pending exceptions.\nEnsure shim is not enumerable using define-properties\nEnsure Object.assign includes symbols.\nAll grade A-supported node/iojs versions now ship with an npm that understands ^.\nRun travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures.\nAdd npm run security via nsp\nUpdate browserify, jscs, tape, object-keys, is\n\n\n\n1.1.1 / 2014-12-14\n\nActually include the browser build in npm\n\n\n\n1.1.0 / 2014-12-14\n\nAdd npm run build, and build an automatic-shimming browser distribution as part of the npm publish process.\nUpdate is, jscs\n\n\n\n1.0.3 / 2014-11-29\n\nRevert “optimize –production installs”\n\n\n\n1.0.2 / 2014-11-27\n\nUpdate jscs, is, object-keys, tape\nAdd badges to README\nName URLs in README\nLock covert to v1.0.0\nOptimize –production installs\n\n\n\n1.0.1 / 2014-08-26\n\nUpdate is, covert\n\n\n\n1.0.0 / 2014-08-07\n\nUpdate object-keys, tape\n\n\n\n0.5.0 / 2014-07-31\n\nObject.assign no longer throws on null or undefined sources, per https://bugs.ecmascript.org/show_bug.cgi?id=3096\n\n\n\n0.4.3 / 2014-07-30\n\nDon’t modify vars in the function signature, since it deoptimizes v8\n\n\n\n0.4.2 / 2014-07-30\n\nFixing the version number: v0.4.2\n\n\n\n0.4.1 / 2014-07-19\n\nRevert “Use the native Object.keys if it’s available.”\n\n\n\n0.4.0 / 2014-07-19\n\nUse the native Object.keys if it’s available.\nFixes #2.\nAdding failing tests for #2.\nFix indentation.\nAdding npm run lint\nUpdate tape, covert\nREADME: Use SVG badge for Travis #1 from mathiasbynens/patch-1\n\n\n\n0.3.1 / 2014-04-10\n\nObject.assign does partially modify objects if it throws, per https://twitter.com/awbjs/status/454320863093862400\n\n\n\n0.3.0 / 2014-04-10\n\nUpdate with newest ES6 behavior - Object.assign now takes a variable number of source objects.\nUpdate tape\nMake sure old and unstable nodes don’t fail Travis\n\n\n\n0.2.1 / 2014-03-16\n\nLet object-keys handle the fallback\nUpdate dependency badges\nAdding bower.json\n\n\n\n0.2.0 / 2014-03-16\n\nUse a for loop, because ES3 browsers don’t have “reduce”\n\n\n\n0.1.1 / 2014-03-14\n\nUpdating readme\n\n\n\n0.1.0 / 2014-03-14\n\nInitial release."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mkdirp/readme.html#pow.js",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mkdirp/readme.html#pow.js",
    "title": "3327 Research",
    "section": "pow.js",
    "text": "pow.js\nvar mkdirp = require('mkdirp');\n    \nmkdirp('/tmp/foo/bar/baz', function (err) {\n    if (err) console.error(err)\n    else console.log('pow!')\n});\nOutput\npow!\nAnd now /tmp/foo/bar/baz exists, huzzah!"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mkdirp/readme.html#mkdirpdir-opts-cb",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mkdirp/readme.html#mkdirpdir-opts-cb",
    "title": "3327 Research",
    "section": "mkdirp(dir, opts, cb)",
    "text": "mkdirp(dir, opts, cb)\nCreate a new directory and any necessary subdirectories at dir with octal permission string opts.mode. If opts is a non-object, it will be treated as the opts.mode.\nIf opts.mode isn’t specified, it defaults to 0777.\ncb(err, made) fires with the error or the first directory made that had to be created, if any.\nYou can optionally pass in an alternate fs implementation by passing in opts.fs. Your implementation should have opts.fs.mkdir(path, mode, cb) and opts.fs.stat(path, cb)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mkdirp/readme.html#mkdirp.syncdir-opts",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/mkdirp/readme.html#mkdirp.syncdir-opts",
    "title": "3327 Research",
    "section": "mkdirp.sync(dir, opts)",
    "text": "mkdirp.sync(dir, opts)\nSynchronously create a new directory and any necessary subdirectories at dir with octal permission string opts.mode. If opts is a non-object, it will be treated as the opts.mode.\nIf opts.mode isn’t specified, it defaults to 0777.\nReturns the first directory that had to be created, if any.\nYou can optionally pass in an alternate fs implementation by passing in opts.fs. Your implementation should have opts.fs.mkdirSync(path, mode) and opts.fs.statSync(path)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fp-ts/CHANGELOG.html#custom-tslint-rule",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/fp-ts/CHANGELOG.html#custom-tslint-rule",
    "title": "3327 Research",
    "section": "Custom tslint rule",
    "text": "Custom tslint rule\nIn order to make easier to spot all the occurrences of chainable APIs without depending on @deprecated, which would force you to migrate in one shot, a custom tslint rule is provided (@obsolete).\nConfiguration\nAdd the following lines to your tslint.json to turn the @obsolete rule on:\n{\n+  \"rulesDirectory\": [\"./node_modules/fp-ts/rules\"],\n   \"rules\": {\n+    \"obsolete\": true\n   }\n}\n\nNew Feature\n\nadd Eq module (1)\nbackport top level data-last functions from v2 (1)\nbackport pipeable module form v2 (1)\nbackport pipe function form v2 (1)\nbackport flow function form v2 (1)\nArray\n\nadd isNonEmpty (@Stouffi)\n\nIOEither\n\nadd foldIO and foldIOEither (@bwlt)\n\nRecord\n\nadd record instance (1)\nadd mapWithIndex (1)\nadd reduceWithIndex (1)\nadd foldMapWithIndex (1)\nadd reduceRightWithIndex (1)\nadd hasOwnProperty (1)\n\nMap\n\nbackport updateAt (1)\nbackport modifyAt (1)\n\nOrd\n\nmake Ord a contravariant functor (1)\n\n\nBug Fix\n\nfix MonadThrow definition (1)\nTraversableWithIndex\n\nfix TraverseWithIndex2 definition (1)\nfix TraverseWithIndex2C definition (1)\n\n\nDeprecations\n\nHKT\n\ndeprecate URI2HKT<n> in favour of URItoKind<n> (1)\ndeprecate Type<n> in favour of Kind<n> (1)\n\ndeprecate Setoid in favour of Eq (1)\nApplicative\n\ndeprecate when (1)\ndeprecate getMonoid (1)\n\nApply\n\ndeprecate applyFirst, use pipeable’s apFirst (1)\ndeprecate applySecond, use pipeable’s apSecond (1)\n\nArray\n\ndeprecate catOptions in favour of compact (1)\ndeprecate mapOptions in favour of filterMap (1)\ndeprecate uncurried filter in favour of curried, data-last filter (1)\ndeprecate uncurried partition in favour of curried, data-last partition (1)\ndeprecate uncurried partitionMap in favour of curried, data-last partitionMap (1)\ndeprecate fold / foldL in favour of foldLeft (1)\ndeprecate foldr in favour of foldRight (1)\ndeprecate take in favour of takeLeft (1)\ndeprecate takeEnd in favour of takeRight (1)\ndeprecate takeWhile in favour of takeLeftWhile (1)\ndeprecate span in favour of spanLeft (1)\ndeprecate drop in favour of dropLeft (1)\ndeprecate dropEnd in favour of dropRight (1)\ndeprecate dropWhile in favour of dropLeftWhile (1)\ndeprecate uncurried findIndex in favour of curried, data-last findIndex (1)\ndeprecate uncurried findFirst in favour of curried, data-last findFirst (1)\ndeprecate uncurried findFirstMap in favour of curried, data-last findFirstMap (1)\ndeprecate uncurried findLast in favour of curried, data-last findLast (1)\ndeprecate uncurried findLastMap in favour of curried, data-last findLastMap (1)\ndeprecate uncurried findLastIndex in favour of curried, data-last findLastIndex (1)\ndeprecate uncurried insertAt in favour of curried, data-last insertAt (1)\ndeprecate uncurried updateAt in favour of curried, data-last updateAt (1)\ndeprecate uncurried deleteAt in favour of curried, data-last deleteAt (1)\ndeprecate uncurried modifyAt in favour of curried, data-last modifyAt (1)\ndeprecate uncurried rotate in favour of curried, data-last rotate (1)\ndeprecate uncurried chop in favour of curried, data-last chop (1)\ndeprecate split in favour of splitAt (1)\ndeprecate uncurried chunksOf in favour of curried, data-last chunksOf (1)\n\nChain\n\ndeprecate flatten, use pipeable’s flatten (1)\n\nConst\n\ndeprecate Const constructor in favour of make (1)\n\nContravariant\n\ndeprecate lift, use pipeable’s contramap (1)\n\nException module is deprecated (1)\nExtend\n\ndeprecate duplicate, use pipeable’s duplicate (1)\n\nFoldable2v\n\ndeprecate fold (1)\ndeprecate sequence_, use traverse_ (1)\ndeprecate oneOf (1)\ndeprecate sum (1)\ndeprecate product (1)\ndeprecate elem (1)\ndeprecate findFirst (1)\ndeprecate min (1)\ndeprecate max (1)\ndeprecate toArray (1)\n\nFree module is deprecated (1)\nFreeGroup module is deprecated (1)\nfunction\n\ndeprecate Function* types, use FunctionN (1)\ndeprecate Kleisli type (1)\ndeprecate Cokleisli type (1)\ndeprecate concat function, use Array’s getSemigroup (1)\ndeprecate compose function in favour of flow (1)\ndeprecate pipe function in favour of flow (1)\ndeprecate curried function (1)\ndeprecate curry function (1)\ndeprecate toString function, use Show type class (1)\ndeprecate apply function (1)\ndeprecate applyFlipped function (1)\ndeprecate constIdentity function (1)\ndeprecate phantom (1)\ndeprecate or (1)\ndeprecate and (1)\ndeprecate on (1)\ndeprecate BinaryOperator (1)\n\nFunctor\n\ndeprecate lift, use pipeable’s map (1)\ndeprecate voidRight (1)\ndeprecate voidLeft (1)\ndeprecate flap (1)\n\nValidation\n\ndeprecate Validation module in favour of Either’s:\n\ngetValidation (1)\ngetValidationSemigroup (1)\ngetValidationMonoid (1)\n\n\nEither\n\ndeprecate getCompactable, getFilterable in favour of getWitherable (1)\n\nIOEither\n\ndeprecate right in favour of rightIO (1)\ndeprecate left in favour of leftIO (1)\ndeprecate fromLeft in favour of left2v (1)\nadd right2v (1)\n\nIxIO module is deprecated (1)\nIxMonad module is deprecated (1)\nMap\n\ndeprecate insert in favour of insertAt (1)\ndeprecate remove in favour of deleteAt (1)\n\nMonadThrow\n\ndeprecate fromOption (1)\ndeprecate fromEither (1)\n\nMonoid\n\ndeprecate getArrayMonoid in favour of Array’s getMonoid (1)\n\nMonoidal module is deprecated (1)\nNonEmptyArray\n\ndeprecate uncurried groupBy in favour of curried, data-last groupBy (1)\ndeprecate findFirst in favour of Array’s findFirst (1)\ndeprecate findLast in favour of Array’s findLast (1)\ndeprecate findIndex in favour of Array’s findIndex (1)\ndeprecate findLastIndex in favour of Array’s findLastIndex (1)\ndeprecate uncurried insertAt in favour of curried, data-last insertAt (1)\ndeprecate uncurried updateAt in favour of curried, data-last updateAt (1)\ndeprecate uncurried modifyAt in favour of curried, data-last modifyAt (1)\ndeprecate uncurried filter in favour of curried, data-last filter (1)\ndeprecate uncurried filterWithIndex in favour of curried, data-last filterWithIndex (1)\n\nOrd\n\ndeprecate lessThan in favour of lt (1)\ndeprecate greaterThan in favour of gt (1)\ndeprecate lessThanOrEq in favour of leq (1)\ndeprecate greaterThanOrEq in favour of geq (1)\nswap contramap arguments (1)\n\nPair module is deprecated (1)\nProfunctor\n\ndeprecate lmap function (1)\ndeprecate rmap function (1)\n\nReaderTaskEither\n\ndeprecate right in favour of rightTask (1)\ndeprecate left in favour of leftTask (1)\ndeprecate fromReader in favour of rightReader (1)\ndeprecate fromIO in favour of rightIO (1)\ndeprecate fromLeft in favour of left2v (1)\nadd right2v (1)\n\nRecord\n\ndeprecate uncurried collect in favour of curried, data-last collect (1)\ndeprecate insert in favour of insertAt (1)\ndeprecate remove in favour of deleteAt (1)\ndeprecate uncurried pop in favour of curried, data-last pop (1)\ndeprecate mapWithKey in favour of mapWithIndex (1)\ndeprecate reduceWithKey in favour of reduceWithIndex (1)\ndeprecate foldMapWithKey in favour of foldMapWithIndex (1)\ndeprecate foldrWithKey in favour of reduceRightWithIndex (1)\ndeprecate traverseWithKey in favour of traverseWithIndex (1)\ndeprecate traverse in favour of traverse2v (1)\ndeprecate uncurried filterWithIndex in favour of curried, data-last filterWithIndex (1)\ndeprecate uncurried partitionMap in favour of curried, data-last partitionMap (1)\ndeprecate uncurried partition in favour of curried, data-last partition (1)\ndeprecate wither in favour of record.wither (1)\ndeprecate wilt in favour of record.wilt (1)\ndeprecate uncurried filterMap in favour of curried, data-last filterMap (1)\ndeprecate uncurried partitionMapWithKey in favour of curried, data-last partitionMapWithIndex (1)\ndeprecate uncurried partitionWithKey in favour of curried, data-last partitionWithIndex (1)\ndeprecate uncurried filterMapWithKey in favour of curried, data-last filterMapWithIndex (1)\ndeprecate uncurried filter in favour of curried, data-last filter (1)\ndeprecate uncurried map in favour of curried, data-last map (1)\ndeprecate uncurried foldMap in favour of curried, data-last foldMap (1)\ndeprecate foldr in favour of reduceRight (1)\n\nStrMap module is deprecated (1)\nTask\n\ndeprecate delay in favour of delay2v (1)\n\nTaskEither\n\ndeprecate right in favour of rightTask (1)\ndeprecate left in favour of leftTask (1)\ndeprecate fromIO in favour of rightIO (1)\ndeprecate fromLeft in favour of left2v (1)\nadd right2v (1)\n\nThese\n\ndeprecate this_ in favour of left (1)\ndeprecate that in favour of right (1)\ndeprecate fromThese in favour of toTuple (1)\ndeprecate theseLeft in favour of getLeft (1)\ndeprecate theseRight in favour of getRight (1)\ndeprecate isThis in favour of isLeft (1)\ndeprecate isThat in favour of isRight (1)\ndeprecate thisOrBoth in favour of leftOrBoth (1)\ndeprecate thatOrBoth in favour of rightOrBoth (1)\ndeprecate theseThis in favour of getLeftOnly (1)\ndeprecate theseThat in favour of getRightOnly (1)\n\nTrace module is deprecated (1)\nValidation module is deprecated, use Either’s getValidation (1)\nWriter\n\ndeprecate listens in favour of listens2v (1)\ndeprecate censor in favour of censor2v (1)\n\nZipper module is deprecated (1)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-from-string/readme.html#install",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-from-string/readme.html#install",
    "title": "3327 Research",
    "section": "Install",
    "text": "Install\n$ npm install --save require-from-string"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-from-string/readme.html#usage",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-from-string/readme.html#usage",
    "title": "3327 Research",
    "section": "Usage",
    "text": "Usage\nvar requireFromString = require('require-from-string');\n\nrequireFromString('module.exports = 1');\n//=> 1"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-from-string/readme.html#api",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-from-string/readme.html#api",
    "title": "3327 Research",
    "section": "API",
    "text": "API\n\nrequireFromString(code, filename, options)\n\ncode\nRequired\nType: string\nModule code.\n\n\nfilename\nType: string\nDefault: ''\nOptional filename.\n\n\noptions\nType: object\n\nappendPaths\nType: Array\nList of paths, that will be appended to module paths. Useful, when you want to be able require modules from these paths.\n\n\nprependPaths\nType: Array\nSame as appendPaths, but paths will be prepended."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-from-string/readme.html#license",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/require-from-string/readme.html#license",
    "title": "3327 Research",
    "section": "License",
    "text": "License\nMIT © Vsevolod Strukchinsky"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section",
    "title": "3327 Research",
    "section": "8.2.0 (2021-09-06)",
    "text": "8.2.0 (2021-09-06)\n\nNew features\nAdd support for walking ES2022 class static blocks."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-1",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-1",
    "title": "3327 Research",
    "section": "8.1.1 (2021-06-29)",
    "text": "8.1.1 (2021-06-29)\n\nBug fixes\nInclude base in the type declarations."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "8.1.0 (2021-04-24)",
    "text": "8.1.0 (2021-04-24)\n\nNew features\nSupport node types for class fields and private methods."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "8.0.2 (2021-01-25)",
    "text": "8.0.2 (2021-01-25)\n\nBug fixes\nAdjust package.json to work with Node 12.16.0 and 13.0-13.6."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "8.0.0 (2021-01-05)",
    "text": "8.0.0 (2021-01-05)\n\nBug fixes\nFix a bug where full and fullAncestor would skip nodes with overridden types."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "8.0.0 (2020-08-12)",
    "text": "8.0.0 (2020-08-12)\n\nNew features\nThe package can now be loaded directly as an ECMAScript module in node 13+."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-6",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-6",
    "title": "3327 Research",
    "section": "7.2.0 (2020-06-17)",
    "text": "7.2.0 (2020-06-17)\n\nNew features\nSupport optional chaining and nullish coalescing.\nSupport import.meta.\nAdd support for export * as ns from \"source\"."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "7.1.1 (2020-02-13)",
    "text": "7.1.1 (2020-02-13)\n\nBug fixes\nClean up the type definitions to actually work well with the main parser."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "7.1.0 (2020-02-11)",
    "text": "7.1.0 (2020-02-11)\n\nNew features\nAdd a TypeScript definition file for the library."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "7.0.0 (2017-08-12)",
    "text": "7.0.0 (2017-08-12)\n\nNew features\nSupport walking ImportExpression nodes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "6.2.0 (2017-07-04)",
    "text": "6.2.0 (2017-07-04)\n\nNew features\nAdd support for Import nodes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "6.1.0 (2018-09-28)",
    "text": "6.1.0 (2018-09-28)\n\nNew features\nThe walker now walks TemplateElement nodes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "6.0.1 (2018-09-14)",
    "text": "6.0.1 (2018-09-14)\n\nBug fixes\nFix bad “main” field in package.json."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-13",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-13",
    "title": "3327 Research",
    "section": "6.0.0 (2018-09-14)",
    "text": "6.0.0 (2018-09-14)\n\nBreaking changes\nThis is now a separate package, acorn-walk, rather than part of the main acorn package.\nThe ScopeBody and ScopeExpression meta-node-types are no longer supported."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-14",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-14",
    "title": "3327 Research",
    "section": "5.7.1 (2018-06-15)",
    "text": "5.7.1 (2018-06-15)\n\nBug fixes\nMake sure the walker and bin files are rebuilt on release (the previous release didn’t get the up-to-date versions)."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-15",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-15",
    "title": "3327 Research",
    "section": "5.7.0 (2018-06-15)",
    "text": "5.7.0 (2018-06-15)\n\nBug fixes\nFix crash in walker when walking a binding-less catch node."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-16",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-16",
    "title": "3327 Research",
    "section": "5.6.2 (2018-06-05)",
    "text": "5.6.2 (2018-06-05)\n\nBug fixes\nIn the walker, go back to allowing the baseVisitor argument to be null to default to the default base everywhere."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-17",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-17",
    "title": "3327 Research",
    "section": "5.6.1 (2018-06-01)",
    "text": "5.6.1 (2018-06-01)\n\nBug fixes\nFix regression when passing null as fourth argument to walk.recursive."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-18",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-18",
    "title": "3327 Research",
    "section": "5.6.0 (2018-05-31)",
    "text": "5.6.0 (2018-05-31)\n\nBug fixes\nFix a bug in the walker that caused a crash when walking an object pattern spread."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-19",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-19",
    "title": "3327 Research",
    "section": "5.5.1 (2018-03-06)",
    "text": "5.5.1 (2018-03-06)\n\nBug fixes\nFix regression in walker causing property values in object patterns to be walked as expressions."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-20",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-20",
    "title": "3327 Research",
    "section": "5.5.0 (2018-02-27)",
    "text": "5.5.0 (2018-02-27)\n\nBug fixes\nSupport object spread in the AST walker."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-21",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-21",
    "title": "3327 Research",
    "section": "5.4.1 (2018-02-02)",
    "text": "5.4.1 (2018-02-02)\n\nBug fixes\n5.4.0 somehow accidentally included an old version of walk.js."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-22",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-22",
    "title": "3327 Research",
    "section": "5.2.0 (2017-10-30)",
    "text": "5.2.0 (2017-10-30)\n\nBug fixes\nThe full and fullAncestor walkers no longer visit nodes multiple times."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-23",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-23",
    "title": "3327 Research",
    "section": "5.1.0 (2017-07-05)",
    "text": "5.1.0 (2017-07-05)\n\nNew features\nNew walker functions full and fullAncestor."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-24",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-24",
    "title": "3327 Research",
    "section": "3.2.0 (2016-06-07)",
    "text": "3.2.0 (2016-06-07)\n\nNew features\nMake it possible to use visit.ancestor with a walk state."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-25",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-25",
    "title": "3327 Research",
    "section": "3.1.0 (2016-04-18)",
    "text": "3.1.0 (2016-04-18)\n\nNew features\nThe walker now allows defining handlers for CatchClause nodes."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-26",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/acorn-walk/CHANGELOG.html#section-26",
    "title": "3327 Research",
    "section": "2.5.2 (2015-10-27)",
    "text": "2.5.2 (2015-10-27)\n\nFixes\nFix bug where the walker walked an exported let statement as an expression."
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-2",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-2",
    "title": "3327 Research",
    "section": "5.1.0 (2021-01-27)",
    "text": "5.1.0 (2021-01-27)\n\nFeatures\n\nadd flipBackslashes option to disable auto conversion of slashes (closes #24) (#25) (eecf91d)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-3",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-3",
    "title": "3327 Research",
    "section": "5.0.0 (2021-01-27)",
    "text": "5.0.0 (2021-01-27)\n\n⚠ BREAKING CHANGES\n\nDrop support for node <6 & bump dependencies\n\n\n\nMiscellaneous Chores\n\nDrop support for node <6 & bump dependencies (896c0c0)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-4",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-4",
    "title": "3327 Research",
    "section": "4.0.0 (2021-01-27)",
    "text": "4.0.0 (2021-01-27)\n\n⚠ BREAKING CHANGES\n\nquestion marks are valid path characters on Windows so avoid flagging as a glob when alone\nUpdate is-glob dependency\n\n\n\nFeatures\n\nhoist regexps and strings for performance gains (4a80667)\nquestion marks are valid path characters on Windows so avoid flagging as a glob when alone (2a551dd)\nUpdate is-glob dependency (e41fcd8)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-5",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-5",
    "title": "3327 Research",
    "section": "3.1.0 (2021-01-27)",
    "text": "3.1.0 (2021-01-27)\n\nFeatures\n\nallow basic win32 backslash use (272afa5)\nhandle extglobs (parentheses) containing separators (7db1bdb)\nnew approach to braces/brackets handling (8269bd8)\npre-process braces/brackets sections (9ef8a87)\npreserve escaped brace/bracket at end of string (8cfb0ba)\n\n\n\nBug Fixes\n\ntrailing escaped square brackets (99ec9fe)\n\n\n\n3.0.1 (2021-01-27)\n\n\nFeatures\n\nuse path-dirname ponyfill (cdbea5f)\n\n\n\nBug Fixes\n\nunescape glob-escaped dirnames on output (598c533)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-7",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-7",
    "title": "3327 Research",
    "section": "3.0.0 (2021-01-27)",
    "text": "3.0.0 (2021-01-27)\n\n⚠ BREAKING CHANGES\n\nupdate is-glob dependency\n\n\n\nFeatures\n\nupdate is-glob dependency (5c5f8ef)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-8",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-8",
    "title": "3327 Research",
    "section": "2.0.0 (2021-01-27)",
    "text": "2.0.0 (2021-01-27)\n\nFeatures\n\nmove up to dirname regardless of glob characters (f97fb83)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-9",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-9",
    "title": "3327 Research",
    "section": "1.3.0 (2021-01-27)",
    "text": "1.3.0 (2021-01-27)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-10",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-10",
    "title": "3327 Research",
    "section": "1.2.0 (2021-01-27)",
    "text": "1.2.0 (2021-01-27)\n\nReverts\n\nfeat: make regex test strings smaller (dc80fa9)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-11",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-11",
    "title": "3327 Research",
    "section": "1.1.0 (2021-01-27)",
    "text": "1.1.0 (2021-01-27)\n\nFeatures\n\nmake regex test strings smaller (cd83220)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-12",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/glob-parent/CHANGELOG.html#section-12",
    "title": "3327 Research",
    "section": "1.0.0 (2021-01-27)",
    "text": "1.0.0 (2021-01-27)"
  },
  {
    "objectID": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/buffer/AUTHORS.html",
    "href": "documents/research/assets/ERFC-42/research_examples/hardhat-test-example/node_modules/buffer/AUTHORS.html",
    "title": "3327 Research",
    "section": "",
    "text": "Authors\n\nOrdered by first contribution.\n\nRomain Beauxis (toots@rastageeks.org)\nTobias Koppers (tobias.koppers@googlemail.com)\nJanus (ysangkok@gmail.com)\nRainer Dreyer (rdrey1@gmail.com)\nTõnis Tiigi (tonistiigi@gmail.com)\nJames Halliday (mail@substack.net)\nMichael Williamson (mike@zwobble.org)\nelliottcable (github@elliottcable.name)\nrafael (rvalle@livelens.net)\nAndrew Kelley (superjoe30@gmail.com)\nAndreas Madsen (amwebdk@gmail.com)\nMike Brevoort (mike.brevoort@pearson.com)\nBrian White (mscdex@mscdex.net)\nFeross Aboukhadijeh (feross@feross.org)\nRuben Verborgh (ruben@verborgh.org)\neliang (eliang.cs@gmail.com)\nJesse Tane (jesse.tane@gmail.com)\nAlfonso Boza (alfonso@cloud.com)\nMathias Buus (mathiasbuus@gmail.com)\nDevon Govett (devongovett@gmail.com)\nDaniel Cousens (github@dcousens.com)\nJoseph Dykstra (josephdykstra@gmail.com)\nParsha Pourkhomami (parshap+git@gmail.com)\nDamjan Košir (damjan.kosir@gmail.com)\ndaverayment (dave.rayment@gmail.com)\nkawanet (u-suke@kawa.net)\nLinus Unnebäck (linus@folkdatorn.se)\nNolan Lawson (nolan.lawson@gmail.com)\nCalvin Metcalf (calvin.metcalf@gmail.com)\nKoki Takahashi (hakatasiloving@gmail.com)\nGuy Bedford (guybedford@gmail.com)\nJan Schär (jscissr@gmail.com)\nRaulTsc (tomescu.raul@gmail.com)\nMatthieu Monsch (monsch@alum.mit.edu)\nDan Ehrenberg (littledan@chromium.org)\nKirill Fomichev (fanatid@ya.ru)\nYusuke Kawasaki (u-suke@kawa.net)\nDC (dcposch@dcpos.ch)\nJohn-David Dalton (john.david.dalton@gmail.com)\nadventure-yunfei (adventure030@gmail.com)\nEmil Bay (github@tixz.dk)\nSam Sudar (sudar.sam@gmail.com)\nVolker Mische (volker.mische@gmail.com)\nDavid Walton (support@geekstocks.com)\nСковорода Никита Андреевич (chalkerx@gmail.com)\ngreenkeeper[bot] (greenkeeper[bot]@users.noreply.github.com)\nukstv (sergey.ukustov@machinomy.com)\nRenée Kooi (renee@kooi.me)\nranbochen (ranbochen@qq.com)\nVladimir Borovik (bobahbdb@gmail.com)\ngreenkeeper[bot] (23040076+greenkeeper[bot]@users.noreply.github.com)\nkumavis (aaron@kumavis.me)\nSergey Ukustov (sergey.ukustov@machinomy.com)\nFei Liu (liu.feiwood@gmail.com)\nBlaine Bublitz (blaine.bublitz@gmail.com)\nclement (clement@seald.io)\nKoushik Dutta (koushd@gmail.com)\nJordan Harband (ljharb@gmail.com)\nNiklas Mischkulnig (mischnic@users.noreply.github.com)\nNikolai Vavilov (vvnicholas@gmail.com)\nFedor Nezhivoi (gyzerok@users.noreply.github.com)\nPeter Newman (peternewman@users.noreply.github.com)\nmathmakgakpak (44949126+mathmakgakpak@users.noreply.github.com)\njkkang (jkkang@smartauth.kr)\n\n\n\nGenerated by bin/update-authors.sh."
  },
  {
    "objectID": "documents/research/posts/ERFC-259.gfm.html#contract-example",
    "href": "documents/research/posts/ERFC-259.gfm.html#contract-example",
    "title": "Approaches to Testing Of Smart Contracts",
    "section": "Contract example",
    "text": "Contract example\nThe example contract DummyToken can wrap/unwrap Ether through deposit and withdraw functions and transfer the tokens between two addresses using a function of the same name - transfer. During the execution of those functions, a corresponding event is emitted.\nThe implementation details are purposefully hidden with the intention of starting the thinking process of how those functions should behave both when called in intended and non-intended ways.\n/**\n * @dev Implementation of the Dummy Token.\n */\ncontract DummyToken {\n\n    /**\n     * @dev Emitted when tokens are moved from one account (`from`) to\n     * another (`to`) of the `value` amount.\n     */\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    /**\n     * @dev Emitted when a new Deposit is made\n     */\n    event Deposit(address indexed to, uint value);\n\n    /**\n     * @dev Emitted when new Withdrawal is made\n     */\n    event Withdrawal(address indexed to, uint value);\n\n    ...\n\n    /**\n     * @dev Mints `value` tokens to `msg.sender` that corresponds to `msg.value` .\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Deposit} event.\n     */\n    function deposit () public payable returns (bool) {...}\n\n    /**\n     * @dev Burns `value` tokens if the `msg.sender` balance can cover it.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Withdraw} event.\n     */\n    function withdraw (uint value) public returns (bool) {...}\n\n    /**\n     * @dev Moves `value` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer (address to, uint value) public returns (bool) {...}\n\n    /**\n     * @dev Returns the number of tokens owned by `account`.\n     */\n    function balanceOf(address account) public view returns (uint) {...}\n\n    /**\n     * @dev Returns the total amount of tokens in existence.\n     */\n    function totalSupply() public view returns (uint) {...}\n\n}\n\nSpecification of the transfer function\nTo understand the forms of testing that can be performed, let us write a specification on what one of the functions needs to accomplish, namely the transfer function.\n\nHigh level specification of the transfer function\nThis function transfers the amount of tokens (value) from the msg.sender‘s balance to the to address’ balance.\n\n\nLow level specification of the transfer function\n\nAfter successful transfer, the balance of to address is incremented by the value amount and the msg.sender’s balance is decremented by it.\nIf the msg.sender’s balance is smaller than the value, the transaction should revert with the \"Transfer amount exceeds balance\" message.\nIf the transfer is successful, the function returns true - otherwise, it returns false\nIf the transfer is successful, the Transfer event should be emitted with the corresponding fields:\n\nfrom : msg.sender\nto : value of the to argument\nvalue : value of the value argument"
  },
  {
    "objectID": "documents/research/posts/ERFC-259.gfm.html#forms-of-testing",
    "href": "documents/research/posts/ERFC-259.gfm.html#forms-of-testing",
    "title": "Approaches to Testing Of Smart Contracts",
    "section": "Forms of testing",
    "text": "Forms of testing\n\nUnit Testing\nUnit Testing relies on keeping the tests separate from each other and as simple as possible, with each unit test being responsible for testing a single module(“unit”).\nThese tests follow a common pattern referred to as Arrange-Act-Assert(AAA). First, the “arrangments” are made to put the system in the desired state, then the “act” is performed (function call most often) that leads the system to the next state, after which that state is “asserted” for correctness.\nIn an individual unit test, most often, only one assertion is made, which increases the number of tests. This, however, has the benefits of having a clear indication of why a test has failed and increasing the code readability.\nWhen thinking about unit testing the DummyToken contract, we will take only the transfer function as an example. Following is an incomplete list of test scenarios for this functionality that should serve as a starting point.\n\nTest Scenarios:\nTo form a part of a test suite, let us divide the test scenarios into two sections (generalized and edge cases) and write some examples of tests for each of them.\n\nGeneralized:\n\nValid* Transfer amount** of DummyToken from address0 to address1 where address0 != address1\n\nTests:\n\naddress0’s balance is decremented by the amount\naddress1’s balance is incremented by the amount\nbalances of other adresses has not changed\nTransfer event was emitted with the corresponding fields\n\n\nInvalid* Transfer amount of DummyToken from address0 to address1 where address0 != address1\n\nTests:\n\ntransaction was reverted with the right message (“Transfer amount exceeds balance”)\n\n\n…\n\nEdge Cases:\n\nValid/Invalid Transfer amount of DummyToken from address0 to address1 where address0 == address1\nValid Transfer 0/1 of DummyToken from address0 to address1 where address0 != address1\nValid Transfer 0/1 of DummyToken from address0 to address1 where address0 == address1\n…\n\n\n*Term “Valid/Invalid” refers to the fact of whether this transfer should be possible (due to balance amounts).\n**amount can be any uint (including the value being greater than the total supply)\nWe can notice that for the first scenario of the generalized section, four tests need to be written, with each of them being a unit test that checks a specific thing (i.e., the sender’s balance has been decremented by the right amount).\nIt is important to note that a “Property-based Testing” technique was used in the above list, which is a form of an automated process called “fuzzing” that is used to find bugs by feeding randomized data into the system. This technique focuses on the “properties” of the code that should always hold. The tests are not concerned with the actual values of amount, address0, and address1, which can be anything in the allowed range of possibilities. Rather, they aim to say whether the properties around the balances hold in the test scenario - i.e., if an account transfers some tokens to another account, only those two balances should be affected.\n\n\n\nIntegration Testing\nIn the context of Smart Contract testing, integration tests validate interactions between different components of a single contract or across multiple different contracts and are more complex when compared to unit tests.\nOne form of integration testing is Stateful testing, an advanced method of property-based testing, where a single test is defined by:\n\nan initial state that can, after deployment, be kept as it is or be created by some fixed sequence of actions\nactions - transactions that lead to a transition of state\ninvariants which are properties that should always hold true\n\nStarting from the initial state, a randomized sequence of actions is carried out, where after each action, all of the invariants are tested.\nFor example, when writing a “stateful” test for the DummyToken contract :\n\ninitial state can be created such that each test account calls a deposit function with a random amount of Ether provided\nactions can be kept basic (deposit , transfer and withdraw) or more complex (nested - i.e. one action can be [deposit, withdraw, withdraw,…])\none of the invariants can be that sum of account balances of the DummyToken must always be equal to the Ether amount that the contract holds\n\nBesides being more complex, integration tests require more resources and execution time.\n\n\nStatic (code) analysis\nBoth of the above-mentioned forms of testing are considered a type of “dynamic code analysis” that searches for bugs during the execution of the program, and they are the main topic of this research.\nIt is worth mentioning its counterpart - Static code analysis or just Static analysis, which is a debugging method that examines the source code before a program is run. This is done by analyzing the code against a set of detection rules that include: timestamp dependency, integer underflow/overflow, re-entrancy issues, use of tx.origin instead of msg.sender, … It remains up to the developer to implement or reject the recommendations of these rules.\n\n\nGeneral Considerations\nSmart Contracts operate in an extremely hostile environment, and this should always be taken into account. During development and testing, the most valuable guiding principle is that everything that can go wrong will eventually go wrong, especially if someone stands to benefit from it.\nA set of principles can be adopted to make the functionality of a contract and its complexity more manageable as to reduce the probability of bugs or exploits happening. Some of those include that:\n\ncode should be modularized and kept simple (KISS and DRY principles*** should be followed)\nclarity should be preferred over performance (if possible)\nlatest versions of battle-tested tools and frameworks should be used\nthe blockchain characteristics should be considered\nthe latest security developments should always be incorporated\ndeployment and testing should be done on Testnet before moving to Mainnet\n\n*** KISS (Keep It Simple, Stupid) and DRY (Don’t Repeat Yourself) are software programming principles where KISS states that the most simple solutions often work the best, while DRY follows the reasoning that same/similar code sections should not be replicated across the code base."
  },
  {
    "objectID": "documents/research/posts/ERFC-259.gfm.html#evaluation",
    "href": "documents/research/posts/ERFC-259.gfm.html#evaluation",
    "title": "Approaches to Testing Of Smart Contracts",
    "section": "Evaluation",
    "text": "Evaluation\nThe purpose of tests is to verify the correctness of the implementation, which poses the question of whether or not the test suite is sufficient for the implementation requirements. To address this and to have a sanity check for a developer’s thought process, evaluation tools have been created.\n\nCode Coverage\nThe term code coverage refers to the set of evaluation metrics that are used to determine how much of the program has been tested by the test suite - how many functions have been called, how many statements have been executed, etc.\nFor example, in the code below, to reach a 100% coverage for the function fcn, at least one of the tests would need to call with parameters that pass all of the three if statements (i.e. fcn(32, 300, 500)).\nfunction fcn (uint a, uint b, uint c) {\n\n    if(a < 100) {\n        if(b > 200) {\n            if(c > 300 && c < 600) {\n                ...\n            }\n        }\n    }\n}\nWhile a high coverage doesn’t generally equal good tests, low coverage helps in identifying gaps in the test suite that can be filled by adding new, carefully designed tests.\n\nCoverage-guided Fuzzing\nDuring testing, feeding purely randomized values is often wasteful and time-consuming. In the example above, parameter a is of type uint, which means it can hold any value in the range [0, 2**64-1], but the condition a < 100 will hold true only for a small portion of time.\nCoverage-guided Fuzzing takes into account code coverage information for each random value it tries, and if that value executes a new code, it is put in the set of promising values. For example, if a = 32 has been generated, fuzzer will keep note of it, as it opens the door to new code - it can then keep a fixed and randomize parameters b and c, thus reducing the search space.\n\n\n\nMutation Testing (Mutation analysis)\nMutation testing is a technique used to evaluate the effectiveness of a test suite by introducing minor modifications, called “mutations”, in the code, thus producing “mutants”.\nThese modifications are performed using a fixed set of mutation operators like operand replacement, expression modification, statement modification, etc.\nListed below is an example of an original code as well as one potential mutant that can be generated from it.\nOriginal Code\nfunction fcn (uint a, uint b) returns (bool) {\n\n    if(a > b){\n\n        return true;\n    }\n\n    return false;\n}\nMutant #1 - produced by using an expression modification operator (replaced > with <)\nfunction fcn (uint a, uint b) returns (bool) {\n\n    if(a < b){\n\n        return true;\n    }\n\n    return false;\n}\nThese mutants are then tested, and, ideally, all of them would need to get caught (killed) by at least one of the tests. The percentage of killed mutants is referred to as the mutation score.\nThese techniques can give insight into what are the tests missing and where are the blind spots as well as what tests are rarely killing mutants - both of which is valuable when improving the test suite.\nIf a mutant cannot be compiled (i.e., mutation produced a syntax error), it is called stillborn and is not taken into consideration. Sometimes, mutants can have the same behavior as the original code, in which case, they are referred to as equivalent mutants. These mutants will not get killed by the test suite and will lower the mutation score. Detecting and taking them out of consideration is not an easy task and is the biggest obstacle to the widespread application of mutation testing."
  },
  {
    "objectID": "documents/research/posts/ERFC-261.gfm.html#some-of-the-current-problems-in-web3",
    "href": "documents/research/posts/ERFC-261.gfm.html#some-of-the-current-problems-in-web3",
    "title": "SBT - Soulbound Tokens",
    "section": "Some of the current problems in Web3",
    "text": "Some of the current problems in Web3\nIf we look at the Web2 as it is now, the online identities of various users are a major part of various processes. Users can even use their identity on other platforms to easily register to others with a click or two. For example, a Google account In the future, unique identity linked to a user (in this case a “Soul”) could be a solution that would bring onboard more people to Web3, unlock new potential uses-cases, and potentially create a standardized reputation system. Currently Web3 is dependent on various Web2 structures regarding representing social identity. Examples:\n\nNFT platforms rely on centralized platforms for a proof of scarcity and initial provenance.\nDAOs. If DAOS want to prevent Sybil attacks, they usually rely on social media profiles for proof of personhood.\nWeb3 participants rely on centralized custodial wallets. Wallets that offer decentralized key management are not user-friendly.\nGenerally, it’s hard to establish reputation systems and manage blacklisting as anyone can create another address and access your protocol, for example\nLack of native web3 identity. This makes undercollateralized lending virtually impossible.\nGovernance vulnerability to financial attacks.\n\nThese problems could, in theory, as the paper mentioned earlier says, be solved by introducing SBTs in Web3."
  },
  {
    "objectID": "documents/research/posts/ERFC-261.gfm.html#what-are-souls-exactly",
    "href": "documents/research/posts/ERFC-261.gfm.html#what-are-souls-exactly",
    "title": "SBT - Soulbound Tokens",
    "section": "What are souls exactly?",
    "text": "What are souls exactly?\nSouls are accounts or wallets that hold publicly visible, non-transferable tokens. Those tokens could pottentially also be revocable by the issuer.2\nThe tokens that the Soul account or wallet owns should be SBTs. Soul could, in theory, hold various types of tokens, but that possibility isn’t explored in the paper. SBTs could be used to represent affiliations, credentials, memberships, etc. but more on that in the following paragraphs. The true power of these tokens lies if there was a possibility for SBTs to be issued and verified by other Soul accounts that are counterparties in the relationship. These counterparty Souls could be individuals, companies, or institutions.\nAnother essential property of Soul accounts or wallets is the abundance of a requirement for a soul to be linked to a legal name or a need to ensure that there is one soul account per human. Soul accounts or wallets could also be possibly transferred across humans.\nSouls can also be a type of reputation signal of the user to the ecosystem. Depending on the SBTs that the soul account has, the user could have a positive or negative reputation. A positive reputation could give the user various benefits regarding products and services, and a negative one could prevent users from accessing them. This property can also pose a problem protocols could “redline” (discriminate) owners of some SBTs and prevent them from using their product."
  },
  {
    "objectID": "documents/research/posts/ERFC-261.gfm.html#possible-use-cases-of-sbts",
    "href": "documents/research/posts/ERFC-261.gfm.html#possible-use-cases-of-sbts",
    "title": "SBT - Soulbound Tokens",
    "section": "Possible use cases of SBTs",
    "text": "Possible use cases of SBTs\n\nSBTs and Lending\nIn traditional finance, reputation is a significant factor in uncollateralized lending. This system often relies on centralized credit scores of borrowers to gauge creditworthiness. However, this has flaws like not providing lending services if there is insufficient data on the borrower and discrimination.\nIn Web3, users must overcollateralize in the token of their choice to receive a loan. This is where the SBTs could, in theory, provide a solution.\n“Implementation and adoption of SBTs have a potential to unlock a censorship-resistant, bottom-up alternative to top-down commercial and”social” credit systems.” - E. Glen Weyl, Puja Ohlhaver, Vitalik Buterin\nIn the case of lending, SBTs could represent education credentials, work history, and rental contracts, which could signal “creditworthiness”.\nThe loans themselves could be represented by the SBTs, which could be burnable by the institution that has given the loan. After the burning of the token, an institution could send another SBT to the borrower. This time it would be a proof of timely repayment SBT. This token could serve as a “signal” to other lenders that this borrower returns his/hers loans on time, which would impact the borrower’s “credit score” and provide the borrower with better loan conditions. Non-transferability prevents transferring or hiding outstanding loans. A rich ecosystem of SBTs ensures that borrowers who try to escape their loans (creating a new soul) will have insufficient SBTs to stake their reputation.\n\nCommunity lending market\n“SBTs would offer a substrate for community lending practices similar to those pioneered by Muhammad Yunus and the Grameen Bank, where members of a social network agree to support one another’s liabilities. Because a Soul’s constellation of SBTs represents memberships across social groups, participants could easily discover other Souls who would be valuable co-participants in a group lending project.Whereas commercial lending is a “lend-it-and-forget-it” until repayment model, community lending might take a “lend-it-and-help-it” approach—combining working capital with human capital with greater rates of return.” - E. Glen Weyl, Puja Ohlhaver, Vitalik Buterin\n\n\nWhat are the first steps?\nThere are a couple of “requirements” for this type of lending to be true:\n\nSoul accounts/wallets would carry SBTs they are comfortable sharing publicly. This could be an excellent first step for the adoption of social/intra-community lending in Web3.\nSocial relationships and credentials would play a significant role in this type of lending.\n\n\n\n\nSBTs and NFTs\nIn terms of NFTs , Souls could play a major role in terms of artist’s reputation. When issuing NFTs artist could issue them from their Soul.\n“The more SBTs the artist’s Soul carries, the easier it would be for buyers to identify the Soul as belonging to that artist, and thereby also confirm the NFT’s legitimacy. Artists could go a step further to issue a linked SBT stored in their Soul that attests to the NFT’s membership to a “collection” and vouches for whatever scarcity limits the artist wishes to set. Souls would thus create a verifable, on-chain way to stake and build reputation on the provenance and scarcity of an object.” - E. Glen Weyl, Puja Ohlhaver, Vitalik Buterin\nThe application of SBTs in this market extends beyond art. Some examples of potential use cases:\n\nvarious services\nrentals/property\nauthentication\nsocial provenance\nretail\ngaming\nand many more, SBTs unlock the use cases where NFTs cannot be applicable\n\n\n\nSoul Accounts in Airdrops and DAOs\nSoulbound Tokens could also enable communities to be convened at the intersection of souls and to form a DAO, for example. Drops of SBTs or “Souldrops” can be given based on SBTs and other tokens within a Soul (soul account/wallet). Some examples:\n\nconference attendees\ncertified programmers\nearly members\netc\n\n“Souldrops could also introduce novel incentives to encourage community engagement. Dropped SBTs could be engineered to be soulbound for a period but eventually “vest” into transferable tokens over time. Or the reverse could be true. Transferable tokens held for some period could unlock the right to SBTs that confer further governance rights over a protocol. SBTs open a rich possibility space to experiment with mechanisms that maximize community engagement and other goals, like decentralization” - E. Glen Weyl, Puja Ohlhaver, Vitalik Buterin\nIn DAOS, SBTs could be used to mitigate Sybil attacks in various ways:\n\ncomputing over a Soul’s constellation of SBTs to differentiate between unique Souls and probable bots and denying any voting power to a Soul that appears to be a Sybil.\nconferring more voting power to Souls with more reputable SBTs — like work or educational credentials, licenses, or certifications.\nissuing specialized “proof-of-personhood” SBTs could help other DAOs bootstrap Sybil resistance.\nchecking for correlations between SBTs held by Souls who support a particular vote and applying a lower vote weight to highly correlated voters.\n\nSouls and SBTs could also be used to estimate the decentralization degree in the governance of DAOs and protocols.\n\n\nProperty\nSo far, NFTs could not effectively be applied to property rights, considering their ease of transfer. Using SBTs, owners could set different rights and limitations for the same property (vehicles, real estate, events, etc.)."
  },
  {
    "objectID": "documents/research/posts/ERFC-261.gfm.html#recovery-of-soul-accountswallets",
    "href": "documents/research/posts/ERFC-261.gfm.html#recovery-of-soul-accountswallets",
    "title": "SBT - Soulbound Tokens",
    "section": "Recovery of Soul Accounts/Wallets",
    "text": "Recovery of Soul Accounts/Wallets\nSoul accounts would probably be recoverable by using Social Recovery.\n\nSocial recovery\nA social recovery system/wallet works as follows:\n\nThere is a single “signing key” that can be used to approve transactions\nThere is a set of at least 3 (or a much higher number) of “guardians”, of which a majority can cooperate to change the signing key of the account. The signing key can add or remove guardians, though only after a delay.\n\nA social recovery wallet can be used as a regular wallet. In case of losing a key, the user can reach out to their guardians and ask them to sign a particular transaction to change the signing pubkey registered in the wallet contract to a new one.\nGuardians can be:\n\nother devices\nfriends and family members\ninstitutions (they can verify your identity by phone number, e-mail, etc.)3\n\n\n\nSBT community recovery\nIn this proposed solution, Soul recovery is tied to the Soul’s memberships across communities.\n“In a community recovery model, recovering a Soul’s private keys would require a member from a qualified majority of a (random subset of) Soul’s communities to consent.” - E. Glen Weyl, Puja Ohlhaver, Vitalik Buterin.\nThis recovery implies secure, off-chain communication channels where authentication can occur.\n\n\n\nSBT rec\n\n\nPicture 1: Social recovery vs SBT community recovery\nBy embedding security in sociality , a Soul can always regenerate their keys through community recovery, which deters Soul theft (or sale): because a Seller would need to prove selling the recovery relationships, any attempt to sell a Soul lacks credibility. - E. Glen Weyl, Puja Ohlhaver, Vitalik Buterin.\nThis recovery solution is just a proposition and requires more experimentation."
  },
  {
    "objectID": "documents/research/posts/ERFC-261.gfm.html#implementation-and-adoption-challenges",
    "href": "documents/research/posts/ERFC-261.gfm.html#implementation-and-adoption-challenges",
    "title": "SBT - Soulbound Tokens",
    "section": "Implementation and adoption challenges",
    "text": "Implementation and adoption challenges\n\nPrivacy\nOne of the biggest challenges in the adoption of SBTs is privacy. Too many public SBTs that a soul possesses can reveal too much information about a soul.\nBlockchain systems are public by default, and every transaction and relationship recorded on-chain is available for everyone in the world to see. One possible solution is to have separate souls for professional and private life. These souls can easily be linked if there are no serious privacy solutions.\nAnother solution is to have SBTs that could store data off-chain, leaving only the hash of the data on-chain.\n\n\n\nPrivacy with SBTs\n\n\nPicture 2: A way to keep some of the SBTs private\nThe choice of how to store data is left to the person. Possible solutions are:\n\ntheir own devices\na trusted cloud service\nIPFS or other decentralized networks\n\nZero-knowledge proofs are another possible solution that could help kickstart the adoption of SBTs. They also can allow people to prove arbitrary statements without revealing any more information beyond the statement itself. They can be computed over SBTs to prove characteristics about a Soul. Privacy could be extended further by introducing multi-party computation techniques like garbled circuits.\nOther possible solutions for privacy problems include designated-verifier proofs and verifiable delay functions.\nFor example: If user A wants to prove some property about its SBTs to user B, they can make a zero-knowledge proof of the statement “I hold SBTs that have the property Z.” User B can then be sure as he didn’t make the proof. But what about passing somebody else’s proof? Users can mitigate this by using verifiable delay functions. Using verifiable delay functions, user A can make and present a proof that can only be made with required SBTs at the moment, but anyone else will be able to make five minutes from now.\n\n\nBribing the owners of the SBTs\nOwners of the SBTs could be bribed by various parties in order to influence their voting or to exploit their other SBTs.\nIn the research paper, writers mention these ways of exploits mitigations:\n\n“The ecosystem of SBTs could bootstrap of “thick” community channels , where SBTs signal authentic off-chain community membership with strong social bonds and repeat interactions. This would make it easier for communities to alter and revoke SBTs of impersonators and bots. Such thick channels—which we often and in churches, workplaces, schools, meet-up groups, and organizations in civil society—would provide a more sybil-resistant social substrate to police gaming (e.g., through bots, bribes, impersonation) in more “thin” social channels.\nNested communities could require SBTs to force context on potential collusion vectors “just below” them . For example, if a state were holding a funding round or vote, the state might require every participating citizen to also hold an SBT of a defined county and municipality.\nThe openness and cryptographic provability of the SBT ecosystem could itself be used to actively detect collusive patterns and penalize inauthentic behavior —perhaps discounting the voting power of collusive Souls, or obliging Souls to accept SBTs representing negative attestations.\nZK technology (eg. MACI ) could cryptographically prevent some attestations made by a Soul from being provable.\nEncouraging of whistleblowers\nMechanisms from peer-prediction theory\nCorrelation scores that focus on correlations where there is a large incentive to be honest if a group of Souls share a common interest.” - E. Glen Weyl, Puja Ohlhaver, Vitalik Buterin. ‘Decentralized Society: Finding Web3’s Soul by E. Glen Weyl, Puja Ohlhaver, Vitalik Buterin :: SSRN’4\n\n\n\nLegacy systems\nCurrent identity systems tend to concentrate power on the issuer of identity proofs. If we look at the government IDs, for example, the user doesn’t own their identity. Government can track users’ movement (passports), revoke licenses (driving licenses), and put an “expiration date” on your ID card. In Web3 idendity is often handled by identity protocols like: Litentry, ORE network and IDX. When it comes to identity, SBTs and their DeSoc property could, in theory, replace the existing legacy system. However, changes in ID systems usually take a very long time.\n\n\nCold start challenge\nThe research paper asks a question: What comes first SBTs or social recovery?\nWhen it comes to SBTs currently revokable tokens could be created and minted to wallets. They are referred to as “Proto SBTs”, allthough they are not as practical as SBTs proposed they could be a step in the right direction.\nCommunity recovery wallets like Argent and Loopring also show that social recovery wallets can work in practice.\n\n\n\nsoc rec wallets\n\n\nPicture 3: Social recovery wallets explained\n“Norms can also shepherd Souls into existence. As we rethink tokens and wallets, we can also reframe how we think about certain classes of NFTs and tokens that are intended to signal membership. In particular, we can introduce a norm of not transferring NFTs and POAPs issued by reputable institutions that reflect attendance to a conference, work experience, or education credentials. Such transfers of membership tokens—if traded for value—could diminish the reputation of a wallet and perhaps discourage issuers from further issuing membership or POAP tokens to that wallet.” - E. Glen Weyl, Puja Ohlhaver, Vitalik Buterin"
  },
  {
    "objectID": "documents/research/posts/ERFC-261.gfm.html#sentiment",
    "href": "documents/research/posts/ERFC-261.gfm.html#sentiment",
    "title": "SBT - Soulbound Tokens",
    "section": "Sentiment",
    "text": "Sentiment\nWhen the paper came out on May 11th 2022, it didn’t gain mainstream attention initially. Around 20th of May the paper and the ideas in it caught the attention of media outside Web3 space with magazines like Fortune covering the ideas presented.\nIn an interview held by Jason Levin with E. Glen Weyl , the author predicted that that SBTs will be available for early uses by the end of 2022 and that the 2024 up cycle will focus on SBTs.\nOverall response to the paper was very positive all across the board and many potential use cases are discussed."
  },
  {
    "objectID": "documents/research/posts/ERFC-246.gfm.html#steps-in-token-engineering-process",
    "href": "documents/research/posts/ERFC-246.gfm.html#steps-in-token-engineering-process",
    "title": "Token Engineering and Design of complex systems",
    "section": "Steps in Token Engineering process",
    "text": "Steps in Token Engineering process\nBelow we will present some general steps in the process of Token Engineering.\n\nSystem Mapping\nIdentifying what concepts and constructs are relevant to our model and goals for the system\nBefore starting the process, we need to take systems thinking approach. In this stage of the design, the engineer:\n\nBuilds stakeholder taxonomies by identifying stakeholder groups, their possible actions, and the form of their incentives\nLays out the system dynamics and agent goals.\n\nSome of the tools for system mapping are Cluster Maps and Ecosystem Canvas:\nCluster Maps\nThe system’s goal is set in the middle of a cluster map while the associated nodes are drawn around it. This is a not-so-rigorous approach and is often used to get an outline of the system engineer is creating.\n\nFigure 2: Cluster map example@acarogluToolsSystemsThinkers2017\nEcosystem canvas\nWhen using this method, the purpose of the system is put at the center while key players are laid out in circles radiating outwards.\n\nFigure 3: Ecosystem canvas3\n\n\nFormalising the design\nAfter the initial phase is the phase of formalizing the design using causal loop diagrams and stock and flow diagrams, there is another tool called Machinations that Token Engineers could use in this step. We will cover Machinations later in the paper.\nCausal Loop Diagrams\n“A causal loop diagram is a”snapshot of all relationships that matter.” It visualizes key variables (i.e., factors, issues, processes) and how they are interconnected. These diagrams show variables represented as texts and causal relationships between them as arrows.”4\n\nFigure 4: Causal Loop Diagram\nIn a Causal Loop Diagram positive relationships are labeled with a plus sign while negative relationships are labeled with a minus sign. Above example is often used to explain this type of diagrams. It shows how market saturation and word of mouth impact potential adopters and adoption rate.\nStock and flow diagrams\nStock and flow diagrams are a more complex way of formalizing the design. You can see below a representation of the simple system using this diagram.\n\nFigure 5: Stock and Flow Diagram\n\n\nModularising the logic and model building\nAfter formalizing the design, system modeling is done using an open-source python package, cadCad. We will cover cadCad in detail in the next section of the paper.\n\n\nRefining the model\nAs the name suggests, this is the part in the process where the model is refined using quantitative and qualitative backtesting.\n\n\nEvaluation and improvements on the running system\nAfter the system is up and running cadCad model can be used as a “digital twin,” which allows token engineers to:\n\nevaluate proposed changes to the system\ntest the sensitivity of parameters\nexplore the success criteria and failure modes\nevaluate behaviors and policies\nmake recommendations to governance bodies5"
  },
  {
    "objectID": "documents/research/posts/ERFC-246.gfm.html#machinations",
    "href": "documents/research/posts/ERFC-246.gfm.html#machinations",
    "title": "Token Engineering and Design of complex systems",
    "section": "Machinations",
    "text": "Machinations\nMachinations is a browser-based tool to design and balance game systems. This tool has seen use from game designers, consultants, developers, and analysts. Token Engineers can also use this tool in designing Crypto Economic systems in stages from System Mapping to Evaluation and improvements on the running system. Machinations shines in pre-production.\nUsing Machinations, Token Engineer can:\n\nMap systems in an interactive diagram\nSet parameters that define resource flow\nPlot and analyze the results in real-time using the chart option\nSimulate outcomes for one player journey or stochastically using batch plays\nExport outcomes in CSV\nExport design parameters to Google Sheets\n\nMachinations is uses these types of nodes:\n\nPools that collect Resources\nSources that create Resources\nDrains that consume/destroy resources\nConverters that transmute resources\nGates that redistribute resources\n\nAnd two types of connections:\n\nResource connections that determine how the Resources flow\nState connections that modify the state of diagram elements6\n\nBelow you will find a basic diagram created in machinations that can be used to see the flow of an AMM system:\n\nFigure 6: Machinations diagram example\nThis design was done in less than 20 minutes and represents a basic flow of the user exchanging tokens for crypto using our AMM. The Key takeaway is that machinations, even though its main focus is on game design can be used for the stages of System Mapping and Formalising the design."
  },
  {
    "objectID": "documents/research/posts/ERFC-246.gfm.html#cad-cad",
    "href": "documents/research/posts/ERFC-246.gfm.html#cad-cad",
    "title": "Token Engineering and Design of complex systems",
    "section": "cad Cad",
    "text": "cad Cad\n                  ___________    ____\n  ________ __ ___/ / ____/   |  / __ \\\n / ___/ __` / __  / /   / /| | / / / /\n/ /__/ /_/ / /_/ / /___/ ___ |/ /_/ /\n\\___/\\__,_/\\__,_/\\____/_/  |_/_____/\nby cadCAD                  ver. 0.4.28\n======================================\n       Complex Adaptive Dynamics       \n       o       i        e\n       m       d        s\n       p       e        i\n       u       d        g\n       t                n\n       e\n       r\ncadCad is the package most often used in designing, testing, and validating complex systems through simulation. It supports Monte Carlo methods, A/B testing, and parameter sweeping. cadCad can model systems from agent-based modeling to system dynamic modeling. It can easily be integrated with other Python modules and data science workflows. But first, let’s briefly explain what these methods are:\n“Monte Carlo simulations are used to model the probability of different outcomes in a process that cannot easily be predicted due to the intervention of random variables. It is a technique used to understand the impact of risk and uncertainty in prediction and forecasting models.”7\n“A/B Testing is a method to compare two (or more) variations of something and determine which one works better. In this method, users are randomly assigned to one of two variants. A statistical analysis is performed to determine which variation performs better for a defined business goal.”8\n“In modeling, parameter sweeps are an important method for fine-tuning parameter values, exploring parameter space, and calibrating simulations to data. A parameter sweep is an iterative process in which simulations are run repeatedly using different values of the parameter(s) of choice. This process enables the modeler to determine a parameter’s “best” value (or range of values), or even where in parameter space the model produces desirable (or non-desirable) behaviors.”9\nAlthough it can be used to simulate any system that can be described as state variables that evolve over time according to a set of equations, cadCad has seen the most use in the Token Engineering process.\nThe first step in modeling using cadCad is the Visual System mapping we mentioned earlier.\nAfterward, the next step is Mathematical specification using differential equations. For example, we will use the simple system of sheep from the cadCad introduction course:\n\nHere we set the initial differential equations for our model. It is self explanatory. Population growth depends on food sources.\nNote: This is a simplified model used to for demonstration, Crypto Economy equations are much more complex\nAfterwards, the Modelling and simulation process in general works like this:\n\nFigure 7: cadCad processes\nWe will briefly explain the steps without going into code examples as we will cover plenty of code examples in future research papers:\n\nFirst, the engineer defines all the state variables in the system and their initial values (they can be of any Python data type)\nAfterwards, the variables that impact the behavior of the model.\nPolicy functions compute one or more signals to be passed to state update functions. They are used to describe the logic and behavior of a system component.\nState update functions are then designed to define how the model changes over time.\nPartial state update blocks are used for composing state update functions and policy functions in series or parallel.\n\nSimulation process steps:\n\nIn the configuration stage, engineer ties all the model compenents using “config_sim” and chooses how the simulation should run:\n\nThe number of times it will run\nThe number of timesteps the simulation will run for\nThe parameters of the system\n\nExecution computes the simulation output\nOutput preparation is the process in which data is manipulated and analyzed in order to answer questions about the model.\nAnalysis is self explanatory - engineer evaluates the model performance and if there is a need, improves the model. Usually that is the case as the first model is almost always not the optimal one.\n\nAs we can see cadCad covers the entire Token Engineering process with help from stock and flow diagrams and system mapping tools. We will cover this library and its functionalities in great detail in future research papers."
  },
  {
    "objectID": "documents/research/posts/ERFC-246.gfm.html#tokenspice",
    "href": "documents/research/posts/ERFC-246.gfm.html#tokenspice",
    "title": "Token Engineering and Design of complex systems",
    "section": "TokenSPICE",
    "text": "TokenSPICE\nTokenSPICE is an EVM Agent-Based Token Simulator written in Python, which simulates tokenized ecosystems via an agent-based approach, with EVM “in the loop”.\nEthereum Virtual Machine (EVM) is a computation engine which acts like a decentralized computer that has millions of executable projects. It acts as the virtual machine which is the bedrock of Ethereum’s entire operating structure.10\nTokenSPICE has been mainly used in later stage analysis and for verifying and tuning the system designs.\nAgent-based modeling focuses on the individual active components of a system. Agents in tokenSPICE can be DAOs, unique users, and other protocols, making it a versatile tool.\nIt can be used in Token Engineering flows to design, tune and verify tokenized ecosystems.\nIf the engineer wants to model on the smart contract code directly and skip the equations set up like in cadCad, then the tokenSPICE is the tool of choice.\nIt uses Brownie, which treats smart contracts as classes, making it easier to run simulations. It also requires less work upfront in contrast to cadCad. Write the contracts in Solidity, then simulate with tokenSPICE.\nWhen you run the simulator, the run function in SimEngine.py is triggered and starts the run loop in it:\ndef run(self):\n        \"\"\"\n        @description\n          Runs the simulation!  This is the main work routine.\n\n        @return\n           <<none>> but it continually generates an output csv output_dir\n        \"\"\"\n        log.info(\"Begin.\")\n        log.info(str(self.state.ss) + \"\\n\")  # pylint: disable=logging-not-lazy\n\n        while True:  \n            self.takeStep()\n            if self.doStop():\n                break\n            self.state.tick += 1 \n            chain.mine(blocks=1, timedelta=self.state.ss.time_step)\n        log.info(\"Done\")\nEvery single time it loops, every single agent inside the state takes a step:\ndef takeStep(self) -> None:\n        \"\"\"Run one tick, updates self.state\"\"\"\n        log.debug(\"=============================================\")\n        log.debug(\"Tick=%d: begin\", (self.state.tick))\n\n        if (self.elapsedSeconds() % self.state.ss.log_interval) == 0:\n            s, dataheader, datarow = self.createLogData()\n            log.info(\"\".join(s))\n            self.logToCsv(dataheader, datarow)\n\n        # main work\n        self.state.takeStep()\n\n        log.debug(\"=============================================\")\n        log.debug(\"Tick=%d: done\", self.state.tick)\nThe rest of the file is dedicated to logging the results into CSV format, and we will not examine it further.\nSimilarly, the simulation engine also takes a step when the Agents take a step in the simulation.\nSimulation with tokenSPICE can be done using the following command in the terminal and the results can saved in CSV or a plot created in png:\n  tsp plot netlists/scheduler/netlist.py outdir_csv outdir_png\nNote: Netlists are just agents “wired-up”\nHere we ran a vesting simulation in the Ocean protocol and this is the resulting plot:\n\nFigure 8: Vesting simulation in tokenSPICE\nYou can run all kinds of netlists in order to get a “feel” of it, in the tokenSPICE official GitHub repo.\nIn contrast to cadCad, which can be used for any type of system, tokenSPICE is focused on EVM systems and incentives. The main difference is that cadCad is mainly used in the early-stage design of systems."
  },
  {
    "objectID": "documents/research/posts/ERFC-270.gfm.html#depositing-nfts-from-ethereum-to-the-side-chain",
    "href": "documents/research/posts/ERFC-270.gfm.html#depositing-nfts-from-ethereum-to-the-side-chain",
    "title": "ZK NFT Mixer",
    "section": "Depositing NFTs from Ethereum to the side chain",
    "text": "Depositing NFTs from Ethereum to the side chain\nUser deposits NFTs on the Ethereum smart contract by sending a transaction allowing the smart contract to take over the NFT. On the side chain,  commitments are minted and added to a Merkle tree. The smart contract can’t say which commitment resembles the NFT, so the commitment values need to be constructed in a specific way by the user and submitted to Ethereum smart contract. The NFT commitment should be a hash of NFT ID, NFT address, owner’s ephemeral public key, and some secret value. Other, , commitments should be hashes of a string value NULL, the owner’s ephemeral public key, and some other secret value. The user must provide ZK proof that exactly one commitment is the NFT commitment while all other  values are decoys. Each commitment is tied to a nullifier, generated as a hash of the commitment ID, a Merkle path of the commitment inside the Merkle tree, and the same secret value used for the specific commitment. The secrets should be different for each commitment-nullifier pair. By doing this setup, the public still doesn’t know which commitment is the NFT, but anyone can verify that one of the commitments indeed is the NFT, while others are blanks."
  },
  {
    "objectID": "documents/research/posts/ERFC-270.gfm.html#transfering-nfts-on-the-sidechain",
    "href": "documents/research/posts/ERFC-270.gfm.html#transfering-nfts-on-the-sidechain",
    "title": "ZK NFT Mixer",
    "section": "Transfering NFTs on the sidechain",
    "text": "Transfering NFTs on the sidechain\nUsers on the side chain are identified using their new ephemeral keys, meaning the keys should be changed frequently. The keys are the private key, public key, and encryption key. The public key is a private key hash, while the encryption key is “the real” public key, in the sense of public-key cryptography, derived from the private key. Transferring NFTs is similar to tornado cash logic with the addition of decoys. For each NFT transfer, the user also transfers  other decoys to  different addresses. Received decoys from other users can (and should) be used in further transfers of NFTs, thus enabling further obfuscation of the trading paths. Each transfer on the sidechain is a shielded transfer, meaning that it is not performed as a regular token transfer but as a protocol backed by zero-knowledge proofs. Before explaining the protocol, let us first see how the commitment is constructed. The commitment contains two values, the commitment value, defined during deposit, and a secret value used as a salt while generating the first value. Both values are stacked in a byte array and encrypted using the owner’s public key. When the user wants to transfer the commitment, a new commitment and decoys are sent to the sidechain. ZK proof is also sent on the chain, proving that all the computations were correct. The sender proves that the new commitment is derived from the proper input commitments and nullifiers, and the output commitments are generated in the way that only one output commitment contains the NFT. The new commitment is encrypted using the recipient’s public key, so only the recipient can decrypt it and use it later. The recipient listens to the sidechain events to see if any new commitment can be decrypted using his private key and notes down all the commitments that pass the test."
  },
  {
    "objectID": "documents/research/posts/ERFC-270.gfm.html#withdrawing-nfts-from-the-side-chain-to-ethereum",
    "href": "documents/research/posts/ERFC-270.gfm.html#withdrawing-nfts-from-the-side-chain-to-ethereum",
    "title": "ZK NFT Mixer",
    "section": "Withdrawing NFTs from the side chain to Ethereum",
    "text": "Withdrawing NFTs from the side chain to Ethereum\nThe user who initiates withdrawal must prove ownership of the commitment representing the NFT by providing ZK proof. The user proves the knowledge of the secret preimage used for generating the initial commitment. When the proof is verified and valid, the commitment is nullified. The smart contract on the Ethereum transfers the locked NFT to the Ethereum address provided within the withdrawal request."
  },
  {
    "objectID": "documents/research/posts/ERFC-248.gfm.html#litentry---identity-aggregator",
    "href": "documents/research/posts/ERFC-248.gfm.html#litentry---identity-aggregator",
    "title": "Crosschain Identity",
    "section": "Litentry - identity aggregator",
    "text": "Litentry - identity aggregator\nLitentry is a decentralized cross-chain identity aggregator which enables linking user identities across multiple networks. Litentry collects, indexes, and distributes DIDs to blockchains in a decentralized way.\nAggregation is the process of integrating a wide range of digital identities from multiple networks.\n“Decentralized identifiers (DIDs) are a new type of identifier that enables verifiable, decentralized digital identity. A DID refers to any subject (e.g., a person, organization, thing, data model, abstract entity, etc.) as determined by the controller of the DID.” DIDs, by design, allow the controller of a DID to prove control over it without requiring permission from any other party. ‘Decentralized Identifiers (DIDs) V1.0’3\nLitentry’s main selling point is its decentralized identity and user activity data aggregation infrastructure. It is built on Substrate network.\nProtocols could use identity aggregating service for collateralized lending, DeFi insurance rate, and DAO voting power calculations, preventing bots from getting airdrops and various other uses in dApps.\nMain features of Litentry:\n\nIdentity management - The primary focus of this platform are identities. Litentry provides anonymous and independent identities from applications and services used by the user.\nIdentity Staking - As well as staking tokens and earning, users can “stake” their identity and get rewards.\nDistributed storage of identity data.\nUsers do not need to create multiple accounts to use different platforms of services. They can use one identity to interact with various services.\n\nUsing Litentry, blockchain projects can “offer” special services to users based on their identity’s quantified data.\n“For example, if a new project knows that an account is a Polkadot validator, and it spends hundreds of DOTs on another Parachain for half a year, then the project could directly gift this specific user some token to start to play with, or send him/her an attractive offer of the new DeFi product, or accredit him to be a validated voter.” Litentry4\nIt features an identity matching and identity staking mechanism, which are at the very core of the Litentry model. But what do they represent exactly?\nIdentity Matching is blind matchmaking where random anonymous identities are picked from the on-chain pool of identities, and the substrate off-chain worker processes candidate identity data. The network sends the matchwinners DID as a matching opportunity back to the matching buyer (for example, dApp that wants to do an airdrop). The buyer only has access to the matchwinner’s DID; thus match buyer pays the LIT token in exchange for a matching opportunity.\nWhen it comes to identity staking, that is the process in which an identity owner sends the snapshot of their identity document and DID to the identities pool of blockchain and authorizes the read permissions to the validator node. The owner gets staking and matching rewards in the following blocks. The document is encrypted and stored on IPFS or on the on-chain key-value store. DID is stored on-chain.\nLitentry’s use cases and platforms that cover these use cases:\n\nTaskFi & Airdrops Whitelisting - Not yet implemented (Drop3 Platform)\n\nLitentry identity verification system enables Web3 projects to identify target users and filter out bots. It also has a mechanism where users need to complete the task and then get rewarded after the task is complete.\n\nSocial interaction (My Crypto Profile)\n\nUsing Litentry’s cross-chain capabilities, this platform enables users to generate proof of ownership of various accounts and create a unique identity graph that connects accounts and addresses from Ethereum, Binance, Polkadot, Kusama, Phala, Twitter, and Github into a unique Web3 identity. This identity can grant access to various dApps and Airdrops. ‘My Crypto Profile | 0x4d52f8d989796ffde311da9ad696258d5a7b3cc5’5\n\n\n\nMCP\n\n\nPicture 1: My Crypto Profile Identity Graph\n\nIdentity Data Analytics (Web3Go)\n\nWeb3 go is a multi-chain platform that uses Litentry’s DID aggregated identity data to analyze and provide insights into the activity of a particular cross-chain identity or identities.\n\nPolkadot Name system\n\nLitentry currently acts as the main registrar entry for PNS (Polkadot Name System ). Public data is indexed into the domain name with the private name reserved in Litentry’s TEE side chain. A Trusted Execution Environment (TEE) is an environment for executing code; it guarantees code and data loaded inside to be protected with respect to confidentiality and integrity. ‘Polkadot Name System’6\nLitentry products technical overview:\n\nLitentry Graph\n\nLitentry Graph serves clients with aggregated identity data from Substrate and EVM-based networks. Data is taken directly from the blockchain using APIs such as Polkadot API or using blockchain indexers.\n\n\n\nGraph\n\n\nPicture 2: Litentry Graph overview\nLitentry Graph - An Express GraphQL server using schema stitching to aggregate a collection of remote schemas and subschemas.\nSubstrate Indexer - takes the data from the Substrate Archives and transforms it into a schema designed for easy querying. Postgres is used to store the data, and a GraphQL query node is used to serve the data to the Litentry graph as a remote schema. This indexer is hosted by Litentry.\nSubstrate Archive - Is a Postgres database with a real-time feed of raw events and extrinsic data directly from the blockchain. A GraphQL query node is used to serve the data to the Substrate Indexer.\nEthereum & BSC Indedxers - Litentry uses The Graph.\nSubstrate Chain - The Substrate Chain component queries data directly from blockchain nodes via web sockets using the Polkadot API.\n\nDrop 3\n\n\n\n\nDrop3\n\n\nPicture 3: Drop3 Overview\nPallets, Ethereum Verify Bot and Web3 go Analysis are not yet implemented\nDrop3 is still in the works. However, they have implemented some tasks into the product like getting verified as a human, connecting polkadot wallet etc.\n\nGovernance mobile App - We will not go into details of this product as mobile apps are not the topic of the research.\nMy Crypto Profile\n\nIdentity Graph:\n{\n  \"version\": \"v0.1\",\n  \"did\": \"did:mcp:0xd8ebc2be207451ff9eafb3ef7fada06d64d05059\",\n  \"main\": {\n    \"address\": \"0x8ad12345c3bc8598d2f602d63e927f5995dcf5d0\",\n    \"chain\": \"ethereum\"\n  },\n  \"web2List\": [\n    {\n      \"cid\": \"bafybeid5fo6ig6ilobawudqwgsu7so5guaedgvkdwyo6k5hnvlqiqjlhaq\",\n      \"account\": \"x3\",\n      \"socialType\": \"github\",\n      \"validator\": {\n        \"name\": \"Litentry Technologies GmbH\",\n        \"validatedAt\": \"1645810190\",\n        \"signature\": \"0x0c4c08460e651c6d6949af21c5b290bed39ffcae6cfdb5ef374760758c9387f3643992be7d5b6f5373fb78540b116750471a9fbcc68e5e5ccb5330250158bfab1c\"\n      }\n    }\n  ],\n  \"web3List\": [\n    {\n      \"cid\": \"bafybeihj43osgpx3u5zo567lod25rzfxoqrbspb27v2akdwrgwugziddf4\",\n      \"proofs\": [\"bafybeidcihuc74xxgatyag2q6iiv7tjwn6vjgc4dk6jravthcryrazzkru\"],\n      \"address\": \"5DXZdKSFTEx5rE25dnxamebAoSsA4fqgGT9VPFiiouxP2xM1\",\n      \"chain\": \"polkadot\",\n      \"validator\": {\n        \"name\": \"Litentry Technologies GmbH\",\n        \"validatedAt\": \"1645810190\",\n        \"signature\": \"0x0c4c08460e651c6d6949af21c5b290bed39ffcae6cfdb5ef374760758c9387f3643992be7d5b6f5373fb78540b116750471a9fbcc68e5e5ccb5330250158bfab1c\"\n      }\n    },\n    {\n      \"cid\": \"bafybeibic6syxpgnvyp5udyrhhuosm3thbslrfm4ivaauqxtus6vbjghsm\",\n      \"proofs\": [\"bafybeibbsripq672skohuiy6ruztjr5hwclkwoswj6yilt5rkezgmn4f3u\"],\n      \"address\": \"5GgmqtSXGuh2d3LxRiYo691bL4iTYQNjLCAYNakj4xfmLjnm\",\n      \"chain\": \"polkadot\",\n      \"validator\": {\n        \"name\": \"Litentry Technologies GmbH\",\n        \"validatedAt\": \"1645810356\",\n        \"signature\": \"0x0c5eb79402646ab7390355404243d73c01cde9ccabd0c26cb1803599c44de8621f69c05848c0e254bdf5849b3ff69fd43b82f3e346cdac3175d052cedf107c3c1c\"\n      }\n    }\n  ],\n  \"createdAt\": \"1646836239\",\n  \"updatedAt\": \"1646836239\"\n}\n“Each ID graph is extracted by ID pairs. An ID pair is made of two decentralized verifiable ownership claims. Each ID pair claims the joint ownership of two accounts, it can be a pairing of two web3 addresses, or a pairing of a web3 address and a web2 account. Everyone can verify and trust the ID pair. Each ID graph is represented in its unique DID. For ID graphs that have a common crypto address, one ID graph will be merged into the other ID graphs and keep only one MCP DID.” - Litentry ‘Identity Graph’7\nToken economy:\nSuppose we look at the price of LIT token, which is $0.7227 at the time of writing. Litentry reached an all-time high of $14.79 on Feb 16, 2021. Currently, it’s down -95.11% since its record high.\nFrom the market cap of just $26,979,670 we can see that Litentry hasn’t gained much attention or traction as a solution."
  },
  {
    "objectID": "documents/research/posts/ERFC-248.gfm.html#ore-id---identity-registry",
    "href": "documents/research/posts/ERFC-248.gfm.html#ore-id---identity-registry",
    "title": "Crosschain Identity",
    "section": "ORE ID - identity registry",
    "text": "ORE ID - identity registry\nDeveloped by Aikon, ORE is a cross-chain global identity registry where users have control over their own identity. This registry is stored on the ORE blockchain. Users can use ORE ID as a single sign-on to manage their wallets on multiple public blockchains. Single ORE ID account can be used as a wallet on multiple chains because ORE ID accounts hold public and private keypairs for ED 25519, SR25519, and SECP256K1 and SECP256R1 encryption curves.\n\n\n\nDrop3\n\n\nPicture 4: ORE ID account creation process\n“Given how sensitive this data is, we use a Trustless Signing Service that allows a user to decrypt their keys and send a signed transaction to various blockchains using ChainJS library. Both of these modules are open source, so any developer can audit the code.” - ORE network’s whitepaper\nORE ID allows users to access various dApps with a one-click sign-up experience. Users can use social logins of their choosing. ORE ID creates blockchain accounts for the end-user when they sign up and encrypts and stores the user’s private key with their chosen PIN. ORE ID accounts are currently exportable to Scatter Wallet.\nWhen developing an app that uses ORE ID accounts, developers need to register the app and the app logo in order to get their APP-ID and API-key. Documentation is well written and can be found here.\nORE ID operates differently from Litentry as it creates an account that works on multiple chains - it does not aggregate the existing addresses.\nToken economy and future of ORE ID:\nThis project, although an interesting concept, with its market cap of only $ 319,175 doesn’t look like a solution for cross-chain identities and onboarding new users. The current price is $ 0.007984, while its all-time-high was $ 0.320. After testing the ORE ID, it seems that the project has been neglected."
  },
  {
    "objectID": "documents/research/posts/ERFC-248.gfm.html#accumulate---mainnet-launch-planned-for-september-2022",
    "href": "documents/research/posts/ERFC-248.gfm.html#accumulate---mainnet-launch-planned-for-september-2022",
    "title": "Crosschain Identity",
    "section": "Accumulate - mainnet launch planned for September 2022",
    "text": "Accumulate - mainnet launch planned for September 2022\nAccumulate is an identity-based, delegated proof-of-stake blockchain solution. It plans on creating a universal communication and audit layer for individuals, entities, and blockchains to transact with each other using their version of identifiers that adhere to W3C standards: Accumulate Digital Identifiers (ADIs).\nADIs are human-readable addresses that users choose to represent their presence on the blockchain. Using ADIs accumulate can serve as a communication and audit layer between blockchains, enabling the transfer of tokens between different chains, no matter the consensus mechanism.\nADIs are made of a collection of independent sub-chains. They are managed by:\n\nToken accounts - Issuing tokens and tracking deposits and withdrawals from a token account.\nData accounts - Tracking and organizing data.\nStaking accounts - Staking ACME tokens to participate in consensus.\nScratch accounts - Accruing data that is needed to build consensus.\n\nAccumulate Innovations:\n\nIdentity - Accumulate is centered around ADIs where each ADI defines its own state that is independent of other ADIs. Each ADI has its own state and set of accounts and chains. They can be updated independently. They are distributed over a set of Tendermint networks.\nSynthetic Transactions - Because each ADI has its state, transactions that are routed to an ADI must be processed independently of all other ADIs. Accumulate generates another transaction that performs settlements within an ADI. These transactions are called synthetic since the protocol generates them in response to the transactions initiated by the user.\n\nScratch Accounts - Accumulate provides scratch accounts, which reduce the cost of using the blockchain for consensus building. “Scratch accounts allow processes to provide cryptographic proof of validation and process without overburdening the blockchain” - Accumulate Whitepaper ‘Whitepaper - Accumulate’8\n\nIntegrations:\nAccumulate protocol supports various smart contract roll-ups. This allows Accumulate to track the state and validity of contracts on third-party chains. Using Accumulate, organizations can process smart contracts across various layer one protocols (Solana, Ethereum, Tezus).\nAccumulate also plans on integrating with Layer-0 protocols, for example, Cosmos and Polkadot. In that case, Accumulate can be utilized to manage the transferred asset under the identity (ADI) of a buyer and to continue tracking the assets across multiple chains.\nTechnical overview:\n\n\n\nAccumulate overview\n\n\nPicture 5: Accumulate system overview\nIn contrast to the traditional blockchain, where architecture is centered around blocks, Accumulate is centered around accounts. Each account is treated as an independent chain and managed as a growing Merkle tree, and blocks are treated as a synchronization point for all chains in the networks.\nInside the Directory Network and Block Validator Networks is the interconnected network of chains responsible for collecting signatures, communicating with each other, and anchoring roots to other blockchains.\nThese chains are:\n\nSignature chain, which collects signatures for a period of 2 weeks\nMain chain which records transactions in the origin account and accounts that are modified by the transactions\nSynthetic Transaction chain, which is used to store cryptographic proof that a synthetic transaction was actually produced by a particular BVN.\nBinary Patricia Trie, which collects hashes of the current state and history of accounts in BVN and DN.\nRoot Anchor Chain - collects an anchor once per block from every account and system chain updated during the block.\nIntermediate Anchor Chain: Within the Directory Network, this chain collects anchors from the Root Anchor chain of every Block Validator Network once per block.\n\nAs our topic is identity we will focus more on the account and identity architecture of Accumulate, which is actually at the very core of this protocol:\nAccumulate supports these accounts:\n\nLite Token Account - Traditional address whose URL contains a public key hash and human-readable suffix denoting the token or a data type held by the account. When tokens are sent to this account, the account is created if it doesn’t exist. Users can create a key and have a trusted party send tokens to their URL.\nLite Data Account - It is used for collaboration with Factom protocol. Lite Data Accounts are similar to token accounts, but they are limited to writing data.\nAccumulate Digital Identifier (ADI) - Primary unit of organization within Accumulate. ADIs can issue their tokens.\nKey book and Key Page - Belongs to an ADI and is used for key management.\nADI Token and Data Accounts are explained at the beginning of the topic\n\nIdentity architecture:\nUsers can participate in the network through ADIs and Lite Accounts. ADIs give users access to smart contracts, off-chain consensus building, and dynamic key management. Lite Token and Data Accounts are just a “lite” version of ADIs.\nADIs can only be created through the spending of Credits issued through the Accumulate protocol. Users can also use their ADI to sponsor the creation of other ADIs for themselves or others. These identities can govern token issuance, off-chain consensus building, and multisig signatures.\n“ADI Data and Token Account URLs have the general format acc://<ADI>/<directory>/<account> where the prefix acc : // specifies the Accumulate blockchain, ADI specifies the toplevel identity in control of the URL, directory specifies a particular type of account, and account specifies data or tokens.” - Accumulate Whitepaper.\nWe will not venture deeper into the protocol architecture as it is reasonably complex and goes well beyond this research topic. The main takeaway is that it aims to create cross-chain transaction-compatible accounts using ADIs. The details of a way how this will work in practice are not covered in the whitepaper.\nThis project is still in development, which means the practical implementations of the concepts presented in the whitepaper are still under the big question mark sign."
  }
]